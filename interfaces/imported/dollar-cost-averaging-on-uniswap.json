{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "swaps",
    "vesting",
    "uniswap"
  ],
  "name": "DCA",
  "description": "Dollar-Cost Averaging on Uniswap. Allows users to use the DCA approach to invest in a single ERC-20 token with Ether on Uniswap.",
  "eventDecorators": [
    {
      "signature": "FeesCollected(address,address,uint256)",
      "name": "FeesCollected",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica.",
      "parameterDecorators": [
        {
          "name": "relayer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Started(address)",
      "name": "Started",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica.",
      "parameterDecorators": [
        {
          "name": "investor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Stopped(address)",
      "name": "Stopped",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica.",
      "parameterDecorators": [
        {
          "name": "investor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Swapped(address,address,uint256,uint256,uint256)",
      "name": "Swapped",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica.",
      "parameterDecorators": [
        {
          "name": "investor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "relayer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountAdded",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "collectedFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "availableFees(address,address)",
      "name": "availableFees",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collectFees(address)",
      "name": "collectFees",
      "description": "Allows a relayer to collect his available fees.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "create(uint256,uint256,uint256,address)",
      "name": "create",
      "description": "Creates an investment.",
      "parameterDecorators": [
        {
          "name": "numOfSwaps",
          "description": "How many swaps will be performed.",
          "recommendedTypes": []
        },
        {
          "name": "interval",
          "description": "How much time should be waited between the swaps (in seconds).",
          "recommendedTypes": []
        },
        {
          "name": "relayerFee",
          "description": "How much fee is offered to the relayers (in per ten thousand).",
          "recommendedTypes": []
        },
        {
          "name": "tokenAddress",
          "description": "The address of the token to invest in.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "investments(address)",
      "name": "investments",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "initialFunds",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "remainingFunds",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "numOfSwaps",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "interval",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amountPerPeriod",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastSwapAt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tokenBalance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "relayerFee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "active",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "router()",
      "name": "router",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stop()",
      "name": "stop",
      "description": "Stops the investment of the sender.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swap(address)",
      "name": "swap",
      "description": "Performs a swap for a specific user.",
      "parameterDecorators": [
        {
          "name": "investor",
          "description": "The address of the investor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}