{
  "schema": "../schema.json",
  "tags": [],
  "name": "ClearingHouse",
  "description": "",
  "eventDecorators": [
    {
      "signature": "LiquidationFeeRatioChanged(uint256)",
      "name": "LiquidationFeeRatioChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "liquidationFeeRatio",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MarginChanged(address,address,int256)",
      "name": "MarginChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amm",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MarginRatioChanged(uint256)",
      "name": "MarginRatioChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "marginRatio",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PositionAdjusted(address,address,uint256,uint256,uint256)",
      "name": "PositionAdjusted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amm",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "trader",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newPositionSize",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "oldLiquidityIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newLiquidityIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PositionChanged(address,address,uint256,uint256,int256,uint256,int256,int256,int256,uint256,uint256,uint256,uint256)",
      "name": "PositionChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "trader",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amm",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "margin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "positionNotional",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "exchangedPositionSize",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "positionSizeAfter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "realizedPnl",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "unrealizedPnlAfter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "badDebt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "liquidationPenalty",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "quoteAssetReserve",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "baseAssetReserve",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PositionLiquidated(address,address,uint256,uint256,uint256,address,uint256)",
      "name": "PositionLiquidated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "trader",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amm",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "positionNotional",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "positionSize",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "liquidationFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "liquidator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "badDebt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PositionSettled(address,address,uint256)",
      "name": "PositionSettled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amm",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "trader",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "valueTransferred",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RestrictionModeEntered(address,uint256)",
      "name": "RestrictionModeEntered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amm",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addMargin(address,tuple(uint256))",
      "name": "addMargin",
      "description": "add margin to increase margin ratio.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        },
        {
          "name": "_addedMargin",
          "description": "added margin in 18 digits.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "candidate()",
      "name": "candidate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "closePosition(address,tuple(uint256))",
      "name": "closePosition",
      "description": "close all the positions.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        },
        {
          "name": "_quoteAssetAmountLimit",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "feePool()",
      "name": "feePool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLatestCumulativePremiumFraction(address)",
      "name": "getLatestCumulativePremiumFraction",
      "description": "get latest cumulative premium fraction.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "latest cumulative premium fraction in 18 digits.",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMarginRatio(address,address)",
      "name": "getMarginRatio",
      "description": "get margin ratio, marginRatio = (unrealized Pnl + margin) / openNotional use spot and twap price to calculate unrealized Pnl, final unrealized Pnl depends on which one is higher.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        },
        {
          "name": "_trader",
          "description": "trader address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "margin ratio in 18 digits.",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPosition(address,address)",
      "name": "getPosition",
      "description": "get personal position information, and adjust size if migration is necessary.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        },
        {
          "name": "_trader",
          "description": "trader address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "struct Position.",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPositionNotionalAndUnrealizedPnl(address,address,uint8)",
      "name": "getPositionNotionalAndUnrealizedPnl",
      "description": "get position notional and unrealized Pnl without fee expense and funding payment.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        },
        {
          "name": "_trader",
          "description": "trader address.",
          "recommendedTypes": []
        },
        {
          "name": "_pnlCalcOption",
          "description": "enum PnlCalcOption, SPOT_PRICE for spot price and TWAP for twap price.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "positionNotional",
          "description": "position notional.",
          "recommendedTypes": [],
          "solidityType": "tuple"
        },
        {
          "name": "unrealizedPnl",
          "description": "unrealized Pnl.",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUnadjustedPosition(address,address)",
      "name": "getUnadjustedPosition",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_trader",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "position",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initMarginRatio()",
      "name": "initMarginRatio",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "d",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(uint256,uint256,uint256,address,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_initMarginRatio",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_maintenanceMarginRatio",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_liquidationFeeRatio",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_insuranceFund",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_trustedForwarder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "insuranceFund()",
      "name": "insuranceFund",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isTrustedForwarder(address)",
      "name": "isTrustedForwarder",
      "description": "",
      "parameterDecorators": [
        {
          "name": "forwarder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "liquidate(address,address)",
      "name": "liquidate",
      "description": "liquidate trader's underwater position. Require trader's margin ratio less than maintenance margin ratio. liquidator can NOT open any positions in the same block to prevent from price manipulation.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        },
        {
          "name": "_trader",
          "description": "trader address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "liquidationFeeRatio()",
      "name": "liquidationFeeRatio",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "d",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maintenanceMarginRatio()",
      "name": "maintenanceMarginRatio",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "d",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "openInterestNotionalMap(address)",
      "name": "openInterestNotionalMap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "d",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "openPosition(address,uint8,tuple(uint256),tuple(uint256),tuple(uint256))",
      "name": "openPosition",
      "description": "open a position.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "amm address.",
          "recommendedTypes": []
        },
        {
          "name": "_side",
          "description": "enum Side; BUY for long and SELL for short.",
          "recommendedTypes": []
        },
        {
          "name": "_quoteAssetAmount",
          "description": "quote asset amount in 18 digits. Can Not be 0.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        },
        {
          "name": "_leverage",
          "description": "leverage in 18 digits. Can Not be 0.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        },
        {
          "name": "_baseAssetAmountLimit",
          "description": "minimum base asset amount expected to get to prevent from slippage.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "payFunding(address)",
      "name": "payFunding",
      "description": "if funding rate is positive, traders with long position pay traders with short position and vice versa.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeMargin(address,tuple(uint256))",
      "name": "removeMargin",
      "description": "remove margin to decrease margin ratio.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        },
        {
          "name": "_removedMargin",
          "description": "removed margin in 18 digits.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFeePool(address)",
      "name": "setFeePool",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_feePool",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLiquidationFeeRatio(tuple(uint256))",
      "name": "setLiquidationFeeRatio",
      "description": "set liquidation fee ratio. only owner can call.",
      "parameterDecorators": [
        {
          "name": "_liquidationFeeRatio",
          "description": "new liquidation fee ratio in 18 digits.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaintenanceMarginRatio(tuple(uint256))",
      "name": "setMaintenanceMarginRatio",
      "description": "set maintenance margin ratio. only owner can call.",
      "parameterDecorators": [
        {
          "name": "_maintenanceMarginRatio",
          "description": "new maintenance margin ratio in 18 digits.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOwner(address)",
      "name": "setOwner",
      "description": "Set ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWhitelist(address)",
      "name": "setWhitelist",
      "description": "add an address in the whitelist. People in the whitelist can hold unlimited positions. only owner can call.",
      "parameterDecorators": [
        {
          "name": "_whitelist",
          "description": "an address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "settlePosition(address)",
      "name": "settlePosition",
      "description": "settle all the positions when amm is shutdown. The settlement price is according to IAmm.settlementPrice.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateOwner()",
      "name": "updateOwner",
      "description": "Transfers ownership of the contract to a new account (`_candidate`). Can only be called by the new owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "versionRecipient()",
      "name": "versionRecipient",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}