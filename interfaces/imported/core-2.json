{
  "schema": "../schema.json",
  "tags": [],
  "name": "Core",
  "description": "",
  "eventDecorators": [
    {
      "signature": "FeeChanged(address,uint256,uint256)",
      "name": "FeeChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "template",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "MarketCreated(address,address,string,uint256[],address[])",
      "name": "MarketCreated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "market",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "template",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "settings",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "conditions",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "references",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "reporter",
          "description": "The address of the entity that reported the updater misbehavior.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "updater",
          "description": "The address of the updater.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ReferenceApproval(address,uint256,address,bool)",
      "name": "ReferenceApproval",
      "description": "",
      "parameterDecorators": [
        {
          "name": "template",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "slot",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "approval",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TemplateApproval(address,bool)",
      "name": "TemplateApproval",
      "description": "",
      "parameterDecorators": [
        {
          "name": "reporter",
          "description": "The address of the entity that reported the updater misbehavior.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "updater",
          "description": "The address of the updater.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "approveReferences(address,uint256[],address[],bool)",
      "name": "approveReferences",
      "description": "A function to preset reference. Only owner of the contract can operate.",
      "parameterDecorators": [
        {
          "name": "template",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "slot",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "approval",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "approveTemplate(address)",
      "name": "approveTemplate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "template",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createMarkets(address,string,uint256[],address[],string)",
      "name": "createMarkets",
      "description": "A function to create markets. This function is market model agnostic. If oracle does not report the result, the market become broken.",
      "parameterDecorators": [
        {
          "name": "template",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "settings",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "conditions",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "references",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "metadataURI",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fees(address)",
      "name": "fees",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isVerifiedMarket(address)",
      "name": "isVerifiedMarket",
      "description": "",
      "parameterDecorators": [
        {
          "name": "market",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "marketIndex(address)",
      "name": "marketIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reflist(address,uint256,address)",
      "name": "reflist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "templates(address)",
      "name": "templates",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}