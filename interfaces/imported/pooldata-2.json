{
  "schema": "../schema.json",
  "tags": [],
  "name": "PoolData",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "a()",
      "name": "a",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getIARankDetailsByDate(uint64)",
      "name": "getIARankDetailsByDate",
      "description": "Gets investment asset rank details by given date.",
      "parameterDecorators": [
        {
          "name": "date",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "maxIACurr",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        },
        {
          "name": "maxRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "minIACurr",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        },
        {
          "name": "minRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeDependentContractAddress()",
      "name": "changeDependentContractAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getInvestmentAssetMaxHoldingPerc(bytes4)",
      "name": "getInvestmentAssetMaxHoldingPerc",
      "description": "Gets investment asset maximum holding percentage of a given currency.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "maxHoldingPercX100",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrencyAssetBaseMin(bytes4)",
      "name": "getCurrencyAssetBaseMin",
      "description": "Gets base minimum of a given currency asset.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "baseMin",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenPriceDetails(bytes4)",
      "name": "getTokenPriceDetails",
      "description": "Gets details for token price calculation.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_a",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_c",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrOfApiId(bytes32)",
      "name": "getCurrOfApiId",
      "description": "Gets currency by oracalize id.",
      "parameterDecorators": [
        {
          "name": "myid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInvestmentAssetStatus(bytes4)",
      "name": "getInvestmentAssetStatus",
      "description": "Gets investment asset active Status of a given currency.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllCurrenciesLen()",
      "name": "getAllCurrenciesLen",
      "description": "Gets count of All currency.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "len",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllInvestmentCurrencies()",
      "name": "getAllInvestmentCurrencies",
      "description": "Gets all the investment currencies.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "currencies",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInvestmentAssetDetails(bytes4)",
      "name": "getInvestmentAssetDetails",
      "description": "Gets investment asset details of a given currency.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "currency",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        },
        {
          "name": "currAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "minHoldingPerc",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "maxHoldingPerc",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "decimals",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDateAddOfAPI(bytes32)",
      "name": "getDateAddOfAPI",
      "description": "Gets the Timestamp of a oracalize call.",
      "parameterDecorators": [
        {
          "name": "myid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getIdOfApiId(bytes32)",
      "name": "getIdOfApiId",
      "description": "Gets ID associated to oraclize query for a given Oraclize Query ID.",
      "parameterDecorators": [
        {
          "name": "myid",
          "description": "Oraclize Query ID identifying the query for which the result is being received.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniswapDeadline()",
      "name": "uniswapDeadline",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrenciesByIndex(uint256)",
      "name": "getCurrenciesByIndex",
      "description": "Gets All currency for a given index.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "currName",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minCap()",
      "name": "minCap",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "saveIARankDetails(bytes4,uint64,bytes4,uint64,uint64)",
      "name": "saveIARankDetails",
      "description": "Saves investment asset rank details.",
      "parameterDecorators": [
        {
          "name": "maxIACurr",
          "description": "Maximum ranked investment asset currency.",
          "recommendedTypes": []
        },
        {
          "name": "maxRate",
          "description": "Maximum ranked investment asset rate.",
          "recommendedTypes": []
        },
        {
          "name": "minIACurr",
          "description": "Minimum ranked investment asset currency.",
          "recommendedTypes": []
        },
        {
          "name": "minRate",
          "description": "Minimum ranked investment asset rate.",
          "recommendedTypes": []
        },
        {
          "name": "date",
          "description": "in yyyymmdd.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "saveApiDetails(bytes32,bytes4,uint256)",
      "name": "saveApiDetails",
      "description": "Saves the details of the Oraclize API.",
      "parameterDecorators": [
        {
          "name": "myid",
          "description": "Id return by the oraclize query.",
          "recommendedTypes": []
        },
        {
          "name": "_typeof",
          "description": "type of the query for which oraclize call is made.",
          "recommendedTypes": []
        },
        {
          "name": "id",
          "description": "ID of the proposal,quote,cover etc. for which oraclize call is made.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "notariseMCR()",
      "name": "notariseMCR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeInvestmentAssetStatus(bytes4,bool)",
      "name": "changeInvestmentAssetStatus",
      "description": "Changes the investment asset status.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getDateUpdOfAPI(bytes32)",
      "name": "getDateUpdOfAPI",
      "description": "Gets the Timestamp at which result of oracalize call is received.",
      "parameterDecorators": [
        {
          "name": "myid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllCurrencies()",
      "name": "getAllCurrencies",
      "description": "Gets all currencies.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "currencies",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrencyAssetVarMin(bytes4)",
      "name": "getCurrencyAssetVarMin",
      "description": "Gets minimum variable value for currency asset.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "varMin",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeCurrencyAssetBaseMin(bytes4,uint256)",
      "name": "changeCurrencyAssetBaseMin",
      "description": "Changes base minimum of a given currency asset.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "baseMin",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "iaRatesTime()",
      "name": "iaRatesTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastLiquidityTradeTrigger()",
      "name": "lastLiquidityTradeTrigger",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "capReached()",
      "name": "capReached",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLastDate()",
      "name": "getLastDate",
      "description": "Gets Last Date.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "date",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUintParameters(bytes8)",
      "name": "getUintParameters",
      "description": "Gets Uint Parameters of a code.",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "whose details we want.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "codeVal",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes8"
        },
        {
          "name": "val",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateDateUpdOfAPI(bytes32)",
      "name": "updateDateUpdOfAPI",
      "description": "Updates the Timestamp at which result of oracalize call is received.",
      "parameterDecorators": [
        {
          "name": "myid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isnotarise(address)",
      "name": "isnotarise",
      "description": "Checks whether a given address can notaise MCR data or not.",
      "parameterDecorators": [
        {
          "name": "_add",
          "description": "Address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "res",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "liquidityTradeCallbackTime()",
      "name": "liquidityTradeCallbackTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeNotariseAddress(address)",
      "name": "changeNotariseAddress",
      "description": "Changes address allowed to post MCR.",
      "parameterDecorators": [
        {
          "name": "_add",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getInvestmentAssetMinHoldingPerc(bytes4)",
      "name": "getInvestmentAssetMinHoldingPerc",
      "description": "Gets investment asset minimum holding percentage of a given currency.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "minHoldingPercX100",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "allAPIcall(uint256)",
      "name": "allAPIcall",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mcrFailTime()",
      "name": "mcrFailTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pushMCRData(uint256,uint256,uint256,uint64)",
      "name": "pushMCRData",
      "description": "Adds details of (Minimum Capital Requirement)MCR.",
      "parameterDecorators": [
        {
          "name": "mcrp",
          "description": "Minimum Capital Requirement percentage (MCR% * 100 ,Ex:for 54.56% ,given 5456).",
          "recommendedTypes": []
        },
        {
          "name": "mcre",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "vf",
          "description": "Pool fund value in Ether used in the last full daily calculation from the Capital model.",
          "recommendedTypes": []
        },
        {
          "name": "time",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getApiCallIndex(uint256)",
      "name": "getApiCallIndex",
      "description": "Gets ID return by the oraclize query of a given index.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "Index.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "myid",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "allAPIid(bytes32)",
      "name": "allAPIid",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "typeOf",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        },
        {
          "name": "currency",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "dateAdd",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "dateUpd",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrencyAssetVarBase(bytes4)",
      "name": "getCurrencyAssetVarBase",
      "description": "Gets currency asset details for a given currency.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "currency",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        },
        {
          "name": "baseMin",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "varMin",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mcrTime()",
      "name": "mcrTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInvestmentCurrencyLen()",
      "name": "getInvestmentCurrencyLen",
      "description": "Gets count of investment currency.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "len",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateIAAvgRate(bytes4,uint256)",
      "name": "updateIAAvgRate",
      "description": "Updates the 3 day average rate of a IA currency. To be replaced by MakerDao's on chain rates.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "IA Currency Name.",
          "recommendedTypes": []
        },
        {
          "name": "rate",
          "description": "Average exchange rate X 100 (of last 3 days).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getInvestmentAssetAddress(bytes4)",
      "name": "getInvestmentAssetAddress",
      "description": "Gets investment asset token address.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLastMCRPerc()",
      "name": "getLastMCRPerc",
      "description": "Gets last Minimum Capital Requirement percentage of Capital Model.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setLastLiquidityTradeTrigger()",
      "name": "setLastLiquidityTradeTrigger",
      "description": "to get the time for the laste liquidity trade trigger.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "variationPercX100()",
      "name": "variationPercX100",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInvestmentAssetHoldingPerc(bytes4)",
      "name": "getInvestmentAssetHoldingPerc",
      "description": "Gets investment asset maximum and minimum holding percentage of a given currency.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "minHoldingPercX100",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "maxHoldingPercX100",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateUintParameters(bytes8,uint256)",
      "name": "updateUintParameters",
      "description": "Updates Uint Parameters of a code.",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "whose details we want to update.",
          "recommendedTypes": []
        },
        {
          "name": "val",
          "description": "value to set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ms()",
      "name": "ms",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMCRDataLength()",
      "name": "getMCRDataLength",
      "description": "Gets the total number of times MCR calculation has been made.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "len",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeInvestmentAssetAddressAndDecimal(bytes4,address,uint8)",
      "name": "changeInvestmentAssetAddressAndDecimal",
      "description": "Changes Investment asset token address.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "currAdd",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newDecimal",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatelastDate(uint64)",
      "name": "updatelastDate",
      "description": "Updates Last Date.",
      "parameterDecorators": [
        {
          "name": "newDate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateCAAvgRate(bytes4,uint256)",
      "name": "updateCAAvgRate",
      "description": "Updates the 3 day average rate of a CA currency. To be replaced by MakerDao's on chain rates.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "Currency Name.",
          "recommendedTypes": []
        },
        {
          "name": "rate",
          "description": "Average exchange rate X 100 (of last 3 days).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getInvestmentAssetDecimals(bytes4)",
      "name": "getInvestmentAssetDecimals",
      "description": "Gets investment asset decimals.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "decimal",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLastMCREther()",
      "name": "getLastMCREther",
      "description": "Gets last Ether price of Capital Model.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "capacityLimit()",
      "name": "capacityLimit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "c()",
      "name": "c",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addInvestmentAssetCurrency(bytes4,address,bool,uint64,uint64,uint8)",
      "name": "addInvestmentAssetCurrency",
      "description": "Adds investment asset.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "currAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "minHoldingPercX100",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "maxHoldingPercX100",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "decimals",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeInvestmentAssetHoldingPerc(bytes4,uint64,uint64)",
      "name": "changeInvestmentAssetHoldingPerc",
      "description": "Changes the investment asset Holding percentage of a given currency.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "minPercX100",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "maxPercX100",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getLastMCR()",
      "name": "getLastMCR",
      "description": "Gets the details of last added MCR.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "mcrPercx100",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "mcrEtherx1E18",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "vFull",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "date",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeDAIfeedAddress(address)",
      "name": "changeDAIfeedAddress",
      "description": "updates daiFeedAddress address.",
      "parameterDecorators": [
        {
          "name": "_add",
          "description": "address of DAI feed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeCurrencyAssetVarMin(bytes4,uint256)",
      "name": "changeCurrencyAssetVarMin",
      "description": "changes variable minimum of a given currency asset.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "varMin",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getApilCallLength()",
      "name": "getApilCallLength",
      "description": "Gets Length of API call.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "shockParameter()",
      "name": "shockParameter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeMasterAddress(address)",
      "name": "changeMasterAddress",
      "description": "change master address.",
      "parameterDecorators": [
        {
          "name": "_masterAddress",
          "description": "is the new address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addInAllApiCall(bytes32)",
      "name": "addInAllApiCall",
      "description": "Stores the id return by the oraclize query. Maintains record of all the Ids return by oraclize query.",
      "parameterDecorators": [
        {
          "name": "myid",
          "description": "Id return by the oraclize query.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getApiCallDetails(bytes32)",
      "name": "getApiCallDetails",
      "description": "Get Details of Oraclize API when given Oraclize Id.",
      "parameterDecorators": [
        {
          "name": "myid",
          "description": "ID return by the oraclize query.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_typeof",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        },
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "dateAdd",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "dateUpd",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInvestmentCurrencyByIndex(uint256)",
      "name": "getInvestmentCurrencyByIndex",
      "description": "Gets investment currency for a given index.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "currName",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ethVolumeLimit()",
      "name": "ethVolumeLimit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCAAvgRate(bytes4)",
      "name": "getCAAvgRate",
      "description": "to get the average rate of currency rate.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "is the currency in concern.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "rate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setCapReached(uint256)",
      "name": "setCapReached",
      "description": "to set the maximum cap allowed.",
      "parameterDecorators": [
        {
          "name": "val",
          "description": "is the new value.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getLastVfull()",
      "name": "getLastVfull",
      "description": "Gets Pool fund value in Ether used in the last full daily calculation from the Capital model.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrencyAssetAddress(bytes4)",
      "name": "getCurrencyAssetAddress",
      "description": "Gets Currency asset token address.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeCurrencyAssetAddress(bytes4,address)",
      "name": "changeCurrencyAssetAddress",
      "description": "Gets Currency asset token address.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "currAdd",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addCurrencyAssetCurrency(bytes4,address,uint256)",
      "name": "addCurrencyAssetCurrency",
      "description": "Adds currency asset currency.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "currency of the asset.",
          "recommendedTypes": []
        },
        {
          "name": "currAddress",
          "description": "address of the currency.",
          "recommendedTypes": []
        },
        {
          "name": "baseMin",
          "description": "base minimum in 10^18.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "allMCRData(uint256)",
      "name": "allMCRData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "mcrPercx100",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "mcrEther",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "vFull",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "date",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "daiFeedAddress()",
      "name": "daiFeedAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nxMasterAddress()",
      "name": "nxMasterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getIAAvgRate(bytes4)",
      "name": "getIAAvgRate",
      "description": "to get the average rate of investment rate.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "is the investment in concern.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "rate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getApiIdTypeOf(bytes32)",
      "name": "getApiIdTypeOf",
      "description": "Gets type of oraclize query for a given Oraclize Query ID.",
      "parameterDecorators": [
        {
          "name": "myid",
          "description": "Oraclize Query ID identifying the query for which the result is being received.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLastMCRDate()",
      "name": "getLastMCRDate",
      "description": "Gets last Minimum Capital Requirement in Ether.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "date",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}