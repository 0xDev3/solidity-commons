{"schema":"../schema.json","tags":[],"name":"TransferWhitelist","description":"Holds a whitelist of addresses for which transfers should not be frozen so that network initialization can take place.","eventDecorators":[{"signature":"WhitelistedAddress(address)","name":"WhitelistedAddress","description":"Triggered when a user has withdrawn.","parameterDecorators":[{"name":"addr","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"WhitelistedAddressRemoved(address)","name":"WhitelistedAddressRemoved","description":"Triggered when a user has withdrawn.","parameterDecorators":[{"name":"addr","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"WhitelistedContractIdentifier(bytes32)","name":"WhitelistedContractIdentifier","description":"Triggered when a user has withdrawn.","parameterDecorators":[{"name":"contractIdentifier","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RegistrySet(address)","name":"RegistrySet","description":"Triggered when a user has withdrawn.","parameterDecorators":[{"name":"registryAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Triggered when a user has withdrawn.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"removeAddress(address,uint256)","name":"removeAddress","description":"Remove an address from the whitelist.","parameterDecorators":[{"name":"removedAddress","description":"The address to add.","recommendedTypes":[]},{"name":"index","description":"Index of address in the whitelist.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getNumberOfWhitelistedContractIdentifiers()","name":"getNumberOfWhitelistedContractIdentifiers","description":"Gets the number of registered contracts.","parameterDecorators":[],"returnDecorators":[{"name":"length","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"whitelistRegisteredContract(bytes32)","name":"whitelistRegisteredContract","description":"Adds the registry id of a whitelisted contract.","parameterDecorators":[{"name":"contractIdentifier","description":"The id of the contract to be added.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"whitelistedContractIdentifiers(uint256)","name":"whitelistedContractIdentifiers","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"whitelistAddress(address)","name":"whitelistAddress","description":"Add an address to the whitelist.","parameterDecorators":[{"name":"newAddress","description":"The address to add.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"registry()","name":"registry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setDirectlyWhitelistedAddresses(address[])","name":"setDirectlyWhitelistedAddresses","description":"Set the whitelist of addresses.","parameterDecorators":[{"name":"_whitelist","description":"The new whitelist of addresses.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"selfDestruct()","name":"selfDestruct","description":"Clears all data (storage and bytecode) at this contract's address. The balance of this contract is returned to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRegistry(address)","name":"setRegistry","description":"Updates the address pointing to a Registry contract.","parameterDecorators":[{"name":"registryAddress","description":"The address of a registry contract for routing to other contracts.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setWhitelistedContractIdentifiers(bytes32[])","name":"setWhitelistedContractIdentifiers","description":"Set the whitelist of registered contracts.","parameterDecorators":[{"name":"_registeredContracts","description":"The new whitelist of registered contract ids.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getWhitelist()","name":"getWhitelist","description":"Appends the addresses of registered contracts to the whitelist before returning the list. If a registry id is not yet registered, the null address will be appended to the list instead.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}