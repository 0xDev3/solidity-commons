{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "Controller",
  "description": "Controller for vaults.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "addRewards(uint256,uint256)",
      "name": "addRewards",
      "description": "Add new rewards to a rewarded vault.",
      "parameterDecorators": [
        {
          "name": "_vaultId",
          "description": "ID of the vault to have reward.",
          "recommendedTypes": []
        },
        {
          "name": "_rewardAmount",
          "description": "Amount of the reward token to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addVault(address)",
      "name": "addVault",
      "description": "Add a new vault to the controller.",
      "parameterDecorators": [
        {
          "name": "_vault",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "earn(uint256)",
      "name": "earn",
      "description": "Helpher function to earn in the vault. Anyone can call this method as earn() in vault is public!.",
      "parameterDecorators": [
        {
          "name": "_vaultId",
          "description": "ID of the vault to earn.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "earnAll()",
      "name": "earnAll",
      "description": "Helper function to earn in all vaults. Anyone can call this method as earn() in vault is public!.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "governance()",
      "name": "governance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "numVaults()",
      "name": "numVaults",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reserve()",
      "name": "reserve",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardToken()",
      "name": "rewardToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setGovernance(address)",
      "name": "setGovernance",
      "description": "Updates the govenance address.",
      "parameterDecorators": [
        {
          "name": "_governance",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setReserve(address)",
      "name": "setReserve",
      "description": "Updates the reserve address.",
      "parameterDecorators": [
        {
          "name": "_reserve",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardToken(address)",
      "name": "setRewardToken",
      "description": "Updates the rewards token.",
      "parameterDecorators": [
        {
          "name": "_rewardToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vaults(uint256)",
      "name": "vaults",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}