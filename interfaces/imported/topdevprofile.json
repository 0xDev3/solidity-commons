{"schema":"../schema.json","tags":["nft"],"name":"TopdevProfile","description":"TopdevProfile. It is a contract for users to bind their address to a customizable profile by depositing a NFT.","eventDecorators":[{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"Emitted when token is changed.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"Emitted when token is changed.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"Emitted when token is changed.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TeamAdd(uint256,string)","name":"TeamAdd","description":"Emitted when token is changed.","parameterDecorators":[{"name":"teamId","description":"","recommendedTypes":[],"indexed":false},{"name":"teamName","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TeamPointIncrease(uint256,uint256,uint256)","name":"TeamPointIncrease","description":"Emitted when token is changed.","parameterDecorators":[{"name":"teamId","description":"","recommendedTypes":[],"indexed":true},{"name":"numberPoints","description":"","recommendedTypes":[],"indexed":false},{"name":"campaignId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UserChangeTeam(address,uint256,uint256)","name":"UserChangeTeam","description":"Emitted when token is changed.","parameterDecorators":[{"name":"userAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"oldTeamId","description":"","recommendedTypes":[],"indexed":false},{"name":"newTeamId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UserNew(address,uint256,address,uint256)","name":"UserNew","description":"Emitted when token is changed.","parameterDecorators":[{"name":"userAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"teamId","description":"","recommendedTypes":[],"indexed":false},{"name":"nftAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UserPause(address,uint256)","name":"UserPause","description":"Emitted when token is changed.","parameterDecorators":[{"name":"userAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"teamId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UserPointIncrease(address,uint256,uint256)","name":"UserPointIncrease","description":"Emitted when token is changed.","parameterDecorators":[{"name":"userAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"numberPoints","description":"","recommendedTypes":[],"indexed":false},{"name":"campaignId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UserPointIncreaseMultiple(address[],uint256,uint256)","name":"UserPointIncreaseMultiple","description":"Emitted when token is changed.","parameterDecorators":[{"name":"userAddresses","description":"","recommendedTypes":[],"indexed":false},{"name":"numberPoints","description":"","recommendedTypes":[],"indexed":false},{"name":"campaignId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UserReactivate(address,uint256,address,uint256)","name":"UserReactivate","description":"Emitted when token is changed.","parameterDecorators":[{"name":"userAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"teamId","description":"","recommendedTypes":[],"indexed":false},{"name":"nftAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UserUpdate(address,address,uint256)","name":"UserUpdate","description":"Emitted when token is changed.","parameterDecorators":[{"name":"userAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"nftAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"NFT_ROLE()","name":"NFT_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"POINT_ROLE()","name":"POINT_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"SPECIAL_ROLE()","name":"SPECIAL_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"addNftAddress(address)","name":"addNftAddress","description":"To add a NFT contract address for users to set their profile. Callable only by owner admins.","parameterDecorators":[{"name":"_nftAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addTeam(string,string)","name":"addTeam","description":"Add a new teamId Callable only by owner admins.","parameterDecorators":[{"name":"_teamName","description":"","recommendedTypes":[]},{"name":"_teamDescription","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"cakeToken()","name":"cakeToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"changeTeam(address,uint256)","name":"changeTeam","description":"Function to change team. Callable only by special admins.","parameterDecorators":[{"name":"_userAddress","description":"","recommendedTypes":[]},{"name":"_newTeamId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimFee(uint256)","name":"claimFee","description":"Claim CAKE to burn later. Callable only by owner admins.","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"createProfile(uint256,address,uint256)","name":"createProfile","description":"To create a user profile. It sends the NFT to the contract and sends CAKE to burn address. Requires 2 token approvals.","parameterDecorators":[{"name":"_teamId","description":"","recommendedTypes":[]},{"name":"_nftAddress","description":"","recommendedTypes":[]},{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMember(bytes32,uint256)","name":"getRoleMember","description":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMemberCount(bytes32)","name":"getRoleMemberCount","description":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTeamProfile(uint256)","name":"getTeamProfile","description":"Check a team's profile.","parameterDecorators":[{"name":"_teamId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserProfile(address)","name":"getUserProfile","description":"Check the user's profile for a given address.","parameterDecorators":[{"name":"_userAddress","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param5","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserStatus(address)","name":"getUserStatus","description":"Check the user's status for a given address.","parameterDecorators":[{"name":"_userAddress","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"hasRegistered(address)","name":"hasRegistered","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"increaseTeamPoints(uint256,uint256,uint256)","name":"increaseTeamPoints","description":"To increase the number of points for a team. Callable only by point admins.","parameterDecorators":[{"name":"_teamId","description":"","recommendedTypes":[]},{"name":"_numberPoints","description":"","recommendedTypes":[]},{"name":"_campaignId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"increaseUserPoints(address,uint256,uint256)","name":"increaseUserPoints","description":"To increase the number of points for a user. Callable only by point admins.","parameterDecorators":[{"name":"_userAddress","description":"","recommendedTypes":[]},{"name":"_numberPoints","description":"","recommendedTypes":[]},{"name":"_campaignId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"increaseUserPointsMultiple(address[],uint256,uint256)","name":"increaseUserPointsMultiple","description":"To increase the number of points for a set of users. Callable only by point admins.","parameterDecorators":[{"name":"_userAddresses","description":"","recommendedTypes":[]},{"name":"_numberPoints","description":"","recommendedTypes":[]},{"name":"_campaignId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"makeTeamJoinable(uint256)","name":"makeTeamJoinable","description":"Make a team joinable again. Callable only by owner admins.","parameterDecorators":[{"name":"_teamId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"makeTeamNotJoinable(uint256)","name":"makeTeamNotJoinable","description":"Make a team not joinable. Callable only by owner admins.","parameterDecorators":[{"name":"_teamId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"numberActiveProfiles()","name":"numberActiveProfiles","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"numberCakeToReactivate()","name":"numberCakeToReactivate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"numberCakeToRegister()","name":"numberCakeToRegister","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"numberCakeToUpdate()","name":"numberCakeToUpdate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"numberTeams()","name":"numberTeams","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC721Received(address,address,uint256,bytes)","name":"onERC721Received","description":"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"pauseProfile()","name":"pauseProfile","description":"To pause user profile. It releases the NFT. Callable only by registered users.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"reactivateProfile(address,uint256)","name":"reactivateProfile","description":"To reactivate user profile. Callable only by registered users.","parameterDecorators":[{"name":"_nftAddress","description":"","recommendedTypes":[]},{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeTeamPoints(uint256,uint256)","name":"removeTeamPoints","description":"To remove the number of points for a team. Callable only by point admins.","parameterDecorators":[{"name":"_teamId","description":"","recommendedTypes":[]},{"name":"_numberPoints","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeUserPoints(address,uint256)","name":"removeUserPoints","description":"To remove the number of points for a user. Callable only by point admins.","parameterDecorators":[{"name":"_userAddress","description":"","recommendedTypes":[]},{"name":"_numberPoints","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeUserPointsMultiple(address[],uint256)","name":"removeUserPointsMultiple","description":"To remove a set number of points for a set of users.","parameterDecorators":[{"name":"_userAddresses","description":"","recommendedTypes":[]},{"name":"_numberPoints","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renameTeam(uint256,string,string)","name":"renameTeam","description":"Rename a team Callable only by owner admins.","parameterDecorators":[{"name":"_teamId","description":"","recommendedTypes":[]},{"name":"_teamName","description":"","recommendedTypes":[]},{"name":"_teamDescription","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"updateNumberCake(uint256,uint256,uint256)","name":"updateNumberCake","description":"Update the number of CAKE to register Callable only by owner admins.","parameterDecorators":[{"name":"_newNumberCakeToReactivate","description":"","recommendedTypes":[]},{"name":"_newNumberCakeToRegister","description":"","recommendedTypes":[]},{"name":"_newNumberCakeToUpdate","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateProfile(address,uint256)","name":"updateProfile","description":"To update user profile. Callable only by registered users.","parameterDecorators":[{"name":"_nftAddress","description":"","recommendedTypes":[]},{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}