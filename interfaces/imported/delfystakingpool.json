{"schema":"../schema.json","tags":[],"name":"DelfyStakingPool","description":"","eventDecorators":[{"signature":"Claimed(address,address,uint256)","name":"Claimed","description":"An event emitted when a vote has been cast on a proposal. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[],"indexed":false},{"name":"sender","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Deposit(address,address,uint256)","name":"Deposit","description":"An event emitted when a vote has been cast on a proposal. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyWithdraw(address,uint256,uint256)","name":"EmergencyWithdraw","description":"An event emitted when a vote has been cast on a proposal. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"An event emitted when a vote has been cast on a proposal. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"An event emitted when a vote has been cast on a proposal. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"implementation","description":"representing the address of the upgraded implementation.","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"An event emitted when a vote has been cast on a proposal. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"implementation","description":"representing the address of the upgraded implementation.","recommendedTypes":[],"indexed":false}]},{"signature":"Withdraw(address,address,uint256)","name":"Withdraw","description":"An event emitted when a vote has been cast on a proposal. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"add(uint256,address,bool)","name":"add","description":"","parameterDecorators":[{"name":"_allocPoint","description":"","recommendedTypes":[]},{"name":"_lpToken","description":"","recommendedTypes":[]},{"name":"_withUpdate","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claim(address)","name":"claim","description":"","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"delfy()","name":"delfy","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit(address,uint256)","name":"deposit","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"dev(address)","name":"dev","description":"","parameterDecorators":[{"name":"_devaddr","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getMultiplier(uint256,uint256)","name":"getMultiplier","description":"","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[]},{"name":"_to","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getPool(address)","name":"getPool","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"lpToken","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"allocPoint","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastRewardBlock","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"accDelfyPerShare","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getPoolIds()","name":"getPoolIds","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address,uint256,uint256)","name":"initialize","description":"","parameterDecorators":[{"name":"_delfy","description":"","recommendedTypes":[]},{"name":"_token","description":"","recommendedTypes":[]},{"name":"_devaddr","description":"","recommendedTypes":[]},{"name":"_allocPoint","description":"","recommendedTypes":[]},{"name":"_rewardsPerBlock","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"massUpdatePools()","name":"massUpdatePools","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner_()","name":"owner_","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingDelfy(address,address)","name":"pendingDelfy","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolInfo(uint256)","name":"poolInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"lpToken","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"allocPoint","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastRewardBlock","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"accDelfyPerShare","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolLength()","name":"poolLength","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardsPerBlock()","name":"rewardsPerBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"set(address,uint256,bool)","name":"set","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_allocPoint","description":"","recommendedTypes":[]},{"name":"_withUpdate","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"startBlock()","name":"startBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalAllocPoint()","name":"totalAllocPoint","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updatePool(address)","name":"updatePool","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userInfo(address,address)","name":"userInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewardDebt","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(address,uint256)","name":"withdraw","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}