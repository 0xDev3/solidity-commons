{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "swaps"
  ],
  "name": "TokenSwapModule",
  "description": "PrimeDeals Token Swap Module. Smart contract to handle token swap interactions for PrimeDeals.",
  "eventDecorators": [
    {
      "signature": "FeeChanged(uint32,uint32)",
      "name": "FeeChanged",
      "description": "This event is emitted when the fee is updated.",
      "parameterDecorators": [
        {
          "name": "oldFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "FeeWalletChanged(address,address)",
      "name": "FeeWalletChanged",
      "description": "This event is emitted when the fee wallet address is updated.",
      "parameterDecorators": [
        {
          "name": "oldFeeWallet",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newFeeWallet",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TokenSwapCreated(address,uint32,bytes32,address[],address[],uint256[][],uint256[][],address[],uint256[][],uint32)",
      "name": "TokenSwapCreated",
      "description": "This event is emitted when a token swap is created.",
      "parameterDecorators": [
        {
          "name": "module",
          "description": "Address of this module.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "dealId",
          "description": "Deal id for the created token swap.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "metadata",
          "description": "Unique ID that is generated throught the Prime Deals frontend.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "daos",
          "description": "Array containing the DAOs that are involed in creating the token swap.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokens",
          "description": "Array containing the tokens that are involed in creating the token swap.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "pathFrom",
          "description": "Two-dimensional array containing the tokens flowing from the DAOs into the module.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "pathTo",
          "description": "Two-dimensional array containing the tokens flowing from the module to the DAOs.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "daoplomats",
          "description": "Array containing the DAOplomat address that will receive the DAOplomat reward.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "rewardPathTo",
          "description": "Array containing the amount of reward each DAOplomat receives.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "deadline",
          "description": "The amount of time between the creation of the swap and the time when it can no longer be executed, in seconds.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenSwapExecuted(address,uint32,bytes32)",
      "name": "TokenSwapExecuted",
      "description": "This event is emitted when a token swap is executed.",
      "parameterDecorators": [
        {
          "name": "module",
          "description": "Address of this module.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "dealId",
          "description": "Deal id for the executed token swap.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "metadata",
          "description": "Unique ID that is generated throught the Prime Deals frontend.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BPS()",
      "name": "BPS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_DAOplomats()",
      "name": "MAX_DAOplomats",
      "description": "Minimum DAOplomat reward (0.001%).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_FEE()",
      "name": "MAX_FEE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_REWARD()",
      "name": "MAX_REWARD",
      "description": "Maximum DAOplomat reward (5%).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkExecutability(uint32)",
      "name": "checkExecutability",
      "description": "Checks whether a token swap action can be executed, which is the case if all DAOs have deposited.",
      "parameterDecorators": [
        {
          "name": "_dealId",
          "description": "The dealId of the action (key to the mapping).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "bool A bool flag indiciating whether the action can be executed.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createSwap(address[],address[],uint256[][],uint256[][],address[],uint256[][],bytes32,uint32)",
      "name": "createSwap",
      "description": "Create a new token swap action and automatically creates Dao Deposit Manager for each DAO that does not have one.",
      "parameterDecorators": [
        {
          "name": "_daos",
          "description": "Array containing the DAOs that are involed in this action.",
          "recommendedTypes": []
        },
        {
          "name": "_tokens",
          "description": "Array containing the tokens that are involed in this action.",
          "recommendedTypes": []
        },
        {
          "name": "_pathFrom",
          "description": "Two-dimensional array containing the tokens flowing from the DAOs into the module: - First array level is for each token - Second array level is for each dao - Detailed overview on how to configure the array can be found at the TokenSwap struct description.",
          "recommendedTypes": []
        },
        {
          "name": "_pathTo",
          "description": "Two-dimensional array containing the tokens flowing from the module to the DAOs: - First array level is for each token - Second array level is for each dao - Detailed overview on how to configure the array can be found at the TokenSwap struct description.",
          "recommendedTypes": []
        },
        {
          "name": "_daoplomats",
          "description": "Array containing the DAOplomat address that will receive the DAOplomat reward. The sorting should match the `_rewardPathTo` array.",
          "recommendedTypes": []
        },
        {
          "name": "_rewardPathTo",
          "description": "Array containing the amount of reward each DAOplomat receives. The sorting should match the `_daoplomats` array.",
          "recommendedTypes": []
        },
        {
          "name": "_metadata",
          "description": "Unique ID that is generated throught the Prime Deals frontend.",
          "recommendedTypes": []
        },
        {
          "name": "_deadline",
          "description": "The amount of time between the creation of the swap and the time when it can no longer be executed, in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uin32 The dealId of the new token swap.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "dealManager()",
      "name": "dealManager",
      "description": "Address of the DealManager implementation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "executeSwap(uint32)",
      "name": "executeSwap",
      "description": "Executes a token swap action.",
      "parameterDecorators": [
        {
          "name": "_dealId",
          "description": "The dealId of the action (key to the mapping).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "feeInBasisPoints()",
      "name": "feeInBasisPoints",
      "description": "Fee in basis points (100% = 10000).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "feeWallet()",
      "name": "feeWallet",
      "description": "Wallet that is receiving the fees.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenswapFromMetadata(bytes32)",
      "name": "getTokenswapFromMetadata",
      "description": "Returns the TokenSwap struct associated with the metadata.",
      "parameterDecorators": [
        {
          "name": "_metadata",
          "description": "Unique ID that is generated throught the Prime Deals frontend.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "swap",
          "description": "Token swap struct associated with the metadata.",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasDealExpired(uint32)",
      "name": "hasDealExpired",
      "description": "Checks if the deal has been expired.",
      "parameterDecorators": [
        {
          "name": "_dealId",
          "description": "The dealId of the action (key to the mapping).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "bool A bool flag indiciating whether token swap has expired.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastDealId()",
      "name": "lastDealId",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "metadataToDealId(bytes32)",
      "name": "metadataToDealId",
      "description": "Metadata => deal ID.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setFee(uint32)",
      "name": "setFee",
      "description": "Sets a new fee.",
      "parameterDecorators": [
        {
          "name": "_feeInBasisPoints",
          "description": "Fee amount in basis points (1% = 100).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFeeWallet(address)",
      "name": "setFeeWallet",
      "description": "Sets a new fee wallet. The fee system will be inactive if the feeWallet is set to a zero-address.",
      "parameterDecorators": [
        {
          "name": "_feeWallet",
          "description": "Address of the new fee wallet.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenSwaps(uint32)",
      "name": "tokenSwaps",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "deadline",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "executionDate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "metadata",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "isExecuted",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}