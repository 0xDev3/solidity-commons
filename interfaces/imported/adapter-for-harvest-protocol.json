{
  "schema": "../schema.json",
  "tags": [
    "vesting"
  ],
  "name": "HarvestStakingAdapter",
  "description": "Adapter for Harvest protocol. Implementation of ProtocolAdapter interface.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PoolAdded(address,address,address)",
      "name": "PoolAdded",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "poolAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "stakingToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "rewardToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "adapterType()",
      "name": "adapterType",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addPools(tuple(address,address,address)[])",
      "name": "addPools",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pools",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "poolAddress",
              "description": "",
              "type": "address"
            },
            {
              "name": "stakingToken",
              "description": "",
              "type": "address"
            },
            {
              "name": "rewardToken",
              "description": "",
              "type": "address"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBalance(address,address)",
      "name": "getBalance",
      "description": "Implementation of ProtocolAdapter interface function.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of staked tokens / rewards earned after staking for a given account.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRewardPools(address)",
      "name": "getRewardPools",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStakingPools(address)",
      "name": "getStakingPools",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setIsEnabledPools(address[],bool[])",
      "name": "setIsEnabledPools",
      "description": "",
      "parameterDecorators": [
        {
          "name": "poolAddresses",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "isEnabledPools",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenType()",
      "name": "tokenType",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership to the desired address. The function is callable only by the owner.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}