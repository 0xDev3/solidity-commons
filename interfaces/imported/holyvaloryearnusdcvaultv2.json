{"schema":"../schema.json","tags":["vaults","yearn finance"],"name":"HolyValorYearnUSDCVaultV2","description":"","eventDecorators":[{"signature":"EmergencyTransferExecute(address,address,uint256)","name":"EmergencyTransferExecute","description":"An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"destination","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyTransferSet(address,address,uint256)","name":"EmergencyTransferSet","description":"An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"destination","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"FundsDivested(uint256,uint256,uint256,uint256)","name":"FundsDivested","description":"An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.","parameterDecorators":[{"name":"lpWithdrawn","description":"","recommendedTypes":[],"indexed":false},{"name":"baseAssetExpected","description":"","recommendedTypes":[],"indexed":false},{"name":"baseAssetReceived","description":"","recommendedTypes":[],"indexed":false},{"name":"lpTokensBalance","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"FundsInvested(uint256,uint256,uint256,uint256)","name":"FundsInvested","description":"An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.","parameterDecorators":[{"name":"amountRequested","description":"","recommendedTypes":[],"indexed":false},{"name":"amountActual","description":"","recommendedTypes":[],"indexed":false},{"name":"lpTokensReceived","description":"","recommendedTypes":[],"indexed":false},{"name":"lpTokensBalance","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"HarvestYield(uint256,uint256,uint256,uint256)","name":"HarvestYield","description":"An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.","parameterDecorators":[{"name":"lpWithdrawn","description":"","recommendedTypes":[],"indexed":false},{"name":"baseAssetExpected","description":"","recommendedTypes":[],"indexed":false},{"name":"baseAssetReceived","description":"","recommendedTypes":[],"indexed":false},{"name":"lpTokensBalance","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"WithdrawReclaim(uint256,uint256,uint256,uint256)","name":"WithdrawReclaim","description":"An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.","parameterDecorators":[{"name":"lpWithdrawn","description":"","recommendedTypes":[],"indexed":false},{"name":"baseAssetExpected","description":"","recommendedTypes":[],"indexed":false},{"name":"baseAssetReceived","description":"","recommendedTypes":[],"indexed":false},{"name":"lpTokensBalance","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"FINMGMT_ROLE()","name":"FINMGMT_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"amountInvested()","name":"amountInvested","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"baseAsset()","name":"baseAsset","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"divestFromVault(uint256,bool)","name":"divestFromVault","description":"","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]},{"name":"_safeExecution","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyTransferExecute()","name":"emergencyTransferExecute","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyTransferTimelockSet(address,address,uint256)","name":"emergencyTransferTimelockSet","description":"","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]},{"name":"_destination","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAPYInception()","name":"getAPYInception","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getAssetsUnderManagement()","name":"getAssetsUnderManagement","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMember(bytes32,uint256)","name":"getRoleMember","description":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMemberCount(bytes32)","name":"getRoleMemberCount","description":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"harvestYield(uint256,uint256)","name":"harvestYield","description":"","parameterDecorators":[{"name":"minExpectedAmount","description":"","recommendedTypes":[]},{"name":"maxAmount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"holyPool()","name":"holyPool","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"inceptionLPPriceUSDC()","name":"inceptionLPPriceUSDC","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"inceptionTimestamp()","name":"inceptionTimestamp","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address)","name":"initialize","description":"","parameterDecorators":[{"name":"_baseAsset","description":"","recommendedTypes":[]},{"name":"_vaultAddress","description":"","recommendedTypes":[]},{"name":"_poolAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"investInVault(uint256,uint256)","name":"investInVault","description":"","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]},{"name":"_minimumAmount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lpTokensBalance()","name":"lpTokensBalance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"reclaimFunds(uint256,bool)","name":"reclaimFunds","description":"","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]},{"name":"_safeExecution","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"safeReclaimAmount()","name":"safeReclaimAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setPool(address)","name":"setPool","description":"","parameterDecorators":[{"name":"_poolAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setYieldDistributor(address)","name":"setYieldDistributor","description":"","parameterDecorators":[{"name":"_distributorAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalReclaimAmount()","name":"totalReclaimAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"vaultContract()","name":"vaultContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"yieldDistributor()","name":"yieldDistributor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}