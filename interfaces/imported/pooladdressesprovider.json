{"schema":"../schema.json","tags":["aave"],"name":"PoolAddressesProvider","description":"PoolAddressesProvider. Acts as factory of proxies and admin of those, so with right to change its implementationsOwned by the Aave Governance*. Main registry of addresses part of or connected to the protocol, including permissioned roles.","eventDecorators":[{"signature":"ACLAdminUpdated(address,address)","name":"ACLAdminUpdated","description":"Events ///.","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ACLManagerUpdated(address,address)","name":"ACLManagerUpdated","description":"Events ///.","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"AddressSet(bytes32,address,address)","name":"AddressSet","description":"Events ///.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true},{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"AddressSetAsProxy(bytes32,address,address,address)","name":"AddressSetAsProxy","description":"Events ///.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true},{"name":"proxyAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"oldImplementationAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"newImplementationAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"MarketIdSet(string,string)","name":"MarketIdSet","description":"Events ///.","parameterDecorators":[{"name":"oldMarketId","description":"","recommendedTypes":[],"indexed":true},{"name":"newMarketId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Events ///.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PoolConfiguratorUpdated(address,address)","name":"PoolConfiguratorUpdated","description":"Events ///.","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PoolDataProviderUpdated(address,address)","name":"PoolDataProviderUpdated","description":"Events ///.","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PoolUpdated(address,address)","name":"PoolUpdated","description":"Events ///.","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PriceOracleSentinelUpdated(address,address)","name":"PriceOracleSentinelUpdated","description":"Events ///.","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PriceOracleUpdated(address,address)","name":"PriceOracleUpdated","description":"Events ///.","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ProxyCreated(bytes32,address,address)","name":"ProxyCreated","description":"Events ///.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true},{"name":"proxyAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"implementationAddress","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"getACLAdmin()","name":"getACLAdmin","description":"Returns the address of the ACL admin.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address of the ACL admin.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getACLManager()","name":"getACLManager","description":"Returns the address of the ACL manager.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address of the ACLManager.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getAddress(bytes32)","name":"getAddress","description":"Returns an address by its identifier. The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id.","parameterDecorators":[{"name":"id","description":"The id.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"The address of the registered for the specified id.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketId()","name":"getMarketId","description":"Returns the id of the Aave market to which this contract points to.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The market id*.","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"getPool()","name":"getPool","description":"Returns the address of the Pool proxy.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The Pool proxy address*.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getPoolConfigurator()","name":"getPoolConfigurator","description":"Returns the address of the PoolConfigurator proxy.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The PoolConfigurator proxy address*.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getPoolDataProvider()","name":"getPoolDataProvider","description":"Returns the address of the data provider.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address of the DataProvider.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getPriceOracle()","name":"getPriceOracle","description":"Returns the address of the price oracle.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address of the PriceOracle.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getPriceOracleSentinel()","name":"getPriceOracleSentinel","description":"Returns the address of the price oracle sentinel.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address of the PriceOracleSentinel.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setACLAdmin(address)","name":"setACLAdmin","description":"Updates the address of the ACL admin.","parameterDecorators":[{"name":"newAclAdmin","description":"The address of the new ACL admin.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setACLManager(address)","name":"setACLManager","description":"Updates the address of the ACL manager.","parameterDecorators":[{"name":"newAclManager","description":"The address of the new ACLManager*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAddress(bytes32,address)","name":"setAddress","description":"Sets an address for an id replacing the address saved in the addresses map. IMPORTANT Use this function carefully, as it will do a hard replacement.","parameterDecorators":[{"name":"id","description":"The id.","recommendedTypes":[]},{"name":"newAddress","description":"The address to set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAddressAsProxy(bytes32,address)","name":"setAddressAsProxy","description":"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`. IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences.","parameterDecorators":[{"name":"id","description":"The id.","recommendedTypes":[]},{"name":"newImplementationAddress","description":"The address of the new implementation.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMarketId(string)","name":"setMarketId","description":"Associates an id with a specific PoolAddressesProvider. This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.","parameterDecorators":[{"name":"newMarketId","description":"The market id.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPoolConfiguratorImpl(address)","name":"setPoolConfiguratorImpl","description":"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time.","parameterDecorators":[{"name":"newPoolConfiguratorImpl","description":"The new PoolConfigurator implementation*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPoolDataProvider(address)","name":"setPoolDataProvider","description":"Updates the address of the data provider.","parameterDecorators":[{"name":"newDataProvider","description":"The address of the new DataProvider*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPoolImpl(address)","name":"setPoolImpl","description":"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time.","parameterDecorators":[{"name":"newPoolImpl","description":"The new Pool implementation*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPriceOracle(address)","name":"setPriceOracle","description":"Updates the address of the price oracle.","parameterDecorators":[{"name":"newPriceOracle","description":"The address of the new PriceOracle.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPriceOracleSentinel(address)","name":"setPriceOracleSentinel","description":"Updates the address of the price oracle sentinel.","parameterDecorators":[{"name":"newPriceOracleSentinel","description":"The address of the new PriceOracleSentinel*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}