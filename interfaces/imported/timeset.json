{
  "schema": "../schema.json",
  "tags": [],
  "name": "TimeSet",
  "description": "",
  "eventDecorators": [
    {
      "signature": "DepositSuccessful(address,uint256,uint256,uint256,uint256,uint256)",
      "name": "DepositSuccessful",
      "description": "Event emitted on each successful user deposit.",
      "parameterDecorators": [
        {
          "name": "depositorAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "stage",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "usdAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountOfBonuses",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "COEFFICIENT_DECIMALS()",
      "name": "COEFFICIENT_DECIMALS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PRICE_DISCOVERY_DURATION()",
      "name": "PRICE_DISCOVERY_DURATION",
      "description": "Price discovery process duration.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PRIVATE_SALE_DURATION()",
      "name": "PRIVATE_SALE_DURATION",
      "description": "Private sale process duration.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "amountDepositedByUserAndStage(address,uint8)",
      "name": "amountDepositedByUserAndStage",
      "description": "Real USD amount deposited by the user during each stage.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "amountWithBonusesByUserAndStage(address,uint8)",
      "name": "amountWithBonusesByUserAndStage",
      "description": "Total amount with bonuses received by the user durin each stage.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bonusCoefficient(uint256)",
      "name": "bonusCoefficient",
      "description": "When depositing funds during discovery, users receive additional bonuses depending on a discovery day.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deadline()",
      "name": "deadline",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(uint256,uint8,bytes32)",
      "name": "deposit",
      "description": "Call to perform deposit by user.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of token deposited.",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "Contract address of token deposited.",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "Signature for the referral code.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getCurrentMinDeposit()",
      "name": "getCurrentMinDeposit",
      "description": "Call to get min deposit.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Min deposit for the current stage.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentStage()",
      "name": "getCurrentStage",
      "description": "Call to get the current stage.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_stage",
          "description": "Current stage.",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDiscoveredPrice()",
      "name": "getDiscoveredPrice",
      "description": "Call to calculate sYSL token price.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "recalculated sYSL initial price.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDiscoveredSupply()",
      "name": "getDiscoveredSupply",
      "description": "Call to calculate sYSL supply.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Recalculated initial sYSL supply.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLockTimeByUser(address)",
      "name": "getLockTimeByUser",
      "description": "Call to get users lock time.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "Users account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Recalculated lock time - average by all received bonuses.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalDepositedByUser(address)",
      "name": "getTotalDepositedByUser",
      "description": "Call to get users BUSD deposit.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "Users account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Recalculated value of deposit.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalDepositedWithBonusesByUser(address)",
      "name": "getTotalDepositedWithBonusesByUser",
      "description": "Call to calculate users BUSD deposit with bonuses.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "Users account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Recalculated value of deposit with bonuses.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialTotalSupply()",
      "name": "initialTotalSupply",
      "description": "Planned initial total supply of the sYSL token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lockTime(uint256)",
      "name": "lockTime",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minimumDeposit(uint256)",
      "name": "minimumDeposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "priceDiscoveryStartTime()",
      "name": "priceDiscoveryStartTime",
      "description": "Timestamp of price discovery process initiation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "privateSaleStartTime()",
      "name": "privateSaleStartTime",
      "description": "Timestamp of private sale proccess initiation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sYSL()",
      "name": "sYSL",
      "description": "sYSL token address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setDeadline(uint256)",
      "name": "setDeadline",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_deadline",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDiscoveryStart(uint256)",
      "name": "setDiscoveryStart",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_timestamp",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapRouterContract()",
      "name": "swapRouterContract",
      "description": "Pancake swap router contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokens(uint256)",
      "name": "tokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalBUSDcollected()",
      "name": "totalBUSDcollected",
      "description": "Amount of BUSD (ownerless liquidity) collected by the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalBUSDwithBonusesCollected()",
      "name": "totalBUSDwithBonusesCollected",
      "description": "Amount of dollar equivalent sYSL (deposit + bonus + referral).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateInitialTotalSupply(uint256)",
      "name": "updateInitialTotalSupply",
      "description": "Call change initial supply of sYSL token. Owner can change initial supply if sYSL price was not finalized yet.",
      "parameterDecorators": [
        {
          "name": "newInitialTotalSupply",
          "description": "New sYSL token initial supply.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateStartTime(uint256)",
      "name": "updateStartTime",
      "description": "Call change discovery start time. Owner can change discovery start time if it's not started yet.",
      "parameterDecorators": [
        {
          "name": "newStartTime",
          "description": "New timestamp of price dicovery start time..",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawBUSDTo(uint256,address)",
      "name": "withdrawBUSDTo",
      "description": "Call to withdraw deposited tokens after discovery is finished.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of tokens to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address to send assets to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawYsl()",
      "name": "withdrawYsl",
      "description": "Claims unlocked sYSL. Performes nothing if discovery is not finished. the contract should have Minter role for the sYSL contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawn(address)",
      "name": "withdrawn",
      "description": "The check if the user has already withdrawn his sYSL.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}