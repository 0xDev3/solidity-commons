{
  "schema": "../schema.json",
  "tags": [],
  "name": "Inflator",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ScriptResult(address,bytes,bytes,bytes)",
      "name": "ScriptResult",
      "description": "event emitted when a user has unstaked a token. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "executor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "script",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "input",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "returnData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RecoverToVault(address,address,uint256)",
      "name": "RecoverToVault",
      "description": "event emitted when a user has unstaked a token. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFLATE_ROLE()",
      "name": "DEFLATE_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasInitialized()",
      "name": "hasInitialized",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "INFLATE_ROLE()",
      "name": "INFLATE_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,uint256)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_agent",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_ctoken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_riskThreshold",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "SETUP_ROLE()",
      "name": "SETUP_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEVMScriptExecutor(bytes)",
      "name": "getEVMScriptExecutor",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_script",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "canPerform(address,address,bytes32,uint256[])",
      "name": "canPerform",
      "description": "Acts as limiter for agent transactions and redemptions transactions. Allows: - redeem on Redemptions if redemption not makes risk dagerous - exchange via Agent0 on 1split COMP for ctoken or its underlying.",
      "parameterDecorators": [
        {
          "name": "who",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "where",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "what",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "how",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRecoveryVault()",
      "name": "getRecoveryVault",
      "description": "Get the recovery vault for the app.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setRiskThreshold(uint256)",
      "name": "setRiskThreshold",
      "description": "Set risk threshold to `_riskThreshold`.",
      "parameterDecorators": [
        {
          "name": "_riskThreshold",
          "description": "Risk threshold scaled by 1e18.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deflate(uint256,address)",
      "name": "deflate",
      "description": "Deflate position by `value`.",
      "parameterDecorators": [
        {
          "name": "rounds",
          "description": "Rounds to deflate (0 for full).",
          "recommendedTypes": []
        },
        {
          "name": "donor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "allowRecoverability(address)",
      "name": "allowRecoverability",
      "description": "By default deriving from AragonApp makes it recoverable.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Token address that would be recovered.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "appId()",
      "name": "appId",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "inflate(uint256)",
      "name": "inflate",
      "description": "Inflate position by `rounds` rounds.",
      "parameterDecorators": [
        {
          "name": "rounds",
          "description": "Rounds to inflate (0 - not stop until reaching riskThreshold).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getInitializationBlock()",
      "name": "getInitializationBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "riskOk(uint256)",
      "name": "riskOk",
      "description": "",
      "parameterDecorators": [
        {
          "name": "change",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferToVault(address)",
      "name": "transferToVault",
      "description": "Send funds to recovery Vault. This contract should never receive funds, but in case it does, this function allows one to recover them.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "Token balance to be sent to recovery vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deflate(uint256)",
      "name": "deflate",
      "description": "Deflate position by `rounds` rounds.",
      "parameterDecorators": [
        {
          "name": "rounds",
          "description": "Rounds to deflate (0 for full).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "canPerform(address,bytes32,uint256[])",
      "name": "canPerform",
      "description": "Check whether an action can be performed by a sender for a particular role on this app.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "Sender of the call.",
          "recommendedTypes": []
        },
        {
          "name": "_role",
          "description": "Role on this app.",
          "recommendedTypes": []
        },
        {
          "name": "_params",
          "description": "Permission params for the role.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEVMScriptRegistry()",
      "name": "getEVMScriptRegistry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "risk(uint256)",
      "name": "risk",
      "description": "Retrieves risk (without accrued interest).",
      "parameterDecorators": [
        {
          "name": "change",
          "description": "Optional position change (borrow and supply increase).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "riskThreshold()",
      "name": "riskThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ctoken()",
      "name": "ctoken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "kernel()",
      "name": "kernel",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPetrified()",
      "name": "isPetrified",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "agent()",
      "name": "agent",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "position(uint256)",
      "name": "position",
      "description": "Retrieves risk, borrow and supply balances (without accrued interest).",
      "parameterDecorators": [
        {
          "name": "change",
          "description": "Optional position change (borrow and supply increase).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}