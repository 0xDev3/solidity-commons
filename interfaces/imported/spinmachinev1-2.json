{"schema":"../schema.json","tags":[],"name":"SpinMachineV1","description":"","eventDecorators":[{"signature":"Blacklisted(address)","name":"Blacklisted","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"BlacklisterChanged(address)","name":"BlacklisterChanged","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"newBlacklister","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ExtraSpinGranted(address,address,uint256)","name":"ExtraSpinGranted","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"spinOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"count","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ExtraSpinPriceChanged(uint256,uint256)","name":"ExtraSpinPriceChanged","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"underlying","description":"The underlying token the new Vault accepts.","recommendedTypes":[],"indexed":false},{"name":"vault","description":"The newly deployed Vault contract.","recommendedTypes":[],"indexed":false}]},{"signature":"ExtraSpinPurchased(address,address,uint256)","name":"ExtraSpinPurchased","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"spinOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"count","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"FaucetBoundsChanged(uint256,uint256)","name":"FaucetBoundsChanged","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"underlying","description":"The underlying token the new Vault accepts.","recommendedTypes":[],"indexed":false},{"name":"vault","description":"The newly deployed Vault contract.","recommendedTypes":[],"indexed":false}]},{"signature":"FaucetChanged(address)","name":"FaucetChanged","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"newFaucet","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"FreeSpinDelayChanged(uint256,uint256)","name":"FreeSpinDelayChanged","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"underlying","description":"The underlying token the new Vault accepts.","recommendedTypes":[],"indexed":false},{"name":"vault","description":"The newly deployed Vault contract.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"underlying","description":"The underlying token the new Vault accepts.","recommendedTypes":[],"indexed":true},{"name":"vault","description":"The newly deployed Vault contract.","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PrizesDistributionChanged(uint256[])","name":"PrizesDistributionChanged","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"prizes","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RescuerChanged(address)","name":"RescuerChanged","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"newRescuer","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SelfBlacklisted(address)","name":"SelfBlacklisted","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Spin(address,uint256,uint256,bool)","name":"Spin","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"winnings","description":"","recommendedTypes":[],"indexed":false},{"name":"sent","description":"","recommendedTypes":[],"indexed":false},{"name":"extra","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UnBlacklisted(address)","name":"UnBlacklisted","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"blacklist(address)","name":"blacklist","description":"Adds account to blacklist.","parameterDecorators":[{"name":"_account","description":"The address to blacklist.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"blacklister()","name":"blacklister","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"buyExtraSpin(address,uint256)","name":"buyExtraSpin","description":"Buy specified amount (`count`) of extra spins for `spinOwner`. Can only be called when contract is not paused. Emits an {ExtraSpinPurchased} event. Requirements: - `spinOwner` cannot be the zero address - `count` must be gretaer than 0 - ERC20 allowance required.","parameterDecorators":[{"name":"spinOwner","description":"","recommendedTypes":[]},{"name":"count","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["ExtraSpinPurchased(address,address,uint256)"],"readOnly":false},{"signature":"canSpin()","name":"canSpin","description":"Returs true if `msg.sender` can successfully execute a spin.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"canSpin(address)","name":"canSpin","description":"Returs true if `addr` can successfully execute a spin.","parameterDecorators":[{"name":"addr","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"extraSpinPrice()","name":"extraSpinPrice","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"extraSpins(address)","name":"extraSpins","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"faucetMaxBalance()","name":"faucetMaxBalance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"faucetMinBalance()","name":"faucetMinBalance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"freeSpinDelay()","name":"freeSpinDelay","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getPrizes()","name":"getPrizes","description":"Returs prizes distribution array.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"grantExtraSpin(address,uint256)","name":"grantExtraSpin","description":"Grant specified amount (`count`) of extra spins for `spinOwner`. Can only be called by the contract owner. Emits an {ExtraSpinGranted} event. Requirements: - `spinOwner` cannot be the zero address - `count` must be greater than 0.","parameterDecorators":[{"name":"spinOwner","description":"","recommendedTypes":[]},{"name":"count","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["ExtraSpinGranted(address,address,uint256)"],"readOnly":false},{"signature":"isBlacklisted(address)","name":"isBlacklisted","description":"Checks if account is blacklisted.","parameterDecorators":[{"name":"_account","description":"The address to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"lastFreeSpin(address)","name":"lastFreeSpin","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rescueERC20(address,address,uint256)","name":"rescueERC20","description":"Rescue ERC20 tokens locked up in this contract.","parameterDecorators":[{"name":"tokenContract","description":"ERC20 token contract address.","recommendedTypes":[]},{"name":"to","description":"Recipient address.","recommendedTypes":[]},{"name":"amount","description":"Amount to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rescuer()","name":"rescuer","description":"Returns current rescuer.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Rescuer's address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"selfBlacklist()","name":"selfBlacklist","description":"Adds msg.sender to blacklist (self-blacklist).","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setExtraSpinPrice(uint256)","name":"setExtraSpinPrice","description":"Sets price for a single extra spin. Can only be called by the contract owner. Emits an {ExtraSpinPriceChanged} event.","parameterDecorators":[{"name":"newPrice","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["ExtraSpinPriceChanged(uint256,uint256)"],"readOnly":false},{"signature":"setFaucet(address)","name":"setFaucet","description":"Sets `faucet` address. Can only be called by the contract owner. Emits an {FaucetChanged} event.","parameterDecorators":[{"name":"newFaucet","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["FaucetChanged(address)"],"readOnly":false},{"signature":"setFaucetBounds(uint256,uint256)","name":"setFaucetBounds","description":"Sets `faucetMaxBalance` and `faucetMinBalance` bounds. Can only be called by the contract owner. Emits an {FaucetBoundsChanged} event. Requirements: - `newMaxBalance` must be greater than or equal to `newMinBalance`.","parameterDecorators":[{"name":"newMaxBalance","description":"","recommendedTypes":[]},{"name":"newMinBalance","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["FaucetBoundsChanged(uint256,uint256)"],"readOnly":false},{"signature":"setFreeSpinDelay(uint256)","name":"setFreeSpinDelay","description":"Sets time delay for the next free spin. Can only be called by the contract owner. Emits an {FreeSpinDelayChanged} event.","parameterDecorators":[{"name":"newDelay","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["FreeSpinDelayChanged(uint256,uint256)"],"readOnly":false},{"signature":"setPrizes(uint256[])","name":"setPrizes","description":"Sets prizes distribution array. Can only be called by the contract owner. Emits an {PrizesDistributionChanged} event. Requirements: - `prizes` array cannot be empty.","parameterDecorators":[{"name":"prizes","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["PrizesDistributionChanged(uint256[])"],"readOnly":false},{"signature":"spin()","name":"spin","description":"Executes spin. Makes faucet request internally. Can only be called when contract is not paused. Can only be called if caller not blacklisted. Emits an {Spin} event.","parameterDecorators":[],"returnDecorators":[{"name":"success","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"winnings","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":["Spin(address,uint256,uint256,bool)"],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unBlacklist(address)","name":"unBlacklist","description":"Removes account from blacklist.","parameterDecorators":[{"name":"_account","description":"The address to remove from the blacklist.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateBlacklister(address)","name":"updateBlacklister","description":"","parameterDecorators":[{"name":"_newBlacklister","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateRescuer(address)","name":"updateRescuer","description":"Assign the rescuer role to a given address.","parameterDecorators":[{"name":"newRescuer","description":"New rescuer's address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}