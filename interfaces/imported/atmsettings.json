{
  "schema": "../schema.json",
  "tags": [],
  "name": "ATMSettings",
  "description": "It manages the settings for the ATMs.",
  "eventDecorators": [
    {
      "signature": "ATMPaused(address,address)",
      "name": "ATMPaused",
      "description": "Emitted when a new Vault is deployed. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "atm",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ATMUnpaused(address,address)",
      "name": "ATMUnpaused",
      "description": "Emitted when a new Vault is deployed. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "atm",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "MarketToAtmRemoved(address,address,address,address)",
      "name": "MarketToAtmRemoved",
      "description": "Emitted when a new Vault is deployed. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "lendingToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "collateralToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldAtm",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MarketToAtmSet(address,address,address,address)",
      "name": "MarketToAtmSet",
      "description": "Emitted when a new Vault is deployed. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "lendingToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "collateralToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "atm",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MarketToAtmUpdated(address,address,address,address,address)",
      "name": "MarketToAtmUpdated",
      "description": "Emitted when a new Vault is deployed. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "lendingToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "collateralToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldAtm",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAtm",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "atmPaused(address)",
      "name": "atmPaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getATMForMarket(address,address)",
      "name": "getATMForMarket",
      "description": "Gets the ATM configured for a given market (borrowed token and collateral token).",
      "parameterDecorators": [
        {
          "name": "lendingToken",
          "description": "borrowed token address.",
          "recommendedTypes": []
        },
        {
          "name": "collateralToken",
          "description": "collateral token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "It initializes this ATM Settings instance.",
      "parameterDecorators": [
        {
          "name": "settingsAddress",
          "description": "settings address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialized()",
      "name": "initialized",
      "description": "Gets if the contract is initialized.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isATMForMarket(address,address,address)",
      "name": "isATMForMarket",
      "description": "Tests whether an ATM is configured for a given market (borrowed token and collateral token) or not.",
      "parameterDecorators": [
        {
          "name": "lendingToken",
          "description": "borrowed token address.",
          "recommendedTypes": []
        },
        {
          "name": "collateralToken",
          "description": "collateral token address.",
          "recommendedTypes": []
        },
        {
          "name": "atmAddress",
          "description": "ATM address to test.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isATMPaused(address)",
      "name": "isATMPaused",
      "description": "Gets whether an ATM is paused (or the platform is paused) or not.",
      "parameterDecorators": [
        {
          "name": "atmAddress",
          "description": "ATM address to test.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pauseATM(address)",
      "name": "pauseATM",
      "description": "It pauses a given ATM.",
      "parameterDecorators": [
        {
          "name": "atmAddress",
          "description": "ATM address to pause.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeATMToMarket(address,address)",
      "name": "removeATMToMarket",
      "description": "Removes the ATM address for a given market (borrowed token and collateral token).",
      "parameterDecorators": [
        {
          "name": "lendingToken",
          "description": "borrowed token address.",
          "recommendedTypes": []
        },
        {
          "name": "collateralToken",
          "description": "collateral token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setATMToMarket(address,address,address)",
      "name": "setATMToMarket",
      "description": "Sets an ATM for a given market (borrowed token and collateral token).",
      "parameterDecorators": [
        {
          "name": "lendingToken",
          "description": "borrowed token address.",
          "recommendedTypes": []
        },
        {
          "name": "collateralToken",
          "description": "collateral token address.",
          "recommendedTypes": []
        },
        {
          "name": "atmAddress",
          "description": "ATM address to set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "settings()",
      "name": "settings",
      "description": "The gets the settings contract address from the SETTINGS_SLOT. This address should NOT change over the time. See details in the _setSettings(...) function.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unpauseATM(address)",
      "name": "unpauseATM",
      "description": "It unpauses a given ATM.",
      "parameterDecorators": [
        {
          "name": "atmAddress",
          "description": "ATM address to unpause.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateATMToMarket(address,address,address)",
      "name": "updateATMToMarket",
      "description": "Updates a new ATM for a given market (borrowed token and collateral token).",
      "parameterDecorators": [
        {
          "name": "lendingToken",
          "description": "borrowed token address.",
          "recommendedTypes": []
        },
        {
          "name": "collateralToken",
          "description": "collateral token address.",
          "recommendedTypes": []
        },
        {
          "name": "newAtmAddress",
          "description": "the new ATM address to update.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}