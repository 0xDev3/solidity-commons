{"schema":"../schema.json","tags":[],"name":"Recover","description":"Recover Lost and Found service smart contract.","eventDecorators":[{"signature":"Dispute(address,uint256,uint256,uint256)","name":"Dispute","description":"","parameterDecorators":[{"name":"_arbitrator","description":"","recommendedTypes":[],"indexed":true},{"name":"_disputeID","description":"","recommendedTypes":[],"indexed":true},{"name":"_metaEvidenceID","description":"","recommendedTypes":[],"indexed":false},{"name":"_evidenceGroupID","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Evidence(address,uint256,address,string)","name":"Evidence","description":"","parameterDecorators":[{"name":"_arbitrator","description":"","recommendedTypes":[],"indexed":true},{"name":"_evidenceGroupID","description":"","recommendedTypes":[],"indexed":true},{"name":"_party","description":"","recommendedTypes":[],"indexed":true},{"name":"_evidence","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Fund(uint256,uint8,uint256)","name":"Fund","description":"To be emitted when a party pays or reimburses the other.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[],"indexed":true},{"name":"_party","description":"The party that paid.","recommendedTypes":[],"indexed":false},{"name":"_amount","description":"The amount paid.","recommendedTypes":[],"indexed":false}]},{"signature":"HasToPayFee(uint256,uint8)","name":"HasToPayFee","description":"Indicate that a party has to pay a fee or would otherwise be considered as losing.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[],"indexed":true},{"name":"_party","description":"The party who has to pay.","recommendedTypes":[],"indexed":false}]},{"signature":"ItemClaimed(uint256,address,uint256)","name":"ItemClaimed","description":"To be emitted when the finder claims an item.","parameterDecorators":[{"name":"_itemID","description":"The index of the item.","recommendedTypes":[],"indexed":true},{"name":"_finder","description":"The address of the finder.","recommendedTypes":[],"indexed":true},{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[],"indexed":false}]},{"signature":"MetaEvidence(uint256,string)","name":"MetaEvidence","description":"","parameterDecorators":[{"name":"_metaEvidenceID","description":"","recommendedTypes":[],"indexed":true},{"name":"_evidence","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MetaTransactionExecuted(address,address,bytes)","name":"MetaTransactionExecuted","description":"","parameterDecorators":[{"name":"userAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"relayerAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"functionSignature","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Ruling(address,uint256,uint256)","name":"Ruling","description":"","parameterDecorators":[{"name":"_arbitrator","description":"","recommendedTypes":[],"indexed":true},{"name":"_disputeID","description":"","recommendedTypes":[],"indexed":true},{"name":"_ruling","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"CHILD_CHAIN_ID()","name":"CHILD_CHAIN_ID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"CHILD_CHAIN_ID_BYTES()","name":"CHILD_CHAIN_ID_BYTES","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"DEPOSITOR_ROLE()","name":"DEPOSITOR_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"ERC712_VERSION()","name":"ERC712_VERSION","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"ROOT_CHAIN_ID()","name":"ROOT_CHAIN_ID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"ROOT_CHAIN_ID_BYTES()","name":"ROOT_CHAIN_ID_BYTES","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"acceptClaim(uint256)","name":"acceptClaim","description":"Accept a claim an item.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addItem(address,string,uint256,uint256)","name":"addItem","description":"Add item.","parameterDecorators":[{"name":"_addressForEncryption","description":"Link to the meta-evidence.","recommendedTypes":[]},{"name":"_descriptionEncryptedLink","description":"Time after which a party can automatically execute the arbitrable transaction.","recommendedTypes":[]},{"name":"_rewardAmount","description":"The recipient of the transaction.","recommendedTypes":[]},{"name":"_timeoutLocked","description":"Timeout after which the finder can call the function `executePayment`.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"appeal(uint256)","name":"appeal","description":"Appeal an appealable ruling. Transfer the funds to the arbitrator. Note that no checks are required as the checks are done by the arbitrator.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"arbitrator()","name":"arbitrator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"arbitratorExtraData()","name":"arbitratorExtraData","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"changeAddressAndDescriptionEncrypted(uint256,address,string)","name":"changeAddressAndDescriptionEncrypted","description":"Change the address used to encrypt the description link and the description.","parameterDecorators":[{"name":"_itemID","description":"The index of the item.","recommendedTypes":[]},{"name":"_addressForEncryption","description":"Time after which a party can automatically execute the arbitrable transaction.","recommendedTypes":[]},{"name":"_descriptionEncryptedLink","description":"The recipient of the transaction.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeArbitrator(address,bytes)","name":"changeArbitrator","description":"Change the arbitrator to be used for disputes that may be raised in the next requests. The arbitrator is trusted to support appeal periods and not reenter.","parameterDecorators":[{"name":"_arbitrator","description":"The new trusted arbitrator to be used in the next requests.","recommendedTypes":[]},{"name":"_arbitratorExtraData","description":"The extra data used by the new arbitrator.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeDescription(string)","name":"changeDescription","description":"Change the general contact fallback information.","parameterDecorators":[{"name":"_description","description":"The public fallback contact information.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeFeeTimeout(uint256)","name":"changeFeeTimeout","description":"Change the timeout fee.","parameterDecorators":[{"name":"_feeTimeout","description":"The new timeout fee.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeRewardAmount(uint256,uint256)","name":"changeRewardAmount","description":"Change the reward amount of the item.","parameterDecorators":[{"name":"_itemID","description":"The index of the item.","recommendedTypes":[]},{"name":"_rewardAmount","description":"The amount of the reward for the item.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeTimeoutLocked(uint256,uint256)","name":"changeTimeoutLocked","description":"Change the reward amount of the item.","parameterDecorators":[{"name":"_itemID","description":"The index of the item.","recommendedTypes":[]},{"name":"_timeoutLocked","description":"Timeout after which the finder can call the function `executePayment`.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claim(uint256,address,string)","name":"claim","description":"Claim an item.","parameterDecorators":[{"name":"_itemID","description":"The index of the item.","recommendedTypes":[]},{"name":"_finder","description":"The address of the finder.","recommendedTypes":[]},{"name":"_descriptionEncryptedLinkFromFinder","description":"The link to the encrypted description of the item (optionnal).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claims(uint256)","name":"claims","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"itemID","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"finder","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"descriptionLink","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"amountLocked","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastInteraction","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"finderFee","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"disputeID","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"isAccepted","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"status","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"disputeIDtoClaimAcceptedID(uint256)","name":"disputeIDtoClaimAcceptedID","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"executeMetaTransaction(address,bytes,bytes32,bytes32,uint8)","name":"executeMetaTransaction","description":"","parameterDecorators":[{"name":"userAddress","description":"","recommendedTypes":[]},{"name":"functionSignature","description":"","recommendedTypes":[]},{"name":"sigR","description":"","recommendedTypes":[]},{"name":"sigS","description":"","recommendedTypes":[]},{"name":"sigV","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"executeTransaction(uint256)","name":"executeTransaction","description":"Transfer the transaction's amount to the finder if the timeout has passed.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"feeTimeout()","name":"feeTimeout","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getChainId()","name":"getChainId","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getClaimIDsByAddress(address)","name":"getClaimIDsByAddress","description":"Get IDs for claims where the specified address is the finder. Note that the complexity is O(c), where c is the number of claims.","parameterDecorators":[{"name":"_finder","description":"The specified address.","recommendedTypes":[]}],"returnDecorators":[{"name":"claimIDs","description":"The claim IDs.","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getClaimsByItemID(uint256)","name":"getClaimsByItemID","description":"Get claims of an item.","parameterDecorators":[{"name":"_itemID","description":"The index of the item.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"The claim IDs.","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getDomainSeperator()","name":"getDomainSeperator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getItemIDsByOwner(address)","name":"getItemIDsByOwner","description":"Get IDs for items where the specified address is the owner.","parameterDecorators":[{"name":"_owner","description":"The specified address.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"itemIDs The items IDs.","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getNonce(address)","name":"getNonce","description":"","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"nonce","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"governor()","name":"governor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,bytes,uint256)","name":"initialize","description":"Constructs the Recover contract.","parameterDecorators":[{"name":"_governor","description":"","recommendedTypes":[]},{"name":"_arbitrator","description":"The arbitrator of the contract.","recommendedTypes":[]},{"name":"_arbitratorExtraData","description":"Extra data for the arbitrator.","recommendedTypes":[]},{"name":"_feeTimeout","description":"Arbitration fee timeout for the parties.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isItemExist(uint256)","name":"isItemExist","description":"Get the existence of an item.","parameterDecorators":[{"name":"_itemID","description":"The index of the item.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if the item exists else false.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"items(uint256)","name":"items","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"owner","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"rewardAmount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"addressForEncryption","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"descriptionEncryptedLink","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"timeoutLocked","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"ownerFee","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"exists","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owners(address)","name":"owners","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"description","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"pay(uint256,uint256)","name":"pay","description":"Pay finder. To be called if the item has been returned.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[]},{"name":"_amount","description":"Amount to pay in wei.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"payArbitrationFeeByFinder(uint256)","name":"payArbitrationFeeByFinder","description":"Pay the arbitration fee to raise a dispute. To be called by the finder. UNTRUSTED. Note that this function mirrors payArbitrationFeeByFinder.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"payArbitrationFeeByOwner(uint256)","name":"payArbitrationFeeByOwner","description":"Pay the arbitration fee to raise a dispute. To be called by the owner. UNTRUSTED. Note that the arbitrator can have createDispute throw, which will make this function throw and therefore lead to a party being timed-out. This is not a vulnerability as the arbitrator can rule in favor of one party anyway.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"reimburse(uint256,uint256)","name":"reimburse","description":"Reimburse owner of the item. To be called if the item can't be fully returned.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[]},{"name":"_amountReimbursed","description":"Amount to reimburse in wei.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rule(uint256,uint256)","name":"rule","description":"Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.","parameterDecorators":[{"name":"_disputeID","description":"ID of the dispute in the Arbitrator contract.","recommendedTypes":[]},{"name":"_ruling","description":"Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"submitEvidence(uint256,string)","name":"submitEvidence","description":"Submit a reference to evidence. EVENT.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[]},{"name":"_evidence","description":"A link to an evidence using its URI.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"timeOutByFinder(uint256)","name":"timeOutByFinder","description":"Pay finder if the owner of the item fails to pay the fee.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"timeOutByOwner(uint256)","name":"timeOutByOwner","description":"Reimburse owner of the item if the finder fails to pay the fee.","parameterDecorators":[{"name":"_claimID","description":"The index of the claim.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}