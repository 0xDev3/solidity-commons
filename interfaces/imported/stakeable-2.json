{
  "schema": "../schema.json",
  "tags": [
    "staking"
  ],
  "name": "Stakeable",
  "description": "Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities.",
  "eventDecorators": [
    {
      "signature": "Staked(address,uint256,uint256,uint256)",
      "name": "Staked",
      "description": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "hasStake(address)",
      "name": "hasStake",
      "description": "hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes.",
      "parameterDecorators": [
        {
          "name": "_staker",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "total_amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "stakes",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple[]"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}