{"schema":"../schema.json","tags":[],"name":"Raphael","description":"","eventDecorators":[{"signature":"EmergencyNFTApproval(address,address[],uint256,uint256)","name":"EmergencyNFTApproval","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"triggeredBy","description":"","recommendedTypes":[],"indexed":false},{"name":"nftContractAddresses","description":"","recommendedTypes":[],"indexed":false},{"name":"startIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"endIndex","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyNFTApprovalFail(address)","name":"EmergencyNFTApprovalFail","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"nftContractAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyShutdown(address,uint256)","name":"EmergencyShutdown","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"triggeredBy","description":"","recommendedTypes":[],"indexed":false},{"name":"currentBlock","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NFTReceived(address,address,uint256)","name":"NFTReceived","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"nftContract","description":"","recommendedTypes":[],"indexed":false},{"name":"sender","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NFTTransferred(address,address,uint256)","name":"NFTTransferred","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"nftContract","description":"","recommendedTypes":[],"indexed":false},{"name":"to","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NativeTokenChanged(address,address,address)","name":"NativeTokenChanged","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"newAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"changedBy","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NativeTokenTransferred(address,address,uint256)","name":"NativeTokenTransferred","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"authorizedBy","description":"","recommendedTypes":[],"indexed":false},{"name":"to","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ProposalCreated(uint256,string,uint256,uint256)","name":"ProposalCreated","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[],"indexed":false},{"name":"details","description":"","recommendedTypes":[],"indexed":false},{"name":"vote_start","description":"","recommendedTypes":[],"indexed":false},{"name":"vote_end","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ProposalStatusChanged(uint256,uint8)","name":"ProposalStatusChanged","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[],"indexed":false},{"name":"newStatus","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StakingAddressChanged(address,address,address)","name":"StakingAddressChanged","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"newAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"changedBy","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Voted(address,uint256,uint256,bool)","name":"Voted","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"voter","description":"","recommendedTypes":[],"indexed":false},{"name":"proposalId","description":"","recommendedTypes":[],"indexed":false},{"name":"weight","description":"","recommendedTypes":[],"indexed":false},{"name":"direction","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"VotingDelayChanged(uint256)","name":"VotingDelayChanged","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"newDuration","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"VotingDurationChanged(uint256)","name":"VotingDurationChanged","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"newDuration","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"CREATE_TO_VOTE_PROPOSAL_DELAY()","name":"CREATE_TO_VOTE_PROPOSAL_DELAY","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"MAX_DURATION()","name":"MAX_DURATION","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"MIN_DURATION()","name":"MIN_DURATION","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"VOTING_DURATION()","name":"VOTING_DURATION","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"createProposal(string)","name":"createProposal","description":"Creates a proposal.","parameterDecorators":[{"name":"details","description":"string with proposal details.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyNftApproval(uint256,uint256)","name":"emergencyNftApproval","description":"can only be called after shutdown, is called during shutdown. approves admin on all NFT contracts.","parameterDecorators":[{"name":"startIndex","description":"the index to start cancelling from.","recommendedTypes":[]},{"name":"endIndex","description":"the index the cancelling will stop before.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyProposalCancellation(uint256,uint256)","name":"emergencyProposalCancellation","description":"can only be called after shutdown, is called during shutdown. cancels unfinished proposals in a specific range.","parameterDecorators":[{"name":"startIndex","description":"the index to start cancelling from.","recommendedTypes":[]},{"name":"endIndex","description":"the index the cancelling will stop before.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyShutdown()","name":"emergencyShutdown","description":"this is an irreversible process!. allows the admins to shut down the DAO (proposals, voting, transfers) and also sweeps out any NFTs and native tokens owned by the DAO.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getDidVote(uint256)","name":"getDidVote","description":"","parameterDecorators":[{"name":"proposalIndex","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getMinVotesNeeded()","name":"getMinVotesNeeded","description":"returns minimum amount of votes needed for a proposal to pass.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"minVotesNeeded value.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getNativeTokenAddress()","name":"getNativeTokenAddress","description":"returns address of the token associated with the DAO.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the address of the token contract.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getNativeTokenBalance()","name":"getNativeTokenBalance","description":"returns the DAO's balance of the native token.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getNftContractAddresses()","name":"getNftContractAddresses","description":"returns an array of the NFTs owned by the DAO.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"an array of nft structs.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getProposalData(uint256)","name":"getProposalData","description":"returns all data for a specified proposal.","parameterDecorators":[{"name":"proposalIndex","description":"uint index of proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param5","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"getProposalResult(uint256)","name":"getProposalResult","description":"returns result of a proposal.","parameterDecorators":[{"name":"proposalIndex","description":"uint index of proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true if proposal passed, otherwise false.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getStakingAddress()","name":"getStakingAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isShutdown()","name":"isShutdown","description":"returns if DAO is shutdown or not.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"mintNativeToken(uint256)","name":"mintNativeToken","description":"enables DAO to mint native tokens.","parameterDecorators":[{"name":"_amount","description":"the amount of tokens to mint.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"onERC721Received(address,address,uint256,bytes)","name":"onERC721Received","description":"calls \"super\" to the OpenZeppelin function inherited. function for receiving and recording an NFT.","parameterDecorators":[{"name":"operator","description":"the sender of the NFT (I think).","recommendedTypes":[]},{"name":"from","description":"not really sure, has generally been the zero address.","recommendedTypes":[]},{"name":"tokenId","description":"the tokenId of the NFT.","recommendedTypes":[]},{"name":"data","description":"any additional data sent with the NFT.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"`IERC721Receiver.onERC721Received.selector`.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalCount()","name":"proposalCount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMinVotesNeeded(uint256)","name":"setMinVotesNeeded","description":"Updates the min total votes needed for a proposal to pass.","parameterDecorators":[{"name":"newVotesNeeded","description":"uint new min vote threshold.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setNativeTokenAddress(address)","name":"setNativeTokenAddress","description":"allows admins to set the address of the token associated with the DAO.","parameterDecorators":[{"name":"tokenContractAddress","description":"the address of the ERC20 asset.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setProposalToCancelled(uint256)","name":"setProposalToCancelled","description":"Only for setting proposal to CANCELLED.Only callable from the multi-sig.","parameterDecorators":[{"name":"proposalIndex","description":"uint proposal key.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setProposalToResolved(uint256)","name":"setProposalToResolved","description":"Only for setting proposal to RESOLVED.Only callable from the multi-sig.","parameterDecorators":[{"name":"proposalIndex","description":"uint proposal key.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setStakingAddress(address)","name":"setStakingAddress","description":"allows admins to set the address of the staking contract associated with the DAO.","parameterDecorators":[{"name":"_stakingContractAddress","description":"the (new) address of the staking contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setVotingDelayDuration(uint256)","name":"setVotingDelayDuration","description":"","parameterDecorators":[{"name":"newDuration","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setVotingDuration(uint256)","name":"setVotingDuration","description":"","parameterDecorators":[{"name":"newDuration","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferNFT(address,address,uint256)","name":"transferNFT","description":"enables DAO to transfer NFTs received.","parameterDecorators":[{"name":"nftContractAddress","description":"the address of the NFT contract.","recommendedTypes":[]},{"name":"recipient","description":"the address to send the NFT to.","recommendedTypes":[]},{"name":"tokenId","description":"the id of the token in the NFT contract.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"success or fail bool.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"transferNativeToken(address,uint256)","name":"transferNativeToken","description":"enables DAO to transfer the token it is associated with.","parameterDecorators":[{"name":"to","description":"the address to send tokens to.","recommendedTypes":[]},{"name":"amount","description":"the amount to send.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"success or fail bool.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateProposalStatus(uint256)","name":"updateProposalStatus","description":"Moves proposal to the status it should be in.","parameterDecorators":[{"name":"proposalIndex","description":"uint proposal key.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"vote(uint256,bool)","name":"vote","description":"Allows any address to vote on a proposal.","parameterDecorators":[{"name":"proposalIndex","description":"key to proposal in mapping.","recommendedTypes":[]},{"name":"_vote","description":"true = for, false = against.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}