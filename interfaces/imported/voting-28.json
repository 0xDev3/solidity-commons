{
  "schema": "../schema.json",
  "tags": [
    "voting"
  ],
  "name": "Voting",
  "description": "Voting.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "registerVoter(address,bytes16,bytes16,uint8)",
      "name": "registerVoter",
      "description": "As per the requirement, only co-owners can add voters so we need to pass voter address to the function as it will be executed by co-owners only.",
      "parameterDecorators": [
        {
          "name": "_voter",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fName",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lName",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_age",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "winnerCandidate()",
      "name": "winnerCandidate",
      "description": "Declare the winner of this election.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buy()",
      "name": "buy",
      "description": "To avoid spam, co-owners would allow ballot from voters who have minimum of 5 tokens (proof of stake) to vote. So let's build a buy function for the Voters to buy tokens.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vote(uint8)",
      "name": "vote",
      "description": "Define the vote function.",
      "parameterDecorators": [
        {
          "name": "_candidate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}