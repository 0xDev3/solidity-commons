{"schema":"../schema.json","tags":["tokens"],"name":"StakingToken","description":"Staking Token (STK). Implements a basic ERC20 staking token with incentive distribution.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"addStakeholder(address)","name":"addStakeholder","description":"A method to add a stakeholder.","parameterDecorators":[{"name":"_stakeholder","description":"The stakeholder to add.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"calculateReward(address)","name":"calculateReward","description":"A simple method that calculates the rewards for each stakeholder.","parameterDecorators":[{"name":"_stakeholder","description":"The stakeholder to calculate rewards for.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"createStake(uint256)","name":"createStake","description":"A method for a stakeholder to create a stake.","parameterDecorators":[{"name":"_stake","description":"The size of the stake to be created.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"distributeRewards()","name":"distributeRewards","description":"A method to distribute rewards to all stakeholders.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isStakeholder(address)","name":"isStakeholder","description":"A method to check if an address is a stakeholder.","parameterDecorators":[{"name":"_address","description":"The address to verify.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeStake(uint256)","name":"removeStake","description":"A method for a stakeholder to remove a stake.","parameterDecorators":[{"name":"_stake","description":"The size of the stake to be removed.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeStakeholder(address)","name":"removeStakeholder","description":"A method to remove a stakeholder.","parameterDecorators":[{"name":"_stakeholder","description":"The stakeholder to remove.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardOf(address)","name":"rewardOf","description":"A method to allow a stakeholder to check his rewards.","parameterDecorators":[{"name":"_stakeholder","description":"The stakeholder to check rewards for.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"stakeOf(address)","name":"stakeOf","description":"A method to retrieve the stake for a stakeholder.","parameterDecorators":[{"name":"_stakeholder","description":"The stakeholder to retrieve the stake for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint256 The amount of wei staked.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"totalRewards()","name":"totalRewards","description":"A method to the aggregated rewards from all stakeholders.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"uint256 The aggregated rewards from all stakeholders.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalStakes()","name":"totalStakes","description":"A method to the aggregated stakes from all stakeholders.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"uint256 The aggregated stakes from all stakeholders.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawReward()","name":"withdrawReward","description":"A method to allow a stakeholder to withdraw his rewards.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}