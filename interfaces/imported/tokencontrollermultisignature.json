{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "TokenControllerMultiSignature",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AcceptAddMinter(address,address,uint256,uint256,uint256,bytes32,address,uint256)",
      "name": "AcceptAddMinter",
      "description": "Emitted when the collected tokens were withdrawn.",
      "parameterDecorators": [
        {
          "name": "requester",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "minter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "maxAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requestAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expireAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "acceptor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "currentNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AcceptDelMinter(address,address,uint256,uint256,bytes32,address,uint256)",
      "name": "AcceptDelMinter",
      "description": "Emitted when the collected tokens were withdrawn.",
      "parameterDecorators": [
        {
          "name": "requester",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "minter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requestAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expireAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "acceptor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "currentNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AcceptSetPendingOwner(address,address,uint256,uint256,bytes32,address,uint256)",
      "name": "AcceptSetPendingOwner",
      "description": "Emitted when the collected tokens were withdrawn.",
      "parameterDecorators": [
        {
          "name": "requester",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requestAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expireAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "acceptor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "currentNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ApplyAddMinter(address,address,uint256,uint256,uint256,bytes32)",
      "name": "ApplyAddMinter",
      "description": "Emitted when the collected tokens were withdrawn.",
      "parameterDecorators": [
        {
          "name": "requester",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "minter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "maxAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requestAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expireAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ApplyDelMinter(address,address,uint256,uint256,bytes32)",
      "name": "ApplyDelMinter",
      "description": "Emitted when the collected tokens were withdrawn.",
      "parameterDecorators": [
        {
          "name": "requester",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "minter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requestAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expireAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ApplySetPendingOwner(address,address,uint256,uint256,bytes32)",
      "name": "ApplySetPendingOwner",
      "description": "Emitted when the collected tokens were withdrawn.",
      "parameterDecorators": [
        {
          "name": "requester",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requestAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expireAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewTimeLocker(address,address)",
      "name": "NewTimeLocker",
      "description": "Emitted when the collected tokens were withdrawn.",
      "parameterDecorators": [
        {
          "name": "oldTimeLocker",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newTimeLocker",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "Emitted when the collected tokens were withdrawn.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "Emitted when the collected tokens were withdrawn.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "Emitted when the collected tokens were withdrawn.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SIGNATURE_MIN_NUM()",
      "name": "SIGNATURE_MIN_NUM",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SIGNER_ROLE()",
      "name": "SIGNER_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "acceptAddMinter(address,address,uint256,uint256,uint256,bytes32)",
      "name": "acceptAddMinter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_requester",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_minter",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_maxAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_requestAt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_expireAt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "acceptDelMinter(address,address,uint256,uint256,bytes32)",
      "name": "acceptDelMinter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_requester",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_minter",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_requestAt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_expireAt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "acceptSetPendingOwner(address,address,uint256,uint256,bytes32)",
      "name": "acceptSetPendingOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_requester",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_requestAt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_expireAt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "applyAddMinter(address,uint256,uint256,bytes32)",
      "name": "applyAddMinter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "minter",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "maxAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "expireAt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "applyDelMinter(address,uint256,bytes32)",
      "name": "applyDelMinter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "minter",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "expireAt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "applySetPendingOwner(address,uint256,bytes32)",
      "name": "applySetPendingOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "expireAt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executeAddMinter(address,uint256,bytes32)",
      "name": "executeAddMinter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_minter",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_maxAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executeDelMinter(address,bytes32)",
      "name": "executeDelMinter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_minter",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executeSetPendingOwner(address,bytes32)",
      "name": "executeSetPendingOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleMember(bytes32,uint256)",
      "name": "getRoleMember",
      "description": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleMemberCount(bytes32)",
      "name": "getRoleMemberCount",
      "description": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "setSignature(address)",
      "name": "setSignature",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newSignature",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTimeLocker(address)",
      "name": "setTimeLocker",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_timeLocker",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "signatureNum(bytes32)",
      "name": "signatureNum",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "timeLocker()",
      "name": "timeLocker",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transactions(bytes32)",
      "name": "transactions",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}