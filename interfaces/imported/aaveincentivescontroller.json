{
  "schema": "../schema.json",
  "tags": [
    "aave"
  ],
  "name": "AaveIncentivesController",
  "description": "AaveIncentivesController. Distributor contract for rewards to the Aave protocol.",
  "eventDecorators": [
    {
      "signature": "AssetConfigUpdated(address,uint256)",
      "name": "AssetConfigUpdated",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "newTreasury",
          "description": "New treasury address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldTreasury",
          "description": "Old treasury address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AssetIndexUpdated(address,uint256)",
      "name": "AssetIndexUpdated",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "newTreasury",
          "description": "New treasury address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldTreasury",
          "description": "Old treasury address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardsAccrued(address,uint256)",
      "name": "RewardsAccrued",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "newTreasury",
          "description": "New treasury address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldTreasury",
          "description": "Old treasury address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardsClaimed(address,address,uint256)",
      "name": "RewardsClaimed",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UserIndexUpdated(address,address,uint256)",
      "name": "UserIndexUpdated",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DISTRIBUTION_END()",
      "name": "DISTRIBUTION_END",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "EMISSION_MANAGER()",
      "name": "EMISSION_MANAGER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "EXTRA_PSM_REWARD()",
      "name": "EXTRA_PSM_REWARD",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PRECISION()",
      "name": "PRECISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PSM()",
      "name": "PSM",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "REVISION()",
      "name": "REVISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "REWARDS_VAULT()",
      "name": "REWARDS_VAULT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "REWARD_TOKEN()",
      "name": "REWARD_TOKEN",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assets(address)",
      "name": "assets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "emissionPerSecond",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "lastUpdateTimestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimRewards(address[],uint256,address,bool)",
      "name": "claimRewards",
      "description": "Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of rewards to claim.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address that will be receiving the rewards.",
          "recommendedTypes": []
        },
        {
          "name": "stake",
          "description": "Boolean flag to determined if the claimed rewards should be staked in the Safety Module or not.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Rewards claimed*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "configureAssets(tuple(uint128,uint256,address)[])",
      "name": "configureAssets",
      "description": "Configures the distribution of rewards for a list of assets.",
      "parameterDecorators": [
        {
          "name": "assetsConfigInput",
          "description": "The list of configurations to apply*.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "emissionPerSecond",
              "description": "",
              "type": "uint128"
            },
            {
              "name": "totalStaked",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "underlyingAsset",
              "description": "",
              "type": "address"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getRewardsBalance(address[],address)",
      "name": "getRewardsBalance",
      "description": "Returns the total of rewards of an user, already accrued + not yet accrued.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "The address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The rewards*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserAssetData(address,address)",
      "name": "getUserAssetData",
      "description": "Returns the data of an user on a distribution.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "Address of the user.",
          "recommendedTypes": []
        },
        {
          "name": "asset",
          "description": "The address of the reference asset of the distribution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The new index*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserUnclaimedRewards(address)",
      "name": "getUserUnclaimedRewards",
      "description": "returns the unclaimed rewards of the user.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "the address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the unclaimed user rewards.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "handleAction(address,uint256,uint256)",
      "name": "handleAction",
      "description": "Called by the corresponding asset on any update that affects the rewards distribution.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "The address of the user.",
          "recommendedTypes": []
        },
        {
          "name": "userBalance",
          "description": "The balance of the user of the asset in the lending pool.",
          "recommendedTypes": []
        },
        {
          "name": "totalSupply",
          "description": "The total supply of the asset in the lending pool*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize()",
      "name": "initialize",
      "description": "Called by the proxy contract. Not used at the moment, but for the future*.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferToIncentive(uint256)",
      "name": "transferToIncentive",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}