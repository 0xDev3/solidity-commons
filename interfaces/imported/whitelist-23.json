{"schema":"../schema.json","tags":[],"name":"Whitelist","description":"","eventDecorators":[{"signature":"OperatorsContractChanged(address,address)","name":"OperatorsContractChanged","description":"","parameterDecorators":[{"name":"caller","description":"","recommendedTypes":[],"indexed":true},{"name":"operatorsAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OperatorsContractPending(address,address)","name":"OperatorsContractPending","description":"","parameterDecorators":[{"name":"caller","description":"","recommendedTypes":[],"indexed":true},{"name":"operatorsAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"WhitelistToggled(address,bool)","name":"WhitelistToggled","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"whitelisted","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"batchToggleWhitelist(address[],bool)","name":"batchToggleWhitelist","description":"Batch whitelisted/unwhitelist multiple addresses, with _toggled being true/false.","parameterDecorators":[{"name":"_addresses","description":"address array.","recommendedTypes":[]},{"name":"_toggled","description":"whitelist/unwhitelist.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"confirmFor(address)","name":"confirmFor","description":"Confirms whitelist contract address once active.","parameterDecorators":[{"name":"_address","description":"Whitelistable contract addres.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"confirmOperatorsContract()","name":"confirmOperatorsContract","description":"The function should be called from new operators contract by admin to ensure that operatorsPending address is the real contract address.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getOperatorsContract()","name":"getOperatorsContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getOperatorsPending()","name":"getOperatorsPending","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address)","name":"initialize","description":"Initialization instead of constructor, called once. The setOperatorsContract function can be called only by Admin role with confirmation through the operators contract.","parameterDecorators":[{"name":"_baseOperators","description":"BaseOperators contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isAdmin(address)","name":"isAdmin","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isAdminOrSystem(address)","name":"isAdminOrSystem","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isInitialized()","name":"isInitialized","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isMultisig(address)","name":"isMultisig","description":"","parameterDecorators":[{"name":"_contract","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isOperator(address)","name":"isOperator","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isOperatorOrSystem(address)","name":"isOperatorOrSystem","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isRelay(address)","name":"isRelay","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isSystem(address)","name":"isSystem","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isWhitelisted(address)","name":"isWhitelisted","description":"Getter to determine if address is whitelisted.","parameterDecorators":[{"name":"_account","description":"address to determine if whitelisted or not.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"setOperatorsContract(address)","name":"setOperatorsContract","description":"Set the new the address of Operators contract, should be confirmed from operators contract by calling confirmFor(addr) where addr is the address of current contract instance. This is done to prevent the case when the new contract address is broken and control of the contract can be lost in such case.","parameterDecorators":[{"name":"_baseOperators","description":"BaseOperators contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"toggleWhitelist(address,bool)","name":"toggleWhitelist","description":"Toggle whitelisted/unwhitelisted on _account address, with _toggled being true/false.","parameterDecorators":[{"name":"_account","description":"address to toggle.","recommendedTypes":[]},{"name":"_toggled","description":"whitelist/unwhitelist.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"whitelisted(address)","name":"whitelisted","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true}]}