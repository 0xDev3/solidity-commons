{"schema":"../schema.json","tags":[],"name":"DefiRound","description":"","eventDecorators":[{"signature":"AssetsFinalized(address,address,uint256)","name":"AssetsFinalized","description":"Alerts when new token was created.","parameterDecorators":[{"name":"claimer","description":"","recommendedTypes":[],"indexed":false},{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"assetsMoved","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Deposited(address,tuple)","name":"Deposited","description":"Alerts when new token was created.","parameterDecorators":[{"name":"depositor","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenInfo","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"GenesisTransfer(address,uint256)","name":"GenesisTransfer","description":"Alerts when new token was created.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":false},{"name":"amountTransferred","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Alerts when new token was created.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RatesPublished(tuple[])","name":"RatesPublished","description":"Alerts when new token was created.","parameterDecorators":[{"name":"ratesData","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SupportedTokensAdded(tuple[])","name":"SupportedTokensAdded","description":"Alerts when new token was created.","parameterDecorators":[{"name":"tokenData","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TreasuryTransfer(tuple[])","name":"TreasuryTransfer","description":"Alerts when new token was created.","parameterDecorators":[{"name":"tokens","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WhitelistConfigured(tuple)","name":"WhitelistConfigured","description":"Alerts when new token was created.","parameterDecorators":[{"name":"settings","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdrawn(address,tuple,bool)","name":"Withdrawn","description":"Alerts when new token was created.","parameterDecorators":[{"name":"withdrawer","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenInfo","description":"","recommendedTypes":[],"indexed":false},{"name":"asETH","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"WETH()","name":"WETH","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"accountBalance(address)","name":"accountBalance","description":"determines the account value in USD amongst all the assets the user is invovled in.","parameterDecorators":[{"name":"account","description":"the account to look up.","recommendedTypes":[]}],"returnDecorators":[{"name":"value","description":"the value of the account in USD.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"addSupportedTokens(tuple(address,address,address,uint256)[])","name":"addSupportedTokens","description":"","parameterDecorators":[{"name":"tokensToSupport","description":"","recommendedTypes":[],"parameters":[{"name":"token","description":"","type":"address"},{"name":"oracle","description":"","type":"address"},{"name":"genesis","description":"","type":"address"},{"name":"maxLimit","description":"","type":"uint256"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"configureWhitelist(tuple(bool,bytes32))","name":"configureWhitelist","description":"Enable or disable the whitelist.","parameterDecorators":[{"name":"settings","description":"The root to use and whether to check the whitelist at all.","recommendedTypes":[],"parameters":[{"name":"enabled","description":"","type":"bool"},{"name":"root","description":"","type":"bytes32"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"currentStage()","name":"currentStage","description":"returns the current stage the contract is in.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit(tuple(address,uint256),bytes32[])","name":"deposit","description":"","parameterDecorators":[{"name":"tokenInfo","description":"","recommendedTypes":[],"parameters":[{"name":"token","description":"","type":"address"},{"name":"amount","description":"","type":"uint256"}]},{"name":"proof","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"finalizeAssets(bool)","name":"finalizeAssets","description":"Moves excess assets to private farming or refunds them. uses the publishedRates, selected tokens, and amounts to determine what amount of TOKE is claimed.","parameterDecorators":[{"name":"depositToGenesis","description":"applies only if oversubscribedMultiplier < 1; when true oversubscribed amount will deposit to genesis, else oversubscribed amount is sent back to user.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAccountData(address)","name":"getAccountData","description":"returns a list of AccountData for a provided account.","parameterDecorators":[{"name":"account","description":"the address of the account.","recommendedTypes":[]}],"returnDecorators":[{"name":"data","description":"an array of AccountData denoting what the status is for each of the tokens deposited (if any).","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getGenesisPools(address[])","name":"getGenesisPools","description":"","parameterDecorators":[{"name":"tokens","description":"array of addresses of supported tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"genesisAddresses","description":"array of genesis pools corresponding to supported tokens.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getMaxTotalValue()","name":"getMaxTotalValue","description":"Current Max Total Value.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"value the max total value.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getRateAdjustedAmounts(uint256,address)","name":"getRateAdjustedAmounts","description":"Given a balance, calculates how the the amount will be allocated between TOKE and Farming. Only allowed at stage 3.","parameterDecorators":[{"name":"balance","description":"balance to divy up.","recommendedTypes":[]},{"name":"token","description":"token to pull the rates for.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getRates(address[])","name":"getRates","description":"return the published rates for the tokens.","parameterDecorators":[{"name":"tokens","description":"an array of tokens to get rates for.","recommendedTypes":[]}],"returnDecorators":[{"name":"rates","description":"an array of rates for the provided tokens.","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getSupportedTokens()","name":"getSupportedTokens","description":"","parameterDecorators":[],"returnDecorators":[{"name":"tokens","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenOracles(address[])","name":"getTokenOracles","description":"the oracle that will be used to denote how much the amounts deposited are worth in USD.","parameterDecorators":[{"name":"tokens","description":"an array of tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"oracleAddresses","description":"the an array of oracles corresponding to supported tokens.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"lastLookExpiration()","name":"lastLookExpiration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"overSubscriptionRate()","name":"overSubscriptionRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"overNumerator","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"overDenominator","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"publishRates(tuple(address,uint256,uint256)[],tuple(uint256,uint256),uint256)","name":"publishRates","description":"","parameterDecorators":[{"name":"ratesData","description":"","recommendedTypes":[],"parameters":[{"name":"token","description":"","type":"address"},{"name":"numerator","description":"","type":"uint256"},{"name":"denominator","description":"","type":"uint256"}]},{"name":"oversubRate","description":"","recommendedTypes":[],"parameters":[{"name":"overNumerator","description":"","type":"uint256"},{"name":"overDenominator","description":"","type":"uint256"}]},{"name":"lastLookDuration","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalSupply(address)","name":"totalSupply","description":"the total supply held for a given token.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalValue()","name":"totalValue","description":"total value held in the entire contract amongst all the assets.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"value the value of all assets held.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferToTreasury()","name":"transferToTreasury","description":"Allows the owner to transfer all swapped assets to the treasury. only callable by owner and if last look period is complete.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"treasury()","name":"treasury","description":"returns the address of the treasury, when users claim this is where funds that are <= maxClaimableValue go.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"whitelistSettings()","name":"whitelistSettings","description":"","parameterDecorators":[],"returnDecorators":[{"name":"enabled","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"root","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(tuple(address,uint256),bool)","name":"withdraw","description":"","parameterDecorators":[{"name":"tokenInfo","description":"","recommendedTypes":[],"parameters":[{"name":"token","description":"","type":"address"},{"name":"amount","description":"","type":"uint256"}]},{"name":"asETH","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}