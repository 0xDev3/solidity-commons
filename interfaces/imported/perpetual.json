{
  "schema": "../schema.json",
  "tags": [],
  "name": "Perpetual",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ClosePosition(address,uint128,uint8,int256,int256)",
      "name": "ClosePosition",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "timeStamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "direction",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "notional",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FundingPayment(uint256,uint256,bool)",
      "name": "FundingPayment",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isPositive",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidationCall(address,address,uint128,uint256)",
      "name": "LiquidationCall",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityProvided(address,address,uint256)",
      "name": "LiquidityProvided",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "liquidityProvider",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityRemoved(address,uint256)",
      "name": "LiquidityRemoved",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "liquidityProvider",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityWithdrawn(address)",
      "name": "LiquidityWithdrawn",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "liquidityProvider",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Log(string)",
      "name": "Log",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "errorMessage",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OpenPosition(address,uint128,uint8,int256,int256)",
      "name": "OpenPosition",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "timeStamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "direction",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "notional",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Settlement(address,int256)",
      "name": "Settlement",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferOwner(address,address)",
      "name": "TransferOwner",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TransferOwnerClaim(address,address)",
      "name": "TransferOwnerClaim",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "SENSITIVITY()",
      "name": "SENSITIVITY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "TWAP_FREQUENCY()",
      "name": "TWAP_FREQUENCY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "VBASE_INDEX()",
      "name": "VBASE_INDEX",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "VQUOTE_INDEX()",
      "name": "VQUOTE_INDEX",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "chainlinkOracle()",
      "name": "chainlinkOracle",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "chainlinkTWAPOracle()",
      "name": "chainlinkTWAPOracle",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimOwner()",
      "name": "claimOwner",
      "description": "`pendingOwner` can claim `owner` account.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "clearingHouse()",
      "name": "clearingHouse",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "closePosition(address,uint256)",
      "name": "closePosition",
      "description": "Closes position from account holder.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tentativeVQuoteAmount",
          "description": "Amount of vQuote tokens to be sold for SHORT positions (anything works for LONG position).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getFundingPayments(address)",
      "name": "getFundingPayments",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getGlobalPosition()",
      "name": "getGlobalPosition",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLpPosition(address)",
      "name": "getLpPosition",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTraderPosition(address)",
      "name": "getTraderPosition",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUnrealizedPnL(address)",
      "name": "getUnrealizedPnL",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "indexPrice()",
      "name": "indexPrice",
      "description": "Return the current off-chain exchange rate for vBase/vQuote.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "liquidate(address,uint256)",
      "name": "liquidate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "liquidatee",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tentativeVQuoteAmount",
          "description": "Amount of vQuote tokens to be sold for SHORT positions (anything works for LONG position).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "market()",
      "name": "market",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "marketPrice()",
      "name": "marketPrice",
      "description": "Return the last traded price (used for TWAP).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "marketPriceOracle()",
      "name": "marketPriceOracle",
      "description": "Return the curve price oracle.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "openPosition(address,uint256,uint8)",
      "name": "openPosition",
      "description": "Open position, long or short. No number for the leverage is given but the amount in the vault must be bigger than MIN_MARGIN_AT_CREATIONNo checks are done if bought amount exceeds allowance.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "to be sold, in vQuote (if long) or vBase (if short).",
          "recommendedTypes": []
        },
        {
          "name": "direction",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingOwner()",
      "name": "pendingOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolTWAPOracle()",
      "name": "poolTWAPOracle",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "provideLiquidity(address,uint256)",
      "name": "provideLiquidity",
      "description": "Provide liquidity to the pool.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "liquidity provider.",
          "recommendedTypes": []
        },
        {
          "name": "wadAmount",
          "description": "amount of vQuote provided with 1e18 precision.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeLiquidity(address,uint256)",
      "name": "removeLiquidity",
      "description": "Remove liquidity from the pool (but don't close LP position and withdraw amount).",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "of liquidity to be removed from the pool (with 18 decimals).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "settleAndWithdrawLiquidity(address,uint256)",
      "name": "settleAndWithdrawLiquidity",
      "description": "Remove liquidity from the pool (but don't close LP position and withdraw amount).",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tentativeVQuoteAmount",
          "description": "at which to buy the LP position (if it looks like a short, more vQuote than vBase).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "profit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwner(address,bool)",
      "name": "transferOwner",
      "description": "Transfer `owner` account.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "Account granted `owner` access control.",
          "recommendedTypes": []
        },
        {
          "name": "direct",
          "description": "If 'true', ownership is directly transferred.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateFundingRate()",
      "name": "updateFundingRate",
      "description": "Calculate the funding rate for the current block.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateGenericProtocolState()",
      "name": "updateGenericProtocolState",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vBase()",
      "name": "vBase",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vQuote()",
      "name": "vQuote",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}