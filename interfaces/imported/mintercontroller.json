{"schema":"../schema.json","tags":[],"name":"MinterController","description":"The MinterController is the domain minter for control to mint, also setting the domain baseURI.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"burnSubURI(uint256,string)","name":"burnSubURI","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"label","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"grantMinterRole(address)","name":"grantMinterRole","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"hasRole(address)","name":"hasRole","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"mintSubURI(address,uint256,string)","name":"mintSubURI","description":"","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[]},{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"label","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"mintSubURIWithResolver(address,uint256,string,address)","name":"mintSubURIWithResolver","description":"","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[]},{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"label","description":"","recommendedTypes":[]},{"name":"resolver","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"mintURI(address,string)","name":"mintURI","description":"","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[]},{"name":"label","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"mintURIWithResolver(address,string,address)","name":"mintURIWithResolver","description":"","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[]},{"name":"label","description":"","recommendedTypes":[]},{"name":"resolver","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"revokeMinterRole(address)","name":"revokeMinterRole","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"safeMintSubURI(address,uint256,string,bytes)","name":"safeMintSubURI","description":"","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[]},{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"label","description":"","recommendedTypes":[]},{"name":"_data","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"safeMintURI(address,string,bytes)","name":"safeMintURI","description":"","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[]},{"name":"label","description":"","recommendedTypes":[]},{"name":"_data","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBaseURI(string)","name":"setBaseURI","description":"The router is a protocol to access the resource stored in ethereum, also can execute the smartcontract by delegate call / custom the router implementation eth://token.defi - default access the index(tokenId) function eth://token.defi/get/name=tom read data ? eth://token.defi/post/name=tom write data !.","parameterDecorators":[{"name":"baseURI","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setResolver(uint256,address)","name":"setResolver","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"resolver","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}