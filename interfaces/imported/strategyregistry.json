{
  "schema": "../schema.json",
  "tags": [
    "strategies"
  ],
  "name": "StrategyRegistry",
  "description": "Central clearing house for all things strategy, for activating and migrating.",
  "eventDecorators": [
    {
      "signature": "ParameterUpdated(string,uint256)",
      "name": "ParameterUpdated",
      "description": "Emitted when the contract is unpaused.",
      "parameterDecorators": [
        {
          "name": "param",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SubjectParameterUpdated(string,address,uint256)",
      "name": "SubjectParameterUpdated",
      "description": "Emitted when the contract is unpaused.",
      "parameterDecorators": [
        {
          "name": "param",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "subject",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SubjectUpdated(string,address)",
      "name": "SubjectUpdated",
      "description": "Emitted when the contract is unpaused.",
      "parameterDecorators": [
        {
          "name": "param",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "subject",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "_charactersPlayed(uint256)",
      "name": "_charactersPlayed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_dependsOnCharacters(uint256)",
      "name": "_dependsOnCharacters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_dependsOnRoles(uint256)",
      "name": "_dependsOnRoles",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_disabledTokenCount(address)",
      "name": "_disabledTokenCount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_rolesPlayed(uint256)",
      "name": "_rolesPlayed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_tokenCount(address)",
      "name": "_tokenCount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "allEnabledStrategies()",
      "name": "allEnabledStrategies",
      "description": "View all enabled strategies.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "charactersPlayed()",
      "name": "charactersPlayed",
      "description": "returns all characters played by this contract (e.g. stable coin, oracle registry).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dependsOnCharacters()",
      "name": "dependsOnCharacters",
      "description": "returns all the character dependencies like FEE_RECIPIENT.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dependsOnRoles()",
      "name": "dependsOnRoles",
      "description": "returns all the roles dependencies of this contract like FUND_TRANSFERER.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "depositMigrationTokens(address,address)",
      "name": "depositMigrationTokens",
      "description": "Endpoint for strategies to deposit tokens for migration destinations to later withdraw.",
      "parameterDecorators": [
        {
          "name": "destination",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "disableStrategy(address)",
      "name": "disableStrategy",
      "description": "Disable a strategy.",
      "parameterDecorators": [
        {
          "name": "strat",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enableStrategy(address)",
      "name": "enableStrategy",
      "description": "Enable a strategy.",
      "parameterDecorators": [
        {
          "name": "strat",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enabledStrategy(address)",
      "name": "enabledStrategy",
      "description": "View whether a strategy is enabled.",
      "parameterDecorators": [
        {
          "name": "strat",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentStrategy(address)",
      "name": "getCurrentStrategy",
      "description": "Get strategy or any replacement of it.",
      "parameterDecorators": [
        {
          "name": "strat",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mainCharacterCache(uint256)",
      "name": "mainCharacterCache",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "replaceStrategy(address,address)",
      "name": "replaceStrategy",
      "description": "Replace a strategy and migrate all its assets to replacement beware not to introduce cycles :).",
      "parameterDecorators": [
        {
          "name": "legacyStrat",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "replacementStrat",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "replacementStrategy(address)",
      "name": "replacementStrategy",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "roleCache(address,uint256)",
      "name": "roleCache",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "roles()",
      "name": "roles",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rolesPlayed()",
      "name": "rolesPlayed",
      "description": "returns all roles played by this contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalDisabledTokenStratRows()",
      "name": "totalDisabledTokenStratRows",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalTokenStratRows()",
      "name": "totalTokenStratRows",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateMainCharacterCache(uint256)",
      "name": "updateMainCharacterCache",
      "description": "Updates the main character cache for a speciic character.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateRoleCache(uint256,address)",
      "name": "updateRoleCache",
      "description": "Updates the role cache for a specific role and address.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "contr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateTokenCount(address)",
      "name": "updateTokenCount",
      "description": "update accounting cache for view function.",
      "parameterDecorators": [
        {
          "name": "strat",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "viewAllDisabledTokenStrategyMetadata()",
      "name": "viewAllDisabledTokenStrategyMetadata",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "viewAllEnabledStrategyMetadata()",
      "name": "viewAllEnabledStrategyMetadata",
      "description": "Return a big ol list of strategy metadata.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}