{
  "schema": "../schema.json",
  "tags": [],
  "name": "MarketplaceController",
  "description": "MarketplaceControllerContract It controls distribution of rewards to Members, Certifiers, and Arkius.",
  "eventDecorators": [
    {
      "signature": "AdClicked(uint256)",
      "name": "AdClicked",
      "description": "Emitted when a single ad is clicked.",
      "parameterDecorators": [
        {
          "name": "campaignId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AdExpired(uint256)",
      "name": "AdExpired",
      "description": "Emitted when a single ad is expired.",
      "parameterDecorators": [
        {
          "name": "campaignId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AdServed(address,uint256)",
      "name": "AdServed",
      "description": "Emitted when a single ad is served.",
      "parameterDecorators": [
        {
          "name": "member",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "campaignId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipNominated(address,address)",
      "name": "OwnershipNominated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "MultiwalletContract()",
      "name": "MultiwalletContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "acceptOwnership()",
      "name": "acceptOwnership",
      "description": "Nominated Owner can accept the Ownership of the contract. Can only be called by the nominated owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "adClickedBatch(uint256[])",
      "name": "adClickedBatch",
      "description": "Batch function to calculate and update multiwallet balance for multiple clicks on multiple ads at once.",
      "parameterDecorators": [
        {
          "name": "adIds",
          "description": "IDs of the Ads.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "adExpiredBatch(uint256[],uint256,uint256)",
      "name": "adExpiredBatch",
      "description": "OnlyOwner function to calculate and de-multiwallet balances for expired ad-campaigns.",
      "parameterDecorators": [
        {
          "name": "adIds",
          "description": "Ids of the Campaign.",
          "recommendedTypes": []
        },
        {
          "name": "cutPercentNumerator",
          "description": "Numerator of percentage amount to be deducted.",
          "recommendedTypes": []
        },
        {
          "name": "cutPercentDenominator",
          "description": "Denominator of percentage amount to be deducted.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "adServedBatch(address[],uint256[],uint256[],address[][],uint256[][])",
      "name": "adServedBatch",
      "description": "Batch function to calculate and update multiwallet balance for multiple clicks on multiple campaigns at once.",
      "parameterDecorators": [
        {
          "name": "members",
          "description": "Addresses of the members who clicked on the Ads.",
          "recommendedTypes": []
        },
        {
          "name": "timestamps",
          "description": "Current time in seconds.",
          "recommendedTypes": []
        },
        {
          "name": "campaignIDs",
          "description": "IDs of the Campaigns.",
          "recommendedTypes": []
        },
        {
          "name": "certifiers",
          "description": "Addresses of all the certifiers whose certifications were used.",
          "recommendedTypes": []
        },
        {
          "name": "certifierWeights",
          "description": "No. of calls made to each certifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "campaignAddress()",
      "name": "campaignAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkEarnedRewards(uint256,uint8,address)",
      "name": "checkEarnedRewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "adId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "devfundAddress()",
      "name": "devfundAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllAdIDs()",
      "name": "getAllAdIDs",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governanceToken()",
      "name": "governanceToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nominateNewOwner(address)",
      "name": "nominateNewOwner",
      "description": "Nominate new Owner of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pbcLicenseAddress()",
      "name": "pbcLicenseAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "precision()",
      "name": "precision",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardShare(uint8)",
      "name": "rewardShare",
      "description": "",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalShare()",
      "name": "totalShare",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "treasuryAddress()",
      "name": "treasuryAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateCampaignAddress(address)",
      "name": "updateCampaignAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "campaign",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateDevfundAddress(address)",
      "name": "updateDevfundAddress",
      "description": "Update DevFund address.",
      "parameterDecorators": [
        {
          "name": "newDevfund",
          "description": "Address of the new devfund.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateMultiwalletContract(address)",
      "name": "updateMultiwalletContract",
      "description": "Update multiwallet contract address.",
      "parameterDecorators": [
        {
          "name": "multiwalletAddress",
          "description": "Address of the new multiwallet contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePBCAddress(address)",
      "name": "updatePBCAddress",
      "description": "Update PBC License address.",
      "parameterDecorators": [
        {
          "name": "newPBCLicense",
          "description": "Address of the new PBC License.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateRewardShare(uint8,uint256)",
      "name": "updateRewardShare",
      "description": "Update RewardShare for given recipient.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "Type of the recipient.",
          "recommendedTypes": []
        },
        {
          "name": "share",
          "description": "Reward Share Amount of the recipient.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateTokenAddress(address)",
      "name": "updateTokenAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateTreasuryAddress(address)",
      "name": "updateTreasuryAddress",
      "description": "Update Treasury address.",
      "parameterDecorators": [
        {
          "name": "newTreasury",
          "description": "Address of the new treasury.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}