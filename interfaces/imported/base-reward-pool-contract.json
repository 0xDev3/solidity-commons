{
  "schema": "../schema.json",
  "tags": [
    "convex"
  ],
  "name": "BaseRewardPool",
  "description": "Base Reward Pool contract. Rewards contract for Prime Pools is based on the convex contract.",
  "eventDecorators": [
    {
      "signature": "ExtraRewardCleared(address)",
      "name": "ExtraRewardCleared",
      "description": "",
      "parameterDecorators": [
        {
          "name": "extraReward",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ExtraRewardsCleared()",
      "name": "ExtraRewardsCleared",
      "description": "",
      "parameterDecorators": []
    },
    {
      "signature": "RewardAdded(uint256)",
      "name": "RewardAdded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "reward",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardPaid(address,uint256)",
      "name": "RewardPaid",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "reward",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Staked(address,uint256)",
      "name": "Staked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdrawn(address,uint256)",
      "name": "Withdrawn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DURATION()",
      "name": "DURATION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "NEW_REWARD_RATIO()",
      "name": "NEW_REWARD_RATIO",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addExtraReward(address)",
      "name": "addExtraReward",
      "description": "Adds an extra reward. only `rewardManager` can add extra rewards.",
      "parameterDecorators": [
        {
          "name": "_reward",
          "description": "token address of the reward.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceOf(address)",
      "name": "balanceOf",
      "description": "Get the specified address' balance.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address of the token holder.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The `account`'s balance.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "clearExtraReward(uint256)",
      "name": "clearExtraReward",
      "description": "Clears extra reward by index.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "index of the extra reward to clear.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "clearExtraRewards()",
      "name": "clearExtraRewards",
      "description": "Clears extra rewards. Only Prime multising has the ability to do this if you want to remove only one token, use `clearExtraReward`.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "currentRewards()",
      "name": "currentRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "donate(uint256)",
      "name": "donate",
      "description": "Donates reward token to this contract.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "The amount of tokens to donate.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "earned(address)",
      "name": "earned",
      "description": "Returns the `account`'s earned rewards.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address of the token holder.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The `account`'s earned rewards.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "extraRewards(uint256)",
      "name": "extraRewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "extraRewardsLength()",
      "name": "extraRewardsLength",
      "description": "Returns number of extra rewards.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReward()",
      "name": "getReward",
      "description": "Claims Reward for signer.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getReward(address,bool)",
      "name": "getReward",
      "description": "Claims Rewards for `_account`.",
      "parameterDecorators": [
        {
          "name": "_account",
          "description": "The account to claim rewards for.",
          "recommendedTypes": []
        },
        {
          "name": "_claimExtras",
          "description": "Whether or not the user wants to claim extra rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "historicalRewards()",
      "name": "historicalRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastTimeRewardApplicable()",
      "name": "lastTimeRewardApplicable",
      "description": "Returns last time reward applicable.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The lower value of current block.timestamp or last time reward applicable.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastUpdateTime()",
      "name": "lastUpdateTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "operator()",
      "name": "operator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "periodFinish()",
      "name": "periodFinish",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pid()",
      "name": "pid",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "queueNewRewards(uint256)",
      "name": "queueNewRewards",
      "description": "Queue new rewards. Only the operator can queue new rewards.",
      "parameterDecorators": [
        {
          "name": "_rewards",
          "description": "The amount of tokens to queue.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "queuedRewards()",
      "name": "queuedRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardManager()",
      "name": "rewardManager",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardPerToken()",
      "name": "rewardPerToken",
      "description": "Returns rewards per token staked.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The rewards per token staked.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardPerTokenStored()",
      "name": "rewardPerTokenStored",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardRate()",
      "name": "rewardRate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardToken()",
      "name": "rewardToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewards(address)",
      "name": "rewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stake(uint256)",
      "name": "stake",
      "description": "Stakes `amount` tokens.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "The amount of tokens user wants to stake.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeAll()",
      "name": "stakeAll",
      "description": "Stakes all BAL tokens.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeFor(address,uint256)",
      "name": "stakeFor",
      "description": "Stakes `amount` tokens for `_for`.",
      "parameterDecorators": [
        {
          "name": "_for",
          "description": "Who are we staking for.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "The amount of tokens user wants to stake.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakingToken()",
      "name": "stakingToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSupply()",
      "name": "totalSupply",
      "description": "Returns total supply.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "userRewardPerTokenPaid(address)",
      "name": "userRewardPerTokenPaid",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256,bool,bool)",
      "name": "withdraw",
      "description": "Withdraw `amount` tokens and possibly unwrap.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "The amount of tokens that the user wants to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "_claim",
          "description": "Whether or not the user wants to claim their rewards.",
          "recommendedTypes": []
        },
        {
          "name": "_unwrap",
          "description": "Whether or not the user wants to unwrap to BLP tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawAll(bool)",
      "name": "withdrawAll",
      "description": "Withdraw all tokens.",
      "parameterDecorators": [
        {
          "name": "_claim",
          "description": "Whether or not the user wants to claim their rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawAllAndUnwrap(bool)",
      "name": "withdrawAllAndUnwrap",
      "description": "Withdraw all tokens and unwrap.",
      "parameterDecorators": [
        {
          "name": "_claim",
          "description": "Whether or not the user wants to claim their rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}