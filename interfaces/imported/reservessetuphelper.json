{
  "schema": "../schema.json",
  "tags": [
    "aave"
  ],
  "name": "ReservesSetupHelper",
  "description": "ReservesSetupHelper. The ReservesSetupHelper is an Ownable contract, so only the deployer or future owners can call this contract. Deployment helper to setup the assets risk parameters at PoolConfigurator in batch.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Signals that a new price update request is being posted to the Witnet Request Board.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "configureReserves(address,tuple(address,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool)[])",
      "name": "configureReserves",
      "description": "External function called by the owner account to setup the assets risk parameters in batch. The Pool or Risk admin must transfer the ownership to ReservesSetupHelper before calling this function.",
      "parameterDecorators": [
        {
          "name": "configurator",
          "description": "The address of PoolConfigurator contract.",
          "recommendedTypes": []
        },
        {
          "name": "inputParams",
          "description": "An array of ConfigureReserveInput struct that contains the assets and their risk parameters.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "asset",
              "description": "",
              "type": "address"
            },
            {
              "name": "baseLTV",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "liquidationThreshold",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "liquidationBonus",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "reserveFactor",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "borrowCap",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "supplyCap",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "stableBorrowingEnabled",
              "description": "",
              "type": "bool"
            },
            {
              "name": "borrowingEnabled",
              "description": "",
              "type": "bool"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}