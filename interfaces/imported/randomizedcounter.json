{"schema":"../schema.json","tags":[],"name":"RandomizedCounter","description":"","eventDecorators":[{"signature":"LogCountThreshold(uint256,uint256,uint256)","name":"LogCountThreshold","description":"","parameterDecorators":[{"name":"count_","description":"","recommendedTypes":[],"indexed":false},{"name":"index","description":"","recommendedTypes":[],"indexed":false},{"name":"threshold_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogCountThresholdHit(uint256,uint256,uint256)","name":"LogCountThresholdHit","description":"","parameterDecorators":[{"name":"rewardAmount_","description":"","recommendedTypes":[],"indexed":false},{"name":"count_","description":"","recommendedTypes":[],"indexed":false},{"name":"randomThreshold","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogEmergencyWithdraw(uint256)","name":"LogEmergencyWithdraw","description":"","parameterDecorators":[{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogManualPoolStarted(uint256)","name":"LogManualPoolStarted","description":"","parameterDecorators":[{"name":"startedAt","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogRewardAdded(uint256)","name":"LogRewardAdded","description":"","parameterDecorators":[{"name":"reward","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogRewardPaid(address,uint256)","name":"LogRewardPaid","description":"","parameterDecorators":[{"name":"reporter","description":"The address of the entity that reported the updater misbehavior.","recommendedTypes":[],"indexed":true},{"name":"updater","description":"The address of the updater.","recommendedTypes":[],"indexed":false}]},{"signature":"LogRewardRevoked(uint256,uint256)","name":"LogRewardRevoked","description":"","parameterDecorators":[{"name":"reporter","description":"The address of the entity that reported the updater misbehavior.","recommendedTypes":[],"indexed":false},{"name":"updater","description":"The address of the updater.","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetBeforePeriodFinish(bool)","name":"LogSetBeforePeriodFinish","description":"","parameterDecorators":[{"name":"beforePeriodFinish_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetCountInSequence(bool)","name":"LogSetCountInSequence","description":"","parameterDecorators":[{"name":"countInSequence_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetCountThreshold(uint256)","name":"LogSetCountThreshold","description":"","parameterDecorators":[{"name":"countThreshold_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetDuration(uint256)","name":"LogSetDuration","description":"","parameterDecorators":[{"name":"duration_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetEnablePoolLpLimit(bool)","name":"LogSetEnablePoolLpLimit","description":"","parameterDecorators":[{"name":"enablePoolLpLimit_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetEnableUserLpLimit(bool)","name":"LogSetEnableUserLpLimit","description":"","parameterDecorators":[{"name":"enableUserLpLimit_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetNormalDistribution(uint256,uint256,uint256[100])","name":"LogSetNormalDistribution","description":"","parameterDecorators":[{"name":"noramlDistributionMean_","description":"","recommendedTypes":[],"indexed":false},{"name":"normalDistributionDeviation_","description":"","recommendedTypes":[],"indexed":false},{"name":"normalDistribution_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetPoolEnabled(bool)","name":"LogSetPoolEnabled","description":"","parameterDecorators":[{"name":"poolEnabled_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetPoolLpLimit(uint256)","name":"LogSetPoolLpLimit","description":"","parameterDecorators":[{"name":"poolLpLimit_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetRandomNumberConsumer(address)","name":"LogSetRandomNumberConsumer","description":"","parameterDecorators":[{"name":"randomNumberConsumer_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetRevokeReward(bool)","name":"LogSetRevokeReward","description":"","parameterDecorators":[{"name":"revokeReward_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetRevokeRewardDuration(uint256)","name":"LogSetRevokeRewardDuration","description":"","parameterDecorators":[{"name":"revokeRewardDuration","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetRewardAmount(uint256)","name":"LogSetRewardAmount","description":"","parameterDecorators":[{"name":"rewardAmount_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetUserLpLimit(uint256)","name":"LogSetUserLpLimit","description":"","parameterDecorators":[{"name":"userLpLimit_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogStaked(address,uint256)","name":"LogStaked","description":"","parameterDecorators":[{"name":"reporter","description":"The address of the entity that reported the updater misbehavior.","recommendedTypes":[],"indexed":true},{"name":"updater","description":"The address of the updater.","recommendedTypes":[],"indexed":false}]},{"signature":"LogWithdrawn(address,uint256)","name":"LogWithdrawn","description":"","parameterDecorators":[{"name":"reporter","description":"The address of the entity that reported the updater misbehavior.","recommendedTypes":[],"indexed":true},{"name":"updater","description":"The address of the updater.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"reporter","description":"The address of the entity that reported the updater misbehavior.","recommendedTypes":[],"indexed":true},{"name":"updater","description":"The address of the updater.","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"balanceOf(address)","name":"balanceOf","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"beforePeriodFinish()","name":"beforePeriodFinish","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"checkStabilizerAndGetReward(int256,int256,uint256,uint256)","name":"checkStabilizerAndGetReward","description":"When a rebase happens this function is called by the rebase function. If the supplyDelta is positive (supply increase) a random will be constructed using the blockhash of the last block number. The mod of the random number is taken to get a number between 0-100. This result is used as a index to get a number from the normal distribution array. The number returned will be compared against the current count of positive rebases and if the count is greater then the pool is request rewards from the stabilizer pool.","parameterDecorators":[{"name":"supplyDelta_","description":"","recommendedTypes":[]},{"name":"rebaseLag_","description":"","recommendedTypes":[]},{"name":"exchangeRate_","description":"","recommendedTypes":[]},{"name":"debasePolicyBalance","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"rewardAmount_","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"count()","name":"count","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"countInSequence()","name":"countInSequence","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"duration()","name":"duration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"earned(address)","name":"earned","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"emergencyWithdraw()","name":"emergencyWithdraw","description":"Function allows for emergency withdrawal of all reward tokens back into stabilizer fund.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"enablePoolLpLimit()","name":"enablePoolLpLimit","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"enableUserLpLimit()","name":"enableUserLpLimit","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"exit()","name":"exit","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getReward()","name":"getReward","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialize(address,address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[100])","name":"initialize","description":"","parameterDecorators":[{"name":"rewardToken_","description":"","recommendedTypes":[]},{"name":"pairToken_","description":"","recommendedTypes":[]},{"name":"policy_","description":"","recommendedTypes":[]},{"name":"randomNumberConsumer_","description":"","recommendedTypes":[]},{"name":"link_","description":"","recommendedTypes":[]},{"name":"rewardAmount_","description":"","recommendedTypes":[]},{"name":"duration_","description":"","recommendedTypes":[]},{"name":"userLpLimit_","description":"","recommendedTypes":[]},{"name":"poolLpLimit_","description":"","recommendedTypes":[]},{"name":"revokeRewardDuration_","description":"","recommendedTypes":[]},{"name":"normalDistributionMean_","description":"","recommendedTypes":[]},{"name":"normalDistributionDeviation_","description":"","recommendedTypes":[]},{"name":"normalDistribution_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lastTimeRewardApplicable()","name":"lastTimeRewardApplicable","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lastUpdateTime()","name":"lastUpdateTime","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"link()","name":"link","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"noramlDistributionMean()","name":"noramlDistributionMean","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"normalDistribution(uint256)","name":"normalDistribution","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"normalDistributionDeviation()","name":"normalDistributionDeviation","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"periodFinish()","name":"periodFinish","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"policy()","name":"policy","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"poolEnabled()","name":"poolEnabled","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"poolLpLimit()","name":"poolLpLimit","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"randomNumberConsumer()","name":"randomNumberConsumer","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"revokeReward()","name":"revokeReward","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"revokeRewardDuration()","name":"revokeRewardDuration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardAmount()","name":"rewardAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardDistributed()","name":"rewardDistributed","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardPerToken()","name":"rewardPerToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardPerTokenStored()","name":"rewardPerTokenStored","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardRate()","name":"rewardRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardToken()","name":"rewardToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rewards(address)","name":"rewards","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setBeforePeriodFinish(bool)","name":"setBeforePeriodFinish","description":"Function to allow reward distribution before previous rewards have been distributed.","parameterDecorators":[{"name":"beforePeriodFinish_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCountInSequence(bool)","name":"setCountInSequence","description":"Function to enable or disable count should be in sequence.","parameterDecorators":[{"name":"countInSequence_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setDuration(uint256)","name":"setDuration","description":"Function to set reward drop period.","parameterDecorators":[{"name":"duration_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setEnablePoolLpLimit(bool)","name":"setEnablePoolLpLimit","description":"Function to enable pool lp limit.","parameterDecorators":[{"name":"enablePoolLpLimit_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setEnableUserLpLimit(bool)","name":"setEnableUserLpLimit","description":"Function to enable user lp limit.","parameterDecorators":[{"name":"enableUserLpLimit_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setNormalDistribution(uint256,uint256,uint256[100])","name":"setNormalDistribution","description":"Function to set the normal distribution array and its associated mean/deviation.","parameterDecorators":[{"name":"normalDistributionMean_","description":"","recommendedTypes":[]},{"name":"normalDistributionDeviation_","description":"","recommendedTypes":[]},{"name":"normalDistribution_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPoolEnabled(bool)","name":"setPoolEnabled","description":"Function enabled or disable pool staking,withdraw.","parameterDecorators":[{"name":"poolEnabled_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPoolLpLimit(uint256)","name":"setPoolLpLimit","description":"Function to set pool lp limit.","parameterDecorators":[{"name":"poolLpLimit_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRandomNumberConsumer(address)","name":"setRandomNumberConsumer","description":"Function to set address of the random number consumer (chain link vrf).","parameterDecorators":[{"name":"randomNumberConsumer_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRevokeReward(bool)","name":"setRevokeReward","description":"Function to enable or disable reward revoking.","parameterDecorators":[{"name":"revokeReward_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRevokeRewardDuration(uint256)","name":"setRevokeRewardDuration","description":"Function to set how much of the reward duration should be revoked.","parameterDecorators":[{"name":"revokeRewardDuration_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRewardAmount(uint256)","name":"setRewardAmount","description":"Function to set how much reward the stabilizer will request.","parameterDecorators":[{"name":"rewardAmount_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setUserLpLimit(uint256)","name":"setUserLpLimit","description":"Function to set user lp limit.","parameterDecorators":[{"name":"userLpLimit_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake(uint256)","name":"stake","description":"","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalRewards()","name":"totalRewards","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalSupply()","name":"totalSupply","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userLpLimit()","name":"userLpLimit","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"userRewardPerTokenPaid(address)","name":"userRewardPerTokenPaid","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256)","name":"withdraw","description":"","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"y()","name":"y","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}