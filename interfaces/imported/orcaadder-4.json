{
  "schema": "../schema.json",
  "tags": [],
  "name": "OrcaAdder",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when the contract is unpaused.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addBank(address)",
      "name": "addBank",
      "description": "Adds a bank that this can get fees from.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "The address of the bank.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addLPToken(address)",
      "name": "addLPToken",
      "description": "Adds a LP token, to allow transfering.",
      "parameterDecorators": [
        {
          "name": "lp",
          "description": "The address of the LP token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addSwapLP(address,address)",
      "name": "addSwapLP",
      "description": "Adds a LP token, to allow transfering.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "lp",
          "description": "The address of the LP token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addYakStrat(address)",
      "name": "addYakStrat",
      "description": "Adds a yield yak token, to allow withdrawing.",
      "parameterDecorators": [
        {
          "name": "yak",
          "description": "The address of the yak.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "allocate()",
      "name": "allocate",
      "description": "For allocating the revenue to the correct locations.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "banks(uint256)",
      "name": "banks",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeDev(address)",
      "name": "changeDev",
      "description": "Adds a LP token, to allow transfering.",
      "parameterDecorators": [
        {
          "name": "_dev",
          "description": "The address of the LP token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeDistributionRatio(uint256,uint256,uint256,uint256)",
      "name": "changeDistributionRatio",
      "description": "Changes distribution ratio.",
      "parameterDecorators": [
        {
          "name": "_treasuryAmount",
          "description": "The treasury amount.",
          "recommendedTypes": []
        },
        {
          "name": "_devAmount",
          "description": "The dev amount.",
          "recommendedTypes": []
        },
        {
          "name": "_seafundAmount",
          "description": "The seafund amount.",
          "recommendedTypes": []
        },
        {
          "name": "_podAmount",
          "description": "The pod amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeSeafund(address)",
      "name": "changeSeafund",
      "description": "Adds a LP token, to allow transfering.",
      "parameterDecorators": [
        {
          "name": "_seafund",
          "description": "The address of the LP token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeTreasury(address)",
      "name": "changeTreasury",
      "description": "Adds a LP token, to allow transfering.",
      "parameterDecorators": [
        {
          "name": "_treasury",
          "description": "The address of the LP token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "dev()",
      "name": "dev",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "devAmount()",
      "name": "devAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBankCount()",
      "name": "getBankCount",
      "description": "Gets the numbers of banks this account controls.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLPTokens()",
      "name": "getLPTokens",
      "description": "Gets the number of LP tokens this account controls.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokens()",
      "name": "getTokens",
      "description": "Gets the number of tokens this account controls.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getYakCount()",
      "name": "getYakCount",
      "description": "Gets the number of yield yak banks (tokens) this account controls.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lpTokens(uint256)",
      "name": "lpTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pod()",
      "name": "pod",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "podAmount()",
      "name": "podAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "seafund()",
      "name": "seafund",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "seafundAmount()",
      "name": "seafundAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokens(uint256)",
      "name": "tokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferAvax(address,uint256)",
      "name": "transferAvax",
      "description": "Safe function to ensure we can emergency remove things.",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "The address to send it to.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "The amount to send.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferBankVault(uint256,uint256,address)",
      "name": "transferBankVault",
      "description": "for transfering treasury bank vault. Only use if changing contracts.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "The bank id.",
          "recommendedTypes": []
        },
        {
          "name": "vault",
          "description": "the vault id.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "who you're transfering it to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferToken(address,address,uint256)",
      "name": "transferToken",
      "description": "Safe function to ensure we can emergency remove things.",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "The address to send it to.",
          "recommendedTypes": []
        },
        {
          "name": "_token",
          "description": "The token to send.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "The amount to send.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "treasury()",
      "name": "treasury",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "treasuryAmount()",
      "name": "treasuryAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "yakStrats(uint256)",
      "name": "yakStrats",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}