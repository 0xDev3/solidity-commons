{
  "schema": "../schema.json",
  "tags": [],
  "name": "ZkTube",
  "description": "zkTube main contract.",
  "eventDecorators": [
    {
      "signature": "BlockCommit(uint32)",
      "name": "BlockCommit",
      "description": "Event emitted when a block is committed.",
      "parameterDecorators": [
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "BlockVerification(uint32)",
      "name": "BlockVerification",
      "description": "Event emitted when a block is verified.",
      "parameterDecorators": [
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "BlocksRevert(uint32,uint32)",
      "name": "BlocksRevert",
      "description": "Event emitted when blocks are reverted.",
      "parameterDecorators": [
        {
          "name": "totalBlocksVerified",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "totalBlocksCommitted",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposit(uint16,uint128)",
      "name": "Deposit",
      "description": "Event emitted when user funds are deposited to the zkTube contract.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DepositCommit(uint32,uint32,address,uint16,uint128)",
      "name": "DepositCommit",
      "description": "Deposit committed event.",
      "parameterDecorators": [
        {
          "name": "zkTubeBlockId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "accountId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ExodusMode()",
      "name": "ExodusMode",
      "description": "Exodus mode entered event.",
      "parameterDecorators": []
    },
    {
      "signature": "FactAuth(address,uint32,bytes)",
      "name": "FactAuth",
      "description": "Event emitted when user sends a authentication fact (e.g. pub-key hash).",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "nonce",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fact",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FullExitCommit(uint32,uint32,address,uint16,uint128)",
      "name": "FullExitCommit",
      "description": "Full exit committed event.",
      "parameterDecorators": [
        {
          "name": "zkTubeBlockId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "accountId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewPriorityRequest(address,uint64,uint8,bytes,uint256)",
      "name": "NewPriorityRequest",
      "description": "New priority request event. Emitted when a request is placed into mapping.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "serialId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "opType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "pubData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expirationBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdrawal(uint16,uint128)",
      "name": "Withdrawal",
      "description": "Event emitted when user funds are withdrawn from the zkTube contract.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "activateExodusMode()",
      "name": "activateExodusMode",
      "description": "Checks if Exodus mode must be entered. If true - enters exodus mode and emits ExodusMode event. Exodus mode must be entered in case of current ethereum block number is higher than the oldestof existed priority requests expiration block number.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "bool flag that is true if the Exodus mode must be entered.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "authFacts(address,uint32)",
      "name": "authFacts",
      "description": "User authenticated fact hashes for some nonce.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "exodusMode()",
      "name": "exodusMode",
      "description": "Flag indicates that exodus (mass exit) mode is triggeredOnce it was raised, it can not be cleared again, and all users must exit.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "firstPriorityRequestId()",
      "name": "firstPriorityRequestId",
      "description": "First open priority request id.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getNoticePeriod()",
      "name": "getNoticePeriod",
      "description": "Notice period before activation preparation status of upgrade mode.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(bytes)",
      "name": "initialize",
      "description": "zkTube contract initialization. Can be external because Proxy contract intercepts illegal calls of this function. _manAddress The address of Man contract_verifierAddress The address of Verifier contract_genesisStateHash Genesis blocks (first block) state tree root hash.",
      "parameterDecorators": [
        {
          "name": "initializationParameters",
          "description": "Encoded representation of initialization parameters:.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isReadyForUpgrade()",
      "name": "isReadyForUpgrade",
      "description": "Checks that contract is ready for upgrade.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "bool flag indicating that contract is ready for upgrade.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastExit()",
      "name": "lastExit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "man()",
      "name": "man",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "performedExodus(uint32,uint16)",
      "name": "performedExodus",
      "description": "Flag indicates that a user has exited in the exodus mode certain token balance (per account id and tokenId).",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "priorityRequests(uint64)",
      "name": "priorityRequests",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "hashedPubData",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes20"
        },
        {
          "name": "expirationBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "opType",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "storedBlockHashes(uint32)",
      "name": "storedBlockHashes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalBlocksCommitted()",
      "name": "totalBlocksCommitted",
      "description": "Total number of committed blocks i.e. blocks[totalBlocksCommitted] points at the latest committed block.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalBlocksExecuted()",
      "name": "totalBlocksExecuted",
      "description": "Total number of executed blocks i.e. blocks[totalBlocksExecuted] points at the latest executed block (block 0 is genesis).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalBlocksProven()",
      "name": "totalBlocksProven",
      "description": "Total blocks proven.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalCommittedPriorityRequests()",
      "name": "totalCommittedPriorityRequests",
      "description": "Total number of committed requests.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalOpenPriorityRequests()",
      "name": "totalOpenPriorityRequests",
      "description": "Total number of requests.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "upgrade(bytes)",
      "name": "upgrade",
      "description": "zkTube contract upgrade. Can be external because Proxy contract intercepts illegal calls of this function.",
      "parameterDecorators": [
        {
          "name": "upgradeParameters",
          "description": "Encoded representation of upgrade parameters.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeCanceled()",
      "name": "upgradeCanceled",
      "description": "Notification that upgrade canceled. Can be external because Proxy contract intercepts illegal calls of this function.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeFinishes()",
      "name": "upgradeFinishes",
      "description": "Notification that upgrade finishes. Can be external because Proxy contract intercepts illegal calls of this function.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeNoticePeriodStarted()",
      "name": "upgradeNoticePeriodStarted",
      "description": "Notification that upgrade notice period started. Can be external because Proxy contract intercepts illegal calls of this function.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradePreparationStarted()",
      "name": "upgradePreparationStarted",
      "description": "Notification that upgrade preparation status is activated. Can be external because Proxy contract intercepts illegal calls of this function.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "verifier()",
      "name": "verifier",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}