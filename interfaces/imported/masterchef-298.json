{
  "schema": "../schema.json",
  "tags": [],
  "name": "MasterChef",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Deposit(address,uint256,uint256,uint256)",
      "name": "Deposit",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "RigelTokenAmount",
          "description": "amount of Rigel tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Withdraw(address,uint256,uint256)",
      "name": "Withdraw",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "NTS()",
      "name": "NTS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "acceptInvitation(address)",
      "name": "acceptInvitation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_invitor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "add(address,address,address,bool)",
      "name": "add",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpTokenSwap",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenAToEthSwap",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenBToEthSwap",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_withUpdate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addCommonTokenPair(address,bool)",
      "name": "addCommonTokenPair",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpTokenSwap",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_withUpdate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculateRewardToken(uint256,uint256,uint256,uint256,uint256)",
      "name": "calculateRewardToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_term",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_initialBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fromBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_toBlock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "commonToken()",
      "name": "commonToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(uint256,uint256,uint256)",
      "name": "deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lockTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getDepositWeight(uint256,uint256)",
      "name": "getDepositWeight",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lockAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lockTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInvitees(address)",
      "name": "getInvitees",
      "description": "",
      "parameterDecorators": [
        {
          "name": "invitor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_invitees",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPagePoolInfo(uint256,uint256)",
      "name": "getPagePoolInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_fromIndex",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_toIndex",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_accumulativeDividend",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "_usersTotalWeight",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "_lpTokenAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "_oracleWeight",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "_swapAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "_tokenASwapAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "_tokenBSwapAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPoolInfo(uint256)",
      "name": "getPoolInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_accumulativeDividend",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_usersTotalWeight",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_lpTokenAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_oracleWeight",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_swapAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "_tokenASwapAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "_tokenBSwapAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPoolLength()",
      "name": "getPoolLength",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRankList()",
      "name": "getRankList",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRewardToken(uint256,uint256)",
      "name": "getRewardToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_fromBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_toBlock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastRewardBlock()",
      "name": "lastRewardBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "massUpdatePools()",
      "name": "massUpdatePools",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "maxRankNumber()",
      "name": "maxRankNumber",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingNTS(uint256,address)",
      "name": "pendingNTS",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBlockNumberPerMonth(uint256)",
      "name": "setBlockNumberPerMonth",
      "description": "",
      "parameterDecorators": [
        {
          "name": "blockNumer",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCalculateOracleTerm(uint256)",
      "name": "setCalculateOracleTerm",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_term",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaxRankNumber(uint256)",
      "name": "setMaxRankNumber",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_count",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startBlock()",
      "name": "startBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateOracleWeightTerm()",
      "name": "updateOracleWeightTerm",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "userInfo(uint256,address)",
      "name": "userInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "originWeight",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "modifiedWeight",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "isUsed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "usersRelationshipInfo(address)",
      "name": "usersRelationshipInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "invitor",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "isUsed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "isWithdrawn",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}