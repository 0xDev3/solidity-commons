{"schema":"../schema.json","tags":[],"name":"MarketFeesCollector","description":"","eventDecorators":[{"signature":"CollectedFeesBurned(address,uint256,uint256)","name":"CollectedFeesBurned","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"callingAddr","description":"","recommendedTypes":[],"indexed":true},{"name":"etherBalance","description":"","recommendedTypes":[],"indexed":false},{"name":"burnedTokens","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SetConverter(address)","name":"SetConverter","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"converter","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"burnCollectedFees()","name":"burnCollectedFees","description":"Swaps contract balance to configured reserve in ERC20 token and sends converted amount to address(0).","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"converterAddress()","name":"converterAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"reserveToken()","name":"reserveToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setConverter(address)","name":"setConverter","description":"","parameterDecorators":[{"name":"_converter","description":"address of collected fees burner implementation.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}