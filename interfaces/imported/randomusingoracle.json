{"schema":"../schema.json","tags":["oracles"],"name":"RandomUsingOracle","description":"","eventDecorators":[{"signature":"LogNewProvableQuery(string)","name":"LogNewProvableQuery","description":"Event for token purchase logging. Event emitted in purchases. `buyer` is the account that sent the ETH, `beneficiary` is the account that got the tokens, `weiAmount` the amount of wei received from `buyer` and sent to the wallet, `tokenAmount` is the amount of tokens sent to `beneficiary`.","parameterDecorators":[{"name":"description","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogProvableQueryResponse(bytes32,string,bytes)","name":"LogProvableQueryResponse","description":"Event for token purchase logging. Event emitted in purchases. `buyer` is the account that sent the ETH, `beneficiary` is the account that got the tokens, `weiAmount` the amount of wei received from `buyer` and sent to the wallet, `tokenAmount` is the amount of tokens sent to `beneficiary`.","parameterDecorators":[{"name":"queryId","description":"","recommendedTypes":[],"indexed":false},{"name":"result","description":"","recommendedTypes":[],"indexed":false},{"name":"proof","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"generatedRandomNumber(uint256)","name":"generatedRandomNumber","description":"Event for token purchase logging. Event emitted in purchases. `buyer` is the account that sent the ETH, `beneficiary` is the account that got the tokens, `weiAmount` the amount of wei received from `buyer` and sent to the wallet, `tokenAmount` is the amount of tokens sent to `beneficiary`.","parameterDecorators":[{"name":"randomNumber","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"__callback(bytes32,string)","name":"__callback","description":"The following `__callback` functions are just placeholders ideally meant to be defined in child contract when proofs are used. The function bodies simply silence compiler warnings.","parameterDecorators":[{"name":"_myid","description":"","recommendedTypes":[]},{"name":"_result","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"__callback(bytes32,string,bytes)","name":"__callback","description":"","parameterDecorators":[{"name":"_queryId","description":"","recommendedTypes":[]},{"name":"_result","description":"","recommendedTypes":[]},{"name":"_proof","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"destroyContract()","name":"destroyContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"latestNumber()","name":"latestNumber","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"update()","name":"update","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}