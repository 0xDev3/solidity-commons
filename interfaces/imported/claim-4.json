{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "Claim",
  "description": "Claim. The claim contract allows users to claim grants. Any unclaimed tokens may be recovered by owner after a given deadline.",
  "eventDecorators": [
    {
      "signature": "Added(uint256,uint256)",
      "name": "Added",
      "description": "Event emitted when a new grant is created.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ChangedOwner(address,address)",
      "name": "ChangedOwner",
      "description": "Event emitted when the owner of the vesting contract is updated.",
      "parameterDecorators": [
        {
          "name": "oldOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Claimed(uint256,uint256)",
      "name": "Claimed",
      "description": "Event emitted when tokens are claimed by a recipient from a grant.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amountClaimed",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Recovered(address,uint256)",
      "name": "Recovered",
      "description": "Event emitted when tokens are recovered by owner.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addTokenGrant(uint256,uint256)",
      "name": "addTokenGrant",
      "description": "Add a new token grant.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "The address that is receiving the grant.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "The amount of tokens being granted.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addTokenGrants(uint256[],uint256[],uint256)",
      "name": "addTokenGrants",
      "description": "Batch add new token grants.",
      "parameterDecorators": [
        {
          "name": "recipients",
          "description": "The addresses that are receiving grants.",
          "recommendedTypes": []
        },
        {
          "name": "amounts",
          "description": "The amounts of tokens being granted.",
          "recommendedTypes": []
        },
        {
          "name": "totalTokens",
          "description": "The total tokens being granted (checksum).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claim()",
      "name": "claim",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTokenGrant(uint256)",
      "name": "getTokenGrant",
      "description": "Get token grant for recipient. Returns 0 if `deadline` is reached.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "The address that has a grant.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The amount recipient can claim.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Current owner of this contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "studentList(uint256)",
      "name": "studentList",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenGrants(uint256)",
      "name": "tokenGrants",
      "description": "Mapping of recipient address > current token grant balance.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}