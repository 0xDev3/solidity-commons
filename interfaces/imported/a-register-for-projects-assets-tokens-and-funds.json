{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "TokitRegistry",
  "description": "A register for projects, assets, tokens, and funds.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "To call when there is consensus on final result.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RegisteredAsset(uint256,address)",
      "name": "RegisteredAsset",
      "description": "To call when there is consensus on final result.",
      "parameterDecorators": [
        {
          "name": "assetId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RegisteredToken(address,uint256,address,address)",
      "name": "RegisteredToken",
      "description": "To call when there is consensus on final result.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "getCustomerByProject(uint256)",
      "name": "getCustomerByProject",
      "description": "Lookup a customer address by project id.",
      "parameterDecorators": [
        {
          "name": "_projectId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize()",
      "name": "initialize",
      "description": "Sets an owner and registrar addresses.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lookupAsset(uint256)",
      "name": "lookupAsset",
      "description": "Lookup an asset address by asset id.",
      "parameterDecorators": [
        {
          "name": "_assetId",
          "description": "An asset id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "An asset address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lookupByProject(uint256)",
      "name": "lookupByProject",
      "description": "Lookup a token and fund addresses by a proect id.",
      "parameterDecorators": [
        {
          "name": "_projectId",
          "description": "An project identifier (a search key).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "projectRegistry(uint256)",
      "name": "projectRegistry",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "fund",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "register(address,uint256,address,address)",
      "name": "register",
      "description": "Add a project to the registry.",
      "parameterDecorators": [
        {
          "name": "_customer",
          "description": "A customer address.",
          "recommendedTypes": []
        },
        {
          "name": "_projectId",
          "description": "A project identifier.",
          "recommendedTypes": []
        },
        {
          "name": "_token",
          "description": "A token address.",
          "recommendedTypes": []
        },
        {
          "name": "_fund",
          "description": "A fund address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registerAsset(uint256,address)",
      "name": "registerAsset",
      "description": "Add an asset to the registry.",
      "parameterDecorators": [
        {
          "name": "_assetId",
          "description": "An asset identifier.",
          "recommendedTypes": []
        },
        {
          "name": "_asset",
          "description": "An asset address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registrars(address)",
      "name": "registrars",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRegistrar(address,bool)",
      "name": "setRegistrar",
      "description": "Sets a {_registrar} address a registrar if {enabled} is 'true'.",
      "parameterDecorators": [
        {
          "name": "_registrar",
          "description": "An address of a registrar.",
          "recommendedTypes": []
        },
        {
          "name": "_enabled",
          "description": "Is a registrar address enabled.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}