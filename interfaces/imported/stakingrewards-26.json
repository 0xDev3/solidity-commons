{"schema":"../schema.json","tags":["tokens","staking","synthetix"],"name":"StakingRewards","description":"StakingRewards. Uses an ever increasing 'rewardPerTokenStored' variable to distribute rewards each time a write action is called in the contract. This allows for passive reward accrual. Changes: - Cosmetic (comments, readability) - Addition of getRewardToken() - Changing of `StakingTokenWrapper` funcs from `super.stake` to `_stake` - Introduced a `stake(_beneficiary)` function to enable contract wrappers to stake on behalf. Rewards stakers of a given LP token (a.k.a StakingToken) with RewardsToken, on a pro-rata basis.","eventDecorators":[{"signature":"RewardAdded(uint256)","name":"RewardAdded","description":"Event for token purchase logging.","parameterDecorators":[{"name":"reward","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RewardPaid(address,uint256)","name":"RewardPaid","description":"Event for token purchase logging.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"reward","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Staked(address,uint256,address)","name":"Staked","description":"Event for token purchase logging.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false},{"name":"value","description":"weis paid for purchase.","recommendedTypes":[],"indexed":false}]},{"signature":"Withdrawn(address,uint256)","name":"Withdrawn","description":"Event for token purchase logging.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"DURATION()","name":"DURATION","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOf(address)","name":"balanceOf","description":"Get the balance of a given account.","parameterDecorators":[{"name":"_account","description":"User for which to retrieve balance.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"claimReward()","name":"claimReward","description":"Claims outstanding rewards for the sender. First updates outstanding reward allocation and then transfers.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"earned(address)","name":"earned","description":"Calculates the amount of unclaimed rewards a user has earned.","parameterDecorators":[{"name":"_account","description":"User address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"exit()","name":"exit","description":"Withdraws stake from pool and claims any rewards.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getRewardToken()","name":"getRewardToken","description":"Gets the RewardsToken.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"lastTimeRewardApplicable()","name":"lastTimeRewardApplicable","description":"Gets the last applicable timestamp for this reward period.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lastUpdateTime()","name":"lastUpdateTime","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nexus()","name":"nexus","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"notifyRewardAmount(uint256)","name":"notifyRewardAmount","description":"Notifies the contract that new rewards have been added. Calculates an updated rewardRate based on the rewards in period.","parameterDecorators":[{"name":"_reward","description":"Units of RewardToken that have been added to the pool.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"periodFinish()","name":"periodFinish","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardPerToken()","name":"rewardPerToken","description":"Calculates the amount of unclaimed rewards per token since last update, and sums with stored to give the new cumulative reward per token.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardPerTokenStored()","name":"rewardPerTokenStored","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardRate()","name":"rewardRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewards(address)","name":"rewards","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardsDistributor()","name":"rewardsDistributor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardsToken()","name":"rewardsToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setRewardsDistribution(address)","name":"setRewardsDistribution","description":"Change the rewardsDistributor - only called by mStable governor.","parameterDecorators":[{"name":"_rewardsDistributor","description":"Address of the new distributor.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake(uint256)","name":"stake","description":"Stakes a given amount of the StakingToken for the sender.","parameterDecorators":[{"name":"_amount","description":"Units of StakingToken.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake(address,uint256)","name":"stake","description":"Stakes a given amount of the StakingToken for a given beneficiary.","parameterDecorators":[{"name":"_beneficiary","description":"Staked tokens are credited to this address.","recommendedTypes":[]},{"name":"_amount","description":"Units of StakingToken.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakingToken()","name":"stakingToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"totalSupply()","name":"totalSupply","description":"Get the total amount of the staked token.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"userRewardPerTokenPaid(address)","name":"userRewardPerTokenPaid","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256)","name":"withdraw","description":"Withdraws given stake amount from the pool.","parameterDecorators":[{"name":"_amount","description":"Units of the staked token to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}