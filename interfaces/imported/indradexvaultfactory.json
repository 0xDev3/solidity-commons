{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "IndradexVaultFactory",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event fired when Catalog is created. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "createVault(address,string,string,address,address[],address[],uint256,bool)",
      "name": "createVault",
      "description": "Creates new vault.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "name_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "symbol_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "inputToken_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "outputTokens_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "aggregators_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "maxCapDeposit",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "isSingleExternalVault",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newVault",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getIndradexMultiExternalVaults()",
      "name": "getIndradexMultiExternalVaults",
      "description": "Returns the array of IndradexMultiExternalVault.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getIndradexSingleExternalVaults()",
      "name": "getIndradexSingleExternalVaults",
      "description": "Returns the array of IndradexSingleExternalVault.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDeprecated(address,bool)",
      "name": "setDeprecated",
      "description": "Set a vault as deprecated or not.",
      "parameterDecorators": [
        {
          "name": "vaultAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "deprecated",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vaultStatus(address)",
      "name": "vaultStatus",
      "description": "Returns if a vault is deprecated or not.",
      "parameterDecorators": [
        {
          "name": "vaultAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}