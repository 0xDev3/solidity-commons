{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "swaps"
  ],
  "name": "DittoTokenSwap",
  "description": "Ditto Swap Contract.",
  "eventDecorators": [
    {
      "signature": "OwnershipRenounced(address)",
      "name": "OwnershipRenounced",
      "description": "indicates that the validator configuration has been set.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "indicates that the validator configuration has been set.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SwapDeposit(address,address,uint256,uint256)",
      "name": "SwapDeposit",
      "description": "indicates that the validator configuration has been set.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addInputToken(address,uint256)",
      "name": "addInputToken",
      "description": "Add a new input token.",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "Address of the token to be added.",
          "recommendedTypes": []
        },
        {
          "name": "_rate",
          "description": "USD price of the token (4 decimals - e.g. $1 = 1000, $0.95 = 950).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claims(uint256,address)",
      "name": "claims",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dittoUSDRate()",
      "name": "dittoUSDRate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "endSwap()",
      "name": "endSwap",
      "description": "Ends the active swap.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getDittoOutputAmount(uint256,address)",
      "name": "getDittoOutputAmount",
      "description": "Calculate the amount of DITTO to return for *amount* input tokens.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Input amount.",
          "recommendedTypes": []
        },
        {
          "name": "inputAddress",
          "description": "Address of the input token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "DITTO output amount.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "inputAddresses(uint256)",
      "name": "inputAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "inputs(address)",
      "name": "inputs",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "ticker",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "decimals",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "usdRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if `msg.sender` is the owner of the contract.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSwapActive()",
      "name": "isSwapActive",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "numberOfInputs()",
      "name": "numberOfInputs",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the address of the owner.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "remainingTokensForUser(address)",
      "name": "remainingTokensForUser",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "remainingTokensInActiveSwap()",
      "name": "remainingTokensInActiveSwap",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeInputToken(address)",
      "name": "removeInputToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore. Allows the current owner to relinquish control of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startSwap(uint256,uint256,uint256)",
      "name": "startSwap",
      "description": "Starts a new token swap.",
      "parameterDecorators": [
        {
          "name": "_userCap",
          "description": "Maximum amount of claimable tokens per address.",
          "recommendedTypes": []
        },
        {
          "name": "_totalCap",
          "description": "Total amount of tokens available for the swap.",
          "recommendedTypes": []
        },
        {
          "name": "_bonusMultiplier",
          "description": "Multiplier percentage, e.g. 110 = 110% = 10% bonus. Set to 100 for no multiplier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swap(address,uint256)",
      "name": "swap",
      "description": "Allows the user to deposit some amount of input tokens. Records user/swap data and emits a SwapDeposit event.",
      "parameterDecorators": [
        {
          "name": "inputTokenAddress",
          "description": "Address of the token to be swapped.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of input tokens to be swapped.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateDittoRate(uint256)",
      "name": "updateDittoRate",
      "description": "Lets the owner set the DITTO price in USD.",
      "parameterDecorators": [
        {
          "name": "_rate",
          "description": "Price of 1 DITTO in USD (4 decimals).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateRateForInputToken(address,uint256)",
      "name": "updateRateForInputToken",
      "description": "Lets the owner update the USD price of an input token.",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "Address of the input token to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "_rate",
          "description": "Token price in USD (4 decimals).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawTokens(address,address,uint256)",
      "name": "withdrawTokens",
      "description": "Lets the owner withdraw tokens deposited to the contract account.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of the token to be withdrawn.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address to which the tokens are to be sent.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of tokens to be withdrawn.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}