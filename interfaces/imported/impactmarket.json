{"schema":"../schema.json","tags":[],"name":"ImpactMarket","description":"Welcome to ImpactMarket, the main contract. This is an administrative (for now) contract where the admins have control over the list of communities. Being only able to add and remove communities.","eventDecorators":[{"signature":"CommunityAdded(address,address,uint256,uint256,uint256,uint256)","name":"CommunityAdded","description":"Emitted when tokens are redeemed.","parameterDecorators":[{"name":"_communityAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"_firstManager","description":"","recommendedTypes":[],"indexed":true},{"name":"_claimAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"_maxClaim","description":"","recommendedTypes":[],"indexed":false},{"name":"_baseInterval","description":"","recommendedTypes":[],"indexed":false},{"name":"_incrementInterval","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"CommunityFactoryChanged(address)","name":"CommunityFactoryChanged","description":"Emitted when tokens are redeemed.","parameterDecorators":[{"name":"_newCommunityFactory","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"CommunityMigrated(address,address,address)","name":"CommunityMigrated","description":"Emitted when tokens are redeemed.","parameterDecorators":[{"name":"_firstManager","description":"","recommendedTypes":[],"indexed":true},{"name":"_communityAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"_previousCommunityAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"CommunityRemoved(address)","name":"CommunityRemoved","description":"Emitted when tokens are redeemed.","parameterDecorators":[{"name":"_communityAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"Emitted when tokens are redeemed.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"- The token recipient.","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"Emitted when tokens are redeemed.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"- The token recipient.","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"ADMIN_ROLE()","name":"ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"addCommunity(address,uint256,uint256,uint256,uint256)","name":"addCommunity","description":"Add a new community. Can be used only by an admin. For further information regarding each parameter, see *Community* smart contract constructor.","parameterDecorators":[{"name":"_firstManager","description":"","recommendedTypes":[]},{"name":"_claimAmount","description":"","recommendedTypes":[]},{"name":"_maxClaim","description":"","recommendedTypes":[]},{"name":"_baseInterval","description":"","recommendedTypes":[]},{"name":"_incrementInterval","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"cUSDAddress()","name":"cUSDAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"communities(address)","name":"communities","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"communityFactory()","name":"communityFactory","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. * To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMember(bytes32,uint256)","name":"getRoleMember","description":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. * Role bearers are not sorted in any particular way, and their ordering may change at any point. * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMemberCount(bytes32)","name":"getRoleMemberCount","description":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Not allowed.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"initCommunityFactory(address)","name":"initCommunityFactory","description":"Init community factory, used only at deploy time.","parameterDecorators":[{"name":"_communityFactory","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"migrateCommunity(address,address,address)","name":"migrateCommunity","description":"Migrate community by deploying a new contract. Can be used only by an admin. For further information regarding each parameter, see *Community* smart contract constructor.","parameterDecorators":[{"name":"_firstManager","description":"","recommendedTypes":[]},{"name":"_previousCommunityAddress","description":"","recommendedTypes":[]},{"name":"_newCommunityFactory","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"pendingValidations(bytes32,uint256)","name":"pendingValidations","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeCommunity(address)","name":"removeCommunity","description":"Remove an existing community. Can be used only by an admin.","parameterDecorators":[{"name":"_community","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Not allowed.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Not allowed.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCommunityFactory(address)","name":"setCommunityFactory","description":"Set the community factory address, if the contract is valid.","parameterDecorators":[{"name":"_communityFactory","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"signaturesThreshold()","name":"signaturesThreshold","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}