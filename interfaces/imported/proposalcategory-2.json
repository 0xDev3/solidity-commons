{
  "schema": "../schema.json",
  "tags": [],
  "name": "ProposalCategory",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Category(uint256,string,string)",
      "name": "Category",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addCategory(string,uint256,uint256,uint256,uint256[],uint256,string,address,bytes2,uint256[])",
      "name": "addCategory",
      "description": "Adds new category (Discontinued, moved functionality to newCategory).",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "Category name.",
          "recommendedTypes": []
        },
        {
          "name": "_memberRoleToVote",
          "description": "Voting Layer sequence in which the voting has to be performed.",
          "recommendedTypes": []
        },
        {
          "name": "_majorityVotePerc",
          "description": "Majority Vote threshold for Each voting layer.",
          "recommendedTypes": []
        },
        {
          "name": "_quorumPerc",
          "description": "minimum threshold percentage required in voting to calculate result.",
          "recommendedTypes": []
        },
        {
          "name": "_allowedToCreateProposal",
          "description": "Member roles allowed to create the proposal.",
          "recommendedTypes": []
        },
        {
          "name": "_closingTime",
          "description": "Vote closing time for Each voting layer.",
          "recommendedTypes": []
        },
        {
          "name": "_actionHash",
          "description": "hash of details containing the action that has to be performed after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_contractAddress",
          "description": "address of contract to call after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_contractName",
          "description": "name of contract to be called after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_incentives",
          "description": "rewards to distributed after proposal is accepted.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "category(uint256)",
      "name": "category",
      "description": "Gets category details.",
      "parameterDecorators": [
        {
          "name": "_categoryId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "param5",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param6",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "categoryABReq(uint256)",
      "name": "categoryABReq",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "categoryAction(uint256)",
      "name": "categoryAction",
      "description": "Gets the category acion details.",
      "parameterDecorators": [
        {
          "name": "_categoryId",
          "description": "is the category id in concern.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes2"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "categoryActionDetails(uint256)",
      "name": "categoryActionDetails",
      "description": "Gets the category acion details of a category id.",
      "parameterDecorators": [
        {
          "name": "_categoryId",
          "description": "is the category id in concern.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes2"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "categoryActionHashUpdated()",
      "name": "categoryActionHashUpdated",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "categoryActionHashes(uint256)",
      "name": "categoryActionHashes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "categoryExtendedData(uint256)",
      "name": "categoryExtendedData",
      "description": "Gets category ab required and isSpecialResolution.",
      "parameterDecorators": [
        {
          "name": "_categoryId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeDependentContractAddress()",
      "name": "changeDependentContractAddress",
      "description": "Updates dependant contract addresses.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMasterAddress(address)",
      "name": "changeMasterAddress",
      "description": "Changes the master address and update it's instance.",
      "parameterDecorators": [
        {
          "name": "_masterAddress",
          "description": "is the new master address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "constructorCheck()",
      "name": "constructorCheck",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "editCategory(uint256,string,uint256,uint256,uint256,uint256[],uint256,string,address,bytes2,uint256[],string)",
      "name": "editCategory",
      "description": "Updates category details.",
      "parameterDecorators": [
        {
          "name": "_categoryId",
          "description": "Category id that needs to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "_name",
          "description": "Category name.",
          "recommendedTypes": []
        },
        {
          "name": "_memberRoleToVote",
          "description": "Voting Layer sequence in which the voting has to be performed.",
          "recommendedTypes": []
        },
        {
          "name": "_majorityVotePerc",
          "description": "Majority Vote threshold for Each voting layer.",
          "recommendedTypes": []
        },
        {
          "name": "_quorumPerc",
          "description": "minimum threshold percentage required in voting to calculate result.",
          "recommendedTypes": []
        },
        {
          "name": "_allowedToCreateProposal",
          "description": "Member roles allowed to create the proposal.",
          "recommendedTypes": []
        },
        {
          "name": "_closingTime",
          "description": "Vote closing time for Each voting layer.",
          "recommendedTypes": []
        },
        {
          "name": "_actionHash",
          "description": "hash of details containing the action that has to be performed after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_contractAddress",
          "description": "address of contract to call after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_contractName",
          "description": "name of contract to be called after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_incentives",
          "description": "rewards to distributed after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_functionHash",
          "description": "function signature to be executed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isAuthorizedToGovern(address)",
      "name": "isAuthorizedToGovern",
      "description": "checks if an address is authorized to govern.",
      "parameterDecorators": [
        {
          "name": "_toCheck",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSpecialResolution(uint256)",
      "name": "isSpecialResolution",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "masterAddress()",
      "name": "masterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ms()",
      "name": "ms",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "newCategory(string,uint256,uint256,uint256,uint256[],uint256,string,address,bytes2,uint256[],string)",
      "name": "newCategory",
      "description": "Adds new category.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "Category name.",
          "recommendedTypes": []
        },
        {
          "name": "_memberRoleToVote",
          "description": "Voting Layer sequence in which the voting has to be performed.",
          "recommendedTypes": []
        },
        {
          "name": "_majorityVotePerc",
          "description": "Majority Vote threshold for Each voting layer.",
          "recommendedTypes": []
        },
        {
          "name": "_quorumPerc",
          "description": "minimum threshold percentage required in voting to calculate result.",
          "recommendedTypes": []
        },
        {
          "name": "_allowedToCreateProposal",
          "description": "Member roles allowed to create the proposal.",
          "recommendedTypes": []
        },
        {
          "name": "_closingTime",
          "description": "Vote closing time for Each voting layer.",
          "recommendedTypes": []
        },
        {
          "name": "_actionHash",
          "description": "hash of details containing the action that has to be performed after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_contractAddress",
          "description": "address of contract to call after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_contractName",
          "description": "name of contract to be called after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_incentives",
          "description": "rewards to distributed after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_functionHash",
          "description": "function signature to be executed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "nxMasterAddress()",
      "name": "nxMasterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalCategoryInitiate()",
      "name": "proposalCategoryInitiate",
      "description": "Initiates Default settings for Proposal Category contract (Adding default categories).",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalCategories()",
      "name": "totalCategories",
      "description": "Gets Total number of categories added till now.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateCategory(uint256,string,uint256,uint256,uint256,uint256[],uint256,string,address,bytes2,uint256[])",
      "name": "updateCategory",
      "description": "Updates category details (Discontinued, moved functionality to editCategory).",
      "parameterDecorators": [
        {
          "name": "_categoryId",
          "description": "Category id that needs to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "_name",
          "description": "Category name.",
          "recommendedTypes": []
        },
        {
          "name": "_memberRoleToVote",
          "description": "Voting Layer sequence in which the voting has to be performed.",
          "recommendedTypes": []
        },
        {
          "name": "_majorityVotePerc",
          "description": "Majority Vote threshold for Each voting layer.",
          "recommendedTypes": []
        },
        {
          "name": "_quorumPerc",
          "description": "minimum threshold percentage required in voting to calculate result.",
          "recommendedTypes": []
        },
        {
          "name": "_allowedToCreateProposal",
          "description": "Member roles allowed to create the proposal.",
          "recommendedTypes": []
        },
        {
          "name": "_closingTime",
          "description": "Vote closing time for Each voting layer.",
          "recommendedTypes": []
        },
        {
          "name": "_actionHash",
          "description": "hash of details containing the action that has to be performed after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_contractAddress",
          "description": "address of contract to call after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_contractName",
          "description": "name of contract to be called after proposal is accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_incentives",
          "description": "rewards to distributed after proposal is accepted.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateCategoryActionHashes()",
      "name": "updateCategoryActionHashes",
      "description": "Initiates Default action function hashes for existing categories To be called after the contract has been upgraded by governance.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}