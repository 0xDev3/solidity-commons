{
  "schema": "../schema.json",
  "tags": [],
  "name": "CustomBond",
  "description": "",
  "eventDecorators": [
    {
      "signature": "BondCreated(uint256,uint256,uint256)",
      "name": "BondCreated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BondPriceChanged(uint256,uint256)",
      "name": "BondPriceChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "internalPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "debtRatio",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BondRedeemed(address,uint256,uint256)",
      "name": "BondRedeemed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ControlVariableAdjustment(uint256,uint256,uint256,bool)",
      "name": "ControlVariableAdjustment",
      "description": "",
      "parameterDecorators": [
        {
          "name": "initialBCV",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newBCV",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "adjustment",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "addition",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "adjustment()",
      "name": "adjustment",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "add",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "rate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "buffer",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bondInfo(address)",
      "name": "bondInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "payout",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "vesting",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "truePricePaid",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bondPrice()",
      "name": "bondPrice",
      "description": "calculate current bond premium.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "price_",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeOlympusTreasury(address)",
      "name": "changeOlympusTreasury",
      "description": "change address of Olympus Treasury.",
      "parameterDecorators": [
        {
          "name": "_olympusTreasury",
          "description": "uint.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "currentDebt()",
      "name": "currentDebt",
      "description": "calculate debt factoring in decay.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currentOlympusFee()",
      "name": "currentOlympusFee",
      "description": "current fee Olympus takes of each bond.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "currentFee_",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "debtDecay()",
      "name": "debtDecay",
      "description": "amount to decay total debt by.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "decay_",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "debtRatio()",
      "name": "debtRatio",
      "description": "calculate current ratio of debt to payout token supplyprotocols using Olympus Pro should be careful when quickly adding large %s to total supply.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "debtRatio_",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(uint256,uint256,address)",
      "name": "deposit",
      "description": "deposit bond.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "uint.",
          "recommendedTypes": []
        },
        {
          "name": "_maxPrice",
          "description": "uint.",
          "recommendedTypes": []
        },
        {
          "name": "_depositor",
          "description": "address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initializeBond(uint256,uint256,uint256,uint256,uint256,uint256)",
      "name": "initializeBond",
      "description": "initializes bond parameters.",
      "parameterDecorators": [
        {
          "name": "_controlVariable",
          "description": "uint.",
          "recommendedTypes": []
        },
        {
          "name": "_vestingTerm",
          "description": "uint.",
          "recommendedTypes": []
        },
        {
          "name": "_minimumPrice",
          "description": "uint.",
          "recommendedTypes": []
        },
        {
          "name": "_maxPayout",
          "description": "uint.",
          "recommendedTypes": []
        },
        {
          "name": "_maxDebt",
          "description": "uint.",
          "recommendedTypes": []
        },
        {
          "name": "_initialDebt",
          "description": "uint.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lastDecay()",
      "name": "lastDecay",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxPayout()",
      "name": "maxPayout",
      "description": "determine maximum bond size.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paySubsidy()",
      "name": "paySubsidy",
      "description": "subsidy controller checks payouts since last subsidy and resets counter.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "payoutSinceLastSubsidy_",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "payoutFor(uint256)",
      "name": "payoutFor",
      "description": "calculate user's interest due for new bond, accounting for Olympus Fee. If fee is in payout then takes in the already calcualted value. If fee is in principal token than takes in the amount of principal being deposited and then calculautes the fee based on the amount of principal and not in terms of the payout token.",
      "parameterDecorators": [
        {
          "name": "_value",
          "description": "uint.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_payout",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_fee",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingPayoutFor(address)",
      "name": "pendingPayoutFor",
      "description": "calculate amount of payout token available for claim by depositor.",
      "parameterDecorators": [
        {
          "name": "_depositor",
          "description": "address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "pendingPayout_",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "percentVestedFor(address)",
      "name": "percentVestedFor",
      "description": "calculate how far into vesting a depositor is.",
      "parameterDecorators": [
        {
          "name": "_depositor",
          "description": "address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "percentVested_",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "policy()",
      "name": "policy",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "redeem(address)",
      "name": "redeem",
      "description": "redeem bond for user.",
      "parameterDecorators": [
        {
          "name": "_depositor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAdjustment(bool,uint256,uint256,uint256)",
      "name": "setAdjustment",
      "description": "set control variable adjustment.",
      "parameterDecorators": [
        {
          "name": "_addition",
          "description": "bool.",
          "recommendedTypes": []
        },
        {
          "name": "_increment",
          "description": "uint.",
          "recommendedTypes": []
        },
        {
          "name": "_target",
          "description": "uint.",
          "recommendedTypes": []
        },
        {
          "name": "_buffer",
          "description": "uint.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBondTerms(uint8,uint256)",
      "name": "setBondTerms",
      "description": "set parameters for new bonds.",
      "parameterDecorators": [
        {
          "name": "_parameter",
          "description": "PARAMETER.",
          "recommendedTypes": []
        },
        {
          "name": "_input",
          "description": "uint.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "terms()",
      "name": "terms",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "controlVariable",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "vestingTerm",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "minimumPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "maxPayout",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "maxDebt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalDebt()",
      "name": "totalDebt",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalPayoutGiven()",
      "name": "totalPayoutGiven",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalPrincipalBonded()",
      "name": "totalPrincipalBonded",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferManagment(address)",
      "name": "transferManagment",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "trueBondPrice()",
      "name": "trueBondPrice",
      "description": "calculate true bond price a user pays.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "price_",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}