{
  "schema": "../schema.json",
  "tags": [],
  "name": "EditionCreator",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CreatedEdition(uint256,address,uint256,address)",
      "name": "CreatedEdition",
      "description": "Event for token purchase logging. Emitted when ETH are Received by this wallet.",
      "parameterDecorators": [
        {
          "name": "editionId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "creator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "editionSize",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "editionContractAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "createEdition(string,string,string,string,string,uint256,uint256,uint256)",
      "name": "createEdition",
      "description": "Creates a new edition contract as a factory with a deterministic address Important: most of these fields can not be changed after calling.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "Name of the edition contract.",
          "recommendedTypes": []
        },
        {
          "name": "_symbol",
          "description": "Symbol of the edition contract.",
          "recommendedTypes": []
        },
        {
          "name": "_description",
          "description": "Metadata: Description of the edition entry.",
          "recommendedTypes": []
        },
        {
          "name": "_animationUrl",
          "description": "Metadata: Animation url (optional) of the edition entry.",
          "recommendedTypes": []
        },
        {
          "name": "_imageUrl",
          "description": "Metadata: Image url (semi-required) of the edition entry.",
          "recommendedTypes": []
        },
        {
          "name": "_editionSize",
          "description": "Total size of the edition (number of possible editions).",
          "recommendedTypes": []
        },
        {
          "name": "_royaltyBPS",
          "description": "BPS amount of royalty.",
          "recommendedTypes": []
        },
        {
          "name": "_metadataGracePeriodSeconds",
          "description": "Number of seconds after minting that metadata can be updated by the owner, 0 to have no grace period.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newContract",
          "description": "The address of the created edition.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getEditionAtId(uint256)",
      "name": "getEditionAtId",
      "description": "Get edition given the created ID.",
      "parameterDecorators": [
        {
          "name": "editionId",
          "description": "id of edition to get contract for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Edition Edition NFT contract.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "implementation()",
      "name": "implementation",
      "description": "Address for implementation of Edition to clone.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}