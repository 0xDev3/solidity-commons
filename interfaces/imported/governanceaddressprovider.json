{
  "schema": "../schema.json",
  "tags": [],
  "name": "GovernanceAddressProvider",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "controller()",
      "name": "controller",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "debtNotifier()",
      "name": "debtNotifier",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governorAlpha()",
      "name": "governorAlpha",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mimo()",
      "name": "mimo",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "parallel()",
      "name": "parallel",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setDebtNotifier(address)",
      "name": "setDebtNotifier",
      "description": "Update the `DebtNotifier` address. only manager can call this.",
      "parameterDecorators": [
        {
          "name": "_debtNotifier",
          "description": "the address of the new `DebtNotifier`.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGovernorAlpha(address)",
      "name": "setGovernorAlpha",
      "description": "Update the `GovernorAlpha` address. only manager can call this.",
      "parameterDecorators": [
        {
          "name": "_governorAlpha",
          "description": "the address of the new `GovernorAlpha`.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMIMO(address)",
      "name": "setMIMO",
      "description": "Update the `MIMO` ERC20 token address. only manager can call this.",
      "parameterDecorators": [
        {
          "name": "_mimo",
          "description": "the address of the new `MIMO` token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setParallelAddressProvider(address)",
      "name": "setParallelAddressProvider",
      "description": "Update the `AddressProvider` address that points to main AddressProvider used in the Parallel Protocol. only manager can call this.",
      "parameterDecorators": [
        {
          "name": "_parallel",
          "description": "the address of the new `AddressProvider` address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTimelock(address)",
      "name": "setTimelock",
      "description": "Update the `Timelock` address. only manager can call this.",
      "parameterDecorators": [
        {
          "name": "_timelock",
          "description": "the address of the new `Timelock`.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setVotingEscrow(address)",
      "name": "setVotingEscrow",
      "description": "Update the `VotingEscrow` address. only manager can call this.",
      "parameterDecorators": [
        {
          "name": "_votingEscrow",
          "description": "the address of the new `VotingEscrow`.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "timelock()",
      "name": "timelock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "votingEscrow()",
      "name": "votingEscrow",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}