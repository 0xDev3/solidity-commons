{
  "schema": "../schema.json",
  "tags": [],
  "name": "PunksPlace",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AskCancel(address,address,uint256)",
      "name": "AskCancel",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collection",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "seller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AskNew(address,address,uint256,uint256)",
      "name": "AskNew",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collection",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "seller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "askPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AskUpdate(address,address,uint256,uint256)",
      "name": "AskUpdate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collection",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "seller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "askPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CollectionClose(address)",
      "name": "CollectionClose",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collection",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "CollectionNew(address,address,uint256,uint256,bool)",
      "name": "CollectionNew",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collection",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "creator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tradingFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "creatorFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "eip2981ish",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CollectionUpdate(address,address,uint256,uint256,bool)",
      "name": "CollectionUpdate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collection",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "creator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tradingFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "creatorFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "eip2981ish",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewTreasuryAddress(address)",
      "name": "NewTreasuryAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "treasury",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NonFungibleTokenRecovery(address,uint256)",
      "name": "NonFungibleTokenRecovery",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RevenueClaim(address,uint256)",
      "name": "RevenueClaim",
      "description": "",
      "parameterDecorators": [
        {
          "name": "claimer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenRecovery(address,uint256)",
      "name": "TokenRecovery",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Trade(address,uint256,address,address,uint256,uint256)",
      "name": "Trade",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collection",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "seller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "askPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "netPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DENOMINATOR()",
      "name": "DENOMINATOR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_ROYALTY()",
      "name": "MAX_ROYALTY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "TOTAL_MAX_FEE()",
      "name": "TOTAL_MAX_FEE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addCollection(address,address,uint256,uint256,bool)",
      "name": "addCollection",
      "description": "Add a new collection. Callable by admin.",
      "parameterDecorators": [
        {
          "name": "_creator",
          "description": ": creator address (must be 0x00 if none).",
          "recommendedTypes": []
        },
        {
          "name": "_collection",
          "description": ": collection address.",
          "recommendedTypes": []
        },
        {
          "name": "_tradingFee",
          "description": ": trading fee (100 = 1%, 500 = 5%, 5 = 0.05%).",
          "recommendedTypes": []
        },
        {
          "name": "_creatorFee",
          "description": ": creator fee (100 = 1%, 500 = 5%, 5 = 0.05%, 0 if creator is 0x00).",
          "recommendedTypes": []
        },
        {
          "name": "_eip2981ish",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyToken(address,uint256)",
      "name": "buyToken",
      "description": "Buy token by matching the price of an existing ask order.",
      "parameterDecorators": [
        {
          "name": "_collection",
          "description": ": contract address of the NFT.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": ": tokenId of the NFT purchased.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculatePriceAndFeesForCollection(address,uint256)",
      "name": "calculatePriceAndFeesForCollection",
      "description": "Calculate price and associated fees for a collection.",
      "parameterDecorators": [
        {
          "name": "collection",
          "description": ": address of the collection.",
          "recommendedTypes": []
        },
        {
          "name": "price",
          "description": ": listed price.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "netPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tradingFee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "creatorFee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cancelAskOrder(address,uint256)",
      "name": "cancelAskOrder",
      "description": "Cancel existing ask order.",
      "parameterDecorators": [
        {
          "name": "_collection",
          "description": ": contract address of the NFT.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": ": tokenId of the NFT.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimPendingRevenue()",
      "name": "claimPendingRevenue",
      "description": "Claim pending revenue (treasury or creators).",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "closeCollectionForTradingAndListing(address)",
      "name": "closeCollectionForTradingAndListing",
      "description": "Allows the admin to close collection for trading and new listing. Callable by admin.",
      "parameterDecorators": [
        {
          "name": "_collection",
          "description": ": collection address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "collectionToVolume(address)",
      "name": "collectionToVolume",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createAskOrder(address,uint256,uint256)",
      "name": "createAskOrder",
      "description": "Create ask order.",
      "parameterDecorators": [
        {
          "name": "_collection",
          "description": ": contract address of the NFT.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": ": tokenId of the NFT.",
          "recommendedTypes": []
        },
        {
          "name": "_askPrice",
          "description": ": price for listing (in wei).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "modifyAskOrder(address,uint256,uint256)",
      "name": "modifyAskOrder",
      "description": "Modify existing ask order.",
      "parameterDecorators": [
        {
          "name": "_collection",
          "description": ": contract address of the NFT.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": ": tokenId of the NFT.",
          "recommendedTypes": []
        },
        {
          "name": "_newPrice",
          "description": ": new price for listing (in wei).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "modifyCollection(address,address,uint256,uint256,bool)",
      "name": "modifyCollection",
      "description": "Modify collection characteristics. Callable by admin.",
      "parameterDecorators": [
        {
          "name": "_collection",
          "description": ": collection address.",
          "recommendedTypes": []
        },
        {
          "name": "_creator",
          "description": ": creator address (must be 0x00 if none).",
          "recommendedTypes": []
        },
        {
          "name": "_tradingFee",
          "description": ": trading fee (100 = 1%, 500 = 5%, 5 = 0.05%).",
          "recommendedTypes": []
        },
        {
          "name": "_creatorFee",
          "description": ": creator fee (100 = 1%, 500 = 5%, 5 = 0.05%, 0 if creator is 0x00).",
          "recommendedTypes": []
        },
        {
          "name": "_eip2981ish",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onERC721Received(address,address,uint256,bytes)",
      "name": "onERC721Received",
      "description": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingRevenue(address)",
      "name": "pendingRevenue",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "recoverFungibleTokens(address)",
      "name": "recoverFungibleTokens",
      "description": "Allows the owner to recover tokens sent to the contract by mistake. Callable by owner.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": ": token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "recoverNonFungibleToken(address,uint256)",
      "name": "recoverNonFungibleToken",
      "description": "Allows the owner to recover NFTs sent to the contract by mistake. Callable by owner.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": ": NFT token address.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": ": tokenId.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTreasuryAddresse(address)",
      "name": "setTreasuryAddresse",
      "description": "Set admin address. Only callable by owner.",
      "parameterDecorators": [
        {
          "name": "_treasuryAddress",
          "description": ": address of the treasury.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "treasuryAddress()",
      "name": "treasuryAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "viewAsksByCollection(address,uint256,uint256)",
      "name": "viewAsksByCollection",
      "description": "View ask orders for a given collection across all sellers.",
      "parameterDecorators": [
        {
          "name": "collection",
          "description": ": address of the collection.",
          "recommendedTypes": []
        },
        {
          "name": "cursor",
          "description": ": cursor.",
          "recommendedTypes": []
        },
        {
          "name": "size",
          "description": ": size of the response.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenIds",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "askInfo",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        },
        {
          "name": "lastPrices",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "viewAsksByCollectionAndSeller(address,address,uint256,uint256)",
      "name": "viewAsksByCollectionAndSeller",
      "description": "View ask orders for a given collection and a seller.",
      "parameterDecorators": [
        {
          "name": "collection",
          "description": ": address of the collection.",
          "recommendedTypes": []
        },
        {
          "name": "seller",
          "description": ": address of the seller.",
          "recommendedTypes": []
        },
        {
          "name": "cursor",
          "description": ": cursor.",
          "recommendedTypes": []
        },
        {
          "name": "size",
          "description": ": size of the response.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenIds",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "askInfo",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        },
        {
          "name": "lastPrices",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "viewAsksByCollectionAndTokenIds(address,uint256[])",
      "name": "viewAsksByCollectionAndTokenIds",
      "description": "Check asks for an array of tokenIds in a collection.",
      "parameterDecorators": [
        {
          "name": "collection",
          "description": ": address of the collection.",
          "recommendedTypes": []
        },
        {
          "name": "tokenIds",
          "description": ": array of tokenId.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "statuses",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool[]"
        },
        {
          "name": "askInfo",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        },
        {
          "name": "lastPrices",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "viewCollections(uint256,uint256)",
      "name": "viewCollections",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cursor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "size",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "collectionAddresses",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "collectionDetails",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        },
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}