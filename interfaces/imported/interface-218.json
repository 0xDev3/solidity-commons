{
  "schema": "../schema.json",
  "tags": [],
  "name": "StabilityPool",
  "description": "is used to liquidate troves and reward depositors with collateral redeemed.",
  "eventDecorators": [
    {
      "signature": "Arbitrage(address[],uint256,uint256)",
      "name": "Arbitrage",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_path",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amountIn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amountOut",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BONQPerMinuteUpdated(uint256)",
      "name": "BONQPerMinuteUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BONQRewardIssue(uint256,uint256)",
      "name": "BONQRewardIssue",
      "description": "",
      "parameterDecorators": [
        {
          "name": "issuance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_totalBONQRewardsLeft",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BONQRewardRedeemed(address,uint256)",
      "name": "BONQRewardRedeemed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contributor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CollateralRewardRedeemed(address,address,uint256,uint256)",
      "name": "CollateralRewardRedeemed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contributor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_collateralPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposit(address,uint256)",
      "name": "Deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contributor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DepositSnapshotUpdated(address,uint256,uint256,uint256)",
      "name": "DepositSnapshotUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_depositor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_P",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_G",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newDepositValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EpochUpdated(uint128)",
      "name": "EpochUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_currentEpoch",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "G_Updated(uint256,uint128,uint128)",
      "name": "G_Updated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_G",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_epoch",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_scale",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "P_Updated(uint256)",
      "name": "P_Updated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_P",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "S_Updated(address,uint256,uint128,uint128)",
      "name": "S_Updated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_S",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_epoch",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_scale",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ScaleUpdated(uint128)",
      "name": "ScaleUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_currentScale",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TotalBONQRewardsUpdated(uint256)",
      "name": "TotalBONQRewardsUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TotalDepositUpdated(uint256)",
      "name": "TotalDepositUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdraw(address,uint256)",
      "name": "Withdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contributor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DECIMAL_PRECISION()",
      "name": "DECIMAL_PRECISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "LIQUIDATION_RESERVE()",
      "name": "LIQUIDATION_RESERVE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_INT()",
      "name": "MAX_INT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "P()",
      "name": "P",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SCALE_FACTOR()",
      "name": "SCALE_FACTOR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SECONDS_IN_ONE_MINUTE()",
      "name": "SECONDS_IN_ONE_MINUTE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "arbitrage(uint256,address[],uint256)",
      "name": "arbitrage",
      "description": "use the DEX router to trigger a swap that starts and ends with the stable coin and yields more coins than itrequied as input. This function could be subject to a reentrant attack from a malicious token in the DEX.",
      "parameterDecorators": [
        {
          "name": "_amountIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_path",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_deadline",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bonqPerMinute()",
      "name": "bonqPerMinute",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bonqToken()",
      "name": "bonqToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collateralToLastErrorOffset(address)",
      "name": "collateralToLastErrorOffset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currentEpoch()",
      "name": "currentEpoch",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currentScale()",
      "name": "currentScale",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(uint256)",
      "name": "deposit",
      "description": "to deposit StableCoin into StabilityPool this must be protected against a reentrant attack from the arbitrage.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "amount to deposit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositSnapshots(address)",
      "name": "depositSnapshots",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "P",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "G",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "scale",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "epoch",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposits(address)",
      "name": "deposits",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "epochToScaleToG(uint128,uint128)",
      "name": "epochToScaleToG",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "epochToScaleToTokenToSum(uint128,uint128,uint256)",
      "name": "epochToScaleToTokenToSum",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "S_value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "factory()",
      "name": "factory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCollateralReward(address,address)",
      "name": "getCollateralReward",
      "description": "gets collateral reward of msg.sender.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "collateral token address.",
          "recommendedTypes": []
        },
        {
          "name": "_depositor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDepositorBONQGain(address)",
      "name": "getDepositorBONQGain",
      "description": "gets BONQ reward of _depositor.",
      "parameterDecorators": [
        {
          "name": "_depositor",
          "description": "user address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWithdrawableDeposit(address)",
      "name": "getWithdrawableDeposit",
      "description": "gets current deposit of msg.sender.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastBONQError()",
      "name": "lastBONQError",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastStableCoinLossErrorOffset()",
      "name": "lastStableCoinLossErrorOffset",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestBONQRewardTime()",
      "name": "latestBONQRewardTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "liquidate()",
      "name": "liquidate",
      "description": "must be called by the valid trove. liquidates trove, must be called from that trovethis function does not provide an opportunity for a reentrancy attack even though it would make the arbitragefail because of the lowering of the stablecoin balance.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "redeemReward()",
      "name": "redeemReward",
      "description": "to withdraw collateral rewards earned after liquidationsthis function does not provide an opportunity for a reentrancy attack.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "router()",
      "name": "router",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setBONQAmountForRewards(uint256)",
      "name": "setBONQAmountForRewards",
      "description": "sets total amount of BONQ to be rewarded (pays per minute until reaches the amount rewarded).",
      "parameterDecorators": [
        {
          "name": "_amountForRewards",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBONQPerMinute(uint256)",
      "name": "setBONQPerMinute",
      "description": "sets amount of BONQ per minute for rewards.",
      "parameterDecorators": [
        {
          "name": "_bonqPerMinute",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRouter(address)",
      "name": "setRouter",
      "description": "set the DEX router to be used for arbitrage functions.",
      "parameterDecorators": [
        {
          "name": "_router",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stableCoin()",
      "name": "stableCoin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalBONQRewardsLeft()",
      "name": "totalBONQRewardsLeft",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalDeposit()",
      "name": "totalDeposit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "to withdraw StableCoin that was not spent if this function is called in a reentrantway during arbitrage itwould skew the token allocation and must be protected against.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "amount to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}