{"schema":"../schema.json","tags":["tokens","vaults"],"name":"OptimisticOrchestrator","description":"TCAP Optimistic Orchestrator. Orchestrator contract in charge of managing the settings of the vaults, rewards and TCAP token. It acts as the owner of these contracts.","eventDecorators":[{"signature":"GuardianSet(address,address)","name":"GuardianSet","description":"An event emitted when the guardian is updated.","parameterDecorators":[{"name":"_owner","description":"","recommendedTypes":[],"indexed":true},{"name":"guardian","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"An event emitted when ownership is transferred.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TransactionExecuted(address,uint256,string,bytes)","name":"TransactionExecuted","description":"An event emitted when a transaction is executed.","parameterDecorators":[{"name":"target","description":"","recommendedTypes":[],"indexed":true},{"name":"value","description":"","recommendedTypes":[],"indexed":false},{"name":"signature","description":"","recommendedTypes":[],"indexed":false},{"name":"data","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addTCAPVault(address,address)","name":"addTCAPVault","description":"Adds Vault to TCAP ERC20. Only owner can call itValidates if _tcap is validValidates if _vault is valid.","parameterDecorators":[{"name":"_tcap","description":"address.","recommendedTypes":[]},{"name":"_vault","description":"address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"enableTCAPCap(address,bool)","name":"enableTCAPCap","description":"Enables or disables the TCAP Cap. Only owner can call itValidates if _tcap is valid.","parameterDecorators":[{"name":"_tcap","description":"address.","recommendedTypes":[]},{"name":"_enable","description":"bool.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"executeTransaction(address,uint256,string,bytes)","name":"executeTransaction","description":"Allows the owner to execute custom transactions. Only owner can call it.","parameterDecorators":[{"name":"target","description":"address.","recommendedTypes":[]},{"name":"value","description":"uint256.","recommendedTypes":[]},{"name":"signature","description":"string.","recommendedTypes":[]},{"name":"data","description":"bytes.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"guardian()","name":"guardian","description":"Address that can set to 0 the fees or pause the vaults in an emergency event.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ovmL2CrossDomainMessenger()","name":"ovmL2CrossDomainMessenger","description":"Address of the optimistic ovmL2CrossDomainMessenger contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Address of the account able to make changes to the contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pauseVault(address)","name":"pauseVault","description":"Pauses the Vault. Only guardian can call itValidates if _vault is valid.","parameterDecorators":[{"name":"_vault","description":"address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeTCAPVault(address,address)","name":"removeTCAPVault","description":"Removes Vault to TCAP ERC20. Only owner can call itValidates if _tcap is validValidates if _vault is valid.","parameterDecorators":[{"name":"_tcap","description":"address.","recommendedTypes":[]},{"name":"_vault","description":"address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"retrieveETH(address)","name":"retrieveETH","description":"Retrieves the eth stuck on the orchestrator. Only owner can call it.","parameterDecorators":[{"name":"_to","description":"address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBurnFee(address,uint256)","name":"setBurnFee","description":"Sets the burn fee of a vault. Only owner can call it.","parameterDecorators":[{"name":"_vault","description":"address.","recommendedTypes":[]},{"name":"_burnFee","description":"value.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setEmergencyBurnFee(address)","name":"setEmergencyBurnFee","description":"Sets the burn fee to 0, only used on a black swan event. Only guardian can call itValidates if _vault is valid.","parameterDecorators":[{"name":"_vault","description":"address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setEmergencyLiquidationPenalty(address)","name":"setEmergencyLiquidationPenalty","description":"Sets the liquidation penalty of a vault to 0, only used on a black swan event. Only guardian can call itValidates if _vault is valid.","parameterDecorators":[{"name":"_vault","description":"address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setGuardian(address)","name":"setGuardian","description":"Sets the guardian of the orchestrator. Only owner can call it.","parameterDecorators":[{"name":"_guardian","description":"address of the guardian.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setLiquidationPenalty(address,uint256)","name":"setLiquidationPenalty","description":"Sets the liquidation penalty of a vault. Only owner can call it.","parameterDecorators":[{"name":"_vault","description":"address.","recommendedTypes":[]},{"name":"_liquidationPenalty","description":"value.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRatio(address,uint256)","name":"setRatio","description":"Sets the ratio of a vault. Only owner can call it.","parameterDecorators":[{"name":"_vault","description":"address.","recommendedTypes":[]},{"name":"_ratio","description":"value.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTCAPCap(address,uint256)","name":"setTCAPCap","description":"Sets the TCAP maximum minting value. Only owner can call itValidates if _tcap is valid.","parameterDecorators":[{"name":"_tcap","description":"address.","recommendedTypes":[]},{"name":"_cap","description":"uint value.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpauseVault(address)","name":"unpauseVault","description":"Unpauses the Vault. Only guardian can call itValidates if _vault is valid.","parameterDecorators":[{"name":"_vault","description":"address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}