{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "vesting"
  ],
  "name": "TokenVesting",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "onLock(uint256,address,address,uint256,uint256,uint256)",
      "name": "onLock",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "lockID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountInTokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "startEmission",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endEmission",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "onMigrate(uint256,uint256)",
      "name": "onMigrate",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "lockID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountInTokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "onRelock(uint256,uint256)",
      "name": "onRelock",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "lockID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "unlockDate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "onSplitLock(uint256,uint256,uint256)",
      "name": "onSplitLock",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "fromLockID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "toLockID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountInTokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "onTransferLock(uint256,uint256,address,address)",
      "name": "onTransferLock",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "onWithdraw(address,uint256)",
      "name": "onWithdraw",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "lpToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountInTokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BLACKLIST()",
      "name": "BLACKLIST",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "FEES()",
      "name": "FEES",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "tokenFee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "freeLockingFee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "feeAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "freeLockingToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "LOCKS(uint256)",
      "name": "LOCKS",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "sharesDeposited",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "sharesWithdrawn",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "startEmission",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endEmission",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lockID",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "condition",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MIGRATOR()",
      "name": "MIGRATOR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MINIMUM_DEPOSIT()",
      "name": "MINIMUM_DEPOSIT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "NONCE()",
      "name": "NONCE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SHARES(address)",
      "name": "SHARES",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "adminSetWhitelister(address,bool)",
      "name": "adminSetWhitelister",
      "description": "whitelisted accounts and contracts who can call the editZeroFeeWhitelist function.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_add",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "convertSharesToTokens(address,uint256)",
      "name": "convertSharesToTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_shares",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "convertTokensToShares(address,uint256)",
      "name": "convertTokensToShares",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokens",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "editZeroFeeWhitelist(address,bool)",
      "name": "editZeroFeeWhitelist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_add",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getLock(uint256)",
      "name": "getLock",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lockID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param5",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param6",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param7",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param8",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param9",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getNumLockedTokens()",
      "name": "getNumLockedTokens",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenAtIndex(uint256)",
      "name": "getTokenAtIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenLockIDAtIndex(address,uint256)",
      "name": "getTokenLockIDAtIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenLocksLength(address)",
      "name": "getTokenLocksLength",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenWhitelisterAtIndex(uint256)",
      "name": "getTokenWhitelisterAtIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenWhitelisterLength()",
      "name": "getTokenWhitelisterLength",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenWhitelisterStatus(address)",
      "name": "getTokenWhitelisterStatus",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserLockIDForTokenAtIndex(address,address,uint256)",
      "name": "getUserLockIDForTokenAtIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserLockedTokenAtIndex(address,uint256)",
      "name": "getUserLockedTokenAtIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserLockedTokensLength(address)",
      "name": "getUserLockedTokensLength",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserLocksForTokenLength(address,address)",
      "name": "getUserLocksForTokenLength",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWithdrawableShares(uint256)",
      "name": "getWithdrawableShares",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lockID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWithdrawableTokens(uint256)",
      "name": "getWithdrawableTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lockID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getZeroFeeTokenAtIndex(uint256)",
      "name": "getZeroFeeTokenAtIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getZeroFeeTokensLength()",
      "name": "getZeroFeeTokensLength",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "incrementLock(uint256,uint256)",
      "name": "incrementLock",
      "description": "increase the amount of tokens per a specific lock, this is preferable to creating a new lock Its possible to increase someone elses lock here it does not need to be your own, useful for contracts.",
      "parameterDecorators": [
        {
          "name": "_lockID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lock(address,tuple(address,uint256,uint256,uint256,address)[])",
      "name": "lock",
      "description": "Creates one or multiple locks for the specified token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "the erc20 token address.",
          "recommendedTypes": []
        },
        {
          "name": "_lock_params",
          "description": "an array of locks with format: [LockParams[owner, amount, startEmission, endEmission, condition]] owner: user or contract who can withdraw the tokens amount: must be >= 100 units startEmission = 0 : LockType 1 startEmission != 0 : LockType 2 (linear scaling lock) use address(0) for no premature unlocking condition Fails if startEmission is not less than EndEmission Fails is amount < 100.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "owner",
              "description": "",
              "type": "address"
            },
            {
              "name": "amount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "startEmission",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "endEmission",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "condition",
              "description": "",
              "type": "address"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "migrate(uint256,uint256)",
      "name": "migrate",
      "description": "migrates to the next locker version, only callable by lock owners.",
      "parameterDecorators": [
        {
          "name": "_lockID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_option",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "payForFreeTokenLocks(address)",
      "name": "payForFreeTokenLocks",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "relock(uint256,uint256)",
      "name": "relock",
      "description": "extend a lock with a new unlock date, if lock is Type 2 it extends the emission end date.",
      "parameterDecorators": [
        {
          "name": "_lockID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_unlock_date",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeCondition(uint256)",
      "name": "revokeCondition",
      "description": "premature unlock conditions can be malicous (prevent withdrawls by failing to evalaute or return non bools) or not give community enough insurance tokens will remain locked until the end date, in such a case, it can be revoked.",
      "parameterDecorators": [
        {
          "name": "_lockID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBlacklistContract(address)",
      "name": "setBlacklistContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFees(uint256,uint256,address,address)",
      "name": "setFees",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_tokenFee",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_freeLockingFee",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_feeAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_freeLockingToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMigrator(address)",
      "name": "setMigrator",
      "description": "set the migrator contract which allows the lock to be migrated.",
      "parameterDecorators": [
        {
          "name": "_migrator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "splitLock(uint256,uint256)",
      "name": "splitLock",
      "description": "split a lock into two seperate locks, useful when a lock is about to expire and youd like to relock a portion and withdraw a smaller portion Only works on lock type 1, this feature does not work with lock type 2.",
      "parameterDecorators": [
        {
          "name": "_lockID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "the amount in tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "testCondition(address)",
      "name": "testCondition",
      "description": "",
      "parameterDecorators": [
        {
          "name": "condition",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenOnZeroFeeWhitelist(address)",
      "name": "tokenOnZeroFeeWhitelist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferLockOwnership(uint256,address)",
      "name": "transferLockOwnership",
      "description": "transfer a lock to a new owner, e.g. presale project -> project owner Please be aware this generates a new lock, and nulls the old lock, so a new ID is assigned to the new lock.",
      "parameterDecorators": [
        {
          "name": "_lockID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(uint256,uint256)",
      "name": "withdraw",
      "description": "withdraw a specified amount from a lock. _amount is the ideal amount to be withdrawn. however, this amount might be slightly different in rebasing tokens due to the conversion to shares, then back into an amount.",
      "parameterDecorators": [
        {
          "name": "_lockID",
          "description": "the lockID of the lock to be withdrawn.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of tokens to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}