{"schema":"../schema.json","tags":["vaults"],"name":"ZenchaVault","description":"","eventDecorators":[{"signature":"AddLiquidity(address,uint256,address)","name":"AddLiquidity","description":"Events ///.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Events ///.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"Events ///.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"Events ///.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WithdrawLiquidity(address,address,uint256,address)","name":"WithdrawLiquidity","description":"Events ///.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":false},{"name":"receiver","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAddress","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addController(address)","name":"addController","description":"add controller.","parameterDecorators":[{"name":"_controller","description":"new controller of this contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addLiquidity(uint256,address)","name":"addLiquidity","description":"Liquididity providers add liquidity.","parameterDecorators":[{"name":"_amount","description":"liquidity amount that users want to deposit.","recommendedTypes":[]},{"name":"_tokenAddress","description":"address of the liquidity token.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"balance()","name":"balance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calcRate(address)","name":"calcRate","description":"calculate rate token/ibToken.","parameterDecorators":[{"name":"_tokenAddress","description":"address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"controllers(address)","name":"controllers","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"deleteController(address)","name":"deleteController","description":"delete controller.","parameterDecorators":[{"name":"_controller","description":"controller of this contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getPoolAmount(address)","name":"getPoolAmount","description":"getter pool amount in LiquidityPool Boba gateway.","parameterDecorators":[{"name":"_tokenAddress","description":"address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getReward(address)","name":"getReward","description":"getter reward and fee in LiquidityPool Boba gateway and calc reward and fee.","parameterDecorators":[{"name":"_tokenAddress","description":"address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenOwner(address)","name":"getTokenOwner","description":"getter ibToken address of token address.","parameterDecorators":[{"name":"_ibTokenAddress","description":"address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalBalance(address)","name":"getTotalBalance","description":"getter balace in this contract and boba gateway.","parameterDecorators":[{"name":"_tokenAddress","description":"address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"ibTokenAddressOf(address)","name":"ibTokenAddressOf","description":"getter token address of ibToken address.","parameterDecorators":[{"name":"_tokenAddress","description":"address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"Pause contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"poolInfo(address)","name":"poolInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"reward","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"ibTokenAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"startTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"fee","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"protocolFee","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"registerPool(address,string,string)","name":"registerPool","description":"Add the new token pair to the pool.","parameterDecorators":[{"name":"_tokenAddress","description":"address.","recommendedTypes":[]},{"name":"_name","description":"ibToken name.","recommendedTypes":[]},{"name":"_symbol","description":"ibToken symbol.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setIbTokenOwner(address,address)","name":"setIbTokenOwner","description":"set token owner of ib.","parameterDecorators":[{"name":"_ibTokenAddress","description":"address.","recommendedTypes":[]},{"name":"_newOwnerAddress","description":"address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setProtocolFee(address,uint256)","name":"setProtocolFee","description":"set protocol fee in pool.","parameterDecorators":[{"name":"_tokenAddress","description":"address.","recommendedTypes":[]},{"name":"_protocolFee","description":"protocol fee ex : 50 * 10e6 is 50%.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpause()","name":"unpause","description":"UnPause contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawLiquidity(uint256,address,address)","name":"withdrawLiquidity","description":"Users withdraw token from LP.","parameterDecorators":[{"name":"_amount","description":"amount to withdraw.","recommendedTypes":[]},{"name":"_ibTokenAddress","description":"ibToken address.","recommendedTypes":[]},{"name":"_to","description":"receiver to get the funds.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawProtocolFee(address,address)","name":"withdrawProtocolFee","description":"withdraw fee.","parameterDecorators":[{"name":"_tokenAddress","description":"address.","recommendedTypes":[]},{"name":"_to","description":"receiver to get the funds.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}