{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "Tangle",
  "description": "Tangle, a token implementation using EIP-2535: Multi-Facet Proxy. implements IDiamondCut and IDiamondLoupe. Pieces of this contract can be updated without needing to redeploy the entire contract.",
  "eventDecorators": [
    {
      "signature": "DiamondCut(tuple[],address,bytes)",
      "name": "DiamondCut",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_diamondCut",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_init",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_calldata",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "diamondCut(tuple(address,uint8,bytes4[])[],address,bytes)",
      "name": "diamondCut",
      "description": "Add/replace/remove any number of functions and optionally execute a function with delegatecall.",
      "parameterDecorators": [
        {
          "name": "_diamondCut",
          "description": "Contains the facet addresses and function selectors.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "facetAddress",
              "description": "",
              "type": "address"
            },
            {
              "name": "action",
              "description": "",
              "type": "uint8"
            },
            {
              "name": "functionSelectors",
              "description": "",
              "type": "bytes4[]"
            }
          ]
        },
        {
          "name": "_init",
          "description": "The address of the contract or facet to execute _calldata.",
          "recommendedTypes": []
        },
        {
          "name": "_calldata",
          "description": "A function call, including function selector and arguments _calldata is executed with delegatecall on _init.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "facetAddress(bytes4)",
      "name": "facetAddress",
      "description": "Gets the facet that supports the given selector. If facet is not found return address(0).",
      "parameterDecorators": [
        {
          "name": "_functionSelector",
          "description": "The function selector.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "facetAddress_ The facet address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "facetAddresses()",
      "name": "facetAddresses",
      "description": "Get all the facet addresses used by a diamond.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "facetAddresses_.",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "facetFunctionSelectors(address)",
      "name": "facetFunctionSelectors",
      "description": "Gets all the function selectors supported by a specific facet.",
      "parameterDecorators": [
        {
          "name": "_facet",
          "description": "The facet address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "facetFunctionSelectors_.",
          "recommendedTypes": [],
          "solidityType": "bytes4[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "facets()",
      "name": "facets",
      "description": "Gets all facet addresses and their four byte function selectors.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "facets_ Facet.",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "The owner of this contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}