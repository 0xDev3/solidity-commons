{
  "schema": "../schema.json",
  "tags": [
    "locking"
  ],
  "name": "SaleClockAuction",
  "description": "Clock auction modified for sale of kitties. We omit a fallback function to prevent accidental sends to this contract.",
  "eventDecorators": [
    {
      "signature": "AuctionCancelled(uint256)",
      "name": "AuctionCancelled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AuctionCreated(uint256,uint256,uint256,uint256)",
      "name": "AuctionCreated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "startingPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endingPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "duration",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AuctionSuccessful(uint256,uint256,address)",
      "name": "AuctionSuccessful",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "totalPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "winner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "reporter",
          "description": "The address of the entity that reported the updater misbehavior.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "updater",
          "description": "The address of the updater.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "averageGen0SalePrice()",
      "name": "averageGen0SalePrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bid(uint256)",
      "name": "bid",
      "description": "Updates lastSalePrice if seller is the nft contract Otherwise, works the same as default bid method.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cancelAuction(uint256)",
      "name": "cancelAuction",
      "description": "This is a state-modifying function that can be called while the contract is paused. Cancels an auction that hasn't been won yet. Returns the NFT to original owner.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "- ID of token on auction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cancelAuctionWhenPaused(uint256)",
      "name": "cancelAuctionWhenPaused",
      "description": "Cancels an auction when the contract is paused. Only the owner may do this, and NFTs are returned to the seller. This should only be used in emergencies.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "- ID of the NFT on auction to cancel.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createAuction(uint256,uint256,uint256,uint256,address)",
      "name": "createAuction",
      "description": "Creates and begins a new auction.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "- ID of token to auction, sender must be owner.",
          "recommendedTypes": []
        },
        {
          "name": "_startingPrice",
          "description": "- Price of item (in wei) at beginning of auction.",
          "recommendedTypes": []
        },
        {
          "name": "_endingPrice",
          "description": "- Price of item (in wei) at end of auction.",
          "recommendedTypes": []
        },
        {
          "name": "_duration",
          "description": "- Length of auction (in seconds).",
          "recommendedTypes": []
        },
        {
          "name": "_seller",
          "description": "- Seller, if not the message sender.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "gen0SaleCount()",
      "name": "gen0SaleCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAuction(uint256)",
      "name": "getAuction",
      "description": "Returns auction info for an NFT on auction.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "- ID of NFT on auction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "seller",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "startingPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endingPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "duration",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "startedAt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentPrice(uint256)",
      "name": "getCurrentPrice",
      "description": "Returns the current price of an auction.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "- ID of the token price we are checking.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSaleClockAuction()",
      "name": "isSaleClockAuction",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastGen0SalePrices(uint256)",
      "name": "lastGen0SalePrices",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nonFungibleContract()",
      "name": "nonFungibleContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ownerCut()",
      "name": "ownerCut",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawBalance()",
      "name": "withdrawBalance",
      "description": "Remove all Ether from the contract, which is the owner's cuts as well as any Ether sent directly to the contract address. Always transfers to the NFT contract, but can be called either by the owner or the NFT contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}