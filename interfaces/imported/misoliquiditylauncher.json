{
  "schema": "../schema.json",
  "tags": [
    "liquidity"
  ],
  "name": "MISOLiquidityLauncher",
  "description": "",
  "eventDecorators": [
    {
      "signature": "LiquidityLauncherCreated(address,address,address)",
      "name": "LiquidityLauncherCreated",
      "description": "event emitted when launcher is created using template id.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "launcherTemplate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityTemplateAdded(address,uint256)",
      "name": "LiquidityTemplateAdded",
      "description": "event emitted when launcher template is added to factory.",
      "parameterDecorators": [
        {
          "name": "newLauncher",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "templateId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityTemplateRemoved(address,uint256)",
      "name": "LiquidityTemplateRemoved",
      "description": "event emitted when launcher template is removed.",
      "parameterDecorators": [
        {
          "name": "launcher",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "templateId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MisoInitLiquidityLauncher(address)",
      "name": "MisoInitLiquidityLauncher",
      "description": "event emitted when first intializing the liquidity launcher.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "WETH()",
      "name": "WETH",
      "description": "Address for Wrapped Ether.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "accessControls()",
      "name": "accessControls",
      "description": "Responsible for access rights to the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addLiquidityLauncherTemplate(address)",
      "name": "addLiquidityLauncherTemplate",
      "description": "Function to add a launcher template to create through factoryShould have operator access.",
      "parameterDecorators": [
        {
          "name": "_template",
          "description": "Launcher template to create a launcher.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createLiquidityLauncher(uint256)",
      "name": "createLiquidityLauncher",
      "description": "Creates a liquidity launcher coeresponding to _templateId.",
      "parameterDecorators": [
        {
          "name": "_templateId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "launcher",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getLiquidityLauncherTemplate(uint256)",
      "name": "getLiquidityLauncherTemplate",
      "description": "Get the address of the launcher template.",
      "parameterDecorators": [
        {
          "name": "templateId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "launcherTemplate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTemplateId(address)",
      "name": "getTemplateId",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_launcherTemplate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initMISOLiquidityLauncher(address,address)",
      "name": "initMISOLiquidityLauncher",
      "description": "Single gateway to initialize the MISO Liquidity Launcher with proper addressCan only be initialized once.",
      "parameterDecorators": [
        {
          "name": "_accessControls",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_WETH",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isChildLiquidityLauncher(address)",
      "name": "isChildLiquidityLauncher",
      "description": "Tracks if a launcher in made by the factory.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "launcherTemplateId()",
      "name": "launcherTemplateId",
      "description": "Template id to track respective launcher template.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "launchers(uint256)",
      "name": "launchers",
      "description": "Launchers created using factory.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "numberOfLiquidityLauncherContracts()",
      "name": "numberOfLiquidityLauncherContracts",
      "description": "Get the total number of launchers in the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeLiquidityLauncherTemplate(uint256)",
      "name": "removeLiquidityLauncherTemplate",
      "description": "Function to remove a launcher template from factoryShould have operator access.",
      "parameterDecorators": [
        {
          "name": "_templateId",
          "description": "Refers to template that is to be deleted.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}