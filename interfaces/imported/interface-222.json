{
  "schema": "../schema.json",
  "tags": [],
  "name": "ArbitragePool",
  "description": "is used to liquidate troves and reward depositors with collateral redeemed.",
  "eventDecorators": [
    {
      "signature": "APtokenDeployed(address,address)",
      "name": "APtokenDeployed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_collateralToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_apToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Arbitrage(address,address[],uint256,uint256)",
      "name": "Arbitrage",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_collateralToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_path",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amountIn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amountOut",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposit(address,address,uint256,uint256)",
      "name": "Deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_collateralToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_contributor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_apAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Withdraw(address,address,uint256,uint256)",
      "name": "Withdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_collateralToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_contributor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_apAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DECIMAL_PRECISION()",
      "name": "DECIMAL_PRECISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "LIQUIDATION_RESERVE()",
      "name": "LIQUIDATION_RESERVE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_INT()",
      "name": "MAX_INT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addToken(address)",
      "name": "addToken",
      "description": "to add new supported collateral by deploying APtoken for it.",
      "parameterDecorators": [
        {
          "name": "_collateralToken",
          "description": "collateral to be added.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "arbitrage(address,uint256,address[],uint256)",
      "name": "arbitrage",
      "description": "to do arbitrage.",
      "parameterDecorators": [
        {
          "name": "_collateralToken",
          "description": "collateral token address.",
          "recommendedTypes": []
        },
        {
          "name": "_amountIn",
          "description": "start amount.",
          "recommendedTypes": []
        },
        {
          "name": "_path",
          "description": "calldata[].",
          "recommendedTypes": []
        },
        {
          "name": "_deadline",
          "description": "deadline time.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "batchApproveRouter(address[])",
      "name": "batchApproveRouter",
      "description": "approves the list collateral tokens on Router to enable arbitrage, should be called when the router was changed.",
      "parameterDecorators": [
        {
          "name": "_collateralTokens",
          "description": "list of collateralToken addresses.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "collateralToAPToken(address)",
      "name": "collateralToAPToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(address,uint256)",
      "name": "deposit",
      "description": "to deposit collateral into ArbitragePool and get APtoken.",
      "parameterDecorators": [
        {
          "name": "_collateralToken",
          "description": "amount to deposit.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount to deposit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositsAndRewards(address)",
      "name": "depositsAndRewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "factory()",
      "name": "factory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAPtokenPrice(address)",
      "name": "getAPtokenPrice",
      "description": "calculates the price of APtoken by baseToken/apToken.supply().",
      "parameterDecorators": [
        {
          "name": "_collateralToken",
          "description": "IERC20 address of base token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "router()",
      "name": "router",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setRouter(address)",
      "name": "setRouter",
      "description": "sets the address of the Router to enable arbitrage.",
      "parameterDecorators": [
        {
          "name": "_router",
          "description": "address of the contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferExtraCollateral(address,address,uint256)",
      "name": "transferExtraCollateral",
      "description": "moves extra collateral that was sent by mistake to the contract from the balance.",
      "parameterDecorators": [
        {
          "name": "_collateralToken",
          "description": "collateralToken addresses.",
          "recommendedTypes": []
        },
        {
          "name": "_recipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(address,uint256)",
      "name": "withdraw",
      "description": "to withdraw collateral from ArbitragePool by redeeming APtoken.",
      "parameterDecorators": [
        {
          "name": "_collateralToken",
          "description": "amount to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of APtoken to give.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}