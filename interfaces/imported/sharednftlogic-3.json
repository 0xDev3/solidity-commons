{
  "schema": "../schema.json",
  "tags": [
    "nft"
  ],
  "name": "SharedNFTLogic",
  "description": "Can safely be used for generic base64Encode and numberToString functions. Shared NFT logic for rendering metadata associated with editions.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "base64Encode(bytes)",
      "name": "base64Encode",
      "description": "",
      "parameterDecorators": [
        {
          "name": "unencoded",
          "description": "bytes to base64-encode.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createMetadataEdition(string,string,string,string,uint256,uint256)",
      "name": "createMetadataEdition",
      "description": "Generate edition metadata from storage information as base64-json blob Combines the media data and metadata.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "Name of NFT in metadata.",
          "recommendedTypes": []
        },
        {
          "name": "description",
          "description": "Description of NFT in metadata.",
          "recommendedTypes": []
        },
        {
          "name": "imageUrl",
          "description": "URL of image to render for edition.",
          "recommendedTypes": []
        },
        {
          "name": "animationUrl",
          "description": "URL of animation to render for edition.",
          "recommendedTypes": []
        },
        {
          "name": "tokenOfEdition",
          "description": "Token ID for specific token.",
          "recommendedTypes": []
        },
        {
          "name": "editionSize",
          "description": "Size of entire edition to show.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createMetadataJSON(string,string,string,uint256,uint256)",
      "name": "createMetadataJSON",
      "description": "Function to create the metadata json string for the nft edition.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "Name of NFT in metadata.",
          "recommendedTypes": []
        },
        {
          "name": "description",
          "description": "Description of NFT in metadata.",
          "recommendedTypes": []
        },
        {
          "name": "mediaData",
          "description": "Data for media to include in json object.",
          "recommendedTypes": []
        },
        {
          "name": "tokenOfEdition",
          "description": "Token ID for specific token.",
          "recommendedTypes": []
        },
        {
          "name": "editionSize",
          "description": "Size of entire edition to show.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "encodeMetadataJSON(bytes)",
      "name": "encodeMetadataJSON",
      "description": "Encodes the argument json bytes into base64-data uri format.",
      "parameterDecorators": [
        {
          "name": "json",
          "description": "Raw json to base64 and turn into a data-uri.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "numberToString(uint256)",
      "name": "numberToString",
      "description": "Proxy to openzeppelin's toString function.",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "number to return as a string.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenMediaData(string,string,uint256)",
      "name": "tokenMediaData",
      "description": "Generates edition metadata from storage information as base64-json blob Combines the media data and metadata.",
      "parameterDecorators": [
        {
          "name": "imageUrl",
          "description": "URL of image to render for edition.",
          "recommendedTypes": []
        },
        {
          "name": "animationUrl",
          "description": "URL of animation to render for edition.",
          "recommendedTypes": []
        },
        {
          "name": "tokenOfEdition",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}