{"schema":"../schema.json","tags":["airdrops"],"name":"AirDropperErc1155","description":"","eventDecorators":[{"signature":"AddedAirdrop(uint256,address,uint256,uint256,bool)","name":"AddedAirdrop","description":"","parameterDecorators":[{"name":"airdropId","description":"","recommendedTypes":[],"indexed":false},{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"paidable","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Claimed(uint256,uint256,address,uint256)","name":"Claimed","description":"","parameterDecorators":[{"name":"airdropId","description":"","recommendedTypes":[],"indexed":false},{"name":"index","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Received(address,uint256)","name":"Received","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[],"indexed":false},{"name":"param1","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"adminWithdrawTokensFromAirdrop(uint256)","name":"adminWithdrawTokensFromAirdrop","description":"","parameterDecorators":[{"name":"airdropId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"adminWithdrawTokensFromExpiredAirdrop(uint256)","name":"adminWithdrawTokensFromExpiredAirdrop","description":"","parameterDecorators":[{"name":"airdropId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"adress_cws()","name":"adress_cws","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"airDrops(uint256)","name":"airDrops","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"token","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"tokenId","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"expirationTimestamp","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"merkleRoot","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"creator","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"paidable","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"sharable","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"piecePrice","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"payout_artist","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"cwsshare","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"batchAddErc1155Airdrop(uint256,address,uint256[],uint256[],bytes32[],uint256,uint256[],address)","name":"batchAddErc1155Airdrop","description":"","parameterDecorators":[{"name":"rootAirdropId","description":"","recommendedTypes":[]},{"name":"token","description":"","recommendedTypes":[]},{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]},{"name":"merkleRoot","description":"","recommendedTypes":[]},{"name":"expirationSeconds","description":"","recommendedTypes":[]},{"name":"piecePrice","description":"","recommendedTypes":[]},{"name":"payout_artist","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claim(uint256,uint256,address,bytes32[])","name":"claim","description":"","parameterDecorators":[{"name":"airdropId","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]},{"name":"merkleProof","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimPay(uint256,uint256,address,bytes32[])","name":"claimPay","description":"","parameterDecorators":[{"name":"airdropId","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]},{"name":"merkleProof","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isClaimed(uint256,uint256)","name":"isClaimed","description":"","parameterDecorators":[{"name":"airdropId","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isPaused(uint256)","name":"isPaused","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)","name":"onERC1155BatchReceived","description":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","parameterDecorators":[{"name":"operator","description":"The address which initiated the batch transfer (i.e. msg.sender).","recommendedTypes":[]},{"name":"from","description":"The address which previously owned the token.","recommendedTypes":[]},{"name":"ids","description":"An array containing ids of each token being transferred (order and length must match values array).","recommendedTypes":[]},{"name":"values","description":"An array containing amounts of each token being transferred (order and length must match ids array).","recommendedTypes":[]},{"name":"data","description":"Additional data with no specified format.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"onERC1155Received(address,address,uint256,uint256,bytes)","name":"onERC1155Received","description":"See {IERC165-supportsInterface}.","parameterDecorators":[{"name":"operator","description":"","recommendedTypes":[]},{"name":"from","description":"","recommendedTypes":[]},{"name":"id","description":"","recommendedTypes":[]},{"name":"value","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPause(uint256,bool)","name":"setPause","description":"","parameterDecorators":[{"name":"i","description":"","recommendedTypes":[]},{"name":"_isPaused","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawFee()","name":"withdrawFee","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}