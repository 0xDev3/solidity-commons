{"schema":"../schema.json","tags":["tokens","nft"],"name":"ERC721NFTFactoryC2","description":"This contract is for creating proxy to access ERC721NFT token. The beacon should be initialized before call ERC721NFTFactory constructor.","eventDecorators":[{"signature":"Create721NFTProxy(address)","name":"Create721NFTProxy","description":"","parameterDecorators":[{"name":"newERC20Address","description":"is an address of the newly created ERC20 token MinimalProxy.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"beacon()","name":"beacon","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"createToken(string,string,string,string,uint256)","name":"createToken","description":"","parameterDecorators":[{"name":"_name","description":"","recommendedTypes":[]},{"name":"_symbol","description":"","recommendedTypes":[]},{"name":"baseURI","description":"","recommendedTypes":[]},{"name":"contractURI","description":"","recommendedTypes":[]},{"name":"salt","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAddress(string,string,string,string,uint256)","name":"getAddress","description":"","parameterDecorators":[{"name":"_name","description":"","recommendedTypes":[]},{"name":"_symbol","description":"","recommendedTypes":[]},{"name":"baseURI","description":"","recommendedTypes":[]},{"name":"contractURI","description":"","recommendedTypes":[]},{"name":"_salt","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}