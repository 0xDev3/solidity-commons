{
  "schema": "../schema.json",
  "tags": [],
  "name": "DPSShipyard",
  "description": "",
  "eventDecorators": [
    {
      "signature": "BoughSupportShip(address,uint8,uint256)",
      "name": "BoughSupportShip",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_type",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_quantity",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FlagshipMinted(address,uint16)",
      "name": "FlagshipMinted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FlagshipRepaired(uint256)",
      "name": "FlagshipRepaired",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_flagshipId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "FlagshipUpgraded(uint256,uint8[],uint8[],uint256)",
      "name": "FlagshipUpgraded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_flagshipId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_parts",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_levels",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "doubloonsSpent",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SetContract(string,address)",
      "name": "SetContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_target",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenRecovered(address,address,uint256)",
      "name": "TokenRecovered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_destination",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "buySupportShips(uint8,uint256)",
      "name": "buySupportShips",
      "description": "buy support ships, just 1 type per tx, requires doubloons.",
      "parameterDecorators": [
        {
          "name": "_type",
          "description": "tyep of support ship you want to buy.",
          "recommendedTypes": []
        },
        {
          "name": "_quantity",
          "description": "the quantity you want to buy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimFlagship(uint16)",
      "name": "claimFlagship",
      "description": "claiming a flagship by owning a Pirate. the flagship token id = dps id.",
      "parameterDecorators": [
        {
          "name": "_dpsId",
          "description": "- pirate id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "doubloon()",
      "name": "doubloon",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dps()",
      "name": "dps",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "flagship()",
      "name": "flagship",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "gameSettings()",
      "name": "gameSettings",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "recoverERC20(address,address)",
      "name": "recoverERC20",
      "description": "Recover TOKENS sent by mistake to the contract.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "the TOKEN address.",
          "recommendedTypes": []
        },
        {
          "name": "_destination",
          "description": "where to send the NFT.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "recoverNFT(address,address,uint256)",
      "name": "recoverNFT",
      "description": "Recover NFT sent by mistake to the contract.",
      "parameterDecorators": [
        {
          "name": "_nft",
          "description": "the NFT address.",
          "recommendedTypes": []
        },
        {
          "name": "_destination",
          "description": "where to send the NFT.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": "the token to want to recover.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "repairFlagship(uint256)",
      "name": "repairFlagship",
      "description": "repairing a damaged ship, costs doubloons see `repairFlagshipCost` on GameSettings.",
      "parameterDecorators": [
        {
          "name": "_flagshipId",
          "description": "- id of the flagship.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "repairFlagships(uint256[])",
      "name": "repairFlagships",
      "description": "repairing a multiple flagships.",
      "parameterDecorators": [
        {
          "name": "_flagshipIds",
          "description": "- ids of the flagships.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDoubloonsContract(address)",
      "name": "setDoubloonsContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDpsContract(address)",
      "name": "setDpsContract",
      "description": "SETTERS & GETTERS.",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFlagshipContract(address)",
      "name": "setFlagshipContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGameSettingsContract(address)",
      "name": "setGameSettingsContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSupportShip(address)",
      "name": "setSupportShip",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportShip()",
      "name": "supportShip",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeFlagship(uint256,uint8[],uint8[])",
      "name": "upgradeFlagship",
      "description": "upgrade parts of flagship for doubloons.",
      "parameterDecorators": [
        {
          "name": "_flagshipId",
          "description": "the flagship we want to upgrade.",
          "recommendedTypes": []
        },
        {
          "name": "_parts",
          "description": "[] parts we want to upgrade.",
          "recommendedTypes": []
        },
        {
          "name": "_levels",
          "description": "[] levels we want the part to upgrade to, warning the index of the level needs to corespond with the index of the part from _parts[].",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}