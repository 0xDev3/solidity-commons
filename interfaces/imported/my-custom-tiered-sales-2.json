{"schema":"../schema.json","tags":[],"name":"MyCustomTieredSales","description":"My Custom Tiered Sales. This is developed in-house to provide custom sales mechanism for our custom project.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"eligibleForTier(uint256,address,uint256,bytes32[])","name":"eligibleForTier","description":"","parameterDecorators":[{"name":"tierId","description":"","recommendedTypes":[]},{"name":"minter","description":"","recommendedTypes":[]},{"name":"maxAllowance","description":"","recommendedTypes":[]},{"name":"proof","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"maxMintable","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"mintByTier(uint256,uint256,uint256,bytes32[])","name":"mintByTier","description":"(3) Customize the \"mintByTier\" method. This custom facet contract extends TieredSales, which needs us to define what sales logic we want when users are minting a specific tier.","parameterDecorators":[{"name":"tierId","description":"","recommendedTypes":[]},{"name":"count","description":"","recommendedTypes":[]},{"name":"maxAllowance","description":"","recommendedTypes":[]},{"name":"proof","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"onTierAllowlist(uint256,address,uint256,bytes32[])","name":"onTierAllowlist","description":"","parameterDecorators":[{"name":"tierId","description":"","recommendedTypes":[]},{"name":"minter","description":"","recommendedTypes":[]},{"name":"maxAllowance","description":"","recommendedTypes":[]},{"name":"proof","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"remainingForTier(uint256)","name":"remainingForTier","description":"","parameterDecorators":[{"name":"tierId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"reservedMints()","name":"reservedMints","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setTargetTokens(address,address)","name":"setTargetTokens","description":"(2) Define custom functions You can put privileged functions (using Ownable or role-based AccessControl) here.","parameterDecorators":[{"name":"firstToken","description":"","recommendedTypes":[]},{"name":"secondToken","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tierMints(uint256)","name":"tierMints","description":"","parameterDecorators":[{"name":"tierId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"tiers(uint256)","name":"tiers","description":"","parameterDecorators":[{"name":"tierId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"totalReserved()","name":"totalReserved","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"walletMintedByTier(uint256,address)","name":"walletMintedByTier","description":"","parameterDecorators":[{"name":"tierId","description":"","recommendedTypes":[]},{"name":"wallet","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}