{"schema":"../schema.json","tags":[],"name":"BunnySpecialV1","description":"","eventDecorators":[{"signature":"BunnyAdd(uint8,uint256,uint256)","name":"BunnyAdd","description":"Emitted when token is changed.","parameterDecorators":[{"name":"bunnyId","description":"","recommendedTypes":[],"indexed":true},{"name":"thresholdUser","description":"","recommendedTypes":[],"indexed":false},{"name":"costCake","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"BunnyChange(uint8,uint256,uint256,bool)","name":"BunnyChange","description":"Emitted when token is changed.","parameterDecorators":[{"name":"bunnyId","description":"","recommendedTypes":[],"indexed":true},{"name":"thresholdUser","description":"","recommendedTypes":[],"indexed":false},{"name":"costCake","description":"","recommendedTypes":[],"indexed":false},{"name":"isActive","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"BunnyMint(address,uint256,uint8)","name":"BunnyMint","description":"Emitted when token is changed.","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"bunnyId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when token is changed.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"addBunny(uint8,string,uint256,uint256)","name":"addBunny","description":"","parameterDecorators":[{"name":"_bunnyId","description":"","recommendedTypes":[]},{"name":"_tokenURI","description":"","recommendedTypes":[]},{"name":"_thresholdUser","description":"","recommendedTypes":[]},{"name":"_cakeCost","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bunnyCharacteristics(uint8)","name":"bunnyCharacteristics","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"tokenURI","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"thresholdUser","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"cakeCost","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"isActive","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"isCreated","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"bunnyMintingStation()","name":"bunnyMintingStation","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"cakeToken()","name":"cakeToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"canClaimMultiple(address,uint8[])","name":"canClaimMultiple","description":"","parameterDecorators":[{"name":"_userAddress","description":"","recommendedTypes":[]},{"name":"_bunnyIds","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool[]"}],"emittableEvents":[],"readOnly":true},{"signature":"canClaimSingle(address,uint8)","name":"canClaimSingle","description":"","parameterDecorators":[{"name":"_userAddress","description":"","recommendedTypes":[]},{"name":"_bunnyId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"claimFee(uint256)","name":"claimFee","description":"It transfers the CAKE tokens back to the chef address. Only callable by the owner.","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"hasClaimed(address,uint8)","name":"hasClaimed","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"maxViewLength()","name":"maxViewLength","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"mintNFT(uint8)","name":"mintNFT","description":"Mint NFTs from the BunnyMintingStation contract. Users can claim once.","parameterDecorators":[{"name":"_bunnyId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"numberDifferentBunnies()","name":"numberDifferentBunnies","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pancakeProfile()","name":"pancakeProfile","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateBunny(uint8,uint256,uint256,bool)","name":"updateBunny","description":"","parameterDecorators":[{"name":"_bunnyId","description":"","recommendedTypes":[]},{"name":"_thresholdUser","description":"","recommendedTypes":[]},{"name":"_cakeCost","description":"","recommendedTypes":[]},{"name":"_isActive","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateMaxViewLength(uint256)","name":"updateMaxViewLength","description":"","parameterDecorators":[{"name":"_newMaxViewLength","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}