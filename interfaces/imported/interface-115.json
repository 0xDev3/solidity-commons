{"schema":"../schema.json","tags":["bridges"],"name":"Bridge","description":"Facilitates deposits, creation and votiing of deposit proposals, and deposit executions. Copied directly from here: https://github.com/ChainSafe/chainbridge-solidity/releases/tag/v1.0.0 except for one small change to the imported Pausable and SafeMath contracts. We replaced local implementations with openzeppelin/contracts versions.","eventDecorators":[{"signature":"Deposit(uint8,bytes32,uint64)","name":"Deposit","description":"when the auction of a token gets started.","parameterDecorators":[{"name":"ntoken","description":"The address of the ntoken w.r.t. token for incentives.","recommendedTypes":[],"indexed":true},{"name":"owner","description":"The address of miner who opened the oracle.","recommendedTypes":[],"indexed":true},{"name":"token","description":"The address of the (ERC20) token.","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"when the auction of a token gets started.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ProposalEvent(uint8,uint64,uint8,bytes32,bytes32)","name":"ProposalEvent","description":"when the auction of a token gets started.","parameterDecorators":[{"name":"originChainID","description":"","recommendedTypes":[],"indexed":true},{"name":"depositNonce","description":"","recommendedTypes":[],"indexed":true},{"name":"status","description":"","recommendedTypes":[],"indexed":true},{"name":"resourceID","description":"","recommendedTypes":[],"indexed":false},{"name":"dataHash","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ProposalVote(uint8,uint64,uint8,bytes32)","name":"ProposalVote","description":"when the auction of a token gets started.","parameterDecorators":[{"name":"originChainID","description":"","recommendedTypes":[],"indexed":true},{"name":"depositNonce","description":"","recommendedTypes":[],"indexed":true},{"name":"status","description":"","recommendedTypes":[],"indexed":true},{"name":"resourceID","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RelayerAdded(address)","name":"RelayerAdded","description":"when the auction of a token gets started.","parameterDecorators":[{"name":"relayer","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RelayerRemoved(address)","name":"RelayerRemoved","description":"when the auction of a token gets started.","parameterDecorators":[{"name":"relayer","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RelayerThresholdChanged(uint256)","name":"RelayerThresholdChanged","description":"when the auction of a token gets started.","parameterDecorators":[{"name":"newThreshold","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"when the auction of a token gets started.","parameterDecorators":[{"name":"ntoken","description":"The address of the ntoken w.r.t. token for incentives.","recommendedTypes":[],"indexed":true},{"name":"owner","description":"The address of miner who opened the oracle.","recommendedTypes":[],"indexed":true},{"name":"token","description":"The address of the (ERC20) token.","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"when the auction of a token gets started.","parameterDecorators":[{"name":"ntoken","description":"The address of the ntoken w.r.t. token for incentives.","recommendedTypes":[],"indexed":true},{"name":"owner","description":"The address of miner who opened the oracle.","recommendedTypes":[],"indexed":true},{"name":"token","description":"The address of the (ERC20) token.","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"when the auction of a token gets started.","parameterDecorators":[{"name":"ntoken","description":"The address of the ntoken w.r.t. token for incentives.","recommendedTypes":[],"indexed":true},{"name":"owner","description":"The address of miner who opened the oracle.","recommendedTypes":[],"indexed":true},{"name":"token","description":"The address of the (ERC20) token.","recommendedTypes":[],"indexed":true}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"when the auction of a token gets started.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"RELAYER_ROLE()","name":"RELAYER_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"_chainID()","name":"_chainID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"_depositCounts(uint8)","name":"_depositCounts","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"_depositRecords(uint64,uint8)","name":"_depositRecords","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"_expiry()","name":"_expiry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"_fee()","name":"_fee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"_hasVotedOnProposal(uint72,bytes32,address)","name":"_hasVotedOnProposal","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"_proposals(uint72,bytes32)","name":"_proposals","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_resourceID","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"_dataHash","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"_status","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"_proposedBlock","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"_relayerThreshold()","name":"_relayerThreshold","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"_resourceIDToHandlerAddress(bytes32)","name":"_resourceIDToHandlerAddress","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"_totalProposals()","name":"_totalProposals","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"_totalRelayers()","name":"_totalRelayers","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"adminAddRelayer(address)","name":"adminAddRelayer","description":"Grants {relayerAddress} the relayer role and increases {_totalRelayer} count.Only callable by an address that currently has the admin role.Emits {RelayerAdded} event.","parameterDecorators":[{"name":"relayerAddress","description":"Address of relayer to be added.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RelayerAdded(address)"],"readOnly":false},{"signature":"adminChangeFee(uint256)","name":"adminChangeFee","description":"Changes deposit fee.Only callable by admin.","parameterDecorators":[{"name":"newFee","description":"Value {_fee} will be updated to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"adminChangeRelayerThreshold(uint256)","name":"adminChangeRelayerThreshold","description":"Modifies the number of votes required for a proposal to be considered passed.Only callable by an address that currently has the admin role.Emits {RelayerThresholdChanged} event.","parameterDecorators":[{"name":"newThreshold","description":"Value {_relayerThreshold} will be changed to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RelayerThresholdChanged(uint256)"],"readOnly":false},{"signature":"adminPauseTransfers()","name":"adminPauseTransfers","description":"Pauses deposits, proposal creation and voting, and deposit executions.Only callable by an address that currently has the admin role.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"adminRemoveRelayer(address)","name":"adminRemoveRelayer","description":"Removes relayer role for {relayerAddress} and decreases {_totalRelayer} count.Only callable by an address that currently has the admin role.Emits {RelayerRemoved} event.","parameterDecorators":[{"name":"relayerAddress","description":"Address of relayer to be removed.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RelayerRemoved(address)"],"readOnly":false},{"signature":"adminSetBurnable(address,address)","name":"adminSetBurnable","description":"Sets a resource as burnable for handler contracts that use the IERCHandler interface.Only callable by an address that currently has the admin role.","parameterDecorators":[{"name":"handlerAddress","description":"Address of handler resource will be set for.","recommendedTypes":[]},{"name":"tokenAddress","description":"Address of contract to be called when a deposit is made and a deposited is executed.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"adminSetGenericResource(address,bytes32,address,bytes4,bytes4)","name":"adminSetGenericResource","description":"Sets a new resource for handler contracts that use the IGenericHandler interface, and maps the {handlerAddress} to {resourceID} in {_resourceIDToHandlerAddress}.Only callable by an address that currently has the admin role.","parameterDecorators":[{"name":"handlerAddress","description":"Address of handler resource will be set for.","recommendedTypes":[]},{"name":"resourceID","description":"ResourceID to be used when making deposits.","recommendedTypes":[]},{"name":"contractAddress","description":"Address of contract to be called when a deposit is made and a deposited is executed.","recommendedTypes":[]},{"name":"depositFunctionSig","description":"","recommendedTypes":[]},{"name":"executeFunctionSig","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"adminSetResource(address,bytes32,address)","name":"adminSetResource","description":"Sets a new resource for handler contracts that use the IERCHandler interface, and maps the {handlerAddress} to {resourceID} in {_resourceIDToHandlerAddress}.Only callable by an address that currently has the admin role.","parameterDecorators":[{"name":"handlerAddress","description":"Address of handler resource will be set for.","recommendedTypes":[]},{"name":"resourceID","description":"ResourceID to be used when making deposits.","recommendedTypes":[]},{"name":"tokenAddress","description":"Address of contract to be called when a deposit is made and a deposited is executed.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"adminUnpauseTransfers()","name":"adminUnpauseTransfers","description":"Unpauses deposits, proposal creation and voting, and deposit executions.Only callable by an address that currently has the admin role.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"adminWithdraw(address,address,address,uint256)","name":"adminWithdraw","description":"Used to manually withdraw funds from ERC safes.","parameterDecorators":[{"name":"handlerAddress","description":"Address of handler to withdraw from.","recommendedTypes":[]},{"name":"tokenAddress","description":"Address of token to withdraw.","recommendedTypes":[]},{"name":"recipient","description":"Address to withdraw tokens to.","recommendedTypes":[]},{"name":"amountOrTokenID","description":"Either the amount of ERC20 tokens or the ERC721 token ID to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"cancelProposal(uint8,uint64,bytes32)","name":"cancelProposal","description":"Executes a deposit proposal that is considered passed using a specified handler contract.Only callable by relayers when Bridge is not paused.Proposal must be past expiry threshold.Emits {ProposalEvent} event with status {Cancelled}.","parameterDecorators":[{"name":"chainID","description":"ID of chain deposit originated from.","recommendedTypes":[]},{"name":"depositNonce","description":"ID of deposited generated by origin Bridge contract.","recommendedTypes":[]},{"name":"dataHash","description":"Hash of data originally provided when deposit was made.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["ProposalEvent(uint8,uint64,uint8,bytes32,bytes32)"],"readOnly":false},{"signature":"deposit(uint8,bytes32,bytes)","name":"deposit","description":"Initiates a transfer using a specified handler contract.Only callable when Bridge is not paused.Emits {Deposit} event.","parameterDecorators":[{"name":"destinationChainID","description":"ID of chain deposit will be bridged to.","recommendedTypes":[]},{"name":"resourceID","description":"ResourceID used to find address of handler to be used for deposit.","recommendedTypes":[]},{"name":"data","description":"Additional data to be passed to specified handler.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["Deposit(uint8,bytes32,uint64)"],"readOnly":false},{"signature":"executeProposal(uint8,uint64,bytes,bytes32)","name":"executeProposal","description":"Executes a deposit proposal that is considered passed using a specified handler contract.Only callable by relayers when Bridge is not paused.Proposal must have Passed status.Hash of {data} must equal proposal's {dataHash}.Emits {ProposalEvent} event with status {Executed}.","parameterDecorators":[{"name":"chainID","description":"ID of chain deposit originated from.","recommendedTypes":[]},{"name":"depositNonce","description":"ID of deposited generated by origin Bridge contract.","recommendedTypes":[]},{"name":"data","description":"Data originally provided when deposit was made.","recommendedTypes":[]},{"name":"resourceID","description":"ResourceID to be used when making deposits.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["ProposalEvent(uint8,uint64,uint8,bytes32,bytes32)"],"readOnly":false},{"signature":"getProposal(uint8,uint64,bytes32)","name":"getProposal","description":"Returns a proposal.","parameterDecorators":[{"name":"originChainID","description":"Chain ID deposit originated from.","recommendedTypes":[]},{"name":"depositNonce","description":"ID of proposal generated by proposal's origin Bridge contract.","recommendedTypes":[]},{"name":"dataHash","description":"Hash of data to be provided when deposit proposal is executed.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Proposal which consists of: - _dataHash Hash of data to be provided when deposit proposal is executed. - _yesVotes Number of votes in favor of proposal. - _noVotes Number of votes against proposal. - _status Current status of proposal.","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isRelayer(address)","name":"isRelayer","description":"Returns true if {relayer} has the relayer role.","parameterDecorators":[{"name":"relayer","description":"Address to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceAdmin(address)","name":"renounceAdmin","description":"Removes admin role from {msg.sender} and grants it to {newAdmin}.Only callable by an address that currently has the admin role.","parameterDecorators":[{"name":"newAdmin","description":"Address that admin role will be granted to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"transferFunds(address[],uint256[])","name":"transferFunds","description":"Transfers eth in the contract to the specified addresses. The parameters addrs and amounts are mapped 1-1. This means that the address at index 0 for addrs will receive the amount (in WEI) from amounts at index 0.","parameterDecorators":[{"name":"addrs","description":"Array of addresses to transfer {amounts} to.","recommendedTypes":[]},{"name":"amounts","description":"Array of amonuts to transfer to {addrs}.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"voteProposal(uint8,uint64,bytes32,bytes32)","name":"voteProposal","description":"When called, {msg.sender} will be marked as voting in favor of proposal.Only callable by relayers when Bridge is not paused.Proposal must not have already been passed or executed.{msg.sender} must not have already voted on proposal.Emits {ProposalEvent} event with status indicating the proposal status.Emits {ProposalVote} event.","parameterDecorators":[{"name":"chainID","description":"ID of chain deposit originated from.","recommendedTypes":[]},{"name":"depositNonce","description":"ID of deposited generated by origin Bridge contract.","recommendedTypes":[]},{"name":"resourceID","description":"","recommendedTypes":[]},{"name":"dataHash","description":"Hash of data provided when deposit was made.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["ProposalEvent(uint8,uint64,uint8,bytes32,bytes32)","ProposalVote(uint8,uint64,uint8,bytes32)"],"readOnly":false}]}