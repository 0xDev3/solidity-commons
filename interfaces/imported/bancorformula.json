{"schema":"../schema.json","tags":[],"name":"BancorFormula","description":"","eventDecorators":[],"functionDecorators":[{"signature":"calculateCrossConnectorReturn(uint256,uint32,uint256,uint32,uint256)","name":"calculateCrossConnectorReturn","description":"deprecated, backward compatibility.","parameterDecorators":[{"name":"_fromConnectorBalance","description":"","recommendedTypes":[]},{"name":"_fromConnectorWeight","description":"","recommendedTypes":[]},{"name":"_toConnectorBalance","description":"","recommendedTypes":[]},{"name":"_toConnectorWeight","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateCrossReserveReturn(uint256,uint32,uint256,uint32,uint256)","name":"calculateCrossReserveReturn","description":"given two reserve balances/ratios and a sell amount (in the first reserve token), calculates the return for a conversion from the first reserve token to the second reserve token (in the second reserve token) note that prior to version 4, you should use 'calculateCrossConnectorReturn' instead Formula: Return = _toReserveBalance * (1 - (_fromReserveBalance / (_fromReserveBalance + _amount)) ^ (_fromReserveRatio / _toReserveRatio)).","parameterDecorators":[{"name":"_fromReserveBalance","description":"input reserve balance.","recommendedTypes":[]},{"name":"_fromReserveRatio","description":"input reserve ratio, represented in ppm, 1-1000000.","recommendedTypes":[]},{"name":"_toReserveBalance","description":"output reserve balance.","recommendedTypes":[]},{"name":"_toReserveRatio","description":"output reserve ratio, represented in ppm, 1-1000000.","recommendedTypes":[]},{"name":"_amount","description":"input reserve amount.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"second reserve amount.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateFundCost(uint256,uint256,uint32,uint256)","name":"calculateFundCost","description":"given a smart token supply, reserve balance, total ratio and an amount of requested smart tokens, calculates the amount of reserve tokens required for purchasing the given amount of smart tokens Formula: Return = _reserveBalance * (((_supply + _amount) / _supply) ^ (MAX_RATIO / _totalRatio) - 1).","parameterDecorators":[{"name":"_supply","description":"smart token supply.","recommendedTypes":[]},{"name":"_reserveBalance","description":"reserve token balance.","recommendedTypes":[]},{"name":"_totalRatio","description":"total ratio, represented in ppm, 2-2000000.","recommendedTypes":[]},{"name":"_amount","description":"requested amount of smart tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"amount of reserve tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateLiquidateReturn(uint256,uint256,uint32,uint256)","name":"calculateLiquidateReturn","description":"given a smart token supply, reserve balance, total ratio and an amount of smart tokens to liquidate, calculates the amount of reserve tokens received for selling the given amount of smart tokens Formula: Return = _reserveBalance * (1 - ((_supply - _amount) / _supply) ^ (MAX_RATIO / _totalRatio)).","parameterDecorators":[{"name":"_supply","description":"smart token supply.","recommendedTypes":[]},{"name":"_reserveBalance","description":"reserve token balance.","recommendedTypes":[]},{"name":"_totalRatio","description":"total ratio, represented in ppm, 2-2000000.","recommendedTypes":[]},{"name":"_amount","description":"amount of smart tokens to liquidate.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"amount of reserve tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculatePurchaseReturn(uint256,uint256,uint32,uint256)","name":"calculatePurchaseReturn","description":"given a token supply, reserve balance, ratio and a deposit amount (in the reserve token), calculates the return for a given conversion (in the main token) Formula: Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / 1000000) - 1).","parameterDecorators":[{"name":"_supply","description":"token total supply.","recommendedTypes":[]},{"name":"_reserveBalance","description":"total reserve balance.","recommendedTypes":[]},{"name":"_reserveRatio","description":"reserve ratio, represented in ppm, 1-1000000.","recommendedTypes":[]},{"name":"_depositAmount","description":"deposit amount, in reserve token.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"purchase return amount.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateSaleReturn(uint256,uint256,uint32,uint256)","name":"calculateSaleReturn","description":"given a token supply, reserve balance, ratio and a sell amount (in the main token), calculates the return for a given conversion (in the reserve token) Formula: Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1000000 / _reserveRatio)).","parameterDecorators":[{"name":"_supply","description":"token total supply.","recommendedTypes":[]},{"name":"_reserveBalance","description":"total reserve.","recommendedTypes":[]},{"name":"_reserveRatio","description":"constant reserve Ratio, represented in ppm, 1-1000000.","recommendedTypes":[]},{"name":"_sellAmount","description":"sell amount, in the token itself.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"sale return amount.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"version()","name":"version","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint16"}],"emittableEvents":[],"readOnly":true}]}