{
  "schema": "../schema.json",
  "tags": [],
  "name": "Marketplace",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AuctionBuffersUpdated(uint256,uint256)",
      "name": "AuctionBuffersUpdated",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "timeBuffer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "bidBufferBps",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AuctionClosed(uint256,address,bool,address,address)",
      "name": "AuctionClosed",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "listingId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "closer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "cancelled",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "auctionCreator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "winningBidder",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Initialized(uint8)",
      "name": "Initialized",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "version",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ListingAdded(uint256,address,address,uint256,uint256,uint256,uint256,address,uint256,uint256,uint8,uint8)",
      "name": "ListingAdded",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "listingId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "assetContract",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "quantity",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "currency",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "reservePricePerToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "buyoutPricePerToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "listingType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ListingRemoved(uint256,address)",
      "name": "ListingRemoved",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "listingId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "listingCreator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ListingUpdated(uint256,address)",
      "name": "ListingUpdated",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "listingId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "listingCreator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NewOffer(uint256,address,uint8,uint256,uint256,address)",
      "name": "NewOffer",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "listingId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "offeror",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "listingType",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "quantityWanted",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "totalOfferAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "currency",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewSale(uint256,address,address,address,uint256,uint256)",
      "name": "NewSale",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "listingId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "assetContract",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lister",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "quantityBought",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "totalPricePaid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PlatformFeeInfoUpdated(address,uint256)",
      "name": "PlatformFeeInfoUpdated",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "platformFeeRecipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "platformFeeBps",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_BPS()",
      "name": "MAX_BPS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "acceptOffer(uint256,address,address,uint256)",
      "name": "acceptOffer",
      "description": "Lets a listing's creator accept an offer for their direct listing.",
      "parameterDecorators": [
        {
          "name": "_listingId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_offeror",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_currency",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_pricePerToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bidBufferBps()",
      "name": "bidBufferBps",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buy(uint256,address,uint256,address,uint256)",
      "name": "buy",
      "description": "Lets an account buy a given quantity of tokens from a listing.",
      "parameterDecorators": [
        {
          "name": "_listingId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_buyFor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_quantityToBuy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_currency",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_totalPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cancelDirectListing(uint256)",
      "name": "cancelDirectListing",
      "description": "Lets a direct listing creator cancel their listing.",
      "parameterDecorators": [
        {
          "name": "_listingId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "closeAuction(uint256,address)",
      "name": "closeAuction",
      "description": "Lets an account close an auction for either the (1) winning bidder, or (2) auction creator.",
      "parameterDecorators": [
        {
          "name": "_listingId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_closeFor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "contractType()",
      "name": "contractType",
      "description": "Returns the type of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "contractURI()",
      "name": "contractURI",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "contractVersion()",
      "name": "contractVersion",
      "description": "Returns the version of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createListing(tuple(address,uint256,uint256,uint256,uint256,address,uint256,uint256,uint8))",
      "name": "createListing",
      "description": "Lets a token owner list tokens for sale: Direct Listing or Auction.",
      "parameterDecorators": [
        {
          "name": "_params",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "assetContract",
              "description": "",
              "type": "address"
            },
            {
              "name": "tokenId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "startTime",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "secondsUntilEndTime",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "quantityToList",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "currencyToAccept",
              "description": "",
              "type": "address"
            },
            {
              "name": "reservePricePerToken",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "buyoutPricePerToken",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "listingType",
              "description": "",
              "type": "uint8"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getPlatformFeeInfo()",
      "name": "getPlatformFeeInfo",
      "description": "Returns the platform fee recipient and bps.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleMember(bytes32,uint256)",
      "name": "getRoleMember",
      "description": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleMemberCount(bytes32)",
      "name": "getRoleMemberCount",
      "description": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,string,address[],address,uint256)",
      "name": "initialize",
      "description": "Initiliazes the contract, like a constructor.",
      "parameterDecorators": [
        {
          "name": "_defaultAdmin",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_contractURI",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_trustedForwarders",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_platformFeeRecipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_platformFeeBps",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isTrustedForwarder(address)",
      "name": "isTrustedForwarder",
      "description": "",
      "parameterDecorators": [
        {
          "name": "forwarder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "listings(uint256)",
      "name": "listings",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "listingId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tokenOwner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "assetContract",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "quantity",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "currency",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "reservePricePerToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "buyoutPricePerToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tokenType",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "listingType",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "multicall(bytes[])",
      "name": "multicall",
      "description": "Receives and executes a batch of function calls on this contract.",
      "parameterDecorators": [
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "results",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "offer(uint256,uint256,address,uint256,uint256)",
      "name": "offer",
      "description": "Lets an account (1) make an offer to a direct listing, or (2) make a bid in an auction.",
      "parameterDecorators": [
        {
          "name": "_listingId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_quantityWanted",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_currency",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_pricePerToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_expirationTimestamp",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "offers(uint256,address)",
      "name": "offers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "listingId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "offeror",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "quantityWanted",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "currency",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "pricePerToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "expirationTimestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
      "name": "onERC1155BatchReceived",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onERC1155Received(address,address,uint256,uint256,bytes)",
      "name": "onERC1155Received",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onERC721Received(address,address,uint256,bytes)",
      "name": "onERC721Received",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "setAuctionBuffers(uint256,uint256)",
      "name": "setAuctionBuffers",
      "description": "Lets a contract admin set auction buffers.",
      "parameterDecorators": [
        {
          "name": "_timeBuffer",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bidBufferBps",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setContractURI(string)",
      "name": "setContractURI",
      "description": "Lets a contract admin set the URI for the contract-level metadata.",
      "parameterDecorators": [
        {
          "name": "_uri",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPlatformFeeInfo(address,uint256)",
      "name": "setPlatformFeeInfo",
      "description": "Lets a contract admin update platform fee recipient and bps.",
      "parameterDecorators": [
        {
          "name": "_platformFeeRecipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_platformFeeBps",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "thirdwebFee()",
      "name": "thirdwebFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "timeBuffer()",
      "name": "timeBuffer",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalListings()",
      "name": "totalListings",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateListing(uint256,uint256,uint256,uint256,address,uint256,uint256)",
      "name": "updateListing",
      "description": "Lets a listing's creator edit the listing's parameters.",
      "parameterDecorators": [
        {
          "name": "_listingId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_quantityToList",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_reservePricePerToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_buyoutPricePerToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_currencyToAccept",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startTime",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_secondsUntilEndTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "winningBid(uint256)",
      "name": "winningBid",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "listingId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "offeror",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "quantityWanted",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "currency",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "pricePerToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "expirationTimestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}