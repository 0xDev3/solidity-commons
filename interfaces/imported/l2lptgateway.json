{"schema":"../schema.json","tags":["tokens","arbitrum"],"name":"L2LPTGateway","description":"L2LPTGateway. the contract can be paused by the governor which will prevent any outbound transfers but pausing the contract does not affect inbound transfers (tokens coming from L1). Manages inbound and outbound transfers of LPT between Arbitrum Rollup and L1.","eventDecorators":[{"signature":"DepositFinalized(address,address,address,uint256)","name":"DepositFinalized","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"_l1Token","description":"","recommendedTypes":[],"indexed":true},{"name":"_from","description":"","recommendedTypes":[],"indexed":true},{"name":"_to","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"L1CounterpartUpdate(address)","name":"L1CounterpartUpdate","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"_l1Counterpart","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Paused(address)","name":"Paused","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TxToL1(address,address,uint256,bytes)","name":"TxToL1","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[],"indexed":true},{"name":"_to","description":"","recommendedTypes":[],"indexed":true},{"name":"_id","description":"","recommendedTypes":[],"indexed":true},{"name":"_data","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WithdrawalInitiated(address,address,address,uint256,uint256,uint256)","name":"WithdrawalInitiated","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"_l1Token","description":"","recommendedTypes":[],"indexed":false},{"name":"_from","description":"","recommendedTypes":[],"indexed":true},{"name":"_to","description":"","recommendedTypes":[],"indexed":true},{"name":"_l2ToL1Id","description":"","recommendedTypes":[],"indexed":true},{"name":"_exitNum","description":"","recommendedTypes":[],"indexed":false},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateL2TokenAddress(address)","name":"calculateL2TokenAddress","description":"returns address of L2 version of LPT.","parameterDecorators":[{"name":"l1Token","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"counterpartGateway()","name":"counterpartGateway","description":"returns address of L1 LPT Gateway.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"finalizeInboundTransfer(address,address,address,uint256,bytes)","name":"finalizeInboundTransfer","description":"Receives token amount from L1 and mints the equivalent tokens to the receiving address. can only accept txs coming directly from L1 LPT Gateway data param is unused because no additional data is allowed from L1.","parameterDecorators":[{"name":"_l1Token","description":"L1 Address of LPT.","recommendedTypes":[]},{"name":"_from","description":"Address of the sender on L1.","recommendedTypes":[]},{"name":"_to","description":"Recepient address on L2.","recommendedTypes":[]},{"name":"_amount","description":"Amount of tokens transferred.","recommendedTypes":[]},{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getOutboundCalldata(address,address,address,uint256,bytes)","name":"getOutboundCalldata","description":"Creates calldata required to send tx to L1. encodes the target function with its params which will be called on L1 when the message is received on L1.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]},{"name":"from","description":"","recommendedTypes":[]},{"name":"to","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"outboundCalldata","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"l1Counterpart()","name":"l1Counterpart","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"l1Lpt()","name":"l1Lpt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"l2LPTDataCache()","name":"l2LPTDataCache","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"l2Lpt()","name":"l2Lpt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"l2Router()","name":"l2Router","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"outboundTransfer(address,address,uint256,bytes)","name":"outboundTransfer","description":"Burns L2 tokens and sends a message to L1 The tokens will be received on L1 only after the wait period (7 days) is over. no additional callhook data is allowed.","parameterDecorators":[{"name":"_l1Token","description":"L1 Address of LPT.","recommendedTypes":[]},{"name":"_to","description":"Recipient address on L1.","recommendedTypes":[]},{"name":"_amount","description":"Amount of tokens to burn.","recommendedTypes":[]},{"name":"_data","description":"Contains sender and additional data to send to L1.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"ID of the withdraw tx.","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"outboundTransfer(address,address,uint256,uint256,uint256,bytes)","name":"outboundTransfer","description":"Burns L2 tokens and sends a message to L1 The tokens will be received on L1 only after the wait period (7 days) is over. no additional callhook data is allowed.","parameterDecorators":[{"name":"_l1Token","description":"L1 Address of LPT.","recommendedTypes":[]},{"name":"_to","description":"Recipient address on L1.","recommendedTypes":[]},{"name":"_amount","description":"Amount of tokens to burn.","recommendedTypes":[]},{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"_data","description":"Contains sender and additional data (always zero) to send to L1.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"ID of the withdraw tx.","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"pause()","name":"pause","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"setCounterpart(address)","name":"setCounterpart","description":"Sets address of companion L1LPTGateway. Only address with the governor role is allowed to change the value of l1Counterpart.","parameterDecorators":[{"name":"_l1Counterpart","description":"L1 Address of the counterpart.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"unpause()","name":"unpause","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}