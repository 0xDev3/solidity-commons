{
  "schema": "../schema.json",
  "tags": [
    "locking"
  ],
  "name": "Blockrunner",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "addMember(address)",
      "name": "addMember",
      "description": "addMember adds an address to the members mapping. It is restricted to the owner and the new address can't be a member already.",
      "parameterDecorators": [
        {
          "name": "_member",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBalance()",
      "name": "getBalance",
      "description": "getBalance returns the contract's ETH balance.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "swap(address,uint256,uint256)",
      "name": "swap",
      "description": "swap uses the Router02 contract to swap ETH for tokens using swapExactETHForTokens. _targetToken is the target token address, amountOutMin is the minimum number of tokens wanted (required by the swapExactETHForTokens method), and deadline is the Unix timestamp that marks the end of this swap request. It required the caller to be a member.",
      "parameterDecorators": [
        {
          "name": "_targetToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amountOutMin",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_deadline",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniswapRouter()",
      "name": "uniswapRouter",
      "description": "Necessary interfaces.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "withdraw transfers an amount back to the sender. It is restricted to the owner.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}