{"schema":"../schema.json","tags":["tokens","swaps","nft"],"name":"NftTokenSwap","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TokenBoxChanged(address)","name":"TokenBoxChanged","description":"","parameterDecorators":[{"name":"toToken","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TokenChanged(address)","name":"TokenChanged","description":"","parameterDecorators":[{"name":"toToken","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TokenPurchased(address,address,uint256,uint256,uint256,uint256)","name":"TokenPurchased","description":"Event for token purchase logging.","parameterDecorators":[{"name":"spender","description":"who paid for the tokens.","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":true},{"name":"typeId","description":"of the token sold.","recommendedTypes":[],"indexed":true},{"name":"totalSupply","description":"of the token type included the purchase that trigger the event.","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"of the token type sold.","recommendedTypes":[],"indexed":false},{"name":"value","description":"in wei involved in the purchase.","recommendedTypes":[],"indexed":false}]},{"signature":"TokenStorageChanged(address)","name":"TokenStorageChanged","description":"","parameterDecorators":[{"name":"toToken","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TokenSwapChanged(uint256,uint256)","name":"TokenSwapChanged","description":"","parameterDecorators":[{"name":"fromTypeId","description":"","recommendedTypes":[],"indexed":false},{"name":"quantityToMint","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokenSwapMappingChanged(uint256,uint256,uint256)","name":"TokenSwapMappingChanged","description":"","parameterDecorators":[{"name":"fromTypeId","description":"","recommendedTypes":[],"indexed":false},{"name":"order","description":"","recommendedTypes":[],"indexed":false},{"name":"toTypeId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokenSwapStorageChanged(address)","name":"TokenSwapStorageChanged","description":"","parameterDecorators":[{"name":"toToken","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TokenSwapped(address,uint256,uint256,uint256,uint256)","name":"TokenSwapped","description":"","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"fromTypeId","description":"","recommendedTypes":[],"indexed":true},{"name":"toTypeId","description":"","recommendedTypes":[],"indexed":true},{"name":"fromTokenId","description":"","recommendedTypes":[],"indexed":false},{"name":"toTokenId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokenToyoChanged(address)","name":"TokenToyoChanged","description":"","parameterDecorators":[{"name":"toToken","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"MINTER_ROLE()","name":"MINTER_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"PAUSER_ROLE()","name":"PAUSER_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenSwapMapping(uint256,uint256)","name":"getTokenSwapMapping","description":"","parameterDecorators":[{"name":"_fromTypeId","description":"","recommendedTypes":[]},{"name":"_order","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"toTypeId","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenSwapQuantity(uint256)","name":"getTokenSwapQuantity","description":"","parameterDecorators":[{"name":"_fromTypeId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"hasMetadataByToken(uint256,uint256)","name":"hasMetadataByToken","description":"","parameterDecorators":[{"name":"_fromTypeId","description":"","recommendedTypes":[]},{"name":"_order","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"metadataByToken","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pauseAll()","name":"pauseAll","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"setToken(address)","name":"setToken","description":"","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTokenBox(address)","name":"setTokenBox","description":"","parameterDecorators":[{"name":"_tokenBox","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTokenStorage(address)","name":"setTokenStorage","description":"","parameterDecorators":[{"name":"_tokenStorage","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTokenSwapMapping(uint256,uint256,uint256,bool)","name":"setTokenSwapMapping","description":"","parameterDecorators":[{"name":"_fromTypeId","description":"","recommendedTypes":[]},{"name":"_order","description":"","recommendedTypes":[]},{"name":"_toTypeId","description":"","recommendedTypes":[]},{"name":"_metadataByToken","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTokenSwapQuantity(uint256,uint256)","name":"setTokenSwapQuantity","description":"","parameterDecorators":[{"name":"_fromTypeId","description":"","recommendedTypes":[]},{"name":"_quantityToMint","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTokenSwapStorage(address)","name":"setTokenSwapStorage","description":"","parameterDecorators":[{"name":"_tokenSwapStorage","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTokenToyo(address)","name":"setTokenToyo","description":"","parameterDecorators":[{"name":"_tokenToyo","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"swapToken(address,uint256,uint256)","name":"swapToken","description":"","parameterDecorators":[{"name":"_sender","description":"","recommendedTypes":[]},{"name":"_tokenId","description":"","recommendedTypes":[]},{"name":"_typeId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenBox()","name":"tokenBox","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenStorage()","name":"tokenStorage","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenSwapStorage()","name":"tokenSwapStorage","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenToyo()","name":"tokenToyo","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenURI(uint256,uint256,bool)","name":"tokenURI","description":"","parameterDecorators":[{"name":"typeId","description":"","recommendedTypes":[]},{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"byToken","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpauseAll()","name":"unpauseAll","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}