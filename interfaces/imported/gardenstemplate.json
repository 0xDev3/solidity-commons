{"schema":"../schema.json","tags":[],"name":"GardensTemplate","description":"","eventDecorators":[{"signature":"GardenTransactionTwo(address,address,address)","name":"GardenTransactionTwo","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"dao","description":"","recommendedTypes":[],"indexed":false},{"name":"incentivisedPriceOracle","description":"","recommendedTypes":[],"indexed":false},{"name":"unipool","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"GardenDeployed(address,address)","name":"GardenDeployed","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"gardenAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"collateralRequirementUpdater","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DeployDao(address)","name":"DeployDao","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"dao","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetupDao(address)","name":"SetupDao","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"dao","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DeployToken(address)","name":"DeployToken","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"InstalledApp(address,bytes32)","name":"InstalledApp","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"appProxy","description":"","recommendedTypes":[],"indexed":false},{"name":"appId","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"AGREEMENT_APP_ID()","name":"AGREEMENT_APP_ID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"UPDATE_PERCENT_REWARD()","name":"UPDATE_PERCENT_REWARD","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"MIN_XDAI_IN_HNY_REQUIRED_FOR_NEW_GARDEN()","name":"MIN_XDAI_IN_HNY_REQUIRED_FOR_NEW_GARDEN","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"CONVICTION_VOTING_APP_ID()","name":"CONVICTION_VOTING_APP_ID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"stakingFactory()","name":"stakingFactory","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"honeyToken()","name":"honeyToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"AGGREGATE_TOKEN_PREPEND_SYMBOL()","name":"AGGREGATE_TOKEN_PREPEND_SYMBOL","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"honeyPriceOracle()","name":"honeyPriceOracle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"createGardenTxOne(address,string,string,uint256[4],uint64[7])","name":"createGardenTxOne","description":"Create the DAO and initialise the basic apps necessary for gardens.","parameterDecorators":[{"name":"_existingToken","description":"An existing token used for the common pool token. Set to address(0) to create a new token.","recommendedTypes":[]},{"name":"_gardenTokenName","description":"DAO governance new token name.","recommendedTypes":[]},{"name":"_gardenTokenSymbol","description":"DAO governance new token symbol.","recommendedTypes":[]},{"name":"_initialAmountAndLiquidity","description":"Array of [commonPoolAmount, honeyTokenLiquidityInXdai, gardenTokenLiquidity, existingTokenLiquidity] commonPoolAmount Amount created for the common pool. Unused if _existingToken is set honeyTokenLiquidityInXdai Liquidity to add to the HNY/(GDN/_existingToken) pair. gardenTokenLiquidity Liquidity to add to the HNY/GDN pair. Unused if _existingToken is set existingTokenLiquidity Liquidity to add to the HNY/_existingToken pair. Unused it _existingToken is address(0).","recommendedTypes":[]},{"name":"_disputableVotingSettings","description":"Array of [voteDuration, voteSupportRequired, voteMinAcceptanceQuorum, voteDelegatedVotingPeriod, voteQuietEndingPeriod, voteQuietEndingExtension, voteExecutionDelay] to set up the voting app of the organization.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"DISPUTABLE_VOTING_APP_ID()","name":"DISPUTABLE_VOTING_APP_ID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"createGardenTxThree(string,string,bytes,uint64,uint256[2],uint256[],uint256[])","name":"createGardenTxThree","description":"Add, initialise and activate the agreement.","parameterDecorators":[{"name":"_daoId","description":"The ENS ID assigned to this DAO.","recommendedTypes":[]},{"name":"_agreementTitle","description":"String indicating a short description.","recommendedTypes":[]},{"name":"_agreementContent","description":"Link to a human-readable text that describes the initial rules for the Agreement.","recommendedTypes":[]},{"name":"_challengeDuration","description":"Challenge duration, during which the submitter can raise a dispute.","recommendedTypes":[]},{"name":"_initialFees","description":"Array of fees settings: [actionFee, challangeFee].","recommendedTypes":[]},{"name":"_actionAmountsStable","description":"The action amount specified as a stable value (eg in xdai).","recommendedTypes":[]},{"name":"_challengeAmountsStable","description":"The challenge amount specified as a stable value (eg in xdai).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"collateralRequirementUpdaterFactory()","name":"collateralRequirementUpdaterFactory","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"arbitrator()","name":"arbitrator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"VOTING_AGGREGATOR_APP_ID()","name":"VOTING_AGGREGATOR_APP_ID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"createGardenTxTwo(uint256[2],uint64[4],address)","name":"createGardenTxTwo","description":"Add and initialise issuance and conviction voting.","parameterDecorators":[{"name":"_issuanceSettings","description":"Array of issuance settings: [targetRatio, maxAdjustmentRatioPerSecond]. Unused if existingToken is set in transaction one.","recommendedTypes":[]},{"name":"_convictionSettings","description":"Array of conviction settings: [decay, max_ratio, weight, min_threshold_stake_percentage].","recommendedTypes":[]},{"name":"_convictionVotingRequestToken","description":"The Garden's common pool token, requested using conviction voting. If set to address(0) the Garden will use it's main token.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"uniswapFactory()","name":"uniswapFactory","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"DYNAMIC_ISSUANCE_APP_ID()","name":"DYNAMIC_ISSUANCE_APP_ID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"honeyswapRouter()","name":"honeyswapRouter","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"createTokenHolders(address[],uint256[])","name":"createTokenHolders","description":"Add tokenholders, only accessible between the first and second createDao transactions and if no existing token was specified. Note will fail if called incorrectly due to missing mint permission.","parameterDecorators":[{"name":"_holders","description":"List of initial tokenholder addresses.","recommendedTypes":[]},{"name":"_stakes","description":"List of intial tokenholder amounts.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"miniMeWithPermitFactory()","name":"miniMeWithPermitFactory","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"stableToken()","name":"stableToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"AGGREGATE_TOKEN_PREPEND_NAME()","name":"AGGREGATE_TOKEN_PREPEND_NAME","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"AVERAGE_PRICE_PERIOD()","name":"AVERAGE_PRICE_PERIOD","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"unipoolFactory()","name":"unipoolFactory","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"UPDATE_FREQUENCY()","name":"UPDATE_FREQUENCY","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"incentivisedPriceOracleFactory()","name":"incentivisedPriceOracleFactory","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"HOOKED_TOKEN_MANAGER_APP_ID()","name":"HOOKED_TOKEN_MANAGER_APP_ID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"GARDEN_TOKEN_AGGREGATOR_WEIGHT()","name":"GARDEN_TOKEN_AGGREGATOR_WEIGHT","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}