{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "CFDVault",
  "description": "",
  "eventDecorators": [
    {
      "signature": "BadDebtResolved(address,uint256)",
      "name": "BadDebtResolved",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "exchange",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "badDebt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityAdd(address,address,uint256,uint256)",
      "name": "LiquidityAdd",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "exchange",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lpfund",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenamount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityModify(address,uint256)",
      "name": "LiquidityModify",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "exchange",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lpfund",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityRemove(address,address,uint256,uint256)",
      "name": "LiquidityRemove",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "exchange",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lpfund",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenamount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addCachedLiquidity(address,tuple(uint256))",
      "name": "addCachedLiquidity",
      "description": "addCachedLiquidity (trader fee, overnight fee, trading spread).",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "exchange address.",
          "recommendedTypes": []
        },
        {
          "name": "_DeltalpLiquidity",
          "description": "liquidity amount to be added.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addLiquidity(address,tuple(uint256))",
      "name": "addLiquidity",
      "description": "addLiquidity to Exchange.",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "IExchange address.",
          "recommendedTypes": []
        },
        {
          "name": "_quoteAssetAmount",
          "description": "quote asset amount in 18 digits. Can Not be 0.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cfd()",
      "name": "cfd",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLpTokenPrice(address)",
      "name": "getLpTokenPrice",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "tokenPriceWithFee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMMCachedLiquidity(address)",
      "name": "getMMCachedLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMMLiquidity(address)",
      "name": "getMMLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalLpLiquidityAndUnrealizedPNL(address)",
      "name": "getTotalLpLiquidityAndUnrealizedPNL",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "totalLpLiquidity",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        },
        {
          "name": "totalLpUnrealizedPNL",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalLpUnrealizedPNL(address)",
      "name": "getTotalLpUnrealizedPNL",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_cfd",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_systemSettings",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "modifyLiquidity()",
      "name": "modifyLiquidity",
      "description": "modifyLiquidity (trader fee, overnight fee, trader spread).",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "realizeBadDebt(address,tuple(uint256))",
      "name": "realizeBadDebt",
      "description": "realize bad debt. insurance fund will pay first, lp fund will pay the rest. only CFD can call.",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "IExchange address.",
          "recommendedTypes": []
        },
        {
          "name": "_badDebt",
          "description": "amount of the bad debt.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeLiquidity(address,tuple(uint256))",
      "name": "removeLiquidity",
      "description": "remove Liquidity from Exchange.",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "IExchange address.",
          "recommendedTypes": []
        },
        {
          "name": "_lpTokenAmount",
          "description": "lp token asset amount in 18 digits. Can Not be 0.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeLiquidityWhenShutdown(address)",
      "name": "removeLiquidityWhenShutdown",
      "description": "remove Liquidity from Exchange when shutdown.",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "IExchange address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "requireMMNotBankrupt(address)",
      "name": "requireMMNotBankrupt",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setCFD(address)",
      "name": "setCFD",
      "description": "set CFD dependency. only owner can call.",
      "parameterDecorators": [
        {
          "name": "_cfd",
          "description": "address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSystemSettings(address)",
      "name": "setSystemSettings",
      "description": "set systemSettings dependency. only owner can call.",
      "parameterDecorators": [
        {
          "name": "_systemSettings",
          "description": "address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "systemSettings()",
      "name": "systemSettings",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(address,address,tuple(uint256))",
      "name": "withdraw",
      "description": "withdraw token to trader/liquidator. only CFD can call.",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "exchange address.",
          "recommendedTypes": []
        },
        {
          "name": "_receiver",
          "description": "receiver, could be trader or liquidator.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "token amount.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}