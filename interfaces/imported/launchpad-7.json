{"schema":"../schema.json","tags":[],"name":"Launchpad","description":"","eventDecorators":[{"signature":"Claimed(address,uint256)","name":"Claimed","description":"events for transfer. Emitted when tokens are claimed by user.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"events for transfer.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Received(address,uint256,uint256)","name":"Received","description":"events for transfer. Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"price","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"allowWithdraw()","name":"allowWithdraw","description":"call this if you want to allow withdraw before sale time, this could happen if sold out happen. It is recommended allow withdraw only after Uniswap pool is set.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"close()","name":"close","description":"Destroy the contract if a problem occurs with the contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getDetails()","name":"getDetails","description":"Function to get data/details of project.","parameterDecorators":[],"returnDecorators":[{"name":"start","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"end","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"raisedETH","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"tokensForSale","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"minContribution","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"maxContribution","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"priceOTC1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"thresholdOTC1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"priceOTC2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"thresholdOTC2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"priceOTC3","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"maxCap","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"uniListing","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getResume()","name":"getResume","description":"Function to get resume of the project, all main informations.","parameterDecorators":[],"returnDecorators":[{"name":"siteUrl","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"tokenName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"start","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"end","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"maxCap","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"raisedETH","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTexts()","name":"getTexts","description":"Function to get all texts of project.","parameterDecorators":[],"returnDecorators":[{"name":"siteUrl","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"paperUrl","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"twitterUrl","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"telegramUrl","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"mediumUrl","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"gitUrl","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"discordUrl","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenInfos()","name":"getTokenInfos","description":"Function to get all token info.","parameterDecorators":[],"returnDecorators":[{"name":"tokenMint","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"tokenName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"tokenSymbol","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"tokenTotalSupply","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"release()","name":"release","description":"Transfers tokens held by sale smartcontract back to dev after 5 days of sale finished. Transfer tokens back to user before call this function.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setDetails(string,string,string,string,string,string,string,string,string,string,uint256,uint256,bool,bool)","name":"setDetails","description":"Function to set projetct details.","parameterDecorators":[{"name":"tokenName","description":"- token name.","recommendedTypes":[]},{"name":"tokenSymbol","description":"- token symbol.","recommendedTypes":[]},{"name":"siteUrl","description":"- site url.","recommendedTypes":[]},{"name":"paperUrl","description":"- paper url.","recommendedTypes":[]},{"name":"twitterUrl","description":"- twitter url.","recommendedTypes":[]},{"name":"telegramUrl","description":"- telegram url.","recommendedTypes":[]},{"name":"mediumUrl","description":"- medium url.","recommendedTypes":[]},{"name":"gitUrl","description":"- git url.","recommendedTypes":[]},{"name":"discordUrl","description":"- discord url.","recommendedTypes":[]},{"name":"tokenDesc","description":"- token desc.","recommendedTypes":[]},{"name":"tokensForSale","description":"- amount tokens for sale.","recommendedTypes":[]},{"name":"tokenTotalSupply","description":"- total token supply.","recommendedTypes":[]},{"name":"uniListing","description":"- is uniswap listing.","recommendedTypes":[]},{"name":"tokenMint","description":"- is token mint.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setEndTime(uint256)","name":"setEndTime","description":"Function to set the end time.","parameterDecorators":[{"name":"end","description":"- end time.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userWithdrawBalance()","name":"userWithdrawBalance","description":"user withdraw balance.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"userWithdrawBalanceOf(address)","name":"userWithdrawBalanceOf","description":"user withdraw balance.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"wallet()","name":"wallet","description":"Returns wallet which receives OTC funds.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawAllowed()","name":"withdrawAllowed","description":"check if withdraw is allowed already.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawByTokens(address)","name":"withdrawByTokens","description":"call this if user not know how to call withdraw tokens function, this withdraw tokens to user in their behalf.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawETH()","name":"withdrawETH","description":"Return ETH raised to project. Dev can withdraw at any time, part of OTC value is needed to setup Uniswap Liquidity, so it is needed to withdraw before users.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawTokens()","name":"withdrawTokens","description":"User can withdraw after end of sale time or if withdraw is allowed.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}