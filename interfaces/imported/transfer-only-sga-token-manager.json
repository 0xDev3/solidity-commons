{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "TransferOnlySGATokenManager",
  "description": "Transfer Only SGA Token Manager.",
  "eventDecorators": [
    {
      "signature": "WithdrawCompleted(address,uint256,uint256)",
      "name": "WithdrawCompleted",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_balance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "exchangeEthForSga(address,uint256)",
      "name": "exchangeEthForSga",
      "description": "Exchange ETH for SGA.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "The address of the sender.",
          "recommendedTypes": []
        },
        {
          "name": "_ethAmount",
          "description": "The amount of ETH received.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "postTransferEthToSgaHolder(address,uint256,bool)",
      "name": "postTransferEthToSgaHolder",
      "description": "Upon ETH transfer to an SGA holder.",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "The address of the SGA holder.",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "The amount of ETH to transfer.",
          "recommendedTypes": []
        },
        {
          "name": "_status",
          "description": "The operation's completion-status.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uponMintSgaForSgnHolders(uint256)",
      "name": "uponMintSgaForSgnHolders",
      "description": "Upon SGA mint for SGN holders.",
      "parameterDecorators": [
        {
          "name": "_value",
          "description": "The amount of SGA to mint.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uponTransferFrom(address,address,address,uint256)",
      "name": "uponTransferFrom",
      "description": "Handle custodian SGA transfer.Any authorization not required.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "The address of the sender.",
          "recommendedTypes": []
        },
        {
          "name": "_from",
          "description": "The address of the source account.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "The address of the destination account.",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "The amount of SGA to be transferred.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getSGRTokenContractAddress()",
      "name": "getSGRTokenContractAddress",
      "description": "Return the contract address which implements the SGRToken.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getContractAddressLocator()",
      "name": "getContractAddressLocator",
      "description": "Get the contract address locator.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDepositParams()",
      "name": "getDepositParams",
      "description": "Get the address of the reserve-wallet and the deficient amount of ETH in the SGAToken contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uponWithdraw(address,uint256)",
      "name": "uponWithdraw",
      "description": "Handle the operation of ETH withdrawal from the SGAToken contract.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "The address of the account which has issued the operation.",
          "recommendedTypes": []
        },
        {
          "name": "_balance",
          "description": "The amount of ETH in the SGAToken contract prior the withdrawal.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exchangeSgaForEth(address,uint256)",
      "name": "exchangeSgaForEth",
      "description": "Exchange SGA for ETH.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "The address of the sender.",
          "recommendedTypes": []
        },
        {
          "name": "_sgaAmount",
          "description": "The amount of SGA received.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uponTransfer(address,address,uint256)",
      "name": "uponTransfer",
      "description": "Handle direct SGA transfer.Any authorization not required.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "The address of the sender.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "The address of the destination account.",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "The amount of SGA to be transferred.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getWithdrawParams()",
      "name": "getWithdrawParams",
      "description": "Get the address of the reserve-wallet and the excessive amount of ETH in the SGAToken contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uponTransferSgaToSgnHolder(address,uint256)",
      "name": "uponTransferSgaToSgnHolder",
      "description": "Upon SGA transfer to an SGN holder.",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "The address of the SGN holder.",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "The amount of SGA to transfer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uponDeposit(address,uint256,uint256)",
      "name": "uponDeposit",
      "description": "Handle the operation of ETH deposit into the SGAToken contract.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "The address of the account which has issued the operation.",
          "recommendedTypes": []
        },
        {
          "name": "_balance",
          "description": "The amount of ETH in the SGAToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "The deposited ETH amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "VERSION()",
      "name": "VERSION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}