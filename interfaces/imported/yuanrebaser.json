{
  "schema": "../schema.json",
  "tags": [],
  "name": "YUANRebaser",
  "description": "",
  "eventDecorators": [
    {
      "signature": "NewDeviationThreshold(uint256,uint256)",
      "name": "NewDeviationThreshold",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "oldDeviationThreshold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newDeviationThreshold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewGov(address,address)",
      "name": "NewGov",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "oldGov",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newGov",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewMaxSlippageFactor(uint256,uint256)",
      "name": "NewMaxSlippageFactor",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "oldSlippageFactor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newSlippageFactor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewPendingGov(address,address)",
      "name": "NewPendingGov",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "oldPendingGov",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newPendingGov",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewPriceOracle(address,address)",
      "name": "NewPriceOracle",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "oldPriceOracle",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newPriceOracle",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewRebaseMintPercent(uint256,uint256,uint256)",
      "name": "NewRebaseMintPercent",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewReserveContract(uint256,address,address)",
      "name": "NewReserveContract",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransactionFailed(address,uint256,bytes)",
      "name": "TransactionFailed",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TreasuryIncreased(uint256,uint256,uint256,uint256)",
      "name": "TreasuryIncreased",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "reservesAdded",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "yuansSold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "yuansFromReserves",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "yuansToReserves",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BASE()",
      "name": "BASE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_MINT_PERC_PARAM()",
      "name": "MAX_MINT_PERC_PARAM",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_SLIPPAGE_PARAM()",
      "name": "MAX_SLIPPAGE_PARAM",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_acceptGov()",
      "name": "_acceptGov",
      "description": "lets msg.sender accept governance.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "_setPendingGov(address)",
      "name": "_setPendingGov",
      "description": "sets the pendingGov.",
      "parameterDecorators": [
        {
          "name": "pendingGov_",
          "description": "The address of the rebaser contract to use for authentication.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "activate_rebasing()",
      "name": "activate_rebasing",
      "description": "Activates rebasing. One way function, cannot be undone, callable by anyone.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addSyncPairs(address[],address[])",
      "name": "addSyncPairs",
      "description": "Adds pairs to sync.",
      "parameterDecorators": [
        {
          "name": "uniSyncPairs_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "balGulpPairs_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addTransaction(address,bytes)",
      "name": "addTransaction",
      "description": "Adds a transaction that gets called for a downstream receiver of rebases.",
      "parameterDecorators": [
        {
          "name": "destination",
          "description": "Address of contract destination.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Transaction data payload.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balGulpPairs(uint256)",
      "name": "balGulpPairs",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "blockTimestampLast()",
      "name": "blockTimestampLast",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deviationThreshold()",
      "name": "deviationThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "epoch()",
      "name": "epoch",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBalGulpPairs()",
      "name": "getBalGulpPairs",
      "description": "Uniswap synced pairs.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentExchangeRate()",
      "name": "getCurrentExchangeRate",
      "description": "Calculates current exchange rate.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentTWAP()",
      "name": "getCurrentTWAP",
      "description": "Calculates current TWAP from uniswap.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUniSyncPairs()",
      "name": "getUniSyncPairs",
      "description": "Uniswap synced pairs.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "gov()",
      "name": "gov",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "inRebaseWindow()",
      "name": "inRebaseWindow",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "init_twap()",
      "name": "init_twap",
      "description": "Initializes TWAP start point, starts countdown to first rebase.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isToken0()",
      "name": "isToken0",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastRebaseTimestampSec()",
      "name": "lastRebaseTimestampSec",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxSlippageFactor()",
      "name": "maxSlippageFactor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minRebaseTimeIntervalSec()",
      "name": "minRebaseTimeIntervalSec",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingGov()",
      "name": "pendingGov",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "priceCumulativeLast()",
      "name": "priceCumulativeLast",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "priceOracle()",
      "name": "priceOracle",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "public_goods()",
      "name": "public_goods",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "public_goods_perc()",
      "name": "public_goods_perc",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rebase()",
      "name": "rebase",
      "description": "Initiates a new rebase operation, provided the minimum time period has elapsed. The supply adjustment equals (_totalSupply * DeviationFromTargetRate) / rebaseLag Where DeviationFromTargetRate is (MarketOracleRate - targetRate) / targetRate and targetRate is 1e18.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rebaseDelay()",
      "name": "rebaseDelay",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rebaseLag()",
      "name": "rebaseLag",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rebaseMintPercs(uint256)",
      "name": "rebaseMintPercs",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rebaseWindowLengthSec()",
      "name": "rebaseWindowLengthSec",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rebaseWindowOffsetSec()",
      "name": "rebaseWindowOffsetSec",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rebasingActive()",
      "name": "rebasingActive",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeBalPair(uint256)",
      "name": "removeBalPair",
      "description": "",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeTransaction(uint256)",
      "name": "removeTransaction",
      "description": "",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "Index of transaction to remove. Transaction ordering may have changed since adding.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeUniPair(uint256)",
      "name": "removeUniPair",
      "description": "",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rescueTokens(address,address,uint256)",
      "name": "rescueTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reserveToken()",
      "name": "reserveToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reservesContracts(uint256)",
      "name": "reservesContracts",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setDeviationThreshold(uint256)",
      "name": "setDeviationThreshold",
      "description": "Sets the deviation threshold fraction. If the exchange rate given by the market oracle is within this fractional distance from the targetRate, then no supply modifications are made.",
      "parameterDecorators": [
        {
          "name": "deviationThreshold_",
          "description": "The new exchange rate threshold fraction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaxSlippageFactor(uint256)",
      "name": "setMaxSlippageFactor",
      "description": "Updates slippage factor.",
      "parameterDecorators": [
        {
          "name": "maxSlippageFactor_",
          "description": "the new slippage factor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPriceOracle(address)",
      "name": "setPriceOracle",
      "description": "Sets the the price oracle.",
      "parameterDecorators": [
        {
          "name": "priceOracle_",
          "description": "The new price oracle.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRebaseLag(uint256)",
      "name": "setRebaseLag",
      "description": "Sets the rebase lag parameter. It is used to dampen the applied supply adjustment by 1 / rebaseLag If the rebase lag R, equals 1, the smallest value for R, then the full supply correction is applied on each rebase cycle. If it is greater than 1, then a correction of 1/R of is applied on each rebase.",
      "parameterDecorators": [
        {
          "name": "rebaseLag_",
          "description": "The new rebase lag parameter.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRebaseMintPerc(uint256,uint256)",
      "name": "setRebaseMintPerc",
      "description": "Updates rebase mint percentage of specified reserve.",
      "parameterDecorators": [
        {
          "name": "reserveIndex_",
          "description": "the index of specified reserve.",
          "recommendedTypes": []
        },
        {
          "name": "rebaseMintPerc_",
          "description": "the new rebase mint percentage.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRebaseTimingParameters(uint256,uint256,uint256)",
      "name": "setRebaseTimingParameters",
      "description": "Sets the parameters which control the timing and frequency of rebase operations. a) the minimum time period that must elapse between rebase cycles. b) the rebase window offset parameter. c) the rebase window length parameter.",
      "parameterDecorators": [
        {
          "name": "minRebaseTimeIntervalSec_",
          "description": "More than this much time must pass between rebase operations, in seconds.",
          "recommendedTypes": []
        },
        {
          "name": "rebaseWindowOffsetSec_",
          "description": "The number of seconds from the beginning of the rebase interval, where the rebase window begins.",
          "recommendedTypes": []
        },
        {
          "name": "rebaseWindowLengthSec_",
          "description": "The length of the rebase window in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setReserveContract(uint256,address)",
      "name": "setReserveContract",
      "description": "Updates reserve contract.",
      "parameterDecorators": [
        {
          "name": "reserveIndex_",
          "description": "the index of specified reserve.",
          "recommendedTypes": []
        },
        {
          "name": "reservesContract_",
          "description": "the new reserve contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTargetRate(uint256)",
      "name": "setTargetRate",
      "description": "Sets the targetRate parameter.",
      "parameterDecorators": [
        {
          "name": "targetRate_",
          "description": "The new target rate parameter.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTransactionEnabled(uint256,bool)",
      "name": "setTransactionEnabled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "Index of transaction. Transaction ordering may have changed since adding.",
          "recommendedTypes": []
        },
        {
          "name": "enabled",
          "description": "True for enabled, false for disabled.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "targetRate()",
      "name": "targetRate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "timeOfTWAPInit()",
      "name": "timeOfTWAPInit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transactions(uint256)",
      "name": "transactions",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "enabled",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "destination",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniSyncPairs(uint256)",
      "name": "uniSyncPairs",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniswapV2Call(address,uint256,uint256,bytes)",
      "name": "uniswapV2Call",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uniswap_pair()",
      "name": "uniswap_pair",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "yuanAddress()",
      "name": "yuanAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}