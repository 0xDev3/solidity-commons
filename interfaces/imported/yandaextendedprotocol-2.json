{
  "schema": "../schema.json",
  "tags": [],
  "name": "YandaExtendedProtocol",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Action(address,address,bytes32,string)",
      "name": "Action",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "service",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Complete(address,address,bytes32,bool)",
      "name": "Complete",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "service",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CostRequest(address,address,bytes32,address[],string)",
      "name": "CostRequest",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "service",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "validatorsList",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CostResponse(address,address,bytes32,uint256)",
      "name": "CostResponse",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "service",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "cost",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposit(address,address,bytes32,uint256)",
      "name": "Deposit",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "service",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "weiAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Staked(address,address,uint256,uint256)",
      "name": "Staked",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "validator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "The amount of CELO scheduled.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "unlockingBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Terminate(address,address,bytes32,address[])",
      "name": "Terminate",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "service",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "validatorsList",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UnStaked(address,address,uint256)",
      "name": "UnStaked",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "validator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "The amount of CELO scheduled.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "TIME_FRAME_SIZE()",
      "name": "TIME_FRAME_SIZE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addService(address,address,address[])",
      "name": "addService",
      "description": "",
      "parameterDecorators": [
        {
          "name": "service",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "depositAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "vList",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createProcess(address,bytes32,string)",
      "name": "createProcess",
      "description": "",
      "parameterDecorators": [
        {
          "name": "service",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "declareAction(address,bytes32,string)",
      "name": "declareAction",
      "description": "",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getLockingPeriod()",
      "name": "getLockingPeriod",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPenaltyPerc()",
      "name": "getPenaltyPerc",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProcess(address,bytes32)",
      "name": "getProcess",
      "description": "",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getValidatorVer(address)",
      "name": "getValidatorVer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "service",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(uint256,uint256,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "penaltyPerc",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "lockingPeriod",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "setDefaultPerc(uint256,uint256)",
      "name": "setDefaultPerc",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vPerc",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "bPerc",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDepositAddr(address)",
      "name": "setDepositAddr",
      "description": "",
      "parameterDecorators": [
        {
          "name": "depositAddr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLockingPeriod(uint256)",
      "name": "setLockingPeriod",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newLockingPeriod",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPenaltyPerc(uint256)",
      "name": "setPenaltyPerc",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newPenaltyPerc",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setProcessCost(address,bytes32,uint256)",
      "name": "setProcessCost",
      "description": "",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cost",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setProtocolFee(uint256,uint256)",
      "name": "setProtocolFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "nominator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "denominator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setServicePerc(address,uint256,uint256)",
      "name": "setServicePerc",
      "description": "",
      "parameterDecorators": [
        {
          "name": "service",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "vPerc",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "bPerc",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setValidatorVer(uint256)",
      "name": "setValidatorVer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vVer",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setValidators(address[])",
      "name": "setValidators",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vList",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stake(address,uint256)",
      "name": "stake",
      "description": "",
      "parameterDecorators": [
        {
          "name": "validator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeOf(address,address)",
      "name": "stakeOf",
      "description": "",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "validator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakingTokenAddr()",
      "name": "stakingTokenAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "startTermination(address,bytes32)",
      "name": "startTermination",
      "description": "",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalStaked()",
      "name": "totalStaked",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unStake(address,uint256)",
      "name": "unStake",
      "description": "",
      "parameterDecorators": [
        {
          "name": "validator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "validateTermination(address,bytes32,bool)",
      "name": "validateTermination",
      "description": "",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "productId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "result",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}