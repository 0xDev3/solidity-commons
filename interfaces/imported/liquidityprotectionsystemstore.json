{"schema":"../schema.json","tags":["liquidity"],"name":"LiquidityProtectionSystemStore","description":"This contract aggregates the system balances of the liquidity protection mechanism.","eventDecorators":[{"signature":"NetworkTokensMintedUpdated(address,uint256,uint256)","name":"NetworkTokensMintedUpdated","description":"The event emitted when the stored price is updated. triggered when the amount of network tokens minted into a specific pool is updated.","parameterDecorators":[{"name":"poolAnchor","description":"pool anchor.","recommendedTypes":[],"indexed":true},{"name":"prevAmount","description":"previous amount.","recommendedTypes":[],"indexed":false},{"name":"newAmount","description":"new amount.","recommendedTypes":[],"indexed":false}]},{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"The event emitted when the stored price is updated.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"The event emitted when the stored price is updated.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"The event emitted when the stored price is updated.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SystemBalanceUpdated(address,uint256,uint256)","name":"SystemBalanceUpdated","description":"The event emitted when the stored price is updated. triggered when the system balance for a given token is updated.","parameterDecorators":[{"name":"token","description":"token address.","recommendedTypes":[],"indexed":true},{"name":"prevAmount","description":"previous amount.","recommendedTypes":[],"indexed":false},{"name":"newAmount","description":"new amount.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"ROLE_OWNER()","name":"ROLE_OWNER","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"ROLE_SUPERVISOR()","name":"ROLE_SUPERVISOR","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"decNetworkTokensMinted(address,uint256)","name":"decNetworkTokensMinted","description":"decreases the amount of network tokens minted into a specific pool can be executed only by an owner.","parameterDecorators":[{"name":"poolAnchor","description":"pool anchor.","recommendedTypes":[]},{"name":"amount","description":"amount to decrease the minted tokens by.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"decSystemBalance(address,uint256)","name":"decSystemBalance","description":"decreases the system balance for a given token can be executed only by an owner.","parameterDecorators":[{"name":"token","description":"token address.","recommendedTypes":[]},{"name":"amount","description":"token amount.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMember(bytes32,uint256)","name":"getRoleMember","description":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMemberCount(bytes32)","name":"getRoleMemberCount","description":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"incNetworkTokensMinted(address,uint256)","name":"incNetworkTokensMinted","description":"increases the amount of network tokens minted into a specific pool can be executed only by an owner.","parameterDecorators":[{"name":"poolAnchor","description":"pool anchor.","recommendedTypes":[]},{"name":"amount","description":"amount to increase the minted tokens by.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"incSystemBalance(address,uint256)","name":"incSystemBalance","description":"increases the system balance for a given token can be executed only by an owner.","parameterDecorators":[{"name":"token","description":"token address.","recommendedTypes":[]},{"name":"amount","description":"token amount.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"networkTokensMinted(address)","name":"networkTokensMinted","description":"returns the amount of network tokens minted into a specific pool.","parameterDecorators":[{"name":"poolAnchor","description":"pool anchor.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"amount of network tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"systemBalance(address)","name":"systemBalance","description":"returns the system balance for a given token.","parameterDecorators":[{"name":"token","description":"token address.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"system balance.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}