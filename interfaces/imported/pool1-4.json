{"schema":"../schema.json","tags":[],"name":"Pool1","description":"","eventDecorators":[{"signature":"Apiresult(address,string,bytes32)","name":"Apiresult","description":"","parameterDecorators":[{"name":"access","description":"TRUE if the Watcher was given permissions, FALSE if permissions were removed.","recommendedTypes":[],"indexed":true},{"name":"domain","description":"the remote domain of the Home contract for the Replica.","recommendedTypes":[],"indexed":false},{"name":"watcher","description":"the address of the Watcher.","recommendedTypes":[],"indexed":false}]},{"signature":"Payout(address,uint256,uint256)","name":"Payout","description":"","parameterDecorators":[{"name":"access","description":"TRUE if the Watcher was given permissions, FALSE if permissions were removed.","recommendedTypes":[],"indexed":true},{"name":"domain","description":"the remote domain of the Home contract for the Replica.","recommendedTypes":[],"indexed":false},{"name":"watcher","description":"the address of the Watcher.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"saveIADetailsOracalise(uint256)","name":"saveIADetailsOracalise","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"sendEther()","name":"sendEther","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeDependentContractAddress()","name":"changeDependentContractAddress","description":"Iupgradable Interface to update dependent contract address.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferCurrencyAsset(bytes4,uint256)","name":"transferCurrencyAsset","description":"transfers currency asset to an address.","parameterDecorators":[{"name":"curr","description":"is the currency of currency asset to transfer.","recommendedTypes":[]},{"name":"amount","description":"is amount of currency asset to transfer.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"__callback(bytes32,string)","name":"__callback","description":"Handles callback of external oracle query.","parameterDecorators":[{"name":"myid","description":"","recommendedTypes":[]},{"name":"result","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"mcrOracliseFail(uint256,uint256)","name":"mcrOracliseFail","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"c1()","name":"c1","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"upgradeCapitalPool(address)","name":"upgradeCapitalPool","description":"Transfers all assest (i.e ETH balance, Currency Assest) from old Pool to new Pool.","parameterDecorators":[{"name":"newPoolAddress","description":"Address of the new Pool.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"makeCoverBegin(address,bytes4,uint256[],uint16,uint8,bytes32,bytes32)","name":"makeCoverBegin","description":"Enables user to purchase cover with funding in ETH.","parameterDecorators":[{"name":"smartCAdd","description":"Smart Contract Address.","recommendedTypes":[]},{"name":"coverCurr","description":"","recommendedTypes":[]},{"name":"coverDetails","description":"","recommendedTypes":[]},{"name":"coverPeriod","description":"","recommendedTypes":[]},{"name":"_v","description":"","recommendedTypes":[]},{"name":"_r","description":"","recommendedTypes":[]},{"name":"_s","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getInvestmentAssetBalance()","name":"getInvestmentAssetBalance","description":"gives the investment asset balance.","parameterDecorators":[],"returnDecorators":[{"name":"balance","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"sellNXMTokens(uint256)","name":"sellNXMTokens","description":"Allows selling of NXM for ether. Seller first needs to give this contract allowance to transfer/burn tokens in the NXMToken contract.","parameterDecorators":[{"name":"_amount","description":"Amount of NXM to sell.","recommendedTypes":[]}],"returnDecorators":[{"name":"success","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"makeCoverUsingCA(address,bytes4,uint256[],uint16,uint8,bytes32,bytes32)","name":"makeCoverUsingCA","description":"Enables user to purchase cover via currency asset eg DAI.","parameterDecorators":[{"name":"smartCAdd","description":"","recommendedTypes":[]},{"name":"coverCurr","description":"","recommendedTypes":[]},{"name":"coverDetails","description":"","recommendedTypes":[]},{"name":"coverPeriod","description":"","recommendedTypes":[]},{"name":"_v","description":"","recommendedTypes":[]},{"name":"_r","description":"","recommendedTypes":[]},{"name":"_s","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"sendClaimPayout(uint256,uint256,uint256,address,bytes4)","name":"sendClaimPayout","description":"Pays out the sum assured in case a claim is accepted.","parameterDecorators":[{"name":"coverid","description":"Cover Id.","recommendedTypes":[]},{"name":"claimid","description":"Claim Id.","recommendedTypes":[]},{"name":"sumAssured","description":"","recommendedTypes":[]},{"name":"coverHolder","description":"","recommendedTypes":[]},{"name":"coverCurr","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"succ","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"triggerExternalLiquidityTrade()","name":"triggerExternalLiquidityTrade","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"closeCoverOraclise(uint256,uint64)","name":"closeCoverOraclise","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"ms()","name":"ms","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"closeClaimsOraclise(uint256,uint256)","name":"closeClaimsOraclise","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"buyToken()","name":"buyToken","description":"Enables user to purchase NXM at the current token price.","parameterDecorators":[],"returnDecorators":[{"name":"success","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"transferEther(uint256,address)","name":"transferEther","description":"Sends a given amount of Ether to a given address.","parameterDecorators":[{"name":"amount","description":"amount (in wei) to send.","recommendedTypes":[]},{"name":"_add","description":"Receiver's address.","recommendedTypes":[]}],"returnDecorators":[{"name":"succ","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"mcrOraclise(uint256)","name":"mcrOraclise","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeMasterAddress(address)","name":"changeMasterAddress","description":"change master address.","parameterDecorators":[{"name":"_masterAddress","description":"is the new address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"closeEmergencyPause(uint256)","name":"closeEmergencyPause","description":"Oraclize call to close emergency pause.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getToken(uint256)","name":"getToken","description":"Returns the amount of token a buyer will get for corresponding wei.","parameterDecorators":[{"name":"weiPaid","description":"Amount of wei.","recommendedTypes":[]}],"returnDecorators":[{"name":"tokenToGet","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getWei(uint256)","name":"getWei","description":"Returns the amount of wei a seller will get for selling NXM.","parameterDecorators":[{"name":"amount","description":"Amount of NXM to sell.","recommendedTypes":[]}],"returnDecorators":[{"name":"weiToPay","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nxMasterAddress()","name":"nxMasterAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}