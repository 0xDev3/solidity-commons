{
  "schema": "../schema.json",
  "tags": [],
  "name": "LiquidSplit",
  "description": "",
  "eventDecorators": [
    {
      "signature": "FundsReceived(address,uint256)",
      "name": "FundsReceived",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": [
        {
          "name": "source",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "PERCENTAGE_SCALE()",
      "name": "PERCENTAGE_SCALE",
      "description": "constant to scale uints into percentages (1e6 == 100%).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getHolders()",
      "name": "getHolders",
      "description": "Returns array of sorted accounts for current liquid split.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPercentAllocations(address[])",
      "name": "getPercentAllocations",
      "description": "Returns array of percent allocations for current liquid split. sortedAccounts _must_ be sorted for this to work properly.",
      "parameterDecorators": [
        {
          "name": "sortedAccounts",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "percentAllocations",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nftContract()",
      "name": "nftContract",
      "description": "address of ERC721 contract with controlling tokens.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "payoutSplit()",
      "name": "payoutSplit",
      "description": "0xSplits address for split.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "splitMain()",
      "name": "splitMain",
      "description": "0xSplits address for updating & distributing split.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenIds(uint256)",
      "name": "tokenIds",
      "description": "array of token holders as split recipients.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw()",
      "name": "withdraw",
      "description": "distributes ETH to Liquid Split NFT holders.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}