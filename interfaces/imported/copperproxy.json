{"schema":"../schema.json","tags":["tokens","liquidity","balancer"],"name":"BounceProxy","description":"CopperProxy. This contract allows for simplified creation and management of Balancer LBPs It currently supports: - LBPs with 2 tokens - Withdrawl of the full liquidity at once - Charging a fee on the amount raised.","eventDecorators":[{"signature":"ChangedFeeRecipient(address,address)","name":"ChangedFeeRecipient","description":"event for funds received.","parameterDecorators":[{"name":"previousRecipient","description":"","recommendedTypes":[],"indexed":false},{"name":"newRecipient","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ExitedPool(address,address[],uint256[],bytes)","name":"ExitedPool","description":"event for funds received.","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[],"indexed":true},{"name":"tokens","description":"","recommendedTypes":[],"indexed":false},{"name":"minAmountsOut","description":"","recommendedTypes":[],"indexed":false},{"name":"userData","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"GradualWeightUpdateScheduled(address,uint256,uint256,uint256[])","name":"GradualWeightUpdateScheduled","description":"event for funds received.","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[],"indexed":true},{"name":"startTime","description":"","recommendedTypes":[],"indexed":false},{"name":"endTime","description":"","recommendedTypes":[],"indexed":false},{"name":"endWeights","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"JoinedPool(address,address[],uint256[],bytes)","name":"JoinedPool","description":"event for funds received.","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[],"indexed":true},{"name":"tokens","description":"","recommendedTypes":[],"indexed":false},{"name":"amounts","description":"","recommendedTypes":[],"indexed":false},{"name":"userData","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"event for funds received.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PoolCreated(address,bytes32,string,string,address[],uint256[],bool,uint256,address,bool)","name":"PoolCreated","description":"event for funds received.","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[],"indexed":true},{"name":"poolId","description":"","recommendedTypes":[],"indexed":false},{"name":"name","description":"","recommendedTypes":[],"indexed":false},{"name":"symbol","description":"","recommendedTypes":[],"indexed":false},{"name":"tokens","description":"","recommendedTypes":[],"indexed":false},{"name":"weights","description":"","recommendedTypes":[],"indexed":false},{"name":"isCorrectOrder","description":"","recommendedTypes":[],"indexed":false},{"name":"swapFeePercentage","description":"","recommendedTypes":[],"indexed":false},{"name":"owner","description":"","recommendedTypes":[],"indexed":false},{"name":"swapEnabledOnStart","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Skimmed(address,address,uint256)","name":"Skimmed","description":"event for funds received.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"to","description":"","recommendedTypes":[],"indexed":false},{"name":"balance","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SwapEnabledSet(address,bool)","name":"SwapEnabledSet","description":"event for funds received.","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[],"indexed":true},{"name":"swapEnabled","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TransferedFee(address,address,address,uint256)","name":"TransferedFee","description":"event for funds received.","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"feeRecipient","description":"","recommendedTypes":[],"indexed":false},{"name":"feeAmount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TransferedPoolOwnership(address,address,address)","name":"TransferedPoolOwnership","description":"event for funds received.","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[],"indexed":true},{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":false},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TransferedToken(address,address,address,uint256)","name":"TransferedToken","description":"event for funds received.","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"to","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"VAULT()","name":"VAULT","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"_LBPFactoryAddress()","name":"_LBPFactoryAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"_feeBPS()","name":"_feeBPS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"_feeRecipient()","name":"_feeRecipient","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"changeFeeRecipient(address)","name":"changeFeeRecipient","description":"","parameterDecorators":[{"name":"newRecipient","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"createAuction(tuple(string,string,address[],uint256[],uint256[],uint256[],bool,uint256,bytes,uint256,uint256))","name":"createAuction","description":"","parameterDecorators":[{"name":"poolConfig","description":"","recommendedTypes":[],"parameters":[{"name":"name","description":"","type":"string"},{"name":"symbol","description":"","type":"string"},{"name":"tokens","description":"","type":"address[]"},{"name":"amounts","description":"","type":"uint256[]"},{"name":"weights","description":"","type":"uint256[]"},{"name":"endWeights","description":"","type":"uint256[]"},{"name":"isCorrectOrder","description":"","type":"bool"},{"name":"swapFeePercentage","description":"","type":"uint256"},{"name":"userData","description":"","type":"bytes"},{"name":"startTime","description":"","type":"uint256"},{"name":"endTime","description":"","type":"uint256"}]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"exitPool(address,uint256[],uint256)","name":"exitPool","description":"Exit a pool, burn the BPT token and transfer back the tokens. If maxBPTTokenOut is passed as 0, the function will use the total balance available for the BPT token. If maxBPTTokenOut is between 0 and the total of BPT available, that will be the amount used to burn. maxBPTTokenOut must be grader or equal than 0.","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[]},{"name":"minAmountsOut","description":"","recommendedTypes":[]},{"name":"maxBPTTokenOut","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getBPTTokenBalance(address)","name":"getBPTTokenBalance","description":"","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"bptBalance","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getPoolAt(uint256)","name":"getPoolAt","description":"","parameterDecorators":[{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"pool","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getPoolData(address)","name":"getPoolData","description":"","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"poolData","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getPools()","name":"getPools","description":"","parameterDecorators":[],"returnDecorators":[{"name":"pools","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"isPool(address)","name":"isPool","description":"","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"valid","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"poolCount()","name":"poolCount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"count","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setSwapEnabled(address,bool)","name":"setSwapEnabled","description":"","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[]},{"name":"swapEnabled","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"skim(address,address)","name":"skim","description":"","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]},{"name":"recipient","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferPoolOwnership(address,address)","name":"transferPoolOwnership","description":"","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[]},{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}