{
  "schema": "../schema.json",
  "tags": [],
  "name": "ConstantFlowAgreementV1",
  "description": "ConstantFlowAgreementV1 contract. Please read IConstantFlowAgreementV1 for implementation notes.For more technical notes, please visit protocol-monorepo wiki area.",
  "eventDecorators": [
    {
      "signature": "CodeUpdated(bytes32,address)",
      "name": "CodeUpdated",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "uuid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "codeAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FlowOperatorUpdated(address,address,address,uint8,int96)",
      "name": "FlowOperatorUpdated",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "flowOperator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "permissions",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "flowRateAllowance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FlowUpdated(address,address,address,int96,int256,int256,bytes)",
      "name": "FlowUpdated",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "totalSenderFlowRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "totalReceiverFlowRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "userData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FlowUpdatedExtension(address,uint256)",
      "name": "FlowUpdatedExtension",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "flowOperator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_MINIMUM_DEPOSIT()",
      "name": "DEFAULT_MINIMUM_DEPOSIT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAXIMUM_DEPOSIT()",
      "name": "MAXIMUM_DEPOSIT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAXIMUM_FLOW_RATE()",
      "name": "MAXIMUM_FLOW_RATE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "agreementType()",
      "name": "agreementType",
      "description": "ISuperAgreement.agreementType implementation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "authorizeFlowOperatorWithFullControl(address,address,bytes)",
      "name": "authorizeFlowOperatorWithFullControl",
      "description": "IConstantFlowAgreementV1.authorizeFlowOperatorWithFullControl implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowOperator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createFlow(address,address,int96,bytes)",
      "name": "createFlow",
      "description": "IConstantFlowAgreementV1.createFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createFlowByOperator(address,address,address,int96,bytes)",
      "name": "createFlowByOperator",
      "description": "IConstantFlowAgreementV1.createFlowByOperator implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deleteFlow(address,address,address,bytes)",
      "name": "deleteFlow",
      "description": "IConstantFlowAgreementV1.deleteFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deleteFlowByOperator(address,address,address,bytes)",
      "name": "deleteFlowByOperator",
      "description": "IConstantFlowAgreementV1.deleteFlowByOperator implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAccountFlowInfo(address,address)",
      "name": "getAccountFlowInfo",
      "description": "IConstantFlowAgreementV1.getAccountFlowInfo implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        },
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owedDeposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCodeAddress()",
      "name": "getCodeAddress",
      "description": "Get current implementation code address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "codeAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDepositRequiredForFlowRate(address,int96)",
      "name": "getDepositRequiredForFlowRate",
      "description": "IConstantFlowAgreementV1.getDepositRequiredForFlowRate implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFlow(address,address,address)",
      "name": "getFlow",
      "description": "IConstantFlowAgreementV1.getFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        },
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owedDeposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFlowByID(address,bytes32)",
      "name": "getFlowByID",
      "description": "IConstantFlowAgreementV1.getFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        },
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owedDeposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFlowOperatorData(address,address,address)",
      "name": "getFlowOperatorData",
      "description": "IConstantFlowAgreementV1.getFlowOperatorData implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowOperator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "flowOperatorId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "permissions",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "flowRateAllowance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFlowOperatorDataByID(address,bytes32)",
      "name": "getFlowOperatorDataByID",
      "description": "IConstantFlowAgreementV1.getFlowOperatorDataByID implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowOperatorId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "permissions",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "flowRateAllowance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMaximumFlowRateFromDeposit(address,uint256)",
      "name": "getMaximumFlowRateFromDeposit",
      "description": "IConstantFlowAgreementV1.getMaximumFlowRateFromDeposit implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getNetFlow(address,address)",
      "name": "getNetFlow",
      "description": "IConstantFlowAgreementV1.getNetFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPatricianPeriod(address,address,uint256)",
      "name": "isPatricianPeriod",
      "description": "Returns whether it is the patrician period based on timestamp.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "The account we are interested in.",
          "recommendedTypes": []
        },
        {
          "name": "timestamp",
          "description": "The timestamp we are interested in observing the result of isPatricianPeriod.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "bool Whether it is currently the patrician period dictated by governance.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPatricianPeriodNow(address,address)",
      "name": "isPatricianPeriodNow",
      "description": "Returns whether it is the patrician period based on host.getNow().",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "The account we are interested in.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "isCurrentlyPatricianPeriod",
          "description": "Whether it is currently the patrician period dictated by governance.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "timestamp",
          "description": "The value of host.getNow().",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proxiableUUID()",
      "name": "proxiableUUID",
      "description": "Proxiable UUID marker function, this would help to avoid wrong logic contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard, where it is equivalent of _IMPLEMENTATION_SLOT.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "realtimeBalanceOf(address,address,uint256)",
      "name": "realtimeBalanceOf",
      "description": "ISuperAgreement.realtimeBalanceOf implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "time",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "dynamicBalance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owedDeposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "revokeFlowOperatorWithFullControl(address,address,bytes)",
      "name": "revokeFlowOperatorWithFullControl",
      "description": "IConstantFlowAgreementV1.revokeFlowOperatorWithFullControl implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowOperator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateCode(address)",
      "name": "updateCode",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateFlow(address,address,int96,bytes)",
      "name": "updateFlow",
      "description": "IConstantFlowAgreementV1.updateFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateFlowByOperator(address,address,address,int96,bytes)",
      "name": "updateFlowByOperator",
      "description": "IConstantFlowAgreementV1.updateFlowByOperator implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateFlowOperatorPermissions(address,address,uint8,int96,bytes)",
      "name": "updateFlowOperatorPermissions",
      "description": "IConstantFlowAgreementV1.updateFlowOperatorPermissions implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowOperator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "permissions",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowRateAllowance",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}