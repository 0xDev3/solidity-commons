{
  "schema": "../schema.json",
  "tags": [],
  "name": "PriceBettingUserRecord",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AccountTransferred(address,address)",
      "name": "AccountTransferred",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "previousAccount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAccount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "accounts(address)",
      "name": "accounts",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "cidx900",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "cidx300",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "uidx900",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "uidx300",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addBet(address,uint256,uint256)",
      "name": "addBet",
      "description": "when someone enters a new bet, PriceBetting contract will tell BetRecord contract to save this user's new bet index, put those indexes into a mapping (1 -> index1, 2 -> index2, etc... ).",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "period",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "idx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addrPriceBetting()",
      "name": "addrPriceBetting",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAccountCCUU(address)",
      "name": "getAccountCCUU",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAccountCU(address,uint256)",
      "name": "getAccountCU",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "period",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "cidx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "uidx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBetIndexes(address,uint256,uint256,uint256,uint256)",
      "name": "getBetIndexes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "period",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "idxStart",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "outLength",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "option",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "idxesOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "cidx2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "uidx2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "idxStart2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "idxLast2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBetsCheck(address,uint256,uint256,uint256,uint256)",
      "name": "getBetsCheck",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "period",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "idxStart",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "outLength",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "option",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "userOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "bools",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool[]"
        },
        {
          "name": "uintsInputs",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "cusl",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "boolOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBetterBets(address,uint256,uint256,uint256,uint256)",
      "name": "getBetterBets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "period",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "idxStart",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "outLength",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "option",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "betsOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        },
        {
          "name": "cidx3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "uidx3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "idxStart3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "idxLast3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOnlyAdmin()",
      "name": "isOnlyAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxOutLen()",
      "name": "maxOutLen",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaxOutLen(uint256)",
      "name": "setMaxOutLen",
      "description": "",
      "parameterDecorators": [
        {
          "name": "len",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferAdmin(address)",
      "name": "transferAdmin",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newAdmin",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateBet(address,uint256,uint256)",
      "name": "updateBet",
      "description": "struct Account { uint256 cidx900; uint256 cidx300; uint256 uidx900; uint256 uidx300; mapping (uint256 => uint256) idxesA900; mapping (uint256 => uint256) idxesA300; mapping (uint256 => uint256) idxesB900; mapping (uint256 => uint256) idxesB300; } when a bet is cleared, then the same thing will happen, but just to update this bet.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "period",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "idx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}