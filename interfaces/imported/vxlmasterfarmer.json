{"schema":"../schema.json","tags":[],"name":"VxlMasterFarmer","description":"","eventDecorators":[{"signature":"Deposit(address,uint256,uint256)","name":"Deposit","description":"when the auction of a token gets started. Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call: - if using `revokeRole`, it is the admin role bearer - if using `renounceRole`, it is the role bearer (i.e. `account`).","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyWithdraw(address,uint256,uint256)","name":"EmergencyWithdraw","description":"when the auction of a token gets started. Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call: - if using `revokeRole`, it is the admin role bearer - if using `renounceRole`, it is the role bearer (i.e. `account`).","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"when the auction of a token gets started. Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call: - if using `revokeRole`, it is the admin role bearer - if using `renounceRole`, it is the role bearer (i.e. `account`).","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PoolCreated(uint256,address,address,uint256,uint256,uint256,tuple,tuple,tuple,uint256,bool)","name":"PoolCreated","description":"when the auction of a token gets started. Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call: - if using `revokeRole`, it is the admin role bearer - if using `renounceRole`, it is the role bearer (i.e. `account`).","parameterDecorators":[{"name":"poolId","description":"","recommendedTypes":[],"indexed":false},{"name":"lpToken","description":"","recommendedTypes":[],"indexed":false},{"name":"rewardToken","description":"","recommendedTypes":[],"indexed":false},{"name":"rewardSupply","description":"","recommendedTypes":[],"indexed":false},{"name":"allocPoint","description":"","recommendedTypes":[],"indexed":false},{"name":"lastRewardBlock","description":"","recommendedTypes":[],"indexed":false},{"name":"poolMeta","description":"","recommendedTypes":[],"indexed":false},{"name":"token1","description":"","recommendedTypes":[],"indexed":false},{"name":"token2","description":"","recommendedTypes":[],"indexed":false},{"name":"accVxlPerShare","description":"","recommendedTypes":[],"indexed":false},{"name":"isPaused","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SendVxlReward(address,uint256,uint256,uint256)","name":"SendVxlReward","description":"when the auction of a token gets started. Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call: - if using `revokeRole`, it is the admin role bearer - if using `renounceRole`, it is the role bearer (i.e. `account`).","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"lockAmount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdraw(address,uint256,uint256)","name":"Withdraw","description":"when the auction of a token gets started. Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call: - if using `revokeRole`, it is the admin role bearer - if using `renounceRole`, it is the role bearer (i.e. `account`).","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"FINISH_BONUS_AT_BLOCK()","name":"FINISH_BONUS_AT_BLOCK","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"HALVING_AT_BLOCK(uint256)","name":"HALVING_AT_BLOCK","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"REWARD_MULTIPLIER(uint256)","name":"REWARD_MULTIPLIER","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"REWARD_PER_BLOCK()","name":"REWARD_PER_BLOCK","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"START_BLOCK()","name":"START_BLOCK","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"add(uint256,address,address,uint256,tuple(string,string,string,string,string,string,string),tuple(address,string,string,string),tuple(address,string,string,string),bool)","name":"add","description":"","parameterDecorators":[{"name":"_allocPoint","description":"","recommendedTypes":[]},{"name":"_lpToken","description":"","recommendedTypes":[]},{"name":"_rewardToken","description":"","recommendedTypes":[]},{"name":"_rewardSupply","description":"","recommendedTypes":[]},{"name":"_poolMeta","description":"","recommendedTypes":[],"parameters":[{"name":"tokenSymbol","description":"","type":"string"},{"name":"tokenName","description":"","type":"string"},{"name":"logoUri","description":"","type":"string"},{"name":"protocol","description":"","type":"string"},{"name":"addLiquidityLink","description":"","type":"string"},{"name":"removeLiquidityLink","description":"","type":"string"},{"name":"description","description":"","type":"string"}]},{"name":"_token1","description":"","recommendedTypes":[],"parameters":[{"name":"ercToken","description":"","type":"address"},{"name":"tokenSymbol","description":"","type":"string"},{"name":"tokenName","description":"","type":"string"},{"name":"logoUri","description":"","type":"string"}]},{"name":"_token2","description":"","recommendedTypes":[],"parameters":[{"name":"ercToken","description":"","type":"address"},{"name":"tokenSymbol","description":"","type":"string"},{"name":"tokenName","description":"","type":"string"},{"name":"logoUri","description":"","type":"string"}]},{"name":"_withUpdate","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimReward(uint256)","name":"claimReward","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deposit(uint256,uint256)","name":"deposit","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyWithdraw(uint256)","name":"emergencyWithdraw","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAllPools()","name":"getAllPools","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getMultiplier(uint256,uint256)","name":"getMultiplier","description":"","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[]},{"name":"_to","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getNewRewardPerBlock(uint256)","name":"getNewRewardPerBlock","description":"","parameterDecorators":[{"name":"pid1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getPoolReward(uint256,uint256,uint256)","name":"getPoolReward","description":"","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[]},{"name":"_to","description":"","recommendedTypes":[]},{"name":"_allocPoint","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"forFarmer","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"massUpdatePools()","name":"massUpdatePools","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pausePool(uint256)","name":"pausePool","description":"","parameterDecorators":[{"name":"_poolId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"pendingReward(uint256,address)","name":"pendingReward","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolId1(address)","name":"poolId1","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolInfo(uint256)","name":"poolInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"poolId","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lpToken","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"rewardToken","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"rewardSupply","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"allocPoint","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastRewardBlock","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"accVxlPerShare","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"poolMeta","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"token1","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"token2","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"isPaused","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"poolLength()","name":"poolLength","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"set(uint256,uint256,bool)","name":"set","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_allocPoint","description":"","recommendedTypes":[]},{"name":"_withUpdate","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalAllocPoint()","name":"totalAllocPoint","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updatePool(uint256)","name":"updatePool","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateRewardSupply(uint256,uint256)","name":"updateRewardSupply","description":"","parameterDecorators":[{"name":"_poolId","description":"","recommendedTypes":[]},{"name":"_rewardSupply","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userInfo(uint256,address)","name":"userInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewardDebt","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewardDebtAtBlock","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256,uint256)","name":"withdraw","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}