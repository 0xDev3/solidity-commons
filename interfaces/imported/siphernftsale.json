{"schema":"../schema.json","tags":["nft"],"name":"SipherNFTSale","description":"","eventDecorators":[{"signature":"OwnerBought(address,uint256,uint256)","name":"OwnerBought","description":"This event is emitted when a token swap is executed.","parameterDecorators":[{"name":"buyer","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"amountWeiPaid","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"This event is emitted when a token swap is executed.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PublicBought(address,uint256,uint256)","name":"PublicBought","description":"This event is emitted when a token swap is executed.","parameterDecorators":[{"name":"buyer","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"amountWeiPaid","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RollStartIndex(address)","name":"RollStartIndex","description":"This event is emitted when a token swap is executed.","parameterDecorators":[{"name":"trigger","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SetMerkleRoot(bytes32)","name":"SetMerkleRoot","description":"This event is emitted when a token swap is executed.","parameterDecorators":[{"name":"merkelRoot","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UpdateSaleEndTime(uint64)","name":"UpdateSaleEndTime","description":"This event is emitted when a token swap is executed.","parameterDecorators":[{"name":"endTime","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UpdateWhitelistedAddress(address,bool)","name":"UpdateWhitelistedAddress","description":"This event is emitted when a token swap is executed.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false},{"name":"isWhitelisted","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WhitelistBought(address,uint256,uint256)","name":"WhitelistBought","description":"This event is emitted when a token swap is executed.","parameterDecorators":[{"name":"buyer","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"amountWeiPaid","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WithdrawSaleFunds(address,uint256)","name":"WithdrawSaleFunds","description":"This event is emitted when a token swap is executed.","parameterDecorators":[{"name":"recipient","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"CAP_PER_ADDRESS()","name":"CAP_PER_ADDRESS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"CAP_PER_WHITELISTED_ADDRESS()","name":"CAP_PER_WHITELISTED_ADDRESS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"MAX_OWNER_BOUGHT_INITIAL()","name":"MAX_OWNER_BOUGHT_INITIAL","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"SALE_PRICE()","name":"SALE_PRICE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"buy(uint64)","name":"buy","description":"Buy amount of NFT tokens There are different caps for different users at different times The total sold tokens should be capped to maxSupply.","parameterDecorators":[{"name":"amount","description":"amount of token to buy.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getSaleConfig()","name":"getSaleConfig","description":"Return the config, with times (whitelistTime, publicTime, endTime) and max supply.","parameterDecorators":[],"returnDecorators":[{"name":"config","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getSaleRecord()","name":"getSaleRecord","description":"Return the record, with number of tokens have been sold for different groups.","parameterDecorators":[],"returnDecorators":[{"name":"record","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserRecord(address)","name":"getUserRecord","description":"Return the user record.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"record","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getWhitelistedAddressAt(uint256)","name":"getWhitelistedAddressAt","description":"","parameterDecorators":[{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"account","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getWhitelistedGroup()","name":"getWhitelistedGroup","description":"","parameterDecorators":[],"returnDecorators":[{"name":"accounts","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getWhitelistedGroupLength()","name":"getWhitelistedGroupLength","description":"","parameterDecorators":[],"returnDecorators":[{"name":"length","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"isWhitelistedAddress(address)","name":"isWhitelistedAddress","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"maxWhitelistSize()","name":"maxWhitelistSize","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"merkleRoot()","name":"merkleRoot","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"nft()","name":"nft","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rollStartIndex()","name":"rollStartIndex","description":"Roll the final start index of the NFT, only call after sale is ended.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMerkleRoot(bytes32)","name":"setMerkleRoot","description":"Allow owner to set the merkle root only once before whitelist buy time.","parameterDecorators":[{"name":"_root","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateSaleEndTime(uint64)","name":"updateSaleEndTime","description":"Update sale end time by the owner only if new sale end time is in the past, the sale round will be halted.","parameterDecorators":[{"name":"_endTime","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateWhitelistedGroup(address[],bool)","name":"updateWhitelistedGroup","description":"Update the list of whitelisted addresses.","parameterDecorators":[{"name":"accounts","description":"list of addresses to be updated.","recommendedTypes":[]},{"name":"isWhitelisted","description":"indicate whether to add or remove from the whitelisted list.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawSaleFunds(address,uint256)","name":"withdrawSaleFunds","description":"","parameterDecorators":[{"name":"recipient","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}