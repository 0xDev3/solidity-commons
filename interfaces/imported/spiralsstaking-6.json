{"schema":"../schema.json","tags":[],"name":"SpiralsStaking","description":"","eventDecorators":[{"signature":"Unstake(address,address,uint256)","name":"Unstake","description":"Whenever a new child contract is deployed, a `NewChild` event containing the new child contract address MUST be emitted. Emitted when the pause is lifted by `account`.","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[],"indexed":true},{"name":"_validatorGroup","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"VotesActivated(address,uint256)","name":"VotesActivated","description":"Whenever a new child contract is deployed, a `NewChild` event containing the new child contract address MUST be emitted. Emitted when the pause is lifted by `account`.","parameterDecorators":[{"name":"_validatorGroup","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"VotesCast(address,address,uint256)","name":"VotesCast","description":"Whenever a new child contract is deployed, a `NewChild` event containing the new child contract address MUST be emitted. Emitted when the pause is lifted by `account`.","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[],"indexed":true},{"name":"_validatorGroup","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"activate()","name":"activate","description":"Activates pending votes (if ready) with a given validator group.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getActiveVotes()","name":"getActiveVotes","description":"Get active votes (staked + rewards) for this smart contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getRewards()","name":"getRewards","description":"Get active votes (staked + rewards) for this smart contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lastVoteCastEpoch()","name":"lastVoteCastEpoch","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setValidatorGroup(address)","name":"setValidatorGroup","description":"For updating with validator group we stake with. Performs some simple checks to make sure address given is an eligible validator group (limited to 1 for now).","parameterDecorators":[{"name":"_newValidatorGroup","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake()","name":"stake","description":"Main function for staking with Spirals protocol.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalStaked()","name":"totalStaked","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"unstake()","name":"unstake","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"validatorGroup()","name":"validatorGroup","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw()","name":"withdraw","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}