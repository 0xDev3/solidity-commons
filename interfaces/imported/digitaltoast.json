{"schema":"../schema.json","tags":[],"name":"DigitalToast","description":"What happens to bread when you burn it? No... I mean only burn it a tiny bit. Seriously... the nerve of you degens!!.","eventDecorators":[{"signature":"Transfer(address,address,uint256)","name":"Transfer","description":"event emitted when a vesting schedule is created. Emitted when setting contract parameters.","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[],"indexed":true},{"name":"_to","description":"","recommendedTypes":[],"indexed":true},{"name":"_tokenId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"toastTaken(uint256,address,address,string)","name":"toastTaken","description":"event emitted when a vesting schedule is created. Emitted when setting contract parameters.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":false},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":false},{"name":"scribble","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"_burnableToken()","name":"_burnableToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"_burnbook()","name":"_burnbook","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOf(address)","name":"balanceOf","description":"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.","parameterDecorators":[{"name":"_owner","description":"Address for whom to query the balance.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Balance of _owner.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"mint(address,string)","name":"mint","description":"Mints a new NFT.","parameterDecorators":[{"name":"_to","description":"The address that will own the minted NFT.","recommendedTypes":[]},{"name":"scribble","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"name()","name":"name","description":"Returns a descriptive name for a collection of NFTokens.","parameterDecorators":[],"returnDecorators":[{"name":"_name","description":"Representing name.","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"ownerOf(uint256)","name":"ownerOf","description":"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.","parameterDecorators":[{"name":"_tokenId","description":"The identifier for an NFT.","recommendedTypes":[]}],"returnDecorators":[{"name":"_owner","description":"Address of _tokenId owner.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"slicesToasted()","name":"slicesToasted","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"Function to check which interfaces are suported by this contract.","parameterDecorators":[{"name":"_interfaceID","description":"Id of the interface.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if _interfaceID is supported, false otherwise.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"symbol()","name":"symbol","description":"Returns an abbreviated name for NFTokens.","parameterDecorators":[],"returnDecorators":[{"name":"_symbol","description":"Representing symbol.","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"take(uint256,string)","name":"take","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"scribble","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"tokenURI(uint256)","name":"tokenURI","description":"A distinct URI (RFC 3986) for a given NFT.","parameterDecorators":[{"name":"_tokenId","description":"Id for which we want uri.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"URI of _tokenId.","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true}]}