{"schema":"../schema.json","tags":[],"name":"Auditor","description":"A contract for decentralized audit marketplace.","eventDecorators":[{"signature":"AuditCancelled(address,address,uint256)","name":"AuditCancelled","description":"Funds have been received. activate liquidity.","parameterDecorators":[{"name":"creator","description":"","recommendedTypes":[],"indexed":true},{"name":"contractAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AuditCompleted(address,address,uint256,bool)","name":"AuditCompleted","description":"Funds have been received. activate liquidity.","parameterDecorators":[{"name":"creator","description":"","recommendedTypes":[],"indexed":true},{"name":"contractAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false},{"name":"verdict","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AuditJuryUpdated(address,uint256,address[5])","name":"AuditJuryUpdated","description":"Funds have been received. activate liquidity.","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false},{"name":"jury","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AuditNoPoolUpdated(address,address,uint256)","name":"AuditNoPoolUpdated","description":"Funds have been received. activate liquidity.","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"voter","description":"","recommendedTypes":[],"indexed":true},{"name":"totalNoPool","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AuditRequested(address,address,uint256)","name":"AuditRequested","description":"Funds have been received. activate liquidity.","parameterDecorators":[{"name":"creator","description":"","recommendedTypes":[],"indexed":true},{"name":"contractAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AuditYesPoolUpdated(address,address,uint256)","name":"AuditYesPoolUpdated","description":"Funds have been received. activate liquidity.","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"voter","description":"","recommendedTypes":[],"indexed":true},{"name":"totalYesPool","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"JuryMemberAdded(address,uint256)","name":"JuryMemberAdded","description":"Funds have been received. activate liquidity.","parameterDecorators":[{"name":"memberAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"JuryVoteOnBug(address,address,address,uint256)","name":"JuryVoteOnBug","description":"Funds have been received. activate liquidity.","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"reporter","description":"","recommendedTypes":[],"indexed":true},{"name":"juryMember","description":"","recommendedTypes":[],"indexed":true},{"name":"bugIndex","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewBugReported(address,address,uint256)","name":"NewBugReported","description":"Funds have been received. activate liquidity.","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"reporter","description":"","recommendedTypes":[],"indexed":true},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addEligibleJuryMember(address)","name":"addEligibleJuryMember","description":"","parameterDecorators":[{"name":"memberAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"audits(address)","name":"audits","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"creator","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"contractAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"createdTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastStreamTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"totalYesPool","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"totalNoPool","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"checkUpkeep(bytes)","name":"checkUpkeep","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"upkeepNeeded","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"performData","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"contractsAudited(uint256)","name":"contractsAudited","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"createAudit(address)","name":"createAudit","description":"","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"eligibleJuryMembers(uint256)","name":"eligibleJuryMembers","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"fundNoBugsPool(address)","name":"fundNoBugsPool","description":"","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAuditData(address)","name":"getAuditData","description":"","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"creator","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"jury","description":"","recommendedTypes":[],"solidityType":"address[5]"},{"name":"createdTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"totalYesPool","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"totalNoPool","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getAuditsUserIsOnJuryOf(address)","name":"getAuditsUserIsOnJuryOf","description":"","parameterDecorators":[{"name":"userAddress","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getBugByIndex(address,address,uint256)","name":"getBugByIndex","description":"","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[]},{"name":"reporter","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"bool[5]"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"getContractsToBeStreamed()","name":"getContractsToBeStreamed","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getEligibleJuryMembers()","name":"getEligibleJuryMembers","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getNumberOfBugsByReporter(address,address)","name":"getNumberOfBugsByReporter","description":"","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[]},{"name":"reporter","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"interval()","name":"interval","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"juryMemberToAudits(address,uint256)","name":"juryMemberToAudits","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"juryVote(address,address,uint16,uint8,bool)","name":"juryVote","description":"","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[]},{"name":"bugReporter","description":"","recommendedTypes":[]},{"name":"bugIndex","description":"","recommendedTypes":[]},{"name":"juryIndex","description":"","recommendedTypes":[]},{"name":"vote","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"performUpkeep(bytes)","name":"performUpkeep","description":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed. The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","parameterDecorators":[{"name":"performData","description":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rawFulfillRandomWords(uint256,uint256[])","name":"rawFulfillRandomWords","description":"","parameterDecorators":[{"name":"requestId","description":"","recommendedTypes":[]},{"name":"randomWords","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"reportBug(address)","name":"reportBug","description":"","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"timeToDrainFunds()","name":"timeToDrainFunds","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}