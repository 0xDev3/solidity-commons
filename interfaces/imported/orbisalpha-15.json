{"schema":"../schema.json","tags":[],"name":"OrbisAlpha","description":"","eventDecorators":[{"signature":"BlockMember(uint256,uint256,string)","name":"BlockMember","description":"Emitted when a moderator blocked a member from a community.","parameterDecorators":[{"name":"communityID","description":"","recommendedTypes":[],"indexed":false},{"name":"membershipID","description":"","recommendedTypes":[],"indexed":false},{"name":"blockReason","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MemberNewMetadata(address,string)","name":"MemberNewMetadata","description":"Emitted when a member updated its metadata.","parameterDecorators":[{"name":"member","description":"","recommendedTypes":[],"indexed":false},{"name":"metadata","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MemberNewName(address,string)","name":"MemberNewName","description":"Emitted when a member updated its display name.","parameterDecorators":[{"name":"member","description":"","recommendedTypes":[],"indexed":false},{"name":"name","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MemberNewProfilePicture(address,string)","name":"MemberNewProfilePicture","description":"Emitted when a member updated its profile picture.","parameterDecorators":[{"name":"member","description":"","recommendedTypes":[],"indexed":false},{"name":"url","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewAdmin(uint256,address)","name":"NewAdmin","description":"Usually after a governance vote. Emitted when a community's admin has been replaced by another admin.","parameterDecorators":[{"name":"communityID","description":"","recommendedTypes":[],"indexed":false},{"name":"admin","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewCommunity(uint256,string,uint8,uint8,address,bool,address,uint256,uint256,bytes32,uint256)","name":"NewCommunity","description":"Emitted when a new community has been created.","parameterDecorators":[{"name":"ID","description":"","recommendedTypes":[],"indexed":false},{"name":"metadata","description":"","recommendedTypes":[],"indexed":false},{"name":"governanceType","description":"","recommendedTypes":[],"indexed":false},{"name":"privacyType","description":"","recommendedTypes":[],"indexed":false},{"name":"reputationTokenAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"downvotesEnabled","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenNetwork","description":"","recommendedTypes":[],"indexed":false},{"name":"minimumTokenBalance","description":"","recommendedTypes":[],"indexed":false},{"name":"balancesMerkleRoot","description":"","recommendedTypes":[],"indexed":false},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewMaster(address)","name":"NewMaster","description":"Emitted when a new master is being added to the whitelist.","parameterDecorators":[{"name":"master","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewMember(uint256,uint256,address,uint8,uint256)","name":"NewMember","description":"Emitted when a new member joined a community.","parameterDecorators":[{"name":"ID","description":"","recommendedTypes":[],"indexed":false},{"name":"communityID","description":"","recommendedTypes":[],"indexed":false},{"name":"member","description":"","recommendedTypes":[],"indexed":false},{"name":"role","description":"","recommendedTypes":[],"indexed":false},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPost(uint256,address,uint256,string,uint256,bool,uint256)","name":"NewPost","description":"Emitted when a new post has been created.","parameterDecorators":[{"name":"ID","description":"","recommendedTypes":[],"indexed":false},{"name":"creator","description":"","recommendedTypes":[],"indexed":false},{"name":"communityID","description":"","recommendedTypes":[],"indexed":false},{"name":"metadata","description":"","recommendedTypes":[],"indexed":false},{"name":"parentPostID","description":"","recommendedTypes":[],"indexed":false},{"name":"archived","description":"","recommendedTypes":[],"indexed":false},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewReaction(uint256,address,uint256,uint256)","name":"NewReaction","description":"Emitted when a post has been upvoted or downvoted.","parameterDecorators":[{"name":"postID","description":"","recommendedTypes":[],"indexed":false},{"name":"member","description":"","recommendedTypes":[],"indexed":false},{"name":"voteType","description":"","recommendedTypes":[],"indexed":false},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PostArchived(uint256,address,string)","name":"PostArchived","description":"Emitted when a post has been archived.","parameterDecorators":[{"name":"postId","description":"","recommendedTypes":[],"indexed":false},{"name":"_remover","description":"","recommendedTypes":[],"indexed":false},{"name":"removalReason","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UpdateCommunityMetadata(uint256,string)","name":"UpdateCommunityMetadata","description":"Emitted when the admin updated the community's metadata.","parameterDecorators":[{"name":"ID","description":"","recommendedTypes":[],"indexed":false},{"name":"metadata","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UpdateCommunityPrivacyType(uint256,uint8)","name":"UpdateCommunityPrivacyType","description":"Emitted when a the admin updated the community's privacy type.","parameterDecorators":[{"name":"ID","description":"","recommendedTypes":[],"indexed":false},{"name":"privacyType","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UpdateRole(uint256,uint8)","name":"UpdateRole","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"membershipID","description":"","recommendedTypes":[],"indexed":false},{"name":"role","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addMaster(address)","name":"addMaster","description":"Orbis admins can use this function to add another address in the admins whitelist.","parameterDecorators":[{"name":"_master","description":": The address of the user to add as an Orbis master.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"archive(uint256,string)","name":"archive","description":"Post creators and moderators can archive posts.","parameterDecorators":[{"name":"_postID","description":": Unique ID of the post to remove.","recommendedTypes":[]},{"name":"_removalReason","description":": Reason shared by the moderator for the post removal.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"blockMember(uint256,uint256,string)","name":"blockMember","description":"Moderators can block members from participating in a community.","parameterDecorators":[{"name":"_communityID","description":": The unique ID of the community we want to remove the member from.","recommendedTypes":[]},{"name":"_membershipID","description":": The unique membership ID to update.","recommendedTypes":[]},{"name":"_blockReason","description":": The reason shared by the moderator for the blocking this user.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"communities(uint256)","name":"communities","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"metadata","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"governanceType","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"privacyType","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"reputationTokenAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"downvotesEnabled","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"tokenAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"tokenNetwork","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"minimumTokenBalance","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"balancesMerkleRoot","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"create(string,uint8,uint8,string,string,bool,uint256,address,uint256,uint256)","name":"create","description":"Can be used by any user to create a new community with its own governance model and privacy type.","parameterDecorators":[{"name":"_metadata","description":": The URL for the metadata of the community (probably a JSON file on Arweave).","recommendedTypes":[]},{"name":"_governanceType","description":": The type of governance selected by the community's creator.","recommendedTypes":[]},{"name":"_privacyType","description":": The type of privacy selected by the community's creator.","recommendedTypes":[]},{"name":"_repTokenName","description":": Name of the token that will represent this community's reputation.","recommendedTypes":[]},{"name":"_repTokenSymbol","description":": Symbol of the token that will represent this community's reputation.","recommendedTypes":[]},{"name":"_downvotesEnabled","description":": If true, members can downvotes post of other members.","recommendedTypes":[]},{"name":"_quorum","description":": Minimum percentage of vote required for a proposal to be valid TODO: How to hanlde quorum with blacklisted users.","recommendedTypes":[]},{"name":"_tokenAddress","description":"","recommendedTypes":[]},{"name":"_tokenNetwork","description":"","recommendedTypes":[]},{"name":"_minimumTokenBalance","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getGovernanceType(uint256)","name":"getGovernanceType","description":"Returns the governance type of a specific community.","parameterDecorators":[{"name":"_communityID","description":": ID of the community.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"hasRole(uint256,address,uint8)","name":"hasRole","description":"We verify if a member has a specific role in the community.","parameterDecorators":[{"name":"_communityID","description":": The ID of the community.","recommendedTypes":[]},{"name":"_member","description":": The member for whom we are checking the role.","recommendedTypes":[]},{"name":"_role","description":": The role we want to verify the user has.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"invite(uint256,address)","name":"invite","description":"Community admins can't re-invite a user who left the community in the past (to avoid spam). Community admins can invite any user to join a private community as an Editor.","parameterDecorators":[{"name":"_communityID","description":": Unique ID of the community.","recommendedTypes":[]},{"name":"_member","description":": Address of the user to invite.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isAdmin(uint256,address)","name":"isAdmin","description":"Check if a member is an admin of a specified community.","parameterDecorators":[{"name":"_communityID","description":"","recommendedTypes":[]},{"name":"_member","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isMaster(address)","name":"isMaster","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"join(uint256,bytes32[],uint256)","name":"join","description":"This transaction will fail if the user isn't authorized to join the community. Used by members to join a community.","parameterDecorators":[{"name":"_communityID","description":": The unique ID of the community.","recommendedTypes":[]},{"name":"_merkleProof","description":"","recommendedTypes":[]},{"name":"_balance","description":": Balance of the token needed for this community (only for TokenOwnership communities).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"membershipExists(uint256,address)","name":"membershipExists","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"memberships(uint256)","name":"memberships","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"communityID","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"member","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"role","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"posts(uint256)","name":"posts","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"creator","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"communityID","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"metadata","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"parentPostID","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"archived","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"quit(uint256)","name":"quit","description":"If a user leaves a private community he won't be able to re-join it. Users can leave a community they are part of whenever they want.","parameterDecorators":[{"name":"_membershipID","description":": The unique ID of the membership.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"react(uint256,uint256)","name":"react","description":"Downvoting can be disabled by the creator of the communityUpvoting mint a reputation token for the post creator and downvoting burns 1. Used by community members (at least Editor role) to upvote or downvote posts.","parameterDecorators":[{"name":"_postID","description":": Unique ID of the post to upvote/downvote.","recommendedTypes":[]},{"name":"_type","description":": Type of vote: 0 for upvote, 1 for downvote (downvoting might be blocked for some communities).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"replaceAdmin(uint256,address,address)","name":"replaceAdmin","description":"The replacement of the admin is taking effect immediately and can only be triggered by a governance vote. Can be called by the community's reputation token to replace the community admin after a governance vote.","parameterDecorators":[{"name":"_communityID","description":"Community ID for which we are replacing the admin.","recommendedTypes":[]},{"name":"_oldAdmin","description":"Address of the replaced admin.","recommendedTypes":[]},{"name":"_newAdmin","description":"Address of the new admin.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"reply(string,uint256)","name":"reply","description":"Reply to an existing post.","parameterDecorators":[{"name":"_metadata","description":": The URL for the metadata of this post (probably a JSON file on Arweave).","recommendedTypes":[]},{"name":"_parentPostID","description":": The ID of the parent post.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMemberMetadata(string)","name":"setMemberMetadata","description":"Members can update their metadata.","parameterDecorators":[{"name":"_metadata","description":": Arweave hash to use for this member's metadata.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMemberName(address,string)","name":"setMemberName","description":"This workaround is temporary while we work on a better solution. The name update for a member can only be triggered by our back-end wallet as we need to check the ownership of the ENS name (or other naming systems) on mainnet.","parameterDecorators":[{"name":"_member","description":": Address of the member to update.","recommendedTypes":[]},{"name":"_name","description":": Sring to use as name.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMemberProfilePicture(address,string)","name":"setMemberProfilePicture","description":"This workaround is temporary while we work on a better solution. The profile picture update for a member can only be triggered by our back-end wallet as we need to check the ownership of the nft on different chains.","parameterDecorators":[{"name":"_member","description":": Address of the member to update.","recommendedTypes":[]},{"name":"_url","description":": URL of the profile picture to use.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMerkleRoot(uint256,uint256,uint256,bytes32)","name":"setMerkleRoot","description":"Orbis Masters can set the merkle root for proposals and polls created for TokenOwnership communities.","parameterDecorators":[{"name":"_communityID","description":"","recommendedTypes":[]},{"name":"_type","description":"","recommendedTypes":[]},{"name":"_id","description":"","recommendedTypes":[]},{"name":"_merkleRoot","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setModerator(uint256,address)","name":"setModerator","description":"","parameterDecorators":[{"name":"_communityID","description":"","recommendedTypes":[]},{"name":"_member","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"share(uint256,string)","name":"share","description":"Share a new post or a reply to a post, only members with the Editor role can use this function.","parameterDecorators":[{"name":"_communityID","description":": Unique ID of the community.","recommendedTypes":[]},{"name":"_metadata","description":": The URL for the metadata of this post (probably a JSON file on Arweave).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateBalancesMerkleRoot(bytes32,uint256)","name":"updateBalancesMerkleRoot","description":"","parameterDecorators":[{"name":"_balancesMerkleRoot","description":"","recommendedTypes":[]},{"name":"_communityID","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateCommunityMetadata(uint256,string)","name":"updateCommunityMetadata","description":"Used by the community's admin to update the community's metadata.","parameterDecorators":[{"name":"_communityID","description":": The unique ID of the community.","recommendedTypes":[]},{"name":"_metadata","description":": The URL for the metadata of the community (probably a JSON file on Arweave).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateCommunityPrivacyType(uint256,uint8)","name":"updateCommunityPrivacyType","description":"It won't have any retroactive effect for existing members. Used by the community's admin to update the community's privacy type.","parameterDecorators":[{"name":"_communityID","description":": The unique ID of the community.","recommendedTypes":[]},{"name":"_privacyType","description":": The type of privacy selected by the community's creator.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}