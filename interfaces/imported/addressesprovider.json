{"schema":"../schema.json","tags":[],"name":"AddressesProvider","description":"AddressesProvider. Acts as factory of addresses that are part of the Insure protocol. Main registry of addresses part of or connected to the protocol, including permissioned roles.","eventDecorators":[{"signature":"AddressSet(bytes32,address,address)","name":"AddressSet","description":"","parameterDecorators":[{"name":"key","description":"","recommendedTypes":[],"indexed":true},{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"FeeDistributorUpdated(address,address)","name":"FeeDistributorUpdated","description":"","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ParametersProviderUpdated(address,address)","name":"ParametersProviderUpdated","description":"","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PremiumEngineUpdated(address,address)","name":"PremiumEngineUpdated","description":"","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PriceOracleUpdated(address,address)","name":"PriceOracleUpdated","description":"","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RiskPoolCoreUpdated(address,address)","name":"RiskPoolCoreUpdated","description":"","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RiskPoolManagerUpdated(address,address)","name":"RiskPoolManagerUpdated","description":"","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RiskPoolUpdated(address,address)","name":"RiskPoolUpdated","description":"","parameterDecorators":[{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"changeProxyAdmin(address,address)","name":"changeProxyAdmin","description":"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`.","parameterDecorators":[{"name":"proxy","description":"","recommendedTypes":[]},{"name":"newAdmin","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAddress(bytes32)","name":"getAddress","description":"Returns an address by its identifier. The returned address might be an EOA or a contractIt returns ZERO if there is no registered address with the given key.","parameterDecorators":[{"name":"key","description":"The key.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"The address of the registered for the specified key.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getFeeDistributor()","name":"getFeeDistributor","description":"Returns the address of fee distributor.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The FeeDistributor address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getParametersProvider()","name":"getParametersProvider","description":"Returns the address of parameters provider.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The ParametersProvider address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getPremiumEngine()","name":"getPremiumEngine","description":"Returns the address of premium engine.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The PremiumEngine address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getPriceOracle()","name":"getPriceOracle","description":"Returns the address of price oracle.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The PriceOracle address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getProxyAdmin(address)","name":"getProxyAdmin","description":"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`.","parameterDecorators":[{"name":"proxy","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getProxyImplementation(address)","name":"getProxyImplementation","description":"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`.","parameterDecorators":[{"name":"proxy","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRiskPool()","name":"getRiskPool","description":"Returns the address of risk pool.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The RiskPool address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRiskPoolCore()","name":"getRiskPoolCore","description":"Returns the address of risk pool core.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The RiskPoolCore address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRiskPoolManager()","name":"getRiskPoolManager","description":"Returns the address of risk pool manager.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The RiskPoolManager address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAddress(bytes32,address)","name":"setAddress","description":"Sets an address for an key replacing the address saved in the addresses map. IMPORTANT Use this function carefully, as it will do a hard replacement.","parameterDecorators":[{"name":"key","description":"The key.","recommendedTypes":[]},{"name":"newAddress","description":"The address to set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setFeeDistributor(address)","name":"setFeeDistributor","description":"Updates the address of fee distributor.","parameterDecorators":[{"name":"newFeeDistributor","description":"The address of the new FeeDistributor.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setParametersProvider(address)","name":"setParametersProvider","description":"Updates the address of parameters provider.","parameterDecorators":[{"name":"newParametersProvider","description":"The address of the new ParametersProvider.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPremiumEngine(address)","name":"setPremiumEngine","description":"Updates the address of premium engine.","parameterDecorators":[{"name":"newPremiumEngine","description":"The address of the new PremiumEngine.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPriceOracle(address)","name":"setPriceOracle","description":"Updates the address of price oracle.","parameterDecorators":[{"name":"newPriceOracle","description":"The address of the new PriceOracle.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRiskPool(address)","name":"setRiskPool","description":"Updates the address of risk pool.","parameterDecorators":[{"name":"newRiskPool","description":"The address of the new RiskPool.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRiskPoolCore(address)","name":"setRiskPoolCore","description":"Updates the address of risk pool core.","parameterDecorators":[{"name":"newRiskPoolCore","description":"The address of the new RiskPool.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRiskPoolManager(address)","name":"setRiskPoolManager","description":"Updates the address of risk pool manager.","parameterDecorators":[{"name":"newRiskPoolManager","description":"The address of the new RiskPoolManager.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgrade(address,address)","name":"upgrade","description":"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`.","parameterDecorators":[{"name":"proxy","description":"","recommendedTypes":[]},{"name":"implementation","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeAndCall(address,address,bytes)","name":"upgradeAndCall","description":"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`.","parameterDecorators":[{"name":"proxy","description":"","recommendedTypes":[]},{"name":"implementation","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}