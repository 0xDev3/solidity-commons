{"schema":"../schema.json","tags":[],"name":"JBPrices","description":"Manages and normalizes price feeds.","eventDecorators":[{"signature":"AddFeed(uint256,uint256,address)","name":"AddFeed","description":"","parameterDecorators":[{"name":"currency","description":"","recommendedTypes":[],"indexed":true},{"name":"base","description":"","recommendedTypes":[],"indexed":true},{"name":"feed","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"TARGET_DECIMALS()","name":"TARGET_DECIMALS","description":"The normalized number of decimals each price feed has.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"addFeedFor(uint256,uint256,address)","name":"addFeedFor","description":"Add a price feed for a currency in terms of the provided base currency. Current feeds can't be modified.","parameterDecorators":[{"name":"_currency","description":"The currency that the price feed is for.","recommendedTypes":[]},{"name":"_base","description":"The currency that the price feed is based on.","recommendedTypes":[]},{"name":"_feed","description":"The price feed being added.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"feedFor(uint256,uint256)","name":"feedFor","description":"The available price feeds. _currency he currency of the feed. _base he base of the feed.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"priceFor(uint256,uint256)","name":"priceFor","description":"Gets the current price of the provided currency in terms of the provided base currency.","parameterDecorators":[{"name":"_currency","description":"The currency to get a price for.","recommendedTypes":[]},{"name":"_base","description":"The currency to base the price on.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"The price of the currency in terms of the base, with 18 decimals.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}