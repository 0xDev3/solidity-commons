{
  "schema": "../schema.json",
  "tags": [],
  "name": "AccessControlledOffchainAggregator",
  "description": "Wrapper of OffchainAggregator which checks read access on Aggregator-interface methods.",
  "eventDecorators": [
    {
      "signature": "AddedAccess(address)",
      "name": "AddedAccess",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AnswerUpdated(int256,uint256,uint256)",
      "name": "AnswerUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "current",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "roundId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "updatedAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BillingAccessControllerSet(address,address)",
      "name": "BillingAccessControllerSet",
      "description": "emitted when a new access-control contract is set.",
      "parameterDecorators": [
        {
          "name": "old",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "current",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BillingSet(uint32,uint32,uint32,uint32,uint32)",
      "name": "BillingSet",
      "description": "emitted when billing parameters are set.",
      "parameterDecorators": [
        {
          "name": "maximumGasPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "reasonableGasPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "microLinkPerEth",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "linkGweiPerObservation",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "linkGweiPerTransmission",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CheckAccessDisabled()",
      "name": "CheckAccessDisabled",
      "description": "",
      "parameterDecorators": []
    },
    {
      "signature": "CheckAccessEnabled()",
      "name": "CheckAccessEnabled",
      "description": "",
      "parameterDecorators": []
    },
    {
      "signature": "ConfigSet(uint32,uint64,address[],address[],uint8,uint64,bytes)",
      "name": "ConfigSet",
      "description": "triggers a new run of the offchain reporting protocol.",
      "parameterDecorators": [
        {
          "name": "previousConfigBlockNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "configCount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "signers",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "transmitters",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "threshold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "encodedConfigVersion",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "encoded",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LinkTokenSet(address,address)",
      "name": "LinkTokenSet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_oldLinkToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_newLinkToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NewRound(uint256,address,uint256)",
      "name": "NewRound",
      "description": "",
      "parameterDecorators": [
        {
          "name": "roundId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "startedBy",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "startedAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewTransmission(uint32,int192,address,int192[],bytes,bytes32)",
      "name": "NewTransmission",
      "description": "indicates that a new report was transmitted.",
      "parameterDecorators": [
        {
          "name": "aggregatorRoundId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "answer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "transmitter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "observations",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "observers",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "rawReportContext",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OraclePaid(address,address,uint256,address)",
      "name": "OraclePaid",
      "description": "emitted when an oracle has been paid LINK.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferRequested(address,address)",
      "name": "OwnershipTransferRequested",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PayeeshipTransferRequested(address,address,address)",
      "name": "PayeeshipTransferRequested",
      "description": "emitted when a transfer of an oracle's payee address has been initiated.",
      "parameterDecorators": [
        {
          "name": "transmitter",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "current",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "proposed",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PayeeshipTransferred(address,address,address)",
      "name": "PayeeshipTransferred",
      "description": "emitted when a transfer of an oracle's payee address has been completed.",
      "parameterDecorators": [
        {
          "name": "transmitter",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previous",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "current",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RemovedAccess(address)",
      "name": "RemovedAccess",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RequesterAccessControllerSet(address,address)",
      "name": "RequesterAccessControllerSet",
      "description": "emitted when a new requester access controller contract is set.",
      "parameterDecorators": [
        {
          "name": "old",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "current",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoundRequested(address,bytes16,uint32,uint8)",
      "name": "RoundRequested",
      "description": "emitted to immediately request a new round.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ValidatorConfigSet(address,uint32,address,uint32)",
      "name": "ValidatorConfigSet",
      "description": "indicates that the validator configuration has been set.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptOwnership()",
      "name": "acceptOwnership",
      "description": "Allows an ownership transfer to be completed by the recipient.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "acceptPayeeship(address)",
      "name": "acceptPayeeship",
      "description": "second step of payeeship transfer (safe transfer pattern). can only be called by proposed new payee address.",
      "parameterDecorators": [
        {
          "name": "_transmitter",
          "description": "transmitter address of oracle whose payee is changing.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addAccess(address)",
      "name": "addAccess",
      "description": "Adds an address to the access list.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "The address to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "billingAccessController()",
      "name": "billingAccessController",
      "description": "gets billingAccessController.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address of billingAccessController contract.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkEnabled()",
      "name": "checkEnabled",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "decimals()",
      "name": "decimals",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "description()",
      "name": "description",
      "description": "human-readable description of observable this contract is reporting on.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "disableAccessCheck()",
      "name": "disableAccessCheck",
      "description": "makes the access check unenforced.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enableAccessCheck()",
      "name": "enableAccessCheck",
      "description": "makes the access check enforced.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAnswer(uint256)",
      "name": "getAnswer",
      "description": "median of report from given aggregator round (NOT OCR round).",
      "parameterDecorators": [
        {
          "name": "_roundId",
          "description": "the aggregator round of the target report.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBilling()",
      "name": "getBilling",
      "description": "gets billing parameters.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "maximumGasPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "reasonableGasPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "microLinkPerEth",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "linkGweiPerObservation",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "linkGweiPerTransmission",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLinkToken()",
      "name": "getLinkToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "linkToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoundData(uint80)",
      "name": "getRoundData",
      "description": "details for the given aggregator round.",
      "parameterDecorators": [
        {
          "name": "_roundId",
          "description": "target aggregator round (NOT OCR round). Must fit in uint32.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "roundId",
          "description": "_roundId.",
          "recommendedTypes": [],
          "solidityType": "uint80"
        },
        {
          "name": "answer",
          "description": "median of report from given _roundId.",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "startedAt",
          "description": "timestamp of block in which report from given _roundId was transmitted.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "updatedAt",
          "description": "timestamp of block in which report from given _roundId was transmitted.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "answeredInRound",
          "description": "_roundId.",
          "recommendedTypes": [],
          "solidityType": "uint80"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTimestamp(uint256)",
      "name": "getTimestamp",
      "description": "timestamp of block in which report from given aggregator round was transmitted.",
      "parameterDecorators": [
        {
          "name": "_roundId",
          "description": "aggregator round (NOT OCR round) of target report.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasAccess(address,bytes)",
      "name": "hasAccess",
      "description": "Returns the access of an address.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "The address to query.",
          "recommendedTypes": []
        },
        {
          "name": "_calldata",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestAnswer()",
      "name": "latestAnswer",
      "description": "median from the most recent report.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestConfigDetails()",
      "name": "latestConfigDetails",
      "description": "information about current offchain reporting protocol configuration.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "configCount",
          "description": "ordinal number of current config, out of all configs applied to this contract so far.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "blockNumber",
          "description": "block at which this config was set.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "configDigest",
          "description": "domain-separation tag for current config (see configDigestFromConfigData).",
          "recommendedTypes": [],
          "solidityType": "bytes16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestRound()",
      "name": "latestRound",
      "description": "Aggregator round (NOT OCR round) in which last report was transmitted.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestRoundData()",
      "name": "latestRoundData",
      "description": "aggregator details for the most recently transmitted report.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "roundId",
          "description": "aggregator round of latest report (NOT OCR round).",
          "recommendedTypes": [],
          "solidityType": "uint80"
        },
        {
          "name": "answer",
          "description": "median of latest report.",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "startedAt",
          "description": "timestamp of block containing latest report.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "updatedAt",
          "description": "timestamp of block containing latest report.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "answeredInRound",
          "description": "aggregator round of latest report.",
          "recommendedTypes": [],
          "solidityType": "uint80"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestTimestamp()",
      "name": "latestTimestamp",
      "description": "timestamp of block in which last report was transmitted.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestTransmissionDetails()",
      "name": "latestTransmissionDetails",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "configDigest",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes16"
        },
        {
          "name": "epoch",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "round",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "latestAnswer",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int192"
        },
        {
          "name": "latestTimestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "linkAvailableForPayment()",
      "name": "linkAvailableForPayment",
      "description": "allows oracles to check that sufficient LINK balance is available.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "availableBalance",
          "description": "LINK available on this contract, after accounting for outstanding obligations. can become negative.",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxAnswer()",
      "name": "maxAnswer",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int192"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minAnswer()",
      "name": "minAnswer",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int192"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "oracleObservationCount(address)",
      "name": "oracleObservationCount",
      "description": "number of observations oracle is due to be reimbursed for.",
      "parameterDecorators": [
        {
          "name": "_signerOrTransmitter",
          "description": "address used by oracle for signing or transmitting reports.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owedPayment(address)",
      "name": "owedPayment",
      "description": "query an oracle's payment amount.",
      "parameterDecorators": [
        {
          "name": "_transmitter",
          "description": "the transmitter address of the oracle.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAccess(address)",
      "name": "removeAccess",
      "description": "Removes an address from the access list.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "The address to remove.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "requestNewRound()",
      "name": "requestNewRound",
      "description": "immediately requests a new round.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the aggregatorRoundId of the next round. Note: The report for this round may have been transmitted (but not yet mined) *before* requestNewRound() was even called. There is *no* guarantee of causality between the request and the report at aggregatorRoundId.",
          "recommendedTypes": [],
          "solidityType": "uint80"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "requesterAccessController()",
      "name": "requesterAccessController",
      "description": "address of the requester access controller contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "requester access controller address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setBilling(uint32,uint32,uint32,uint32,uint32)",
      "name": "setBilling",
      "description": "sets billing parameters. access control provided by billingAccessController.",
      "parameterDecorators": [
        {
          "name": "_maximumGasPrice",
          "description": "highest gas price for which transmitter will be compensated.",
          "recommendedTypes": []
        },
        {
          "name": "_reasonableGasPrice",
          "description": "transmitter will receive reward for gas prices under this value.",
          "recommendedTypes": []
        },
        {
          "name": "_microLinkPerEth",
          "description": "reimbursement per ETH of gas cost, in 1e-6LINK units.",
          "recommendedTypes": []
        },
        {
          "name": "_linkGweiPerObservation",
          "description": "reward to oracle for contributing an observation to a successfully transmitted report, in 1e-9LINK units.",
          "recommendedTypes": []
        },
        {
          "name": "_linkGweiPerTransmission",
          "description": "reward to transmitter of a successful report, in 1e-9LINK units.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBillingAccessController(address)",
      "name": "setBillingAccessController",
      "description": "sets billingAccessController. only owner can call this.",
      "parameterDecorators": [
        {
          "name": "_billingAccessController",
          "description": "new billingAccessController contract address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setConfig(address[],address[],uint8,uint64,bytes)",
      "name": "setConfig",
      "description": "sets offchain reporting protocol configuration incl. participating oracles.",
      "parameterDecorators": [
        {
          "name": "_signers",
          "description": "addresses with which oracles sign the reports.",
          "recommendedTypes": []
        },
        {
          "name": "_transmitters",
          "description": "addresses oracles use to transmit the reports.",
          "recommendedTypes": []
        },
        {
          "name": "_threshold",
          "description": "number of faulty oracles the system can tolerate.",
          "recommendedTypes": []
        },
        {
          "name": "_encodedConfigVersion",
          "description": "version number for offchainEncoding schema.",
          "recommendedTypes": []
        },
        {
          "name": "_encoded",
          "description": "encoded off-chain oracle configuration.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLinkToken(address,address)",
      "name": "setLinkToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_linkToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_recipient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPayees(address[],address[])",
      "name": "setPayees",
      "description": "sets the payees for transmitting addresses. must be called by ownercannot be used to change payee addresses, only to initially populate them.",
      "parameterDecorators": [
        {
          "name": "_transmitters",
          "description": "addresses oracles use to transmit the reports.",
          "recommendedTypes": []
        },
        {
          "name": "_payees",
          "description": "addresses of payees corresponding to list of transmitters.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRequesterAccessController(address)",
      "name": "setRequesterAccessController",
      "description": "sets the requester access controller.",
      "parameterDecorators": [
        {
          "name": "_requesterAccessController",
          "description": "designates the address of the new requester access controller.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setValidatorConfig(address,uint32)",
      "name": "setValidatorConfig",
      "description": "sets validator configuration. set _newValidator to 0x0 to disable validate calls.",
      "parameterDecorators": [
        {
          "name": "_newValidator",
          "description": "address of the new validator contract.",
          "recommendedTypes": []
        },
        {
          "name": "_newGasLimit",
          "description": "new gas limit for validate calls.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows an owner to begin transferring ownership to a new address, pending.",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferPayeeship(address,address)",
      "name": "transferPayeeship",
      "description": "first step of payeeship transfer (safe transfer pattern). can only be called by payee address.",
      "parameterDecorators": [
        {
          "name": "_transmitter",
          "description": "transmitter address of oracle whose payee is changing.",
          "recommendedTypes": []
        },
        {
          "name": "_proposed",
          "description": "new payee address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transmit(bytes,bytes32[],bytes32[],bytes32)",
      "name": "transmit",
      "description": "transmit is called to post a new report to the contract.",
      "parameterDecorators": [
        {
          "name": "_report",
          "description": "serialized report, which the signatures are signing. See parsing code below for format. The ith element of the observers component must be the index in s_signers of the address for the ith signature.",
          "recommendedTypes": []
        },
        {
          "name": "_rs",
          "description": "ith element is the R components of the ith signature on report. Must have at most maxNumOracles entries.",
          "recommendedTypes": []
        },
        {
          "name": "_ss",
          "description": "ith element is the S components of the ith signature on report. Must have at most maxNumOracles entries.",
          "recommendedTypes": []
        },
        {
          "name": "_rawVs",
          "description": "ith element is the the V component of the ith signature.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transmitters()",
      "name": "transmitters",
      "description": "The list will match the order used to specify the transmitter during setConfig.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "list of addresses permitted to transmit reports to this contract.",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "typeAndVersion()",
      "name": "typeAndVersion",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "validatorConfig()",
      "name": "validatorConfig",
      "description": "validator configuration.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "validator",
          "description": "validator contract.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "gasLimit",
          "description": "gas limit for validate calls.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "version()",
      "name": "version",
      "description": "aggregator contract version.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawFunds(address,uint256)",
      "name": "withdrawFunds",
      "description": "withdraw any available funds left in the contract, up to _amount, after accounting for the funds due to participants in past reports. access control provided by billingAccessController.",
      "parameterDecorators": [
        {
          "name": "_recipient",
          "description": "address to send funds to.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "maximum amount to withdraw, denominated in LINK-wei.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawPayment(address)",
      "name": "withdrawPayment",
      "description": "withdraws an oracle's payment from the contract. must be called by oracle's payee address.",
      "parameterDecorators": [
        {
          "name": "_transmitter",
          "description": "the transmitter address of the oracle.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}