{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "BatchIssuanceModule",
  "description": "BatchIssuanceModule.",
  "eventDecorators": [
    {
      "signature": "AssetExchangeUpdated(address,address,string)",
      "name": "AssetExchangeUpdated",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_component",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newExchangeName",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CKTokenBatchIssued(address,uint256,uint256,uint256)",
      "name": "CKTokenBatchIssued",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposit(address,address,uint256,uint256)",
      "name": "Deposit",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FeeRecipientEdited(address,address)",
      "name": "FeeRecipientEdited",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_feeRecipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ManagerFeeEdited(address,uint256,uint256)",
      "name": "ManagerFeeEdited",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_newManagerFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawCKToken(address,address,address,uint256)",
      "name": "WithdrawCKToken",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "basicIssuanceModule()",
      "name": "basicIssuanceModule",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "batchIssue(address)",
      "name": "batchIssue",
      "description": "Mints the appropriate % of Net Asset Value of the CKToken from the deposited WETH in the rounds. Fee(protocol fee + manager shared fee + manager fee in the module) will be used as slipage to trade on DEXs. The exact amount protocol fee will be deliver to the protocol. Only remaining WETH will be paid to the manager as a fee.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "controller()",
      "name": "controller",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(address,uint256)",
      "name": "deposit",
      "description": "Deposit WETH.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Amount of WETH.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositEth(address)",
      "name": "depositEth",
      "description": "Wrap ETH and then deposit.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "editFeeRecipient(address,address)",
      "name": "editFeeRecipient",
      "description": "CK MANAGER ONLY. Edit the manager fee recipient.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        },
        {
          "name": "_managerFeeRecipient",
          "description": "Manager fee recipient.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "editManagerFee(address,uint256,uint256)",
      "name": "editManagerFee",
      "description": "CK MANAGER ONLY. Edit manager fee.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        },
        {
          "name": "_managerFeePercentage",
          "description": "Manager fee percentage in 10e16 (e.g. 10e16 = 1%).",
          "recommendedTypes": []
        },
        {
          "name": "_managerFeeIndex",
          "description": "Manager fee index. 0 index is issue fee, 1 index is redeem fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBatchIssuanceSetting(address)",
      "name": "getBatchIssuanceSetting",
      "description": "Get batch issuance setting for a CK.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentRound(address)",
      "name": "getCurrentRound",
      "description": "Get current batch issue round number.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentRoundDeposited(address)",
      "name": "getCurrentRoundDeposited",
      "description": "Get current batch issue round deposited eth.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getManagerFee(address,uint256)",
      "name": "getManagerFee",
      "description": "Get manager fee by index.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        },
        {
          "name": "_managerFeeIndex",
          "description": "Manager fee index.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTradeExecutionParam(address,address)",
      "name": "getTradeExecutionParam",
      "description": "Get tradeExecutionParam for a component of a CK.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        },
        {
          "name": "_component",
          "description": "ERC20 instance of the component.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,tuple(address,uint256[2],uint256,uint256))",
      "name": "initialize",
      "description": "Initializes this module to the CKToken with issuance settings and round input cap(limit).",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken to issue.",
          "recommendedTypes": []
        },
        {
          "name": "_batchIssuanceSetting",
          "description": "BatchIssuanceSetting struct define parameters.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "feeRecipient",
              "description": "",
              "type": "address"
            },
            {
              "name": "managerFees",
              "description": "",
              "type": "uint256[2]"
            },
            {
              "name": "maxManagerFee",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "minCKTokenSupply",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "inputBalanceOf(address,address)",
      "name": "inputBalanceOf",
      "description": "Get deposited ETH waiting for batchIssue.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        },
        {
          "name": "_of",
          "description": "address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "outputBalanceOf(address,address)",
      "name": "outputBalanceOf",
      "description": "Get batch issued ckToken of an address.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        },
        {
          "name": "_of",
          "description": "address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeModule()",
      "name": "removeModule",
      "description": "Removes this module from the CKToken, via call by the CKToken.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "roundInfos(address,uint256)",
      "name": "roundInfos",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "totalEthDeposited",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalCkTokenIssued",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "roundNumbers(address)",
      "name": "roundNumbers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setExchanges(address,address[],string[])",
      "name": "setExchanges",
      "description": "CK MANAGER ONLY: Set exchanges for underlying components of the CKToken. Can be called at anytime.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        },
        {
          "name": "_components",
          "description": "Array of components.",
          "recommendedTypes": []
        },
        {
          "name": "_exchangeNames",
          "description": "Array of exchange names mapping to correct component.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "userDeposits(address,bytes32)",
      "name": "userDeposits",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "weth()",
      "name": "weth",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawCKToken(address)",
      "name": "withdrawCKToken",
      "description": "Withdraw CKToken.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawCKTokenTo(address,address)",
      "name": "withdrawCKTokenTo",
      "description": "Withdraw CKToken within to a specific address.",
      "parameterDecorators": [
        {
          "name": "_ckToken",
          "description": "Instance of the CKToken.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "Address to withdraw to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}