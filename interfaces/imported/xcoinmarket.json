{"schema":"../schema.json","tags":[],"name":"XCoinMarket","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Every time a tier changes we log start and end tier against the account. This MAY NOT be emitted if reports are being read from the state of an external contract. The start tier MAY be lower than the current tier as at the block this event is emitted in.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"XCoinTransferred(address,uint256)","name":"XCoinTransferred","description":"Every time a tier changes we log start and end tier against the account. This MAY NOT be emitted if reports are being read from the state of an external contract. The start tier MAY be lower than the current tier as at the block this event is emitted in.","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"buyXCoin(uint256,uint256)","name":"buyXCoin","description":"Buy x-amount of xCoin for x-amount of CELO.","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]},{"name":"_celo","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"celoUsdPriceFeed()","name":"celoUsdPriceFeed","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getCeloUsdPrice()","name":"getCeloUsdPrice","description":"Returns the CELO / Usd price (6 decimals), ultimately provided by the Witnet oracle, and the timestamps at which the price was reported back from the Witnet oracle's sidechain to Celo Alfajores.","parameterDecorators":[],"returnDecorators":[{"name":"_lastPrice","description":"","recommendedTypes":[],"solidityType":"int256"},{"name":"_lastTimestamp","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}