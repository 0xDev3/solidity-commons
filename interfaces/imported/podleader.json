{"schema":"../schema.json","tags":[],"name":"PodLeader","description":"","eventDecorators":[{"signature":"ChangedAddress(string,address,address)","name":"ChangedAddress","description":"Event emitted when contract address is changed.","parameterDecorators":[{"name":"addressType","description":"","recommendedTypes":[],"indexed":true},{"name":"oldAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ChangedRewardsEndTimestamp(uint256,uint256)","name":"ChangedRewardsEndTimestamp","description":"Event emitted when the rewards end timestamp is updated.","parameterDecorators":[{"name":"oldEndTimestamp","description":"","recommendedTypes":[],"indexed":true},{"name":"newEndTimestamp","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ChangedRewardsPerSecond(uint256,uint256)","name":"ChangedRewardsPerSecond","description":"Event emitted when the amount of reward tokens per seconds is updated.","parameterDecorators":[{"name":"oldRewardsPerSecond","description":"","recommendedTypes":[],"indexed":true},{"name":"newRewardsPerSecond","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ChangedTreasury(address,address)","name":"ChangedTreasury","description":"Event emitted when the owner of the rewards manager contract is updated.","parameterDecorators":[{"name":"oldTreasury","description":"","recommendedTypes":[],"indexed":true},{"name":"newTreasury","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Deposit(address,uint256,uint256,uint256)","name":"Deposit","description":"Event emitted when a user deposits funds in the rewards manager.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false},{"name":"value","description":"weis paid for purchase.","recommendedTypes":[],"indexed":false}]},{"signature":"DepositFeeUpdated(uint256,uint16,uint16)","name":"DepositFeeUpdated","description":"Event emitted when deposit fee is updated.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"oldFee","description":"","recommendedTypes":[],"indexed":false},{"name":"newFee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyWithdraw(address,uint256,uint256)","name":"EmergencyWithdraw","description":"Event emitted when a user withdraws their original funds from the rewards manager without claiming rewards.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PoolAdded(uint256,address,uint256,uint256,uint256,uint16)","name":"PoolAdded","description":"Event emitted when new pool is added to the rewards manager.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"allocPoints","description":"","recommendedTypes":[],"indexed":false},{"name":"totalAllocPoints","description":"","recommendedTypes":[],"indexed":false},{"name":"rewardStartTimestamp","description":"","recommendedTypes":[],"indexed":false},{"name":"depositFeeBP","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PoolUpdated(uint256,uint256,uint256,uint256)","name":"PoolUpdated","description":"Event emitted when pool allocation points are updated.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":false},{"name":"purchaser","description":"who paid for the tokens.","recommendedTypes":[],"indexed":false},{"name":"value","description":"weis paid for purchase.","recommendedTypes":[],"indexed":false}]},{"signature":"SetRewardsStartTimestamp(uint256)","name":"SetRewardsStartTimestamp","description":"Event emitted when the rewards start timestamp is set.","parameterDecorators":[{"name":"startTimestamp","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Withdraw(address,uint256,uint256)","name":"Withdraw","description":"Event emitted when a user withdraws their original funds + rewards from the rewards manager.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"add(uint256,address,bool,uint16)","name":"add","description":"Add a new reward token to the pool. Can only be called by the owner. DO NOT add the same token more than once. Rewards will be messed up if you do.","parameterDecorators":[{"name":"allocPoint","description":"Number of allocation points to allot to this token/pool.","recommendedTypes":[]},{"name":"token","description":"The token that will be staked for rewards.","recommendedTypes":[]},{"name":"withUpdate","description":"if specified, update all pools before adding new pool.","recommendedTypes":[]},{"name":"_depositFeeBp","description":"If true, users get voting power for deposits.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addRewardsBalance(uint256)","name":"addRewardsBalance","description":"Add rewards to contract. Can only be called by the owner.","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deposit(uint256,uint256)","name":"deposit","description":"Deposit tokens to PodLeader for rewards allocation.","parameterDecorators":[{"name":"pid","description":"pool id.","recommendedTypes":[]},{"name":"amount","description":"number of tokens to deposit.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyWithdraw(uint256)","name":"emergencyWithdraw","description":"Withdraw without caring about rewards. EMERGENCY ONLY.","parameterDecorators":[{"name":"pid","description":"pool id.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"endTimestamp()","name":"endTimestamp","description":"The timestamp when rewards end.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getMultiplier(uint256,uint256)","name":"getMultiplier","description":"Return reward multiplier over the given from to to timestamp.","parameterDecorators":[{"name":"from","description":"From timestamp.","recommendedTypes":[]},{"name":"to","description":"To timestamp.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"multiplier.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"massUpdatePools()","name":"massUpdatePools","description":"Update reward variables for all pools. Be careful of gas spending!.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"orca()","name":"orca","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingRewards(uint256,address)","name":"pendingRewards","description":"View function to see pending rewards on frontend.","parameterDecorators":[{"name":"pid","description":"pool id.","recommendedTypes":[]},{"name":"account","description":"user account to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"pending rewards.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolInfo(uint256)","name":"poolInfo","description":"Info of each pool.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"token","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"allocPoint","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastRewardTimestamp","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"accRewardsPerShare","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"totalStaked","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"depositFeeBP","description":"","recommendedTypes":[],"solidityType":"uint16"}],"emittableEvents":[],"readOnly":true},{"signature":"poolLength()","name":"poolLength","description":"View function to see current poolInfo array length.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"pool length.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardsActive()","name":"rewardsActive","description":"Returns true if rewards are actively being accumulated.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardsPerSecond()","name":"rewardsPerSecond","description":"Rewards rewarded per second.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"set(uint256,uint256,bool)","name":"set","description":"Update the given pool's allocation points. Can only be called by the owner.","parameterDecorators":[{"name":"pid","description":"The RewardManager pool id.","recommendedTypes":[]},{"name":"allocPoint","description":"New number of allocation points for pool.","recommendedTypes":[]},{"name":"withUpdate","description":"if specified, update all pools before setting allocation points.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRewardsPerSecond(uint256)","name":"setRewardsPerSecond","description":"Set new rewards per second. Can only be called by the owner.","parameterDecorators":[{"name":"newRewardsPerSecond","description":"new amount of rewards to reward each second.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTreasury(address)","name":"setTreasury","description":"Sets the treasury where fees will go to.","parameterDecorators":[{"name":"_treasury","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"startTimestamp()","name":"startTimestamp","description":"The timestamp when rewards start.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalAllocPoint()","name":"totalAllocPoint","description":"Total allocation points. Must be the sum of all allocation points in all pools.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"treasury()","name":"treasury","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"updateDepositFee(uint256,uint16,bool)","name":"updateDepositFee","description":"Update the given pool's deposit fee. Can only be called by the owner.","parameterDecorators":[{"name":"pid","description":"The RewardManager pool id.","recommendedTypes":[]},{"name":"depositFee","description":"New deposit fee for the pool, in basis points.","recommendedTypes":[]},{"name":"withUpdate","description":"if specified, update all pools before updated deposit fee.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updatePool(uint256)","name":"updatePool","description":"Update reward variables of the given pool to be up-to-date.","parameterDecorators":[{"name":"pid","description":"pool id.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userInfo(uint256,address)","name":"userInfo","description":"Info of each user that stakes tokens.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewardTokenDebt","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256,uint256)","name":"withdraw","description":"Withdraw tokens from PodLeader, claiming rewards.","parameterDecorators":[{"name":"pid","description":"pool id.","recommendedTypes":[]},{"name":"amount","description":"number of tokens to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}