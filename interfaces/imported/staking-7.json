{
  "schema": "../schema.json",
  "tags": [],
  "name": "Staking",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Deposit(address,uint256,uint256,address)",
      "name": "Deposit",
      "description": "An event emitted when dVIX is burned and removed of stake.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "EmergencyWithdraw(address,uint256,uint256,address)",
      "name": "EmergencyWithdraw",
      "description": "An event emitted when dVIX is burned and removed of stake.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Harvest(address,uint256,uint256)",
      "name": "Harvest",
      "description": "An event emitted when dVIX is burned and removed of stake.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogPoolAddition(uint256,uint256,address)",
      "name": "LogPoolAddition",
      "description": "An event emitted when dVIX is burned and removed of stake.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "allocPoint",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "lpToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "LogSetPool(uint256,uint256)",
      "name": "LogSetPool",
      "description": "An event emitted when dVIX is burned and removed of stake.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "allocPoint",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogUpdatePool(uint256,uint64,uint256,uint256)",
      "name": "LogUpdatePool",
      "description": "An event emitted when dVIX is burned and removed of stake.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lastRewardBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "lpSupply",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "accRewardPerShare",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "An event emitted when dVIX is burned and removed of stake.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Withdraw(address,uint256,uint256,address)",
      "name": "Withdraw",
      "description": "An event emitted when dVIX is burned and removed of stake.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ACC_PRECISION()",
      "name": "ACC_PRECISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "add(uint256,address)",
      "name": "add",
      "description": "Add a new LP to the pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do.",
      "parameterDecorators": [
        {
          "name": "allocPoint",
          "description": "AP of the new pool.",
          "recommendedTypes": []
        },
        {
          "name": "_lpToken",
          "description": "Address of the LP ERC-20 token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deposit(uint256,uint256,address)",
      "name": "deposit",
      "description": "Deposit LP tokens to Staking for reward token allocation.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "The index of the pool. See `poolInfo`.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "LP token amount to deposit.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "The receiver of `amount` deposit benefit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyWithdraw(uint256,address)",
      "name": "emergencyWithdraw",
      "description": "Withdraw without caring about rewards. EMERGENCY ONLY.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "The index of the pool. See `poolInfo`.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Receiver of the LP tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "harvest(uint256,address)",
      "name": "harvest",
      "description": "Harvest proceeds for transaction sender to `to`.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "The index of the pool. See `poolInfo`.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Receiver of token rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lpToken(uint256)",
      "name": "lpToken",
      "description": "Address of the LP token for each Staking pool.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "massUpdatePools(uint256[])",
      "name": "massUpdatePools",
      "description": "Update reward variables for all pools. Be careful of gas spending!.",
      "parameterDecorators": [
        {
          "name": "pids",
          "description": "Pool IDs of all to be updated. Make sure to update all active pools.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multicall(bytes[])",
      "name": "multicall",
      "description": "Receives and executes a batch of function calls on this contract.",
      "parameterDecorators": [
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "results",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onTokenTransfer(address,uint256,bytes)",
      "name": "onTokenTransfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingRewards(uint256,address)",
      "name": "pendingRewards",
      "description": "View function to see pending token reward on frontend.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "The index of the pool. See `poolInfo`.",
          "recommendedTypes": []
        },
        {
          "name": "_user",
          "description": "Address of user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "pending",
          "description": "token reward for a given user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolInfo(uint256)",
      "name": "poolInfo",
      "description": "Info of each Staking pool.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "accRewardPerShare",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "lastRewardBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "allocPoint",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolLength()",
      "name": "poolLength",
      "description": "Returns the number of Staking pools.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "pools",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardOwner()",
      "name": "rewardOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardPerBlock()",
      "name": "rewardPerBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardToken()",
      "name": "rewardToken",
      "description": "Address of token contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "set(uint256,uint256)",
      "name": "set",
      "description": "Update the given pool's token allocation point. Can only be called by the owner.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "The index of the pool. See `poolInfo`.",
          "recommendedTypes": []
        },
        {
          "name": "_allocPoint",
          "description": "New AP of the pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardOwner(address)",
      "name": "setRewardOwner",
      "description": "Sets the reward owner.",
      "parameterDecorators": [
        {
          "name": "_rewardOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardToken(address)",
      "name": "setRewardToken",
      "description": "Sets the reward token.",
      "parameterDecorators": [
        {
          "name": "_rewardToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardsPerBlock(uint256)",
      "name": "setRewardsPerBlock",
      "description": "Adjusts the reward per block.",
      "parameterDecorators": [
        {
          "name": "_rewardPerBlock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalAllocPoint()",
      "name": "totalAllocPoint",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePool(uint256)",
      "name": "updatePool",
      "description": "Update reward variables of the given pool.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "The index of the pool. See `poolInfo`.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "pool",
          "description": "Returns the pool that was updated.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "accRewardPerShare",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint128"
            },
            {
              "name": "lastRewardBlock",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint64"
            },
            {
              "name": "allocPoint",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint64"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "userInfo(uint256,address)",
      "name": "userInfo",
      "description": "Info of each user that stakes LP tokens.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardDebt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256,uint256,address)",
      "name": "withdraw",
      "description": "Withdraw LP tokens from Staking.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "The index of the pool. See `poolInfo`.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "LP token amount to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Receiver of the LP tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawAndHarvest(uint256,uint256,address)",
      "name": "withdrawAndHarvest",
      "description": "Withdraw LP tokens from Staking and harvest proceeds for transaction sender to `to`.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "The index of the pool. See `poolInfo`.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "LP token amount to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Receiver of the LP tokens and token rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}