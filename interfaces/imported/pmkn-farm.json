{"schema":"../schema.json","tags":["tokens","locking","yield"],"name":"PmknFarm","description":"Pmkn Farm. The inherited PmknToken contract automatically mints PMKN when the user invokes the withdrawYield function. The calculateYieldTime and calculateYieldTotal function takes care of all yield calculations. Ownership of the PmknToken contract should be transferred to the PmknFarm contract after deployment. This contract creates a simple yield farming dApp that rewards users for locking up their DAI stablecoin with a new ERC20 token PmknToken.","eventDecorators":[{"signature":"MintNFT(address,uint256)","name":"MintNFT","description":"An event emitted when a transaction is executed.","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Stake(address,uint256)","name":"Stake","description":"An event emitted when a transaction is executed.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]},{"signature":"Unstake(address,uint256)","name":"Unstake","description":"An event emitted when a transaction is executed.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]},{"signature":"YieldWithdraw(address,uint256)","name":"YieldWithdraw","description":"An event emitted when a transaction is executed.","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"calculateYieldTime(address)","name":"calculateYieldTime","description":"Helper function for determining how long the user staked. Kept visibility public for testing.","parameterDecorators":[{"name":"user","description":"The user.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateYieldTotal(address)","name":"calculateYieldTotal","description":"Calculates the user's yield while using a 86400 second rate (for 100% returns in 24 hours). Solidity does not compute fractions or decimals; therefore, time is multiplied by 10e18 before it's divided by the rate. rawYield thereafter divides the product back by 10e18.","parameterDecorators":[{"name":"user","description":"The address of the user.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"daiToken()","name":"daiToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isStaking(address)","name":"isStaking","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"name()","name":"name","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"nftCount(string)","name":"nftCount","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pmknBalance(address)","name":"pmknBalance","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pmknToken()","name":"pmknToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"stake(uint256)","name":"stake","description":"Locks the user's DAI within the contract. If the user already staked DAI, the.","parameterDecorators":[{"name":"amount","description":"Quantity of DAI the user wishes to lock in the contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakingBalance(address)","name":"stakingBalance","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"startTime(address)","name":"startTime","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"unstake(uint256)","name":"unstake","description":"Retrieves funds locked in contract and sends them back to user. The yieldTransfer variable transfers the calculatedYieldTotal result to pmknBalance in order to save the user's unrealized yield.","parameterDecorators":[{"name":"amount","description":"The quantity of DAI the user wishes to receive.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawYield()","name":"withdrawYield","description":"Transfers accrued PMKN yield to the user. The if conditional statement checks for a stored PMKN balance. If it exists, the the accrued yield is added to the accruing yield before the PMKN mint function is called.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}