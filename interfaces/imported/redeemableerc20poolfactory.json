{
  "schema": "../schema.json",
  "tags": [],
  "name": "RedeemableERC20PoolFactory",
  "description": "RedeemableERC20PoolFactory. Factory for creating and registering new `RedeemableERC20Pool` contracts.",
  "eventDecorators": [
    {
      "signature": "NewContract(address)",
      "name": "NewContract",
      "description": "Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "balancerFactory()",
      "name": "balancerFactory",
      "description": "Balancer factory.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createChild(bytes)",
      "name": "createChild",
      "description": "Implements `IFactory`. Calls the _createChild hook, which inheriting contracts must override. Registers child contract address such that `isChild` is `true`. Emits `NewContract` event.",
      "parameterDecorators": [
        {
          "name": "data_",
          "description": "Encoded data to pass down to child contract constructor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "New child contract address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createChild(tuple(address,address,uint256,uint256,uint256,uint256))",
      "name": "createChild",
      "description": "Allows calling `createChild` with `RedeemableERC20PoolFactoryRedeemableERC20PoolConfig` struct. Can use original Factory `createChild` function signature if function parameters are already encoded.",
      "parameterDecorators": [
        {
          "name": "config_",
          "description": "`RedeemableERC20Pool` constructor configuration.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "reserve",
              "description": "",
              "type": "address"
            },
            {
              "name": "token",
              "description": "",
              "type": "address"
            },
            {
              "name": "reserveInit",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "initialValuation",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "finalValuation",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "minimumTradingDuration",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "New `RedeemableERC20Pool` child contract address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "crpFactory()",
      "name": "crpFactory",
      "description": "ConfigurableRightsPool factory.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isChild(address)",
      "name": "isChild",
      "description": "Implements `IFactory`. Checks if address is registered as a child contract of this factory.",
      "parameterDecorators": [
        {
          "name": "maybeChild_",
          "description": "Address of child contract to look up.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns `true` if address is a contract created by this contract factory, otherwise `false`.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}