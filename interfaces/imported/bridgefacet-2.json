{
  "schema": "../schema.json",
  "tags": [
    "bridges"
  ],
  "name": "BridgeFacet",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AavePortalMintUnbacked(bytes32,address,address,uint256)",
      "name": "AavePortalMintUnbacked",
      "description": "Emitted when a router used Aave Portal liquidity for fast transfer.",
      "parameterDecorators": [
        {
          "name": "transferId",
          "description": "- The unique identifier of the crosschain transaction.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "router",
          "description": "- The authorized router that used Aave Portal liquidity.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "asset",
          "description": "- The asset that was provided by Aave Portal.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "- The amount of asset that was provided by Aave Portal.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ConnextionAdded(uint32,address,address)",
      "name": "ConnextionAdded",
      "description": "Emitted when a new connext instance is added.",
      "parameterDecorators": [
        {
          "name": "domain",
          "description": "- The domain the connext instance is on.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "connext",
          "description": "- The address of the connext instance.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Executed(bytes32,address,tuple,address,uint256,address)",
      "name": "Executed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "transferId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "args",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "transactingAsset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "transactingAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ExecutorUpdated(address,address,address)",
      "name": "ExecutorUpdated",
      "description": "Emitted when the executor variable is updated.",
      "parameterDecorators": [
        {
          "name": "oldExecutor",
          "description": "- The executor old value.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newExecutor",
          "description": "- The executor new value.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ForcedReceiveLocal(bytes32,bytes32,uint32,uint256)",
      "name": "ForcedReceiveLocal",
      "description": "Emitted when a transfer will accept the local asset instead of the previously specified adopted asset.",
      "parameterDecorators": [
        {
          "name": "transferId",
          "description": "- The unique identifier of the crosschain transaction.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "canonicalId",
          "description": "- The canonical identifier for the local asset.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "canonicalDomain",
          "description": "- The canonical domain for the local asset.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "- The amount for the transfer.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PromiseRouterUpdated(address,address,address)",
      "name": "PromiseRouterUpdated",
      "description": "Emitted when the promiseRouter variable is updated.",
      "parameterDecorators": [
        {
          "name": "oldRouter",
          "description": "- The promiseRouter old value.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newRouter",
          "description": "- The promiseRouter new value.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SequencerAdded(address,address)",
      "name": "SequencerAdded",
      "description": "Emitted when a sequencer is added or removed from whitelists.",
      "parameterDecorators": [
        {
          "name": "sequencer",
          "description": "- The sequencer address to be added or removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SequencerRemoved(address,address)",
      "name": "SequencerRemoved",
      "description": "Emitted when a sequencer is added or removed from whitelists.",
      "parameterDecorators": [
        {
          "name": "sequencer",
          "description": "- The sequencer address to be added or removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SponsorVaultUpdated(address,address,address)",
      "name": "SponsorVaultUpdated",
      "description": "Emitted when the sponsorVault variable is updated.",
      "parameterDecorators": [
        {
          "name": "oldSponsorVault",
          "description": "- The sponsorVault old value.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newSponsorVault",
          "description": "- The sponsorVault new value.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferRelayerFeesUpdated(bytes32,uint256,address)",
      "name": "TransferRelayerFeesUpdated",
      "description": "Emitted when `bumpTransfer` is called by an user on the origin domain.",
      "parameterDecorators": [
        {
          "name": "transferId",
          "description": "- The unique identifier of the crosschain transaction.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "relayerFee",
          "description": "- The updated amount of relayer fee in native asset.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "XCalled(bytes32,uint256,tuple,address,uint256,address)",
      "name": "XCalled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "transferId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "nonce",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "xcallArgs",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "bridgedAsset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "bridgedAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "AAVE_REFERRAL_CODE()",
      "name": "AAVE_REFERRAL_CODE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addConnextion(uint32,address)",
      "name": "addConnextion",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_domain",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_connext",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addSequencer(address)",
      "name": "addSequencer",
      "description": "Used to add an approved sequencer to the whitelist.",
      "parameterDecorators": [
        {
          "name": "_sequencer",
          "description": "- The sequencer address to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "approvedSequencers(address)",
      "name": "approvedSequencers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_sequencer",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bumpTransfer(bytes32)",
      "name": "bumpTransfer",
      "description": "Anyone can call this function on the origin domain to increase the relayer fee for a transfer.",
      "parameterDecorators": [
        {
          "name": "_transferId",
          "description": "- The unique identifier of the crosschain transaction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "connextion(uint32)",
      "name": "connextion",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_domain",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "domain()",
      "name": "domain",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "execute(tuple(tuple,address,address[],bytes[],address,bytes,uint256,uint256,address))",
      "name": "execute",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_args",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "params",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "local",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "routers",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "routerSignatures",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "sequencer",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "sequencerSignature",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "nonce",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "originSender",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executor()",
      "name": "executor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "forceReceiveLocal(tuple(address,bytes,uint32,uint32,address,address,bool,bool,address,uint256,uint256,uint256),uint256,uint256,bytes32,uint32,address)",
      "name": "forceReceiveLocal",
      "description": "A user-specified agent can call this to accept the local asset instead of the previously specified adopted asset. Should be called in situations where transfers are facing unfavorable slippage conditions for extended periods.",
      "parameterDecorators": [
        {
          "name": "_params",
          "description": "- The call params for the transaction.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "to",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "callData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "originDomain",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destinationDomain",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "agent",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "recovery",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "forceSlow",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "receiveLocal",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "callback",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "callbackFee",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "relayerFee",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destinationMinOut",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "_amount",
          "description": "- The amount of transferring asset the tx called xcall with.",
          "recommendedTypes": []
        },
        {
          "name": "_nonce",
          "description": "- The nonce for the transfer.",
          "recommendedTypes": []
        },
        {
          "name": "_canonicalId",
          "description": "- The identifier of the canonical asset associated with the transfer.",
          "recommendedTypes": []
        },
        {
          "name": "_canonicalDomain",
          "description": "- The domain of the canonical asset associated with the transfer.",
          "recommendedTypes": []
        },
        {
          "name": "_originSender",
          "description": "- The msg.sender of the origin call.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "nonce()",
      "name": "nonce",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "promiseRouter()",
      "name": "promiseRouter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reconciledTransfers(bytes32)",
      "name": "reconciledTransfers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_transferId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "relayerFees(bytes32)",
      "name": "relayerFees",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_transferId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeSequencer(address)",
      "name": "removeSequencer",
      "description": "Used to remove an approved sequencer from the whitelist.",
      "parameterDecorators": [
        {
          "name": "_sequencer",
          "description": "- The sequencer address to remove.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "routedTransfers(bytes32)",
      "name": "routedTransfers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_transferId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setExecutor(address)",
      "name": "setExecutor",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_executor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPromiseRouter(address)",
      "name": "setPromiseRouter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_promiseRouter",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSponsorVault(address)",
      "name": "setSponsorVault",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_sponsorVault",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sponsorVault()",
      "name": "sponsorVault",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "xcall(tuple(tuple,address,uint256,uint256))",
      "name": "xcall",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_args",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "params",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "transactingAsset",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "transactingAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "originMinOut",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}