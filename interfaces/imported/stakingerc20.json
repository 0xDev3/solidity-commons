{
  "schema": "../schema.json",
  "tags": [],
  "name": "StakingERC20",
  "description": "An IERC900 staking contract.",
  "eventDecorators": [
    {
      "signature": "Claimed(address,uint256,uint256)",
      "name": "Claimed",
      "description": "Emitted when `indexer` withdrew `tokens` staked.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "eth",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProfitEth(uint256)",
      "name": "ProfitEth",
      "description": "Emitted when `indexer` withdrew `tokens` staked.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProfitToken(uint256)",
      "name": "ProfitToken",
      "description": "Emitted when `indexer` withdrew `tokens` staked.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StakeChanged(uint256,uint256)",
      "name": "StakeChanged",
      "description": "Emitted when `indexer` withdrew `tokens` staked.",
      "parameterDecorators": [
        {
          "name": "total",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Staked(address,uint256,uint256,bytes)",
      "name": "Staked",
      "description": "Emitted when `indexer` withdrew `tokens` staked.",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "total",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unstaked(address,uint256,uint256,bytes)",
      "name": "Unstaked",
      "description": "Emitted when `indexer` withdrew `tokens` staked.",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "total",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "distribute(uint256)",
      "name": "distribute",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "distribute_eth()",
      "name": "distribute_eth",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getReward(address)",
      "name": "getReward",
      "description": "Returns how much ETH the user can withdraw currently.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Address of the user to check reward for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_eth",
          "description": "the amount of ETH the account will perceive if he unstakes now.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "__token",
          "description": "the amount of tokens the account will perceive if he unstakes now.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stake(uint256,bytes)",
      "name": "stake",
      "description": "Stakes a certain amount of tokens, this MUST transfer the given amount from the account.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of ERC20 token to stake.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Additional data as per the EIP900.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeFor(address,uint256,bytes)",
      "name": "stakeFor",
      "description": "Stakes a certain amount of tokens, this MUST transfer the given amount from the caller.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Address who will own the stake afterwards.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of ERC20 token to stake.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Additional data as per the EIP900.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "staking_contract_eth()",
      "name": "staking_contract_eth",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "staking_contract_token()",
      "name": "staking_contract_token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "supportsHistory()",
      "name": "supportsHistory",
      "description": "MUST return true if the optional history functions are implemented, otherwise false We dont want this.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "Address of the token being used by the staking interface.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "ERC20 token token address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalReward()",
      "name": "totalReward",
      "description": "returns the total rewards stored for token and eth.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "eth",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalStaked()",
      "name": "totalStaked",
      "description": "Returns the current total of tokens staked.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the total of staked tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalStakedFor(address)",
      "name": "totalStakedFor",
      "description": "Returns the current total of tokens staked for an address.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "address owning the stake.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the total of staked tokens of this address.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unstake(uint256,bytes)",
      "name": "unstake",
      "description": "Unstakes a certain amount of tokens, this SHOULD return the given amount of tokens to the account, if unstaking is currently not possible the function MUST revert.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of ERC20 token to remove from the stake.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Additional data as per the EIP900.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "Withdraws rewards (basically unstake then restake).",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of ERC20 token to remove from the stake. If amount if 0, then we claim all the rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}