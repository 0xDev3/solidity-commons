{
  "schema": "../schema.json",
  "tags": [],
  "name": "GoingUpProjects",
  "description": "GoingUP Platform Projects Smart Contract.",
  "eventDecorators": [
    {
      "signature": "CreateProject(address,string,string,uint256,uint256,string,string[])",
      "name": "CreateProject",
      "description": "",
      "parameterDecorators": [
        {
          "name": "creator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "description",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "started",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ended",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "primaryUrl",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tags",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "admins(address)",
      "name": "admins",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "create(string,string,uint256,uint256,string,string[])",
      "name": "create",
      "description": "Create a project.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "Project name.",
          "recommendedTypes": []
        },
        {
          "name": "description",
          "description": "Project description.",
          "recommendedTypes": []
        },
        {
          "name": "started",
          "description": "Project start (Unix timestamp, set to zero if you do not want to set any value).",
          "recommendedTypes": []
        },
        {
          "name": "ended",
          "description": "Project ended (Unix timestamp, set to zero if you do not want to set any value).",
          "recommendedTypes": []
        },
        {
          "name": "primaryUrl",
          "description": "Project primary url.",
          "recommendedTypes": []
        },
        {
          "name": "tags",
          "description": "Project tags.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "price()",
      "name": "price",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "projects(uint256)",
      "name": "projects",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "description",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "started",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "ended",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "primaryUrl",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "active",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "allowMembersToEdit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setAdmin(address,bool)",
      "name": "setAdmin",
      "description": "Sets the admin flag for address.",
      "parameterDecorators": [
        {
          "name": "targetAddress",
          "description": "Target address to set admin flag.",
          "recommendedTypes": []
        },
        {
          "name": "isAdmin",
          "description": "Admin flag to set (true means address is admin, false mean address is not admin).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPrice(uint256)",
      "name": "setPrice",
      "description": "Sets the price for creating and updating projects.",
      "parameterDecorators": [
        {
          "name": "newPrice",
          "description": "New price for creating and updating projects.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfer ownership of contract.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "New contract owner address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "update(uint256,string,string,uint256,uint256,string,string[])",
      "name": "update",
      "description": "Update a project.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "Project ID.",
          "recommendedTypes": []
        },
        {
          "name": "name",
          "description": "Project name.",
          "recommendedTypes": []
        },
        {
          "name": "description",
          "description": "Project description.",
          "recommendedTypes": []
        },
        {
          "name": "started",
          "description": "Project start (Unix timestamp, set to zero if you do not want to set any value).",
          "recommendedTypes": []
        },
        {
          "name": "ended",
          "description": "Project ended (Unix timestamp, set to zero if you do not want to set any value).",
          "recommendedTypes": []
        },
        {
          "name": "primaryUrl",
          "description": "Project primary url.",
          "recommendedTypes": []
        },
        {
          "name": "tags",
          "description": "Project tags.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawERC1155(address,uint256,uint256,bytes)",
      "name": "withdrawERC1155",
      "description": "Withdraw ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "Address of ERC1155 contract.",
          "recommendedTypes": []
        },
        {
          "name": "tokenID",
          "description": "Token ID to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawERC20(address,uint256)",
      "name": "withdrawERC20",
      "description": "Withdraw ERC20 tokens.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "Address of ERC20 contract.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount to transfer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawERC721(address,uint256)",
      "name": "withdrawERC721",
      "description": "Withdraw ERC721 token.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "Address of ERC721 contract.",
          "recommendedTypes": []
        },
        {
          "name": "tokenID",
          "description": "Token ID to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawFunds()",
      "name": "withdrawFunds",
      "description": "Withdraw native tokens (matic).",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}