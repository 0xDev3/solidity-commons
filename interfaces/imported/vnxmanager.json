{"schema":"../schema.json","tags":[],"name":"vnxManager","description":"VNXManager. Implements runtime configurable Role Based Access Control, Contract Management.","eventDecorators":[{"signature":"BearerAdded(address,uint256)","name":"BearerAdded","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"role","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"BearerRemoved(address,uint256)","name":"BearerRemoved","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"role","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleCreated(uint256)","name":"RoleCreated","description":"","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addBearer(address,uint256)","name":"addBearer","description":"A method to add a bearer to a role.","parameterDecorators":[{"name":"_account","description":"The account to add as a bearer.","recommendedTypes":[]},{"name":"_role","description":"The role to add the bearer to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addRole(string,uint256)","name":"addRole","description":"Create a new role.","parameterDecorators":[{"name":"_roleDescription","description":"The description of the role created.","recommendedTypes":[]},{"name":"_admin","description":"The role that is allowed to add and remove bearers from the role being created.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"addRootRole(string)","name":"addRootRole","description":"Create a new role that has itself as an admin. msg.sender is added as a bearer.","parameterDecorators":[{"name":"_roleDescription","description":"The description of the role created.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"hasRole(address,uint256)","name":"hasRole","description":"Verify whether an account is a bearer of a role.","parameterDecorators":[{"name":"_account","description":"The account to verify.","recommendedTypes":[]},{"name":"_role","description":"The role to look into.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isAdmin()","name":"isAdmin","description":"Returns true if the caller is the admin role.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeBearer(address,uint256)","name":"removeBearer","description":"A method to remove a bearer from a role.","parameterDecorators":[{"name":"_account","description":"The account to remove as a bearer.","recommendedTypes":[]},{"name":"_role","description":"The role to remove the bearer from.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"roles(uint256)","name":"roles","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"description","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"admin","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"bearersCount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalRoles()","name":"totalRoles","description":"Retrieve the number of roles in the contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferContractOwnership(address,address)","name":"transferContractOwnership","description":"","parameterDecorators":[{"name":"targetContract","description":"","recommendedTypes":[]},{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}