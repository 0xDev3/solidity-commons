{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "gnosis"
  ],
  "name": "GnosisSafe",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ApproveHash(bytes32,address)",
      "name": "ApproveHash",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "approvedHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SignMsg(bytes32)",
      "name": "SignMsg",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "msgHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ExecutionFailure(bytes32,uint256)",
      "name": "ExecutionFailure",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "txHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "payment",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ExecutionSuccess(bytes32,uint256)",
      "name": "ExecutionSuccess",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "txHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "payment",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AddedOwner(address)",
      "name": "AddedOwner",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RemovedOwner(address)",
      "name": "RemovedOwner",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangedThreshold(uint256)",
      "name": "ChangedThreshold",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "threshold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EnabledModule(address)",
      "name": "EnabledModule",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "module",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DisabledModule(address)",
      "name": "DisabledModule",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "module",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ExecutionFromModuleSuccess(address)",
      "name": "ExecutionFromModuleSuccess",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "module",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ExecutionFromModuleFailure(address)",
      "name": "ExecutionFromModuleFailure",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "module",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ChangedMasterCopy(address)",
      "name": "ChangedMasterCopy",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "masterCopy",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "getMessageHash(bytes)",
      "name": "getMessageHash",
      "description": "",
      "parameterDecorators": [
        {
          "name": "message",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addOwnerWithThreshold(address,uint256)",
      "name": "addOwnerWithThreshold",
      "description": "",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_threshold",
          "description": "New threshold.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isValidSignature(bytes,bytes)",
      "name": "isValidSignature",
      "description": "Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`). Should return whether the signature provided is valid for the provided data. The save does not implement the interface since `checkSignatures` is not a view method. The method will not perform any state changes (see parameters of `checkSignatures`).",
      "parameterDecorators": [
        {
          "name": "_data",
          "description": "Arbitrary length data signed on the behalf of address(this).",
          "recommendedTypes": []
        },
        {
          "name": "_signature",
          "description": "Signature byte array associated with _data.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isModuleEnabled(address)",
      "name": "isModuleEnabled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "module",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner(address)",
      "name": "isOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "execTransactionFromModule(address,uint256,bytes,uint8)",
      "name": "execTransactionFromModule",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "operation",
          "description": "Operation type of module transaction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
      "name": "execTransactionFromModuleReturnData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "operation",
          "description": "Operation type of module transaction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "returnData",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "signedMessages(bytes32)",
      "name": "signedMessages",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "enableModule(address)",
      "name": "enableModule",
      "description": "",
      "parameterDecorators": [
        {
          "name": "module",
          "description": "Module to be whitelisted.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeThreshold(uint256)",
      "name": "changeThreshold",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_threshold",
          "description": "New threshold.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)",
      "name": "execTransaction",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "operation",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "safeTxGas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "baseGas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "gasPrice",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "gasToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "refundReceiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "signatures",
          "description": "Packed signature data ({bytes32 r}{bytes32 s}{uint8 v}).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "approvedHashes(address,bytes32)",
      "name": "approvedHashes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeMasterCopy(address)",
      "name": "changeMasterCopy",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_masterCopy",
          "description": "New contract address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "signMessage(bytes)",
      "name": "signMessage",
      "description": "Marks a message (`_data`) as signed. Marks a message as signed, so that it can be used with EIP-1271.",
      "parameterDecorators": [
        {
          "name": "_data",
          "description": "Arbitrary length data that should be marked as signed on the behalf of address(this).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getOwners()",
      "name": "getOwners",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "NAME()",
      "name": "NAME",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nonce()",
      "name": "nonce",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getModules()",
      "name": "getModules",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setup(address[],uint256,address,bytes,address,address,uint256,address)",
      "name": "setup",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owners",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_threshold",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "fallbackHandler",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "paymentToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "payment",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "paymentReceiver",
          "description": "Adddress that should receive the payment (or 0 if tx.origin).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "requiredTxGas(address,uint256,bytes,uint8)",
      "name": "requiredTxGas",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "operation",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getModulesPaginated(address,uint256)",
      "name": "getModulesPaginated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "start",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "pageSize",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "array",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "next",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approveHash(bytes32)",
      "name": "approveHash",
      "description": "Marks a hash as approved. This can be used to validate a hash that is used by a signature.",
      "parameterDecorators": [
        {
          "name": "hashToApprove",
          "description": "The hash that should be marked as approved for signatures that are verified by this contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
      "name": "getTransactionHash",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "operation",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "safeTxGas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "baseGas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "gasPrice",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "gasToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "refundReceiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_nonce",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "disableModule(address,address)",
      "name": "disableModule",
      "description": "",
      "parameterDecorators": [
        {
          "name": "prevModule",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "module",
          "description": "Module to be removed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapOwner(address,address,address)",
      "name": "swapOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "prevOwner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "oldOwner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newOwner",
          "description": "New owner address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getThreshold()",
      "name": "getThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
      "name": "encodeTransactionData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "operation",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "safeTxGas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "baseGas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "gasPrice",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "gasToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "refundReceiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_nonce",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setFallbackHandler(address)",
      "name": "setFallbackHandler",
      "description": "",
      "parameterDecorators": [
        {
          "name": "handler",
          "description": "contract to handle fallbacks calls.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "domainSeparator()",
      "name": "domainSeparator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeOwner(address,address,uint256)",
      "name": "removeOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "prevOwner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_threshold",
          "description": "New threshold.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "VERSION()",
      "name": "VERSION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}