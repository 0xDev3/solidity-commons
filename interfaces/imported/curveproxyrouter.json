{
  "schema": "../schema.json",
  "tags": [
    "curve finance"
  ],
  "name": "CurveProxyRouter",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "approve(address,address,uint256)",
      "name": "approve",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "spender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimTokens(address)",
      "name": "claimTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "curvePoolAmountsOut(int128,int128,uint256,address,address[])",
      "name": "curvePoolAmountsOut",
      "description": "",
      "parameterDecorators": [
        {
          "name": "i",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "j",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "curveExchangeAmt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "router",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "path",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "AmountsOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "curvePoolSwap(int128,int128,uint256,uint256,address,address[],uint256)",
      "name": "curvePoolSwap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "i",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "j",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "curveExchangeAmt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "router",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "path",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "destruct()",
      "name": "destruct",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAmountsOut(uint256,address,address,address[],address[])",
      "name": "getAmountsOut",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amountIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "router0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "router1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token0Path",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token1Path",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "router1AmountOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReserves(address[],uint256[],address[],bytes32[])",
      "name": "getReserves",
      "description": "",
      "parameterDecorators": [
        {
          "name": "factories",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokensperfactory",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "initCodes",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "reserveArray",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapExactTokensForTokens(uint256,uint256,address,address,address[],address[],uint256)",
      "name": "swapExactTokensForTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amountIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "router0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "router1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token0Path",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token1Path",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}