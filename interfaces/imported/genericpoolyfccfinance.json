{
  "schema": "../schema.json",
  "tags": [],
  "name": "GenericPool_YFCC_Finance",
  "description": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a edition is created reserving the corresponding token IDs.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ReferRewardDistributeSuccessful(address,uint256,uint256)",
      "name": "ReferRewardDistributeSuccessful",
      "description": "Emitted when a edition is created reserving the corresponding token IDs.",
      "parameterDecorators": [
        {
          "name": "_stakeholder",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardClaimSuccessful(address,uint256,uint256)",
      "name": "RewardClaimSuccessful",
      "description": "Emitted when a edition is created reserving the corresponding token IDs.",
      "parameterDecorators": [
        {
          "name": "_stakeholder",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardDistributeIgnore(address,uint256,uint256)",
      "name": "RewardDistributeIgnore",
      "description": "Emitted when a edition is created reserving the corresponding token IDs.",
      "parameterDecorators": [
        {
          "name": "_stakeholder",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_expiredAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardDistributeSuccessful(address,uint256,uint256)",
      "name": "RewardDistributeSuccessful",
      "description": "Emitted when a edition is created reserving the corresponding token IDs.",
      "parameterDecorators": [
        {
          "name": "_stakeholder",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StakeSuccessful(address,address,uint256,uint256)",
      "name": "StakeSuccessful",
      "description": "Emitted when a edition is created reserving the corresponding token IDs.",
      "parameterDecorators": [
        {
          "name": "_stakeholder",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_referral",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferRewardsToPoolContract(address,address,address,uint256)",
      "name": "TransferRewardsToPoolContract",
      "description": "Emitted when a edition is created reserving the corresponding token IDs.",
      "parameterDecorators": [
        {
          "name": "_from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_rewardToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferSuccessful(address,address,uint256)",
      "name": "TransferSuccessful",
      "description": "Emitted when a edition is created reserving the corresponding token IDs.",
      "parameterDecorators": [
        {
          "name": "_from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UnstakeSuccessful(address,uint256)",
      "name": "UnstakeSuccessful",
      "description": "Emitted when a edition is created reserving the corresponding token IDs.",
      "parameterDecorators": [
        {
          "name": "_stakeholder",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "_defaultReferAddress()",
      "name": "_defaultReferAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_poolHalvingIntervalMinutes()",
      "name": "_poolHalvingIntervalMinutes",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_poolLifeCircleEnded()",
      "name": "_poolLifeCircleEnded",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_poolRewardDistributionIntervalMinutes()",
      "name": "_poolRewardDistributionIntervalMinutes",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_poolRewardDistributionRate()",
      "name": "_poolRewardDistributionRate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_poolRewardHalvingAt()",
      "name": "_poolRewardHalvingAt",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_rewardClaimFee()",
      "name": "_rewardClaimFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_rewardTokenAddress()",
      "name": "_rewardTokenAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_stakeTokenAddress()",
      "name": "_stakeTokenAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_stakeholders(uint256)",
      "name": "_stakeholders",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_transactionFeeInEther()",
      "name": "_transactionFeeInEther",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addPoolDeveloper(address)",
      "name": "addPoolDeveloper",
      "description": "A method to set developers of the pool.",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "The developer address to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addPoolRewards(uint256)",
      "name": "addPoolRewards",
      "description": "A method to add reward to pool contract.",
      "parameterDecorators": [
        {
          "name": "_rewardAmount",
          "description": "Amount of reward token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimReferReward()",
      "name": "claimReferReward",
      "description": "A method to claim refer bonus reward.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "success_",
          "description": "Transaction result is success or fail.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "amount_",
          "description": "Amount of refer bonus.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimReward()",
      "name": "claimReward",
      "description": "A method to claim stakeholder reward.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "success_",
          "description": "Claim result true/false.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "amount_",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "developerWithdraw(uint256)",
      "name": "developerWithdraw",
      "description": "A method to withdraw developer assets from the pool.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "Amount of withdrawal.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "distributeRewards()",
      "name": "distributeRewards",
      "description": "A method to distribute rewards to all stakeholders.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "endPoolLifeCircle()",
      "name": "endPoolLifeCircle",
      "description": "A method to set reward pool life circle.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getPoolInformation()",
      "name": "getPoolInformation",
      "description": "A method to get pool reward stats.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "lastRewardDistributionOn_",
          "description": "The last time when pool distribute rewards to all stakeholders.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "poolTotalReward_",
          "description": "Total pool reward amount.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "poolRemainingReward_",
          "description": "Total remaining reward for staking.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "poolDistributedReward_",
          "description": "Total.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "poolClaimedReward_",
          "description": "Total claimed reward from stakeholders.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "poolNextHalvingAt_",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "poolNumberOfStakeholders_",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "poolTotalStake_",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "poolInitialRewards_",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isStakeholder(address)",
      "name": "isStakeholder",
      "description": "A method to check if an address is a stakeholder.",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "The address to verify.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "exists_",
          "description": "Exist or not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "index_",
          "description": "Access index of stakeholder.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "myPoolInformation()",
      "name": "myPoolInformation",
      "description": "A method to get stakeholder information.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "address_",
          "description": "Stakeholder address.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "stakeAmount_",
          "description": "Staking amount.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "createdAt_",
          "description": "Staking created date.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "expiredAt_",
          "description": "Expiration time.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "reward_",
          "description": "Earned rewards.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "referReward_",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pool()",
      "name": "pool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolDeployedAt()",
      "name": "poolDeployedAt",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "referBonusOf(address)",
      "name": "referBonusOf",
      "description": "A method to allow a stakeholder to check his bonus rewards.",
      "parameterDecorators": [
        {
          "name": "_stakeholder",
          "description": "The stakeholder to check rewards for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "bonus_",
          "description": "Rewards of stakeholder.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removePoolDeveloper(address)",
      "name": "removePoolDeveloper",
      "description": "A method to remove developers from the pool.",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "The developer address to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardOf(address)",
      "name": "rewardOf",
      "description": "A method to allow a stakeholder to check his rewards.",
      "parameterDecorators": [
        {
          "name": "_stakeholder",
          "description": "The stakeholder to check rewards for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "reward_",
          "description": "Rewards of stakeholder.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setRewardClaimFee(uint256)",
      "name": "setRewardClaimFee",
      "description": "A method to set reward claim fee.",
      "parameterDecorators": [
        {
          "name": "_fee",
          "description": "Reward claim fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardDistributionInterval(uint256)",
      "name": "setRewardDistributionInterval",
      "description": "A method to set pool reward distribution interval hours.",
      "parameterDecorators": [
        {
          "name": "_minutes",
          "description": "Distribution interval hours.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardHalvingInterval(uint256)",
      "name": "setRewardHalvingInterval",
      "description": "A method to set pool halving interval hours.",
      "parameterDecorators": [
        {
          "name": "_minutes",
          "description": "Halving interval hours.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTransactionFeeInEther(uint256)",
      "name": "setTransactionFeeInEther",
      "description": "A method to set reward claim fee in ether.",
      "parameterDecorators": [
        {
          "name": "_fee",
          "description": "Reward claim fee in ether.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stake(address,uint256)",
      "name": "stake",
      "description": "A method to the stake ERC20 token to get reward.",
      "parameterDecorators": [
        {
          "name": "_referral",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success_",
          "description": "Whether the address is a stakeholder.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "stakeAmount_",
          "description": "Stake amount.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstake()",
      "name": "unstake",
      "description": "A method to the stake ERC20 token to get reward.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "success_",
          "description": "Action result.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "expiredAt_",
          "description": "Expired time.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeAndClaimReward()",
      "name": "unstakeAndClaimReward",
      "description": "A method to the unstake stake ERC20 token to get staking reward.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "success_",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "claimAmount_",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw()",
      "name": "withdraw",
      "description": "A method allow stakeholder to withdraw their stake tokens.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "success_",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "withdrawAmount_",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}