{
  "schema": "../schema.json",
  "tags": [
    "swaps",
    "uniswap"
  ],
  "name": "FarmUniswapGenerator",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when the implementation returned by the beacon is changed.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "createFarmUniswap(address,uint256,address,address,uint256,uint256,uint256,uint256)",
      "name": "createFarmUniswap",
      "description": "Creates a new FarmUniswap contract and registers it in the .sol. All farming rewards are locked in the FarmUniswap Contract.",
      "parameterDecorators": [
        {
          "name": "_rewardToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_swapFactory",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_blockReward",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusEndBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonus",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "determineBlockReward(uint256,uint256,uint256,uint256,uint256)",
      "name": "determineBlockReward",
      "description": "Determine the blockReward based on inputs specifying an end date. Used on the front end to show the exact settings the Farm contract will be deployed with.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusEndBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonus",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_endBlock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "determineEndBlock(uint256,uint256,uint256,uint256,uint256)",
      "name": "determineEndBlock",
      "description": "Determine the endBlock based on inputs. Used on the front end to show the exact settings the Farm contract will be deployed with.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_blockReward",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusEndBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonus",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "factory()",
      "name": "factory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}