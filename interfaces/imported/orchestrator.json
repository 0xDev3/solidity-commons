{"schema":"../schema.json","tags":[],"name":"Orchestrator","description":"Orchestrator. The orchestrator is the main entry point for rebase operations. It coordinates the policy actions with external consumers.","eventDecorators":[{"signature":"OwnershipRenounced(address)","name":"OwnershipRenounced","description":"Emitted when asset tokens are supplied to sponsor the yield source. Emitted when maximum value of ETH is raised.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when asset tokens are supplied to sponsor the yield source. Emitted when maximum value of ETH is raised.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"addTransaction(address,bytes)","name":"addTransaction","description":"Adds a transaction that gets called for a downstream receiver of rebases.","parameterDecorators":[{"name":"destination","description":"Address of contract destination.","recommendedTypes":[]},{"name":"data","description":"Transaction data payload.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"governance()","name":"governance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address)","name":"initialize","description":"The Ownable constructor sets the original `owner` of the contract to the sender account.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isOwner()","name":"isOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"true if `msg.sender` is the owner of the contract.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the address of the owner.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"policy()","name":"policy","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rebase()","name":"rebase","description":"Main entry point to initiate a rebase operation. The Orchestrator calls rebase on the policy and notifies downstream applications. Contracts are guarded from calling, to avoid flash loan attacks on liquidity providers. If a transaction in the transaction list fails, Orchestrator will stop execution and revert to prevent a gas underprice attack.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeTransaction(uint256)","name":"removeTransaction","description":"","parameterDecorators":[{"name":"index","description":"Index of transaction to remove. Transaction ordering may have changed since adding.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore. Allows the current owner to relinquish control of the contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setGovernance(address)","name":"setGovernance","description":"","parameterDecorators":[{"name":"_governance","description":"Address of Governance.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTransactionEnabled(uint256,bool)","name":"setTransactionEnabled","description":"","parameterDecorators":[{"name":"index","description":"Index of transaction. Transaction ordering may have changed since adding.","recommendedTypes":[]},{"name":"enabled","description":"True for enabled, false for disabled.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transactions(uint256)","name":"transactions","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"enabled","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"destination","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"data","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"transactionsSize()","name":"transactionsSize","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Number of transactions, both enabled and disabled, in transactions list.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Allows the current owner to transfer control of the contract to a newOwner.","parameterDecorators":[{"name":"newOwner","description":"The address to transfer ownership to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}