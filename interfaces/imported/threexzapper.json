{
  "schema": "../schema.json",
  "tags": [],
  "name": "ThreeXZapper",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ClaimedIntoStable(bytes32,int128,uint256,uint256,address)",
      "name": "ClaimedIntoStable",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "batchId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "stableCoinIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "inputAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "outputAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ZappedIntoBatch(uint256,address)",
      "name": "ZappedIntoBatch",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "outputAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ZappedOutOfBatch(bytes32,int128,uint256,uint256,address)",
      "name": "ZappedOutOfBatch",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "batchId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "stableCoinIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "inputAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "outputAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "claimAndSwapToStable(bytes32,int128,int128,uint256)",
      "name": "claimAndSwapToStable",
      "description": "claimAndSwapToStable allows a user to claim their processed USDC from a redeemBatch and directly receive DAI or USDT.",
      "parameterDecorators": [
        {
          "name": "_batchId",
          "description": "Defines which batch gets withdrawn from.",
          "recommendedTypes": []
        },
        {
          "name": "_i",
          "description": "Index of inputToken.",
          "recommendedTypes": []
        },
        {
          "name": "_j",
          "description": "Index of outputToken.",
          "recommendedTypes": []
        },
        {
          "name": "_min_amount",
          "description": "The min amount of USDC which should be returned by the ThreePool (slippage control) should be taking the decimals of the outputToken into account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setApprovals()",
      "name": "setApprovals",
      "description": "set idempotent approvals for threePool and butter batch processing.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "token(uint256)",
      "name": "token",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "zapIntoBatch(uint256,int128,int128,uint256)",
      "name": "zapIntoBatch",
      "description": "zapIntoBatch allows a user to deposit into a mintBatch directly with DAI or USDT. The amounts in _amounts must align with their index in the ThreePool.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "Input Amount.",
          "recommendedTypes": []
        },
        {
          "name": "_i",
          "description": "Index of inputToken.",
          "recommendedTypes": []
        },
        {
          "name": "_j",
          "description": "Index of outputToken.",
          "recommendedTypes": []
        },
        {
          "name": "_min_amount",
          "description": "The min amount of USDC which should be returned by the ThreePool (slippage control) should be taking the decimals of the outputToken into account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "zapOutOfBatch(bytes32,uint256,int128,int128,uint256)",
      "name": "zapOutOfBatch",
      "description": "zapOutOfBatch allows a user to retrieve their not yet processed USDC and directly receive DAI or USDT.",
      "parameterDecorators": [
        {
          "name": "_batchId",
          "description": "Defines which batch gets withdrawn from.",
          "recommendedTypes": []
        },
        {
          "name": "_amountToWithdraw",
          "description": "USDC amount that shall be withdrawn.",
          "recommendedTypes": []
        },
        {
          "name": "_i",
          "description": "Index of inputToken.",
          "recommendedTypes": []
        },
        {
          "name": "_j",
          "description": "Index of outputToken.",
          "recommendedTypes": []
        },
        {
          "name": "_min_amount",
          "description": "The min amount of USDC which should be returned by the ThreePool (slippage control) should be taking the decimals of the outputToken into account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}