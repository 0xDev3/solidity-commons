{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "TokenGovernance",
  "description": "",
  "eventDecorators": [
    {
      "signature": "DelegateChanged(address,address,address)",
      "name": "DelegateChanged",
      "description": "An event thats emitted when an account changes its delegate. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "delegator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fromDelegate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toDelegate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "DelegateVotesChanged(address,uint256,uint256)",
      "name": "DelegateVotesChanged",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "delegate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousBalance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newBalance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DELEGATION_TYPEHASH()",
      "name": "DELEGATION_TYPEHASH",
      "description": "The EIP-712 typehash for the delegation struct used by the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DOMAIN_TYPEHASH()",
      "name": "DOMAIN_TYPEHASH",
      "description": "The EIP-712 typehash for the contract's domain.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkpoints(address,uint32)",
      "name": "checkpoints",
      "description": "A record of votes checkpoints for each account, by index.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "fromBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "votes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "delegate(address,uint256,bytes)",
      "name": "delegate",
      "description": "Delegate votes from `msg.sender` to `delegatee`.",
      "parameterDecorators": [
        {
          "name": "delegatee",
          "description": "The address to delegate votes to.",
          "recommendedTypes": []
        },
        {
          "name": "time",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32,uint256,bytes)",
      "name": "delegateBySig",
      "description": "Delegates votes from signatory to `delegatee`.",
      "parameterDecorators": [
        {
          "name": "delegatee",
          "description": "The address to delegate votes to.",
          "recommendedTypes": []
        },
        {
          "name": "nonce",
          "description": "The contract state required to match the signature.",
          "recommendedTypes": []
        },
        {
          "name": "expiry",
          "description": "The time at which to expire the signature.",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "The recovery byte of the signature.",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "Half of the ECDSA signature pair.",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "Half of the ECDSA signature pair.",
          "recommendedTypes": []
        },
        {
          "name": "time",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delegates(address)",
      "name": "delegates",
      "description": "Delegate votes from `msg.sender` to `delegatee`.",
      "parameterDecorators": [
        {
          "name": "delegator",
          "description": "The address to get delegatee for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentVotes(address)",
      "name": "getCurrentVotes",
      "description": "Gets the current votes balance for `account`.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address to get votes balance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The number of current votes for `account`.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPriorVotes(address,uint256)",
      "name": "getPriorVotes",
      "description": "Determine the prior number of votes for an account as of a block number. Block number must be a finalized block or else this function will revert to prevent misinformation.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address of the account to check.",
          "recommendedTypes": []
        },
        {
          "name": "blockNumber",
          "description": "The block number to get the vote balance at.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The number of votes the account had as of the given block.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "message(address,address,uint256)",
      "name": "message",
      "description": "Returns hash for given data.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_deleagtor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_blockExpirytime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "messageHash",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "msgHash(bytes32)",
      "name": "msgHash",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nonces(address)",
      "name": "nonces",
      "description": "A record of states for signing / validating signatures.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "numCheckpoints(address)",
      "name": "numCheckpoints",
      "description": "The number of checkpoints for each account.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenAddress()",
      "name": "tokenAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "verifySignature(bytes32,bytes)",
      "name": "verifySignature",
      "description": "Ethereum Signed Message, created from hashReturns the address that signed a hashed message (`hash`) with `signature`.",
      "parameterDecorators": [
        {
          "name": "_messageHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_signature",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "signatureAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}