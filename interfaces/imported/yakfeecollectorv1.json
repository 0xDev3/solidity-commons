{"schema":"../schema.json","tags":["strategies"],"name":"YakFeeCollectorV1","description":"YakFeeCollector may be used as `devAddr` on YakStrategy contracts. Role-based fee collector for YakStrategy contracts.","eventDecorators":[{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"Event emitted when a Uniswap V3 LP token has been unstaked.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"Event emitted when a Uniswap V3 LP token has been unstaked.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"Event emitted when a Uniswap V3 LP token has been unstaked.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SetDev(address,address,address)","name":"SetDev","description":"Event emitted when a Uniswap V3 LP token has been unstaked.","parameterDecorators":[{"name":"upgrader","description":"","recommendedTypes":[],"indexed":true},{"name":"strategy","description":"","recommendedTypes":[],"indexed":true},{"name":"newValue","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Sweep(address,address,uint256)","name":"Sweep","description":"Event emitted when a Uniswap V3 LP token has been unstaked.","parameterDecorators":[{"name":"sweeper","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"DEV_ROLE()","name":"DEV_ROLE","description":"Role to manage strategy for onlyDev modifier.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"TOKEN_SWEEPER_ROLE()","name":"TOKEN_SWEEPER_ROLE","description":"Role to sweep funds from this contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"UPGRADER_ROLE()","name":"UPGRADER_ROLE","description":"Role to update `devAddr` on YakStrategy.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"addReward(address,address,address)","name":"addReward","description":"","parameterDecorators":[{"name":"strategy","description":"","recommendedTypes":[]},{"name":"rewardToken","description":"","recommendedTypes":[]},{"name":"swapPair","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMember(bytes32,uint256)","name":"getRoleMember","description":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMemberCount(bytes32)","name":"getRoleMemberCount","description":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"removeReward(address,address)","name":"removeReward","description":"","parameterDecorators":[{"name":"strategy","description":"","recommendedTypes":[]},{"name":"rewardToken","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"setDev(address,address)","name":"setDev","description":"Set new value of `devAddr`. Restricted to `UPGRADER_ROLE`.","parameterDecorators":[{"name":"strategy","description":"address.","recommendedTypes":[]},{"name":"newDevAddr","description":"new value.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setExtraRewardSwapPair(address,address)","name":"setExtraRewardSwapPair","description":"","parameterDecorators":[{"name":"strategy","description":"","recommendedTypes":[]},{"name":"swapPair","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"sweepAVAX(uint256)","name":"sweepAVAX","description":"Collect ERC20 from this contract. Restricted to `TOKEN_SWEEPER_ROLE`.","parameterDecorators":[{"name":"amount","description":"amount.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"sweepTokens(address,uint256)","name":"sweepTokens","description":"Collect ERC20 from this contract. Restricted to `TOKEN_SWEEPER_ROLE`.","parameterDecorators":[{"name":"tokenAddress","description":"address.","recommendedTypes":[]},{"name":"tokenAmount","description":"amount.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateCrvAvaxSwapPair(address,address)","name":"updateCrvAvaxSwapPair","description":"","parameterDecorators":[{"name":"strategy","description":"","recommendedTypes":[]},{"name":"swapPair","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateLeverage(address,uint256,uint256,uint256)","name":"updateLeverage","description":"","parameterDecorators":[{"name":"strategy","description":"","recommendedTypes":[]},{"name":"leverageLevel","description":"","recommendedTypes":[]},{"name":"leverageBips","description":"","recommendedTypes":[]},{"name":"redeemLimitSafetyMargin","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateLeverage(address,uint256,uint256,uint256,uint256)","name":"updateLeverage","description":"","parameterDecorators":[{"name":"strategy","description":"","recommendedTypes":[]},{"name":"leverageLevel","description":"","recommendedTypes":[]},{"name":"safetyFactor","description":"","recommendedTypes":[]},{"name":"minMinting","description":"","recommendedTypes":[]},{"name":"leverageBips","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateLeverage(address,uint256,uint256)","name":"updateLeverage","description":"","parameterDecorators":[{"name":"strategy","description":"","recommendedTypes":[]},{"name":"leverageLevel","description":"","recommendedTypes":[]},{"name":"leverageBips","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateMaxSwapSlippage(address,uint256)","name":"updateMaxSwapSlippage","description":"","parameterDecorators":[{"name":"strategy","description":"","recommendedTypes":[]},{"name":"slippageBips","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}