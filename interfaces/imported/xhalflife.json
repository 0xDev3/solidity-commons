{
  "schema": "../schema.json",
  "tags": [],
  "name": "XHalfLife",
  "description": "",
  "eventDecorators": [
    {
      "signature": "StreamCanceled(uint256,address,address,uint256,uint256)",
      "name": "StreamCanceled",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "streamId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "senderBalance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "recipientBalance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StreamCreated(uint256,address,address,address,uint256,uint256,uint256,uint256)",
      "name": "StreamCreated",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "streamId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "depositAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "startBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "kBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "unlockRatio",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StreamFunded(uint256,uint256)",
      "name": "StreamFunded",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "streamId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawFromStream(uint256,address,uint256)",
      "name": "WithdrawFromStream",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "streamId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "balanceOf(uint256)",
      "name": "balanceOf",
      "description": "Returns the available funds for the given stream id and address. Throws if the id does not point to a valid stream.",
      "parameterDecorators": [
        {
          "name": "streamId",
          "description": "The id of the stream for which to query the balance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "withdrawable",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "remaining",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cancelStream(uint256)",
      "name": "cancelStream",
      "description": "Cancels the stream and transfers the tokens back. Throws if the id does not point to a valid stream. Throws if the caller is not the sender or the recipient of the stream. Throws if there is a token transfer failure.",
      "parameterDecorators": [
        {
          "name": "streamId",
          "description": "The id of the stream to cancel.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createEtherStream(address,uint256,uint256,uint256)",
      "name": "createEtherStream",
      "description": "Creates a new ether stream funded by `msg.sender` and paid towards `recipient`. Throws if paused. Throws if the recipient is the zero address, the contract itself or the caller. Throws if the depositAmount is 0. Throws if the start block is before `block.number`. Throws if the rate calculation has a math error. Throws if the next stream id calculation has a math error. Throws if the contract is not allowed to transfer enough tokens.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "The address towards which the money is streamed.",
          "recommendedTypes": []
        },
        {
          "name": "startBlock",
          "description": "stream start block.",
          "recommendedTypes": []
        },
        {
          "name": "kBlock",
          "description": "unlock every k blocks.",
          "recommendedTypes": []
        },
        {
          "name": "unlockRatio",
          "description": "unlock ratio from remaining balanceß.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createStream(address,address,uint256,uint256,uint256,uint256)",
      "name": "createStream",
      "description": "Creates a new stream funded by `msg.sender` and paid towards `recipient`. Throws if paused. Throws if the token is not a contract address Throws if the recipient is the zero address, the contract itself or the caller. Throws if the depositAmount is 0. Throws if the start block is before `block.number`. Throws if the rate calculation has a math error. Throws if the next stream id calculation has a math error. Throws if the contract is not allowed to transfer enough tokens.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "The ERC20 token address.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "The address towards which the money is streamed.",
          "recommendedTypes": []
        },
        {
          "name": "depositAmount",
          "description": "The amount of money to be streamed.",
          "recommendedTypes": []
        },
        {
          "name": "startBlock",
          "description": "stream start block.",
          "recommendedTypes": []
        },
        {
          "name": "kBlock",
          "description": "unlock every k blocks.",
          "recommendedTypes": []
        },
        {
          "name": "unlockRatio",
          "description": "unlock ratio from remaining balanceß.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fundStream(uint256,uint256)",
      "name": "fundStream",
      "description": "funds to an existing stream. Throws if the caller is not the stream.sender.",
      "parameterDecorators": [
        {
          "name": "streamId",
          "description": "The id of the stream to query.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "deposit amount by stream sender.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getStream(uint256)",
      "name": "getStream",
      "description": "Returns the stream with all its properties. Throws if the id does not point to a valid stream.",
      "parameterDecorators": [
        {
          "name": "streamId",
          "description": "The id of the stream to query.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "depositAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "startBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "kBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "remaining",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "withdrawable",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "unlockRatio",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastRewardBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getVersion()",
      "name": "getVersion",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nextStreamId()",
      "name": "nextStreamId",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "streams(uint256)",
      "name": "streams",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "depositAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "remaining",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "withdrawable",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "startBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "kBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "unlockRatio",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "denom",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastRewardBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "isEntity",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawFromStream(uint256,uint256)",
      "name": "withdrawFromStream",
      "description": "Withdraws from the contract to the recipient's account. Throws if the id does not point to a valid stream. Throws if the amount exceeds the withdrawable balance. Throws if the amount < the effective withdraw value. Throws if the caller is not the recipient.",
      "parameterDecorators": [
        {
          "name": "streamId",
          "description": "The id of the stream to withdraw tokens from.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "The amount of tokens to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}