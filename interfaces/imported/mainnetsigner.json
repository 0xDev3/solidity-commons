{"schema":"../schema.json","tags":[],"name":"mainnetSigner","description":"","eventDecorators":[],"functionDecorators":[{"signature":"getOwner()","name":"getOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isValidSignature(bytes32,bytes)","name":"isValidSignature","description":"Verifies that the signer is the owner of the signing contract.","parameterDecorators":[{"name":"_hash","description":"","recommendedTypes":[]},{"name":"_signature","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"recoverSigner(bytes32,bytes)","name":"recoverSigner","description":"Recover the signer of hash, assuming it's an EOA account. Only for EthSign signatures.","parameterDecorators":[{"name":"_ethSignedMessageHash","description":"Hash of message that was signed.","recommendedTypes":[]},{"name":"_signature","description":"Signature encoded as (bytes32 r, bytes32 s, uint8 v).","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setOwner(address)","name":"setOwner","description":"","parameterDecorators":[{"name":"_owner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"splitSignature(bytes)","name":"splitSignature","description":"","parameterDecorators":[{"name":"sig","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"r","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"s","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"v","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true}]}