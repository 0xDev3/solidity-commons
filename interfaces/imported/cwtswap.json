{
  "schema": "../schema.json",
  "tags": [
    "swaps"
  ],
  "name": "CWTSwap",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AddLiquidity(address,address,uint256,uint256)",
      "name": "AddLiquidity",
      "description": "Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "reserve_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RemoveLiquidity(address,address,uint256,uint256)",
      "name": "RemoveLiquidity",
      "description": "Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "reserve_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ReservePurchase(address,address,uint256,uint256)",
      "name": "ReservePurchase",
      "description": "Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokens_sold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "reserve_bought",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenPurchase(address,address,uint256,uint256)",
      "name": "TokenPurchase",
      "description": "Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "reserve_sold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokens_bought",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdateReserve(address,address)",
      "name": "UpdateReserve",
      "description": "Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "newReserve",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "oldReserve",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptOwnership()",
      "name": "acceptOwnership",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addAdmin(address)",
      "name": "addAdmin",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newAdmin",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addLiquidity(address,uint256,uint256,uint256,uint256)",
      "name": "addLiquidity",
      "description": "Deposit reserve && Tokens at current ratio to mint liquidity tokens. min_liquidity does nothing when total liquidity supply is 0.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of Tokens reserved.",
          "recommendedTypes": []
        },
        {
          "name": "reserve_added",
          "description": "Amount of reserve reserved.",
          "recommendedTypes": []
        },
        {
          "name": "min_liquidity",
          "description": "Minium number of liquidity sender will mint if total liquidity supply is greater than 0.",
          "recommendedTypes": []
        },
        {
          "name": "max_tokens",
          "description": "Maxium number of tokens deposited. Deposits max amount if total liquidity supply is 0.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of Liquidity minted.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "asset(address)",
      "name": "asset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fee()",
      "name": "fee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReserveToTokenInputPrice(address,uint256)",
      "name": "getReserveToTokenInputPrice",
      "description": "Public price function for reserve to Token trades with an exact input.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "address of token bought.",
          "recommendedTypes": []
        },
        {
          "name": "reserve_sold",
          "description": "Amount of reserve sold.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of Tokens that can be bought with input reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReserveToTokenOutputPrice(address,uint256)",
      "name": "getReserveToTokenOutputPrice",
      "description": "Public price function for reserve to Token trades with an exact output.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "address of token to buy.",
          "recommendedTypes": []
        },
        {
          "name": "tokens_bought",
          "description": "Amount of Tokens bought.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of reserve needed to buy output Tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenToReserveInputPrice(address,uint256)",
      "name": "getTokenToReserveInputPrice",
      "description": "Public price function for Token to reserve trades with an exact input.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "address of token sold.",
          "recommendedTypes": []
        },
        {
          "name": "tokens_sold",
          "description": "Amount of Tokens sold.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of reserve that can be bought with input Tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenToReserveOutputPrice(address,uint256)",
      "name": "getTokenToReserveOutputPrice",
      "description": "Public price function for Token to reserve trades with an exact output.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "address of token sold.",
          "recommendedTypes": []
        },
        {
          "name": "reserve_bought",
          "description": "Amount of output reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of Tokens needed to buy output reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenToTokenInputPrice(address,address,uint256)",
      "name": "getTokenToTokenInputPrice",
      "description": "",
      "parameterDecorators": [
        {
          "name": "input_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "output_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokens_sold",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenToTokenOutputPrice(address,address,uint256)",
      "name": "getTokenToTokenOutputPrice",
      "description": "",
      "parameterDecorators": [
        {
          "name": "input_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "output_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokens_bought",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isAdmin(address)",
      "name": "isAdmin",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingOwner()",
      "name": "pendingOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAdmin(address)",
      "name": "removeAdmin",
      "description": "",
      "parameterDecorators": [
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeLiquidity(address,uint256,uint256,uint256,uint256)",
      "name": "removeLiquidity",
      "description": "Withdraw reserve && Tokens at current ratio to burn liquidity tokens. Burn liquidity tokens to withdraw reserve && Tokens at current ratio.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of Tokens withdrawn.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of liquidity burned.",
          "recommendedTypes": []
        },
        {
          "name": "min_reserve",
          "description": "Minium reserve withdrawn.",
          "recommendedTypes": []
        },
        {
          "name": "min_tokens",
          "description": "Minium Tokens withdrawn.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reserve()",
      "name": "reserve",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reserveToToken(address)",
      "name": "reserveToToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reserveToTokenSwapInput(address,uint256,uint256,uint256)",
      "name": "reserveToTokenSwapInput",
      "description": "Convert reserve to tokens. User specifies exact reserve input && minium output.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "reserve_sold",
          "description": "Amount of reserve user wants to pay.",
          "recommendedTypes": []
        },
        {
          "name": "min_tokens",
          "description": "Minium Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of Tokens bought.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reserveToTokenSwapOutput(address,uint256,uint256,uint256)",
      "name": "reserveToTokenSwapOutput",
      "description": "Convert reserve to Tokens. User specifies maxium reserve input && exact output.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "tokens_bought",
          "description": "Amount of token bought.",
          "recommendedTypes": []
        },
        {
          "name": "max_reserve",
          "description": "Maxium amount of reserve sold.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can be no longer be executed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of reserve sold.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reserveToTokenTransferInput(address,uint256,uint256,uint256,address)",
      "name": "reserveToTokenTransferInput",
      "description": "Convert reserve to Tokens && transfers Tokens to recipient. User specifies exact reserve input && minium output.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "reserve_sold",
          "description": "Amount of reserve user wants to pay.",
          "recommendedTypes": []
        },
        {
          "name": "min_tokens",
          "description": "Minium Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "The addresss that recieves output Tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of Token bought.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reserveToTokenTransferOutput(address,uint256,uint256,uint256,address)",
      "name": "reserveToTokenTransferOutput",
      "description": "Convert reserve to Tokens && transfer Tokens to recipient. User specifies maxium reserve input && exact output.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "tokens_bought",
          "description": "Amount of token bought.",
          "recommendedTypes": []
        },
        {
          "name": "max_reserve",
          "description": "Maxium amount of reserve sold.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can be no longer be executed.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "The address the receives output Tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of reserve sold.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFee(uint256)",
      "name": "setFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "new_fee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenToReserveSwapInput(address,uint256,uint256,uint256)",
      "name": "tokenToReserveSwapInput",
      "description": "Convert Tokens to reserve. User specifies exact input && minium output.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "tokens_sold",
          "description": "Amount of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "min_reserve",
          "description": "Minium reserve purchased.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of reserve bought.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenToReserveSwapOutput(address,uint256,uint256,uint256)",
      "name": "tokenToReserveSwapOutput",
      "description": "Convert Tokens to reserve. User specifies maxium input && exact output.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "reserve_bought",
          "description": "Amount of reserve bought.",
          "recommendedTypes": []
        },
        {
          "name": "max_tokens",
          "description": "Maxium Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of Tokens sold.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenToReserveTransferInput(address,uint256,uint256,uint256,address)",
      "name": "tokenToReserveTransferInput",
      "description": "Convert Tokens to reserve && transfer reserve to recipient. User specifies exact input && minium output.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "The address of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "tokens_sold",
          "description": "Amount of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "min_reserve",
          "description": "Minium reserve purchased.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "The address that receives output reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of reserve bought.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenToReserveTransferOutput(address,uint256,uint256,uint256,address)",
      "name": "tokenToReserveTransferOutput",
      "description": "Convert Tokens to reserve && transfers reserve to recipient. User specifies maxium input && exact output.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "reserve_bought",
          "description": "Amount of reserve bought.",
          "recommendedTypes": []
        },
        {
          "name": "max_tokens",
          "description": "Maxium Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "The address that receives output reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of Tokens sold.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenToTokenSwapInput(address,address,uint256,uint256,uint256)",
      "name": "tokenToTokenSwapInput",
      "description": "Convert Tokens to Tokens. User specifies exact input && minium output.",
      "parameterDecorators": [
        {
          "name": "input_token",
          "description": "Address of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "output_token",
          "description": "Address of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "tokens_sold",
          "description": "Amount of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "min_tokens_bought",
          "description": "Minium amount of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of Tokens bought.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenToTokenSwapOutput(address,address,uint256,uint256,uint256)",
      "name": "tokenToTokenSwapOutput",
      "description": "Convert Tokens to Tokens. User specifies maxium input && exact output.",
      "parameterDecorators": [
        {
          "name": "input_token",
          "description": "Address of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "output_token",
          "description": "Address of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "tokens_bought",
          "description": "Amount of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "max_tokens_sold",
          "description": "Maxium amount of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of Tokens sold.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenToTokenTransferInput(address,address,uint256,uint256,uint256,address)",
      "name": "tokenToTokenTransferInput",
      "description": "Convert Tokens to Tokens && transfers Tokens to recipient. User specifies exact input && minium output.",
      "parameterDecorators": [
        {
          "name": "input_token",
          "description": "Address of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "output_token",
          "description": "Address of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "tokens_sold",
          "description": "Amount of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "min_tokens_bought",
          "description": "Minium amount of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "The address that recieves output token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of Tokens bought.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenToTokenTransferOutput(address,address,uint256,uint256,uint256,address)",
      "name": "tokenToTokenTransferOutput",
      "description": "Convert Tokens to Tokens && transfers Tokens to recipient. User specifies maxium input && exact output.",
      "parameterDecorators": [
        {
          "name": "input_token",
          "description": "Address of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "output_token",
          "description": "Address of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "tokens_bought",
          "description": "Amount of Tokens bought.",
          "recommendedTypes": []
        },
        {
          "name": "max_tokens_sold",
          "description": "Maxium amount of Tokens sold.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "Time after which this transaction can no longer be executed.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "The address that receives output Tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of Tokens sold.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateReserve(address)",
      "name": "updateReserve",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}