{
  "schema": "../schema.json",
  "tags": [],
  "name": "MarketPlaceNom",
  "description": "",
  "eventDecorators": [
    {
      "signature": "NomMarketCleanBid(uint256)",
      "name": "NomMarketCleanBid",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomMarketCleanList(uint256)",
      "name": "NomMarketCleanList",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomTokenBidAccepted(bytes32,address,address,uint256,uint256,uint256)",
      "name": "NomTokenBidAccepted",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "bidder",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "total",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fees",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomTokenBidEntered(bytes32,address,uint256)",
      "name": "NomTokenBidEntered",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fromAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomTokenBidWithdrawn(bytes32,address,uint256)",
      "name": "NomTokenBidWithdrawn",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fromAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomTokenBought(bytes32,address,address,uint256,uint256,uint256)",
      "name": "NomTokenBought",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fromAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "total",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fees",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomTokenCreaterChanged(address)",
      "name": "NomTokenCreaterChanged",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenCreaterAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomTokenDelisted(bytes32,address)",
      "name": "NomTokenDelisted",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fromAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NomTokenFeeChanged(uint256,uint256,uint256)",
      "name": "NomTokenFeeChanged",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "marketFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "createrFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "producerFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomTokenListed(bytes32,address,uint256)",
      "name": "NomTokenListed",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fromAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "minValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomTokenMaketerChanged(address)",
      "name": "NomTokenMaketerChanged",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenCreaterAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomTokenPriceChanged(bytes32,uint256)",
      "name": "NomTokenPriceChanged",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "price",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomTokenProducerChanged(address)",
      "name": "NomTokenProducerChanged",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenCreaterAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NomTokenTransfered(bytes32,address,address)",
      "name": "NomTokenTransfered",
      "description": "Emitted when the list state changes. Event that is fired each time someone harvests the strat.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "_isAllTokenApproved(address)",
      "name": "_isAllTokenApproved",
      "description": "check if this contract has approved to all of this owner's erc721 tokens.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_isTokenApproved(uint256)",
      "name": "_isTokenApproved",
      "description": "check if this contract has approved to transfer this erc721 token.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_isTokenOwner(uint256,address)",
      "name": "_isTokenOwner",
      "description": "check if the account is the owner of this erc721 token.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "acceptBidForToken(address,string,address)",
      "name": "acceptBidForToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "bidder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyToken(string,uint256)",
      "name": "buyToken",
      "description": "See {INFTKEYMarketPlaceV1-buyToken}. Must have a valid listing msg.sender must not the owner of token msg.value must be at least sell price plus fees.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculateCreaterFee(uint256)",
      "name": "calculateCreaterFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculateDevFee(uint256)",
      "name": "calculateDevFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculateProducerFee(uint256)",
      "name": "calculateProducerFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculateSellerFee(uint256)",
      "name": "calculateSellerFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculateTokenId(string)",
      "name": "calculateTokenId",
      "description": "",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeDev(address)",
      "name": "changeDev",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newDev",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changePrice(string,uint256)",
      "name": "changePrice",
      "description": "change price for already listed token.l Must have a valid listing msg.sender must not the owner of token.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cleanAllInvalidBids()",
      "name": "cleanAllInvalidBids",
      "description": "See {INFTKEYMarketPlaceV1-cleanAllInvalidBids}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cleanAllInvalidListings()",
      "name": "cleanAllInvalidListings",
      "description": "See {INFTKEYMarketPlaceV1-cleanAllInvalidListings}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deleteTempTokenIdStorage()",
      "name": "deleteTempTokenIdStorage",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delistToken(string)",
      "name": "delistToken",
      "description": "See {INFTKEYMarketPlaceV1-delistToken}. msg.sender must be the seller of the listing record.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "devAddress()",
      "name": "devAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "enterBidForToken(address,string,uint256)",
      "name": "enterBidForToken",
      "description": "See {INFTKEYMarketPlaceV1-enterBidForToken}. People can only enter bid if bid is allowed The timestamp set needs to be in the allowed range bid price > 0 must not be token owner must allow this contract to spend enough payment token.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "bidPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllTokenListings()",
      "name": "getAllTokenListings",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBidderTokenBid(string,address)",
      "name": "getBidderTokenBid",
      "description": "See {INFTKEYMarketPlaceV1-getBidderTokenBid}.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "bidder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInvalidBidCount()",
      "name": "getInvalidBidCount",
      "description": "See {INFTKEYMarketPlaceV1-getInvalidBidCount}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInvalidListingCount()",
      "name": "getInvalidListingCount",
      "description": "See {INFTKEYMarketPlaceV1-getInvalidListingCount}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getListedTokenIds()",
      "name": "getListedTokenIds",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenBids(string)",
      "name": "getTokenBids",
      "description": "See {INFTKEYMarketPlaceV1-getTokenBids}.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenHighestBid(string)",
      "name": "getTokenHighestBid",
      "description": "See {INFTKEYMarketPlaceV1-getTokenHighestBid}.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenListing(string)",
      "name": "getTokenListing",
      "description": "",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenListings(uint256,uint256)",
      "name": "getTokenListings",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "size",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initializeFee(address)",
      "name": "initializeFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initializeNFTWithERC721(string,address,address)",
      "name": "initializeNFTWithERC721",
      "description": "",
      "parameterDecorators": [
        {
          "name": "erc721Name_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_erc721Address",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_paymentTokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isEtherToken()",
      "name": "isEtherToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isListingAndBidEnabled()",
      "name": "isListingAndBidEnabled",
      "description": "See {INFTKEYMarketPlaceV1-isListingAndBidEnabled}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "listToken(string,uint256)",
      "name": "listToken",
      "description": "List token for sale.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "nom name.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "min price to sell the token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "maketPlaceFeeAddress()",
      "name": "maketPlaceFeeAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nftAddress()",
      "name": "nftAddress",
      "description": "See {INFTKEYMarketPlaceV1-tokenAddress}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nftCreaterAddress()",
      "name": "nftCreaterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nftProducerAddress()",
      "name": "nftProducerAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nftTransferFrom(address,address,uint256)",
      "name": "nftTransferFrom",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paymentTokenAddress()",
      "name": "paymentTokenAddress",
      "description": "See {INFTKEYMarketPlaceV1-paymentTokenAddress}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "restoreLists(address,uint256,uint256)",
      "name": "restoreLists",
      "description": "",
      "parameterDecorators": [
        {
          "name": "rencentMarket",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "count",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sendERC20(address,address,uint256)",
      "name": "sendERC20",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "serviceFee(address)",
      "name": "serviceFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "nftAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param5",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setMaketPlaceAddressAndDevFee(address,uint256)",
      "name": "setMaketPlaceAddressAndDevFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_maketPlaceFeeAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_maketPlaceFeePercentage",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setNFTFees(uint256,uint256)",
      "name": "setNFTFees",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_feeCreater",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_feeProducer",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTokenCreaterAddress(address)",
      "name": "setTokenCreaterAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_tokenCreaterAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTokenProducerAddress(address)",
      "name": "setTokenProducerAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_tokenProducerAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transfer(address,address,uint256)",
      "name": "transfer",
      "description": "Transfer token to Other Must be owner of this token Must have approved this contract to transfer token Must have a valid existing bid that matches the bidder address.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferNom(address,string)",
      "name": "transferNom",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawBidForToken(address,string)",
      "name": "withdrawBidForToken",
      "description": "See {INFTKEYMarketPlaceV1-withdrawBidForToken}. There must be a bid exists remove this bid record.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}