{"schema":"../schema.json","tags":["tokens","yield"],"name":"YieldContract","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when the state of a reserve is updated.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"BURN_ADDRESS()","name":"BURN_ADDRESS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"MXX_ADDRESS()","name":"MXX_ADDRESS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"acquireYieldContract(bytes32)","name":"acquireYieldContract","description":"- Access control: External. Acquire a yield contract in the open market.","parameterDecorators":[{"name":"_contractId","description":"- The Id of the contract Non Reentrant modifier is used to prevent re-entrancy attack.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addErc20(address,uint256)","name":"addErc20","description":"- Access control: Only Owner. Adds a supported ERC20 address into the contract.","parameterDecorators":[{"name":"_erc20Address","description":"- Address of the ERC20 contract.","recommendedTypes":[]},{"name":"_mFactor","description":"- Mint Factor of the token (value of 1 token in USD * 10 power 18).","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"- Boolean status - True indicating successful completion.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"addErc20List(address[],uint256[])","name":"addErc20List","description":"- The length of _erc20AddressList and _mFactorList must be the same- Access control: Only Owner. Adds a list of supported ERC20 addresses into the contract.","parameterDecorators":[{"name":"_erc20AddressList","description":"- List of addresses of the ERC20 contract.","recommendedTypes":[]},{"name":"_mFactorList","description":"- List of mint factors of the token.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"- Boolean status - True indicating successful completion.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"allContracts(uint256)","name":"allContracts","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"claimYieldContract(bytes32)","name":"claimYieldContract","description":"- Access control: External. Claim a yield contract in the active market.","parameterDecorators":[{"name":"_contractId","description":"- The Id of the contract Non Reentrant modifier is used to prevent re-entrancy attack.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"contractFee()","name":"contractFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"contractMap(bytes32)","name":"contractMap","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"contractOwner","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"startTime","description":"","recommendedTypes":[],"solidityType":"uint48"},{"name":"endTime","description":"","recommendedTypes":[],"solidityType":"uint48"},{"name":"tokenAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"tenure","description":"","recommendedTypes":[],"solidityType":"uint16"},{"name":"interest","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"contractStatus","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"collateral","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"mxxToBeMinted","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"createYieldContract(address,uint256,uint16)","name":"createYieldContract","description":"- Collateral to be input - Actual value * (10 power decimals)- For e.g If collateral is 5 USDT (Tether) and decimal is 6, then _collateral is (5 * (10 power 6)) Non Reentrant modifier is used to prevent re-entrancy attack- Access control: External. Creates a yield contract.","parameterDecorators":[{"name":"_erc20Address","description":"- The address of the ERC20 token (ZERO_ADDRESS if ETH).","recommendedTypes":[]},{"name":"_collateral","description":"- The collateral value of the ERC20 token or ETH.","recommendedTypes":[]},{"name":"_tenure","description":"- The number of days of the agreement.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"destroyOMContract(bytes32)","name":"destroyOMContract","description":"- Access control: External. Destroy an open market yield contract.","parameterDecorators":[{"name":"_contractId","description":"- The Id of the contract Non Reentrant modifier is used to prevent re-entrancy attack.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"earlyRedeemContract(bytes32)","name":"earlyRedeemContract","description":"- Access control: External. Early Redeem a yield contract.","parameterDecorators":[{"name":"_contractId","description":"- The Id of the contract Non Reentrant modifier is used to prevent re-entrancy attack.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"erc20List(uint256)","name":"erc20List","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"erc20Map(address)","name":"erc20Map","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"symbol","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"isValid","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"noContracts","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"mFactor","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getNoOfErc20s()","name":"getNoOfErc20s","description":"- Access control: Public. Returns number of valid Tokens/Coins supported.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"- Number of valid tokens/coins.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getSubsetErc20List(uint256,uint256)","name":"getSubsetErc20List","description":"- Access control: Public. Returns subset list of valid ERC20 contracts.","parameterDecorators":[{"name":"_start","description":"- Start index to search in the list.","recommendedTypes":[]},{"name":"_end","description":"- End index to search in the list.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"- List of valid ERC20 addresses subset.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getSubsetYieldContracts(uint256,uint256)","name":"getSubsetYieldContracts","description":"This function will subset of yield contract.","parameterDecorators":[{"name":"_start","description":"- Start of the list.","recommendedTypes":[]},{"name":"_end","description":"- End of the list.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"- List of subset yield contract Access Control: Public.","recommendedTypes":[],"solidityType":"bytes32[]"}],"emittableEvents":[],"readOnly":true},{"signature":"maxEarlyRedeemFee()","name":"maxEarlyRedeemFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"minEarlyRedeemFee()","name":"minEarlyRedeemFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"mxxMintedFromContract()","name":"mxxMintedFromContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeErc20(address)","name":"removeErc20","description":"- Access control: Only Owner. Removes a valid ERC20 addresses from the contract.","parameterDecorators":[{"name":"_erc20Address","description":"- Address of the ERC20 contract to be removed.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"- Boolean status - True indicating successful completion.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setErc20Validity(address,bool)","name":"setErc20Validity","description":"- Access control: Only Owner. Enlists/Delists ERC20 address to prevent adding new yield contracts with this ERC20 collateral.","parameterDecorators":[{"name":"_erc20Address","description":"- Address of the ERC20 contract.","recommendedTypes":[]},{"name":"_isValid","description":"- New validity boolean of the ERC20 contract.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"- Boolean status - True indicating successful completion.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setInterest(uint256,uint64)","name":"setInterest","description":"This function will set interest rate for the tenure in days.","parameterDecorators":[{"name":"_tenure","description":"- Tenure of the agreement in days.","recommendedTypes":[]},{"name":"_interestRate","description":"- Interest rate in 10 power 6 (If 5%, then value is 0.05 * 10 power 6).","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"- Boolean status - True indicating successful completion Access Control: Only Owner.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setParamType(uint8,uint256)","name":"setParamType","description":"This function will set value based on ParamType.","parameterDecorators":[{"name":"_parameter","description":"- Enum value indicating ParamType (0,1,2,3).","recommendedTypes":[]},{"name":"_value","description":"- Value to be set.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"- Boolean status - True indicating successful completion Access Control: Only Owner.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"tenureApyMap(uint256)","name":"tenureApyMap","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"totalAllocatedMxx()","name":"totalAllocatedMxx","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateMFactor(address,uint256)","name":"updateMFactor","description":"- Access control: Only Owner. Updates the mint factor of a coin/token.","parameterDecorators":[{"name":"_erc20Address","description":"- Address of the ERC20 contract or ETH address (ZERO_ADDRESS).","recommendedTypes":[]},{"name":"_mFactor","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"- Boolean status - True indicating successful completion.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"updateMFactorList(address[],uint256[])","name":"updateMFactorList","description":"- Length of the 2 input arrays must be the same- Access control: Only Owner. Updates the mint factor for list of coin(s)/token(s).","parameterDecorators":[{"name":"_erc20AddressList","description":"- List of ERC20 addresses.","recommendedTypes":[]},{"name":"_mFactorList","description":"- List of mint factors for ERC20 addresses.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"- Boolean status - True indicating successful completion.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"withdrawMXX(uint256)","name":"withdrawMXX","description":"This function will withdraw MXX back to the owner.","parameterDecorators":[{"name":"_amount","description":"- Amount of MXX need to withdraw.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"- Boolean status indicating successful completion Access Control: Only Owner.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false}]}