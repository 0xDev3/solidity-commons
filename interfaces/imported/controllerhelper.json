{
  "schema": "../schema.json",
  "tags": [],
  "name": "ControllerHelper",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "closeShortWithUserNft(tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint128,uint128,uint24,bool))",
      "name": "closeShortWithUserNft",
      "description": "close short position with user Uniswap v3 LP NFT. user should approve this contract for Uni NFT transfer.",
      "parameterDecorators": [
        {
          "name": "_params",
          "description": "ControllerHelperDataType.CloseShortWithUserNftParams struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "vaultId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liquidity",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liquidityPercentage",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wPowerPerpAmountToBurn",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralToWithdraw",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "limitPriceEthPerPowerPerp",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount0Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount1Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "poolFee",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "burnExactRemoved",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "dToken()",
      "name": "dToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "euler()",
      "name": "euler",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "exec()",
      "name": "exec",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "factory()",
      "name": "factory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "flashloanCloseVaultLpNft(tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint128,uint128,uint24,bool))",
      "name": "flashloanCloseVaultLpNft",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_params",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "vaultId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liquidity",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liquidityPercentage",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wPowerPerpAmountToBurn",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralToFlashloan",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralToWithdraw",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "limitPriceEthPerPowerPerp",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount0Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount1Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "poolFee",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "burnExactRemoved",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "flashloanWMintLpDepositNft(tuple(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,int24,int24))",
      "name": "flashloanWMintLpDepositNft",
      "description": "FLash mint short position, LP in Uni v3, use LP NFT as collateral and withdraw ETH collateral to repay flashloan. sender can specify the amount of ETH collateral to withdraw in case vault.collateralAmount > ETH to repay for loan.",
      "parameterDecorators": [
        {
          "name": "_params",
          "description": "ControllerHelperDataType.FlashloanWMintLpDepositNftParams struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "wPowerPerpPool",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "vaultId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wPowerPerpAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralToDeposit",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralToFlashloan",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralToLp",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralToWithdraw",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount0Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount1Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "lowerTick",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "upperTick",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "flashswapSellLongWMint(tuple(uint256,uint256,uint256,uint256,uint256,uint24))",
      "name": "flashswapSellLongWMint",
      "description": "sell long wPowerPerp and flashswap mint short position. flashswap amount = collateral amount - msg.value - ETH from selling long wPowerPerp.",
      "parameterDecorators": [
        {
          "name": "_params",
          "description": "ControllerHelperDataType.FlashSellLongWMintParams struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "vaultId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wPowerPerpAmountToMint",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralToDeposit",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wPowerPerpAmountToSell",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minToReceive",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "poolFee",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "flashswapWBurnBuyLong(tuple(uint256,uint256,uint256,uint256,uint256,uint24))",
      "name": "flashswapWBurnBuyLong",
      "description": "flash close position and buy long squeeth. this function.",
      "parameterDecorators": [
        {
          "name": "_params",
          "description": "ControllerHelperDataType.FlashswapWBurnBuyLongParams struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "vaultId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wPowerPerpAmountToBurn",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wPowerPerpAmountToBuy",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralToWithdraw",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "maxToPay",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "poolFee",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onDeferredLiquidityCheck(bytes)",
      "name": "onDeferredLiquidityCheck",
      "description": "",
      "parameterDecorators": [
        {
          "name": "encodedData",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onERC721Received(address,address,uint256,bytes)",
      "name": "onERC721Received",
      "description": "accept erc721 from safeTransferFrom and safeMint after callback.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "returns received selector.",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rebalanceLpInVault(uint256,uint256,tuple(uint8,bytes)[])",
      "name": "rebalanceLpInVault",
      "description": "Rebalance, increase and decrease LP liquidity through minting/burning wPowerPerp in vault.",
      "parameterDecorators": [
        {
          "name": "_vaultId",
          "description": "vault ID.",
          "recommendedTypes": []
        },
        {
          "name": "_collateralToFlashloan",
          "description": "collateral amount to flashloan and deposit into vault to be able to withdraw Uni LP NFT.",
          "recommendedTypes": []
        },
        {
          "name": "_params",
          "description": "array of ControllerHelperDataType.RebalanceLpInVaultParams structs.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "rebalanceLpInVaultType",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "data",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rebalanceLpWithoutVault(tuple(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,int24,int24,uint24))",
      "name": "rebalanceLpWithoutVault",
      "description": "Rebalance LP nft through trading.",
      "parameterDecorators": [
        {
          "name": "_params",
          "description": "ControllerHelperDataType.RebalanceLpWithoutVaultParams struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "wPowerPerpPool",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liquidity",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wPowerPerpAmountDesired",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wethAmountDesired",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount0DesiredMin",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount1DesiredMin",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "limitPriceEthPerPowerPerp",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount0Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount1Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "lowerTick",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "upperTick",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "poolFee",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reduceLiquidityAndSell(tuple(uint256,uint256,uint256,uint128,uint128,uint256,uint24))",
      "name": "reduceLiquidityAndSell",
      "description": "sell all LP wPowerPerp amounts to WETH and send back to user.",
      "parameterDecorators": [
        {
          "name": "_params",
          "description": "ControllerHelperDataType.ReduceLiquidityAndSellParams struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "tokenId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liquidity",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liquidityPercentage",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount0Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount1Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "limitPriceEthPerPowerPerp",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "poolFee",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniswapV3SwapCallback(int256,int256,bytes)",
      "name": "uniswapV3SwapCallback",
      "description": "uniswap swap callback function for flashswap.",
      "parameterDecorators": [
        {
          "name": "amount0Delta",
          "description": "amount of token0.",
          "recommendedTypes": []
        },
        {
          "name": "amount1Delta",
          "description": "amount of token1.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "callback data encoded as SwapCallbackData struct.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "wMintLp(tuple(address,address,uint256,uint256,uint256,uint256,uint256,uint256,int24,int24))",
      "name": "wMintLp",
      "description": "mint WPowerPerp and LP into Uniswap v3 pool.",
      "parameterDecorators": [
        {
          "name": "_params",
          "description": "ControllerHelperDataType.MintAndLpParams struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "recipient",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wPowerPerpPool",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "vaultId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wPowerPerpAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralToDeposit",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralToLp",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount0Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount1Min",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "lowerTick",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "upperTick",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}