{"schema":"../schema.json","tags":[],"name":"ECVerify","description":"ECVerify. Singature Verifier.","eventDecorators":[],"functionDecorators":[{"signature":"ecrecovery(bytes32,uint8,bytes32,bytes32)","name":"ecrecovery","description":"The signature format is a compact form of: {bytes32 r}{bytes32 s}{uint8 v} Compact means, uint8 is not padded to 32 bytes. Function to Recover signer address from a message by using his signature.","parameterDecorators":[{"name":"_msgHash","description":"bytes32 message, the hash is the signed message. What is recovered is the signer address.","recommendedTypes":[]},{"name":"v","description":"singnature type 27/28, 0/1.","recommendedTypes":[]},{"name":"r","description":"signature section.","recommendedTypes":[]},{"name":"s","description":"Signtaure salt.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ecverify(bytes32,uint8,bytes32,bytes32,address)","name":"ecverify","description":"function to verify the signature with given input signer.","parameterDecorators":[{"name":"_msgHash","description":"hashed messages.","recommendedTypes":[]},{"name":"v","description":"singnature type 27/28, 0/1.","recommendedTypes":[]},{"name":"r","description":"signature section.","recommendedTypes":[]},{"name":"s","description":"Signtaure salt.","recommendedTypes":[]},{"name":"_signer","description":"is the address the user who signed the message.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getMsgHash(string)","name":"getMsgHash","description":"","parameterDecorators":[{"name":"message","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true}]}