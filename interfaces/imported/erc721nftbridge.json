{"schema":"../schema.json","tags":["bridges","nft"],"name":"ERC721NFTBridge","description":"","eventDecorators":[{"signature":"AdminChanged(address,address)","name":"AdminChanged","description":"Alerts when new token was created.","parameterDecorators":[{"name":"previousAdmin","description":"","recommendedTypes":[],"indexed":false},{"name":"newAdmin","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"BeaconUpgraded(address)","name":"BeaconUpgraded","description":"Alerts when new token was created.","parameterDecorators":[{"name":"beacon","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"BridgeTransfer(address,address,address,uint256,string,string,string,string)","name":"BridgeTransfer","description":"Alerts when new token was created.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":false},{"name":"receiver","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenName","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenSymbol","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenURI","description":"","recommendedTypes":[],"indexed":false},{"name":"contractURI","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewTokenCreated(uint256,address,uint256,address)","name":"NewTokenCreated","description":"Alerts when new token was created.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"otherChainTokenId","description":"","recommendedTypes":[],"indexed":false},{"name":"otherChainTokenAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OtherChainTokenReleased(address,address,uint256)","name":"OtherChainTokenReleased","description":"Alerts when new token was created.","parameterDecorators":[{"name":"receiver","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Alerts when new token was created.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Upgraded(address)","name":"Upgraded","description":"Alerts when new token was created.","parameterDecorators":[{"name":"implementation","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"initialize()","name":"initialize","description":"Set initial state values.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"mintBridgeNFT(address,address,address,uint256,string,string,string,string)","name":"mintBridgeNFT","description":"Mint a NFT for other chain NFT.","parameterDecorators":[{"name":"sender","description":"- Account address of the NFT sender of other chain.","recommendedTypes":[]},{"name":"receiver","description":"- Account address of the NFT receiver.","recommendedTypes":[]},{"name":"tokenAddress","description":"- Address of the transferring NFT.","recommendedTypes":[]},{"name":"tokenId","description":"- Id of the transferring NFT.","recommendedTypes":[]},{"name":"tokenName","description":"- Name of the transferring NFT.","recommendedTypes":[]},{"name":"tokenSymbol","description":"- Symbol of the transferring NFT.","recommendedTypes":[]},{"name":"tokenUri","description":"- URI of the transferring NFT.","recommendedTypes":[]},{"name":"contractURI","description":"- URI of the transferring NFT Contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"onERC721Received(address,address,uint256,bytes)","name":"onERC721Received","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"releaseOtherChainToken(uint256,address)","name":"releaseOtherChainToken","description":"Release NFT of other chain. (A script listens to the BridgeTransfer Event).","parameterDecorators":[{"name":"tokenId","description":"- Id of the transferring NFT. (The token minted for other chain token).","recommendedTypes":[]},{"name":"tokenAddress","description":"- Address of the transferring NFT. (The token minted for other chain token).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOtherChainToken(address,uint256,address)","name":"transferOtherChainToken","description":"Transfer other chain token to previous owner.","parameterDecorators":[{"name":"receiver","description":"- Address of the NFT owner.","recommendedTypes":[]},{"name":"tokenId","description":"- Id of the transferring NFT.","recommendedTypes":[]},{"name":"tokenAddress","description":"- Address of the transferring NFT.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferToOtherChain(address,uint256,address,string)","name":"transferToOtherChain","description":"Trasnfer NFT to other chain. (A script listens to the BridgeTransfer Event).","parameterDecorators":[{"name":"receiver","description":"- Account address of the NFT receiver on other chain.","recommendedTypes":[]},{"name":"tokenId","description":"- Id of the transferring NFT.","recommendedTypes":[]},{"name":"tokenAddress","description":"- Address of the transferring NFT.","recommendedTypes":[]},{"name":"contractURI","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeTo(address)","name":"upgradeTo","description":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.","parameterDecorators":[{"name":"newImplementation","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["Upgraded(address)"],"readOnly":false},{"signature":"upgradeToAndCall(address,bytes)","name":"upgradeToAndCall","description":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.","parameterDecorators":[{"name":"newImplementation","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["Upgraded(address)"],"readOnly":false}]}