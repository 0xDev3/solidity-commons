{
  "schema": "../schema.json",
  "tags": [
    "nft",
    "vaults"
  ],
  "name": "nftVault",
  "description": "",
  "eventDecorators": [
    {
      "signature": "TransferOwnership(address,address)",
      "name": "TransferOwnership",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TransferOwnershipClaim(address,address)",
      "name": "TransferOwnershipClaim",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "claimOwner()",
      "name": "claimOwner",
      "description": "The `pendingOwner` can claim `owner` account.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositNFT(address,uint256)",
      "name": "depositNFT",
      "description": "",
      "parameterDecorators": [
        {
          "name": "nft",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingOwner()",
      "name": "pendingOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address,bool)",
      "name": "transferOwnership",
      "description": "Transfer `owner` account.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "Account granted `owner` access control.",
          "recommendedTypes": []
        },
        {
          "name": "direct",
          "description": "If 'true', ownership is directly transferred.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawNFT(address,address,uint256)",
      "name": "withdrawNFT",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "nft",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}