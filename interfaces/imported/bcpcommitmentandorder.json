{"schema":"../schema.json","tags":[],"name":"BCPCommitmentandOrder","description":"","eventDecorators":[{"signature":"dataDelivered(uint32,bool,bool)","name":"dataDelivered","description":"An event emitted when dVIX is burned and removed of stake.","parameterDecorators":[{"name":"orderID","description":"uint that identifies a specific order.","recommendedTypes":[],"indexed":false},{"name":"_statusFlag","description":"is a control variable that shows if the incoming transaction contains the datapoint.","recommendedTypes":[],"indexed":false},{"name":"_status","description":"shows whether the oder is open or closed.","recommendedTypes":[],"indexed":false}]},{"signature":"fallbackCall(address,uint256)","name":"fallbackCall","description":"An event emitted when dVIX is burned and removed of stake.","parameterDecorators":[{"name":"CustomerAddress","description":"is the address that called the fallback function.","recommendedTypes":[],"indexed":false},{"name":"MonetaryAmount","description":"is the msg.value that was provided within the call.","recommendedTypes":[],"indexed":false}]},{"signature":"newCommitment(int64,int64)","name":"newCommitment","description":"An event emitted when dVIX is burned and removed of stake.","parameterDecorators":[{"name":"SenderID","description":"uint that identifies a specific sender (is constant).","recommendedTypes":[],"indexed":false},{"name":"commitmentID","description":"uint that identfies the senders most recent .xlsx file.","recommendedTypes":[],"indexed":false}]},{"signature":"newOrder(address,uint32,int64,string,uint32,uint40,uint64,bool,address)","name":"newOrder","description":"An event emitted when dVIX is burned and removed of stake.","parameterDecorators":[{"name":"_PIN","description":"is the senders main address.","recommendedTypes":[],"indexed":true},{"name":"orderID","description":"uint that identifies a specific order.","recommendedTypes":[],"indexed":false},{"name":"commitmentID","description":"uint that identfies the senders most recent .xlsx file.","recommendedTypes":[],"indexed":false},{"name":"_location","description":"is the position (column and row) in the .xlsx file.","recommendedTypes":[],"indexed":false},{"name":"_orderDate","description":"date on which the order should arrive (in epochtime).","recommendedTypes":[],"indexed":false},{"name":"_gasForDelivery","description":"is the total amount of gas that is available for the delivery process.","recommendedTypes":[],"indexed":false},{"name":"_gasPrice","description":"sets the gas Price for the delivery process.","recommendedTypes":[],"indexed":false},{"name":"condition","description":"checks whether the order date is within the commitment horizon.","recommendedTypes":[],"indexed":false},{"name":"receiverAddress","description":"is the address of the receiver.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"BCPGross()","name":"BCPGross","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"BCPRegistration()","name":"BCPRegistration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ChangeBCPRegistration(address)","name":"ChangeBCPRegistration","description":"The contract governance module consists of three functions: - Collect: Transfers the BCPGross balance to the owners address.","parameterDecorators":[{"name":"_BCPRegistration","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"Collect()","name":"Collect","description":"transfers all collected payments from this contract to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"GetReceiverFromOrderID(uint32)","name":"GetReceiverFromOrderID","description":"necessary to be able to display the receiver address on our webpage.","parameterDecorators":[{"name":"orderID","description":"uint that identifies a specific order (is constant).","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"GetSenderInformation(int64)","name":"GetSenderInformation","description":"returns the hole sender structhas to be called by the PUKis needed for testing purposes (backend) you have to check whether PIN and/or PUK got changed.","parameterDecorators":[{"name":"SenderID","description":"uint that identifies a specific sender (is constant).","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"GetTransactionCosts(int64,uint40)","name":"GetTransactionCosts","description":"The order & delivery module consists of nine order functions and the Relay function: The order functions differ in the number of function arguments: - GetTransactionCosts: Determines the transaction costs - GeneralOrder: Is the only order function that contains the hole function body - Relay: Receives the incoming data and transfers it to the final receiver and substracts the fee from the original payment of the receiver.","parameterDecorators":[{"name":"_commitmentID","description":"","recommendedTypes":[]},{"name":"_gasForMailbox","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"HorizonExtension(int64,uint32)","name":"HorizonExtension","description":"extends the senders commitment.","parameterDecorators":[{"name":"commitmentID","description":"uint that identfies the senders most recent .xlsx file -> here that ID should be chosen the sender wishes to extend.","recommendedTypes":[]},{"name":"_newHorizon","description":"the date until when a sender commits himself (in epochtime).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"NewCommitment(int64,uint32,uint64,uint64,bytes32)","name":"NewCommitment","description":"sets up new commitments for .xlsx files.","parameterDecorators":[{"name":"SenderID","description":"uint that identifies a specific sender (is constant).","recommendedTypes":[]},{"name":"_horizon","description":"the date until when a sender commits himself (in epochtime).","recommendedTypes":[]},{"name":"_senderFee","description":"sets the fee that is required to be paid within the order process.","recommendedTypes":[]},{"name":"_gasPrice","description":"sets the gas Price for the delivery process of that .xlsx file.","recommendedTypes":[]},{"name":"_descriptionHash","description":"sets the identification parameter for the commited data.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int64"}],"emittableEvents":[],"readOnly":false},{"signature":"ORDER(int64,uint40,string,uint32)","name":"ORDER","description":"general order function for customized orders.","parameterDecorators":[{"name":"commitmentID","description":"uint that identifies a specific commitment.","recommendedTypes":[]},{"name":"_gasForMailbox","description":"is the maximum of gas that is available for the delivery process (set by the receiver).","recommendedTypes":[]},{"name":"_location","description":"is the position (column and row) in the .xlsx file.","recommendedTypes":[]},{"name":"_orderDate","description":"date on which the order should arrive (in epochtime).","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":false},{"signature":"Relay(uint32,int88,bool)","name":"Relay","description":"receives the final data and collects the fee.","parameterDecorators":[{"name":"orderID","description":"uint that identifies a specific order (is constant).","recommendedTypes":[]},{"name":"_data","description":"is the finally requested information behind the order.","recommendedTypes":[]},{"name":"_statusFlag","description":"is a control variable that shows if the incoming transaction contains the datapoint.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"commitments(uint256)","name":"commitments","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"SenderID","description":"","recommendedTypes":[],"solidityType":"int64"},{"name":"_horizon","description":"","recommendedTypes":[],"solidityType":"uint32"},{"name":"_senderFee","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"_gasPrice","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"_descriptionHash","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true}]}