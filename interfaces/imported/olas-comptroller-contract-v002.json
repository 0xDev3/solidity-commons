{"schema":"../schema.json","tags":[],"name":"ComptrollerV0_04","description":"Ola's Comptroller Contract V0.02.","eventDecorators":[{"signature":"ActionPaused(string,bool)","name":"ActionPaused","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"action","description":"","recommendedTypes":[],"indexed":false},{"name":"pauseState","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ActionPaused(address,string,bool)","name":"ActionPaused","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"action","description":"","recommendedTypes":[],"indexed":false},{"name":"pauseState","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ActiveCollateralUsageChange(address,uint256,uint256)","name":"ActiveCollateralUsageChange","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":true},{"name":"oldCollateralUsage","description":"","recommendedTypes":[],"indexed":false},{"name":"newCollateralUsage","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Failure(uint256,uint256,uint256)","name":"Failure","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"error","description":"","recommendedTypes":[],"indexed":false},{"name":"info","description":"","recommendedTypes":[],"indexed":false},{"name":"detail","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LimitBorrowingFlagChanged(bool)","name":"LimitBorrowingFlagChanged","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"newValue","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LimitMintingFlagChanged(bool)","name":"LimitMintingFlagChanged","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"newValue","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketEntered(address,address)","name":"MarketEntered","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketExited(address,address)","name":"MarketExited","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketListed(address)","name":"MarketListed","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewActiveCollateralCap(address,uint256)","name":"NewActiveCollateralCap","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":true},{"name":"newActiveCollateralCap","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewAdminBankAddress(address,address)","name":"NewAdminBankAddress","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"oldAdminBankAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"newAdminBankAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewBorrowCap(address,uint256)","name":"NewBorrowCap","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":true},{"name":"newBorrowCap","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewBorrowCapGuardian(address,address)","name":"NewBorrowCapGuardian","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"oldBorrowCapGuardian","description":"","recommendedTypes":[],"indexed":false},{"name":"newBorrowCapGuardian","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewBouncer(address,address)","name":"NewBouncer","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"oldBouncer","description":"","recommendedTypes":[],"indexed":false},{"name":"newBouncer","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewCollateralFactor(address,uint256,uint256)","name":"NewCollateralFactor","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"oldCollateralFactorMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newCollateralFactorMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewLiquidationFactor(address,uint256,uint256)","name":"NewLiquidationFactor","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"oldLiquidationFactorMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newLiquidationFactorMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewLiquidationIncentive(address,uint256,uint256)","name":"NewLiquidationIncentive","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"ctoken","description":"","recommendedTypes":[],"indexed":false},{"name":"oldLiquidationIncentiveMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newLiquidationIncentiveMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewMinBorrowAmount(uint256,uint256)","name":"NewMinBorrowAmount","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"oldMinBorrowAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"newMinBorrowAmount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPauseGuardian(address,address)","name":"NewPauseGuardian","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"oldPauseGuardian","description":"","recommendedTypes":[],"indexed":false},{"name":"newPauseGuardian","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewRainMaker(address,address)","name":"NewRainMaker","description":"Emitted when `cancelOrder` is called.","parameterDecorators":[{"name":"oldRainMaker","description":"","recommendedTypes":[],"indexed":false},{"name":"newRainMaker","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"_borrowGuardianPaused()","name":"_borrowGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"_mintGuardianPaused()","name":"_mintGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"_setActiveCollateralCaps(address[],uint256[])","name":"_setActiveCollateralCaps","description":"OLA_ADDITIONS : This functionSet the given active collateral caps (in USD) for the given cToken markets. Any action that brings total active collateral to or above borrow cap will revert. Admin function to set the active collateral caps. A active-collateral cap of 0 corresponds to unlimited active collateral.","parameterDecorators":[{"name":"cTokens","description":"The addresses of the markets (tokens) to change the active-collateral caps for.","recommendedTypes":[]},{"name":"newActiveCollateralCaps","description":"The new active-collateral cap values in usd to be set. A value of 0 corresponds to unlimited borrowing.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setAdminBankAddress(address)","name":"_setAdminBankAddress","description":"Admin function to change the admin bank address.","parameterDecorators":[{"name":"newAdminBankAddress","description":"The new admin bank address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setBorrowCapGuardian(address)","name":"_setBorrowCapGuardian","description":"Admin function to change the Borrow Cap Guardian.","parameterDecorators":[{"name":"newBorrowCapGuardian","description":"The address of the new Borrow Cap Guardian.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setBorrowPaused(address,bool)","name":"_setBorrowPaused","description":"","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[]},{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_setBouncer(bytes32,bytes,bytes,bytes)","name":"_setBouncer","description":"Sets a new bouncer for the Comptroller (after asking the ministry to deploy one). deployParams Dynamic parameters to be used for the contract deployment.retireParams Dynamic parameters to be used for the retire function of the existing bouncer.connectParams Dynamic parameters to be used for the connection of the new bouncer.","parameterDecorators":[{"name":"contractNameHash","description":"","recommendedTypes":[]},{"name":"deployParams","description":"","recommendedTypes":[]},{"name":"retireParams","description":"","recommendedTypes":[]},{"name":"connectParams","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setCollateralFactor(address,uint256)","name":"_setCollateralFactor","description":"Sets the collateralFactor for a market. Admin function to set per-market collateralFactor.","parameterDecorators":[{"name":"cToken","description":"The market to set the factor on.","recommendedTypes":[]},{"name":"newCollateralFactorMantissa","description":"The new collateral factor, scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setLimitBorrowing(bool)","name":"_setLimitBorrowing","description":"Sets the 'limit borrowing' flag to the given value (if they are different). Admin function to set value for 'limitBorrowing'.","parameterDecorators":[{"name":"flagValue","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setLimitMinting(bool)","name":"_setLimitMinting","description":"Sets the 'limit supplying' flag to the given value (if they are different). Admin function to set value for 'limitSupplying'.","parameterDecorators":[{"name":"flagValue","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setLiquidationFactor(address,uint256)","name":"_setLiquidationFactor","description":"Sets the liquidationFactor for a market. Important : In order to avoid the possibility of existing positions becoming liquidateable - This value can only be increased. Admin function to set per-market liquidationFactor.","parameterDecorators":[{"name":"cToken","description":"The market to set the factor on.","recommendedTypes":[]},{"name":"newLiquidationFactorMantissa","description":"The new liquidation factor, scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setLiquidationIncentive(address,uint256)","name":"_setLiquidationIncentive","description":"OLA_ADDITIONS : Added 'cToken' to support 'incentive per market'Sets liquidationIncentive. Admin function to set liquidationIncentive.","parameterDecorators":[{"name":"cToken","description":"The market to set the factor on.","recommendedTypes":[]},{"name":"newLiquidationIncentiveMantissa","description":"New liquidationIncentive scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setMarketBorrowCaps(address[],uint256[])","name":"_setMarketBorrowCaps","description":"Set the given borrow caps for the given cToken markets. Borrowing that brings total borrows to or above borrow cap will revert. Admin or borrowCapGuardian function to set the borrow caps. A borrow cap of 0 corresponds to unlimited borrowing.","parameterDecorators":[{"name":"cTokens","description":"The addresses of the markets (tokens) to change the borrow caps for.","recommendedTypes":[]},{"name":"newBorrowCaps","description":"The new borrow cap values in underlying to be set. A value of 0 corresponds to unlimited borrowing.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setMinBorrowAmountUsd(uint256)","name":"_setMinBorrowAmountUsd","description":"Sets the 'minBorrowAmountUsd' (scaled by 18). Admin function to set value for 'minBorrowAmountUsd'.","parameterDecorators":[{"name":"minBorrowAmountUsd_","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setMintPaused(address,bool)","name":"_setMintPaused","description":"","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[]},{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_setPauseGuardian(address)","name":"_setPauseGuardian","description":"Admin function to change the Pause Guardian.","parameterDecorators":[{"name":"newPauseGuardian","description":"The address of the new Pause Guardian.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setRainMaker(bytes32,bytes,bytes,bytes)","name":"_setRainMaker","description":"* Admin Functions **.","parameterDecorators":[{"name":"contractNameHash","description":"","recommendedTypes":[]},{"name":"deployParams","description":"","recommendedTypes":[]},{"name":"retireParams","description":"","recommendedTypes":[]},{"name":"connectParams","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setTransferPaused(bool)","name":"_setTransferPaused","description":"","parameterDecorators":[{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_supportNewMarket(address,bytes32,bytes,address,bytes)","name":"_supportNewMarket","description":"Add the market to the markets mapping and set it as listed. Admin function to deploy a new cTokens and then set isListed and add support for the market.","parameterDecorators":[{"name":"underlying","description":"The address of the asset (token or native) to be used for the market.","recommendedTypes":[]},{"name":"contractNameHash","description":"","recommendedTypes":[]},{"name":"params","description":"","recommendedTypes":[]},{"name":"interestRateModel","description":"","recommendedTypes":[]},{"name":"becomeImplementationData","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"accountAssets(address,uint256)","name":"accountAssets","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"admin()","name":"admin","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"adminBankAddress()","name":"adminBankAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"allMarkets(uint256)","name":"allMarkets","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowAllowed(address,address,uint256)","name":"borrowAllowed","description":"Checks if the account should be allowed to borrow the underlying asset of the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the borrow against.","recommendedTypes":[]},{"name":"borrower","description":"The account which would borrow the asset.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of underlying the account would borrow.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"borrowCapGuardian()","name":"borrowCapGuardian","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowCaps(address)","name":"borrowCaps","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowGuardianPaused(address)","name":"borrowGuardianPaused","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowVerify(address,address,uint256)","name":"borrowVerify","description":"Validates borrow and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cToken","description":"Asset whose underlying is being borrowed.","recommendedTypes":[]},{"name":"borrower","description":"The address borrowing the underlying.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of the underlying asset requested to borrow.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bouncer()","name":"bouncer","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"checkMembership(address,address)","name":"checkMembership","description":"Returns whether the given account is entered in the given asset.","parameterDecorators":[{"name":"account","description":"The address of the account to check.","recommendedTypes":[]},{"name":"cToken","description":"The cToken to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"closeFactorMantissa()","name":"closeFactorMantissa","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"enterMarkets(address[])","name":"enterMarkets","description":"Add assets to be included in account liquidity calculation.","parameterDecorators":[{"name":"cTokens","description":"The list of addresses of the cToken markets to be enabled.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":false},{"signature":"existingMarketTypes(address,bytes32)","name":"existingMarketTypes","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"exitMarket(address)","name":"exitMarket","description":"Removes asset from sender's account liquidity calculation. Sender must not have an outstanding borrow balance in the asset, or be providing necessary collateral for an outstanding borrow.","parameterDecorators":[{"name":"cTokenAddress","description":"The address of the asset to be removed.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"getAccountLiquidity(address)","name":"getAccountLiquidity","description":"Determine the current account liquidity wrt collateral requirements.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getAccountLiquidityByLiquidationFactor(address)","name":"getAccountLiquidityByLiquidationFactor","description":"OLA ADDITIONS : This functionDetermine the current account liquidity wrt liquidation requirements.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getAllMarkets()","name":"getAllMarkets","description":"Return all of the markets. The automatic getter may be used to access an individual market.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getAssetsIn(address)","name":"getAssetsIn","description":"Returns the assets an account has entered.","parameterDecorators":[{"name":"account","description":"The address of the account to pull assets for.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getHypotheticalAccountLiquidity(address,address,uint256,uint256)","name":"getHypotheticalAccountLiquidity","description":"Determine what the account liquidity would be if the given amounts were redeemed/borrowed.","parameterDecorators":[{"name":"account","description":"The account to determine liquidity for.","recommendedTypes":[]},{"name":"cTokenModify","description":"The market to hypothetically redeem/borrow in.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of tokens to hypothetically redeem.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of underlying to hypothetically borrow.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getHypotheticalAccountLiquidityByLiquidationFactor(address,address,uint256,uint256)","name":"getHypotheticalAccountLiquidityByLiquidationFactor","description":"OLA_ADDITIONS : This functionDetermine what the account liquidity would be if the given amounts were redeemed/borrowed.","parameterDecorators":[{"name":"account","description":"The account to determine liquidity for.","recommendedTypes":[]},{"name":"cTokenModify","description":"The market to hypothetically redeem/borrow in.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of tokens to hypothetically redeem.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of underlying to hypothetically borrow.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getRegistry()","name":"getRegistry","description":"* Registry **.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"hasBouncer()","name":"hasBouncer","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"hasRainMaker()","name":"hasRainMaker","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"implementation()","name":"implementation","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isAccountApproved(address)","name":"isAccountApproved","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isComptroller()","name":"isComptroller","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"limitBorrowing()","name":"limitBorrowing","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"limitMinting()","name":"limitMinting","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"liquidateBorrowAllowed(address,address,address,address,uint256)","name":"liquidateBorrowAllowed","description":"Checks if the liquidation should be allowed to occur.","parameterDecorators":[{"name":"cTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"cTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of underlying being repaid.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"liquidateBorrowVerify(address,address,address,address,uint256,uint256)","name":"liquidateBorrowVerify","description":"Validates liquidateBorrow and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"cTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"actualRepayAmount","description":"The amount of underlying being repaid.","recommendedTypes":[]},{"name":"seizeTokens","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"liquidateCalculateSeizeTokens(address,address,uint256)","name":"liquidateCalculateSeizeTokens","description":"Calculate number of tokens of collateral asset to seize given an underlying amount. Used in liquidation (called in cToken.liquidateBorrowFresh).","parameterDecorators":[{"name":"cTokenBorrowed","description":"The address of the borrowed cToken.","recommendedTypes":[]},{"name":"cTokenCollateral","description":"The address of the collateral cToken.","recommendedTypes":[]},{"name":"actualRepayAmount","description":"The amount of cTokenBorrowed underlying to convert into cTokenCollateral tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"markets(address)","name":"markets","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"isListed","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"collateralFactorMantissa","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"liquidationFactorMantissa","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"liquidationIncentiveMantissa","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"activeCollateralUSDCap","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"activeCollateralCTokenUsage","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"maxAssets()","name":"maxAssets","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"minBorrowAmountUsd()","name":"minBorrowAmountUsd","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"mintAllowed(address,address,uint256)","name":"mintAllowed","description":"Checks if the account should be allowed to mint tokens in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the mint against.","recommendedTypes":[]},{"name":"minter","description":"The account which would get the minted tokens.","recommendedTypes":[]},{"name":"mintAmount","description":"The amount of underlying being supplied to the market in exchange for tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"mintGuardianPaused(address)","name":"mintGuardianPaused","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"mintVerify(address,address,uint256,uint256)","name":"mintVerify","description":"Validates mint and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cToken","description":"Asset being minted.","recommendedTypes":[]},{"name":"minter","description":"The address minting the tokens.","recommendedTypes":[]},{"name":"actualMintAmount","description":"The amount of the underlying asset being minted.","recommendedTypes":[]},{"name":"mintTokens","description":"The number of tokens being minted.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"pauseGuardian()","name":"pauseGuardian","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingAdmin()","name":"pendingAdmin","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rainMaker()","name":"rainMaker","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"redeemAllowed(address,address,uint256)","name":"redeemAllowed","description":"Checks if the account should be allowed to redeem tokens in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the redeem against.","recommendedTypes":[]},{"name":"redeemer","description":"The account which would redeem the tokens.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of cTokens to exchange for the underlying asset in the market.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"redeemVerify(address,address,uint256,uint256)","name":"redeemVerify","description":"Validates redeem and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cToken","description":"Asset being redeemed.","recommendedTypes":[]},{"name":"redeemer","description":"The address redeeming the tokens.","recommendedTypes":[]},{"name":"redeemAmount","description":"The amount of the underlying asset being redeemed.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of tokens being redeemed.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"registry()","name":"registry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"repayBorrowAllowed(address,address,address,uint256)","name":"repayBorrowAllowed","description":"Checks if the account should be allowed to repay a borrow in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the repay against.","recommendedTypes":[]},{"name":"payer","description":"The account which would repay the asset.","recommendedTypes":[]},{"name":"borrower","description":"The account which would borrowed the asset.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of the underlying asset the account would repay.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"repayBorrowVerify(address,address,address,uint256,uint256)","name":"repayBorrowVerify","description":"Validates repayBorrow and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cToken","description":"Asset being repaid.","recommendedTypes":[]},{"name":"payer","description":"The address repaying the borrow.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"actualRepayAmount","description":"The amount of underlying being repaid.","recommendedTypes":[]},{"name":"borrowerIndex","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"seizeAllowed(address,address,address,address,uint256)","name":"seizeAllowed","description":"Checks if the seizing of assets should be allowed to occur.","parameterDecorators":[{"name":"cTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"cTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"seizeTokens","description":"The number of collateral tokens to seize.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"seizeGuardianPaused()","name":"seizeGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"seizeVerify(address,address,address,address,uint256)","name":"seizeVerify","description":"Validates seize and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"cTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"seizeTokens","description":"The number of collateral tokens to seize.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferAllowed(address,address,address,uint256)","name":"transferAllowed","description":"Checks if the account should be allowed to transfer tokens in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the transfer against.","recommendedTypes":[]},{"name":"src","description":"The account which sources the tokens.","recommendedTypes":[]},{"name":"dst","description":"The account which receives the tokens.","recommendedTypes":[]},{"name":"transferTokens","description":"The number of cTokens to transfer.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"transferGuardianPaused()","name":"transferGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"transferVerify(address,address,address,uint256)","name":"transferVerify","description":"Validates transfer and reverts on rejection. May emit logs. IMPORTANT : This function is also called from a cToken's 'seizeInternal', so, it is imperative to make sure that any change to this function is in line with the logic requirements of 'seizeInternal'.","parameterDecorators":[{"name":"cToken","description":"Asset being transferred.","recommendedTypes":[]},{"name":"src","description":"The account which sources the tokens.","recommendedTypes":[]},{"name":"dst","description":"The account which receives the tokens.","recommendedTypes":[]},{"name":"transferTokens","description":"The number of cTokens to transfer.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unitrollerContractHash()","name":"unitrollerContractHash","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"updateDelegatedImplementations(bytes)","name":"updateDelegatedImplementations","description":"OLA_ADDITIONS : This functionEnsures all markets are updating their implementation from the Registry.","parameterDecorators":[{"name":"becomeImplementationData","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}