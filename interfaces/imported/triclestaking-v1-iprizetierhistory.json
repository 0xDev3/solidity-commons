{
  "schema": "../schema.json",
  "tags": [],
  "name": "PrizeTierHistory",
  "description": "TricleStaking V1 IPrizeTierHistory. IPrizeTierHistory is the base contract for PrizeTierHistory.",
  "eventDecorators": [
    {
      "signature": "ManagerTransferred(address,address)",
      "name": "ManagerTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousManager",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newManager",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipOffered(address)",
      "name": "OwnershipOffered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pendingOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PrizeTierPushed(uint32,tuple)",
      "name": "PrizeTierPushed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "drawId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "prizeTier",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PrizeTierSet(uint32,tuple)",
      "name": "PrizeTierSet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "drawId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "prizeTier",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "claimOwnership()",
      "name": "claimOwnership",
      "description": "Allows the `_pendingOwner` address to finalize the transfer. This function is only callable by the `_pendingOwner`.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "count()",
      "name": "count",
      "description": "Returns the number of Prize Tier structs pushed.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The number of prize tiers that have been pushed.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getNewestDrawId()",
      "name": "getNewestDrawId",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOldestDrawId()",
      "name": "getOldestDrawId",
      "description": "Read first Draw ID used to initialize history.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Draw ID of first PrizeTier record.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPrizeTier(uint32)",
      "name": "getPrizeTier",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_drawId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "bitRangeSize",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint8"
            },
            {
              "name": "drawId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "maxPicksPerUser",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "expiryDuration",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "endTimestampOffset",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "prize",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "tiers",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32[16]"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPrizeTierAtIndex(uint256)",
      "name": "getPrizeTierAtIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "bitRangeSize",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint8"
            },
            {
              "name": "drawId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "maxPicksPerUser",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "expiryDuration",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "endTimestampOffset",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "prize",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "tiers",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32[16]"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPrizeTierList(uint32[])",
      "name": "getPrizeTierList",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_drawIds",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "bitRangeSize",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint8"
            },
            {
              "name": "drawId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "maxPicksPerUser",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "expiryDuration",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "endTimestampOffset",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "prize",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "tiers",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32[16]"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "manager()",
      "name": "manager",
      "description": "Gets current `_manager`.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Current `_manager` address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingOwner()",
      "name": "pendingOwner",
      "description": "Gets current `_pendingOwner`.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Current `_pendingOwner` address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "popAndPush(tuple(uint8,uint32,uint32,uint32,uint32,uint256,uint32[16]))",
      "name": "popAndPush",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_prizeTier",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "bitRangeSize",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "drawId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "maxPicksPerUser",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "expiryDuration",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "endTimestampOffset",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "prize",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tiers",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "push(tuple(uint8,uint32,uint32,uint32,uint32,uint256,uint32[16]))",
      "name": "push",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_nextPrizeTier",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "bitRangeSize",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "drawId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "maxPicksPerUser",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "expiryDuration",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "endTimestampOffset",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "prize",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tiers",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Renounce ownership of the contract. Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "replace(tuple(uint8,uint32,uint32,uint32,uint32,uint256,uint32[16]))",
      "name": "replace",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_prizeTier",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "bitRangeSize",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "drawId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "maxPicksPerUser",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "expiryDuration",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "endTimestampOffset",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "prize",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tiers",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setManager(address)",
      "name": "setManager",
      "description": "Set or change of manager. Throws if called by any account other than the owner.",
      "parameterDecorators": [
        {
          "name": "_newManager",
          "description": "New _manager address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Boolean to indicate if the operation was successful or not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows current owner to set the `_pendingOwner` address.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "Address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}