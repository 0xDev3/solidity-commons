{
  "schema": "../schema.json",
  "tags": [],
  "name": "PushToENS",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Pulled(bytes32,uint256)",
      "name": "Pulled",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. Emitted when the pause is lifted by `account`.",
      "parameterDecorators": [
        {
          "name": "hash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Pushed(bytes32,uint256)",
      "name": "Pushed",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. Emitted when the pause is lifted by `account`.",
      "parameterDecorators": [
        {
          "name": "hash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "balances(bytes32)",
      "name": "balances",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getENSAddress(bytes32)",
      "name": "getENSAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "nameHash",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSafeENSAddress(bytes32)",
      "name": "getSafeENSAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "nameHash",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pullEther2ENS(bytes32,uint256)",
      "name": "pullEther2ENS",
      "description": "Pulls ether for any valid ENS name. Can be called by anyone.",
      "parameterDecorators": [
        {
          "name": "nameHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pullEther2Ethadd(address,uint256)",
      "name": "pullEther2Ethadd",
      "description": "Pulls ether for any ethereum address. Can be called by anyone.",
      "parameterDecorators": [
        {
          "name": "ethAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pullNFT2ENS(bytes32,address,uint256)",
      "name": "pullNFT2ENS",
      "description": "Pulls one of any type of NFT to a valid ENS address. Can be called by anyone.",
      "parameterDecorators": [
        {
          "name": "nameHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "nftAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pullToken2ENS(bytes32,address,uint256)",
      "name": "pullToken2ENS",
      "description": "Pulls any amount of a given token to a valid ENS address. Can be called by anyone.",
      "parameterDecorators": [
        {
          "name": "nameHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pushEther2ENS(bytes32)",
      "name": "pushEther2ENS",
      "description": "Pushes ether sent in transaction for an ENS name.",
      "parameterDecorators": [
        {
          "name": "nameHash",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pushEther2Ethadd(address)",
      "name": "pushEther2Ethadd",
      "description": "Pushes ether sent in transaction for a normal address.",
      "parameterDecorators": [
        {
          "name": "ethAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pushNFT2ENS(bytes32,address,uint256)",
      "name": "pushNFT2ENS",
      "description": "Pushes an single NFT for an ENS address.",
      "parameterDecorators": [
        {
          "name": "nameHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "nftAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pushTokens2ENS(bytes32,address,uint256)",
      "name": "pushTokens2ENS",
      "description": "Pushes any amount of a given token for an ENS address.",
      "parameterDecorators": [
        {
          "name": "nameHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}