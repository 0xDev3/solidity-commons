{
  "schema": "../schema.json",
  "tags": [],
  "name": "BobaTuringCredit",
  "description": "BobaTuringCredit. The credit system for Boba Turing.",
  "eventDecorators": [
    {
      "signature": "AddBalanceTo(address,uint256,address)",
      "name": "AddBalanceTo",
      "description": "The event emitted when the uniswap window changes. Emitted when a NFT contract addresss is added to a user's wallet.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "balanceAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "helperContractAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferOwnership(address,address)",
      "name": "TransferOwnership",
      "description": "The event emitted when the uniswap window changes. Emitted when a NFT contract addresss is added to a user's wallet.",
      "parameterDecorators": [
        {
          "name": "oldOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawRevenue(address,uint256)",
      "name": "WithdrawRevenue",
      "description": "The event emitted when the uniswap window changes. Emitted when a NFT contract addresss is added to a user's wallet.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "withdrawAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addBalanceTo(uint256,address)",
      "name": "addBalanceTo",
      "description": "Add credit for a Turing helper contract.",
      "parameterDecorators": [
        {
          "name": "_addBalanceAmount",
          "description": "the prepaid amount that the user want to add.",
          "recommendedTypes": []
        },
        {
          "name": "_helperContractAddress",
          "description": "the address of the turing helper contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getCreditAmount(address)",
      "name": "getCreditAmount",
      "description": "Return the credit of a specific helper contract.",
      "parameterDecorators": [
        {
          "name": "_helperContractAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ownerRevenue()",
      "name": "ownerRevenue",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "prepaidBalance(address)",
      "name": "prepaidBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "transfer ownership.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "new owner address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "turingPrice()",
      "name": "turingPrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "turingToken()",
      "name": "turingToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateTuringPrice(uint256)",
      "name": "updateTuringPrice",
      "description": "Update turing price.",
      "parameterDecorators": [
        {
          "name": "_turingPrice",
          "description": "turing price for each off-chain computation.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateTuringToken(address)",
      "name": "updateTuringToken",
      "description": "Update turing token.",
      "parameterDecorators": [
        {
          "name": "_turingToken",
          "description": "credit token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawRevenue(uint256)",
      "name": "withdrawRevenue",
      "description": "Owner withdraws revenue.",
      "parameterDecorators": [
        {
          "name": "_withdrawAmount",
          "description": "the revenue amount that the owner wants to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}