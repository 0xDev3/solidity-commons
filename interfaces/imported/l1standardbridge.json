{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "bridges"
  ],
  "name": "L1StandardBridge",
  "description": "L1StandardBridge. The L1 ETH and ERC20 Bridge is a contract which stores deposited L1 funds and standard tokens that are in use on L2. It synchronizes a corresponding L2 Bridge, informing it of deposits and listening to it for newly finalized withdrawals.",
  "eventDecorators": [
    {
      "signature": "ERC20DepositInitiated(address,address,address,address,uint256,bytes)",
      "name": "ERC20DepositInitiated",
      "description": "Emitted when a new wrapper is created.",
      "parameterDecorators": [
        {
          "name": "_l1Token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_l2Token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ERC20WithdrawalFinalized(address,address,address,address,uint256,bytes)",
      "name": "ERC20WithdrawalFinalized",
      "description": "Emitted when a new wrapper is created.",
      "parameterDecorators": [
        {
          "name": "_l1Token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_l2Token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ETHDepositInitiated(address,address,uint256,bytes)",
      "name": "ETHDepositInitiated",
      "description": "Emitted when a new wrapper is created.",
      "parameterDecorators": [
        {
          "name": "_from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ETHWithdrawalFinalized(address,address,uint256,bytes)",
      "name": "ETHWithdrawalFinalized",
      "description": "Emitted when a new wrapper is created.",
      "parameterDecorators": [
        {
          "name": "_from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "depositERC20(address,address,uint256,uint32,bytes)",
      "name": "depositERC20",
      "description": "deposit an amount of the ERC20 to the caller's balance on L2.",
      "parameterDecorators": [
        {
          "name": "_l1Token",
          "description": "Address of the L1 ERC20 we are depositing.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Token",
          "description": "Address of the L1 respective L2 ERC20.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Amount of the ERC20 to deposit.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Gas",
          "description": "Gas limit required to complete the deposit on L2.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "Optional data to forward to L2. This data is provided solely as a convenience for external contracts. Aside from enforcing a maximum length, these contracts provide no guarantees about its content.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositERC20To(address,address,address,uint256,uint32,bytes)",
      "name": "depositERC20To",
      "description": "deposit an amount of ERC20 to a recipient's balance on L2.",
      "parameterDecorators": [
        {
          "name": "_l1Token",
          "description": "Address of the L1 ERC20 we are depositing.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Token",
          "description": "Address of the L1 respective L2 ERC20.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "L2 address to credit the withdrawal to.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Amount of the ERC20 to deposit.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Gas",
          "description": "Gas limit required to complete the deposit on L2.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "Optional data to forward to L2. This data is provided solely as a convenience for external contracts. Aside from enforcing a maximum length, these contracts provide no guarantees about its content.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositETH(uint32,bytes)",
      "name": "depositETH",
      "description": "Deposit an amount of the ETH to the caller's balance on L2.",
      "parameterDecorators": [
        {
          "name": "_l2Gas",
          "description": "Gas limit required to complete the deposit on L2.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "Optional data to forward to L2. This data is provided solely as a convenience for external contracts. Aside from enforcing a maximum length, these contracts provide no guarantees about its content.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositETHTo(address,uint32,bytes)",
      "name": "depositETHTo",
      "description": "Deposit an amount of ETH to a recipient's balance on L2.",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "L2 address to credit the withdrawal to.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Gas",
          "description": "Gas limit required to complete the deposit on L2.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "Optional data to forward to L2. This data is provided solely as a convenience for external contracts. Aside from enforcing a maximum length, these contracts provide no guarantees about its content.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deposits(address,address)",
      "name": "deposits",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "donateETH()",
      "name": "donateETH",
      "description": "Adds ETH balance to the account. This is meant to allow for ETH to be migrated from an old gateway to a new gateway. NOTE: This is left for one upgrade only so we are able to receive the migrated ETH from the old contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)",
      "name": "finalizeERC20Withdrawal",
      "description": "Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.",
      "parameterDecorators": [
        {
          "name": "_l1Token",
          "description": "Address of L1 token to finalizeWithdrawal for.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Token",
          "description": "Address of L2 token where withdrawal was initiated.",
          "recommendedTypes": []
        },
        {
          "name": "_from",
          "description": "L2 address initiating the transfer.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "L1 address to credit the withdrawal to.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Amount of the ERC20 to deposit.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "Data provided by the sender on L2. This data is provided solely as a convenience for external contracts. Aside from enforcing a maximum length, these contracts provide no guarantees about its content.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "finalizeETHWithdrawal(address,address,uint256,bytes)",
      "name": "finalizeETHWithdrawal",
      "description": "Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ETH token. Since only the xDomainMessenger can call this function, it will never be called before the withdrawal is finalized.",
      "parameterDecorators": [
        {
          "name": "_from",
          "description": "L2 address initiating the transfer.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "L1 address to credit the withdrawal to.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Amount of the ERC20 to deposit.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "Optional data to forward to L2. This data is provided solely as a convenience for external contracts. Aside from enforcing a maximum length, these contracts provide no guarantees about its content.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_l1messenger",
          "description": "L1 Messenger address being used for cross-chain communications.",
          "recommendedTypes": []
        },
        {
          "name": "_l2TokenBridge",
          "description": "L2 standard bridge address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "l2TokenBridge()",
      "name": "l2TokenBridge",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "messenger()",
      "name": "messenger",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}