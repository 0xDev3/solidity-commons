{
  "schema": "../schema.json",
  "tags": [],
  "name": "RelayerFacet",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Claimed(address,uint256,bytes32[])",
      "name": "Claimed",
      "description": "Emitted when `claim` is called on the origin domain.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "- Address on origin chain to send claimed funds to.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "total",
          "description": "- Total amount claimed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "transferIds",
          "description": "- TransferIds to claim.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "InitiatedClaim(uint32,address,address,bytes32[])",
      "name": "InitiatedClaim",
      "description": "Emitted when `initiateClaim` is called on the destination chain.",
      "parameterDecorators": [
        {
          "name": "domain",
          "description": "- Domain to claim funds on.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "recipient",
          "description": "- Address on origin chain to send claimed funds to.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "transferIds",
          "description": "- TransferIds to claim.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RelayerAdded(address,address)",
      "name": "RelayerAdded",
      "description": "Emitted when a relayer is added or removed from whitelists.",
      "parameterDecorators": [
        {
          "name": "relayer",
          "description": "- The relayer address to be added or removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RelayerFeeVaultUpdated(address,address,address)",
      "name": "RelayerFeeVaultUpdated",
      "description": "Emitted when the relayerFeeVault variable is updated.",
      "parameterDecorators": [
        {
          "name": "oldVault",
          "description": "- The relayerFeeVault old value.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newVault",
          "description": "- The relayerFeeVault new value.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RelayerRemoved(address,address)",
      "name": "RelayerRemoved",
      "description": "Emitted when a relayer is added or removed from whitelists.",
      "parameterDecorators": [
        {
          "name": "relayer",
          "description": "- The relayer address to be added or removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addRelayer(address)",
      "name": "addRelayer",
      "description": "Used to add approved relayer.",
      "parameterDecorators": [
        {
          "name": "_relayer",
          "description": "- The relayer address to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "approvedRelayers(address)",
      "name": "approvedRelayers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_relayer",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "relayerFeeVault()",
      "name": "relayerFeeVault",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeRelayer(address)",
      "name": "removeRelayer",
      "description": "Used to remove approved relayer.",
      "parameterDecorators": [
        {
          "name": "_relayer",
          "description": "- The relayer address to remove.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRelayerFeeVault(address)",
      "name": "setRelayerFeeVault",
      "description": "Updates the relayer fee router.",
      "parameterDecorators": [
        {
          "name": "_relayerFeeVault",
          "description": "The address of the new router.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}