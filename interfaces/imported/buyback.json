{"schema":"../schema.json","tags":[],"name":"Buyback","description":"","eventDecorators":[{"signature":"GovernorshipTransferred(address,address)","name":"GovernorshipTransferred","description":"event for token purchase logging.","parameterDecorators":[{"name":"previousGovernor","description":"","recommendedTypes":[],"indexed":true},{"name":"newGovernor","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"PendingGovernorshipTransfer(address,address)","name":"PendingGovernorshipTransfer","description":"event for token purchase logging.","parameterDecorators":[{"name":"previousGovernor","description":"","recommendedTypes":[],"indexed":true},{"name":"newGovernor","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"StrategistUpdated(address)","name":"StrategistUpdated","description":"event for token purchase logging.","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UniswapUpdated(address)","name":"UniswapUpdated","description":"event for token purchase logging.","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"claimGovernance()","name":"claimGovernance","description":"Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"governor()","name":"governor","description":"Returns the address of the current Governor.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isGovernor()","name":"isGovernor","description":"Returns true if the caller is the current Governor.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardsSource()","name":"rewardsSource","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setStrategistAddr(address)","name":"setStrategistAddr","description":"Set address of Strategist.","parameterDecorators":[{"name":"_address","description":"Address of Strategist.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setUniswapAddr(address)","name":"setUniswapAddr","description":"Set address of Uniswap for performing liquidation of strategy reward tokens. Setting to 0x0 will pause swaps.","parameterDecorators":[{"name":"_address","description":"Address of Uniswap.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"strategistAddr()","name":"strategistAddr","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"swap()","name":"swap","description":"Execute a swap of OGV for OUSD via Uniswap or Uniswap compatible protocol (e.g. Sushiswap)*.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"swapNow(uint256,uint256)","name":"swapNow","description":"Execute a swap of OGV for OUSD via Uniswap or Uniswap compatible protocol (e.g. Sushiswap).","parameterDecorators":[{"name":"ousdAmount","description":"OUSD to sell.","recommendedTypes":[]},{"name":"minExpected","description":"mininum amount of OGV to receive*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferGovernance(address)","name":"transferGovernance","description":"Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete.","parameterDecorators":[{"name":"_newGovernor","description":"Address of the new Governor.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferToken(address,uint256)","name":"transferToken","description":"Owner function to withdraw a specific amount of a token.","parameterDecorators":[{"name":"token","description":"token to be transferered.","recommendedTypes":[]},{"name":"amount","description":"amount of the token to be transferred.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"uniswapAddr()","name":"uniswapAddr","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}