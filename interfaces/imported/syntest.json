{
  "schema": "../schema.json",
  "tags": [],
  "name": "syntest",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OpenLoanDetails(address,uint256)",
      "name": "OpenLoanDetails",
      "description": "Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "loanID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Received(address,uint256)",
      "name": "Received",
      "description": "Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Test(uint256)",
      "name": "Test",
      "description": "Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "synthcount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addLiquidityDai()",
      "name": "addLiquidityDai",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addLiquidityUSDC()",
      "name": "addLiquidityUSDC",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "approveDai()",
      "name": "approveDai",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "approveUSDC()",
      "name": "approveUSDC",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "autoDeltaBalance(uint256)",
      "name": "autoDeltaBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceEthToTokens(uint256)",
      "name": "balanceEthToTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "burnStable(uint256,uint256)",
      "name": "burnStable",
      "description": "Also currently not taking the fee into account when then trying to forward original payment back to owner, lazy method implemented.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_loanID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "groupDeltaBalance(uint256)",
      "name": "groupDeltaBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "mintStable()",
      "name": "mintStable",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uniswapDaiforETH()",
      "name": "uniswapDaiforETH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}