{"schema":"../schema.json","tags":[],"name":"Factory","description":"","eventDecorators":[{"signature":"OwnershipRenounced(address)","name":"OwnershipRenounced","description":"","parameterDecorators":[{"name":"newOwner","description":"The new owner for this contract.","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"The new owner for this contract.","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"allCampaigns(uint256)","name":"allCampaigns","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"owner","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"cancelCampaign(uint256)","name":"cancelCampaign","description":"- Access control: External, OnlyOwner. Cancel a campaign.","parameterDecorators":[{"name":"_campaignID","description":"- The campaign ID.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"count()","name":"count","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"createCampaign(address,uint256,address,uint256[4],uint256[4],uint256[3],bool,uint256,uint256[6],uint256[6])","name":"createCampaign","description":"- [0] Softcap. 1e18 = 1 ETH.- [1] Hardcap. 1e18 = 1 ETH.- [2] TokenSalesQty. The amount of tokens for sale. Example: 1e8 for 1 token with 8 decimals.- [3] feePcnt. 100% is 1e6.- [0] Start date.- [1] End date. (Considering FCFS)- [2] Registration End date.- [3] Tier Sale End date.- [0] ETH amount to use (from token sales) to be used to provide LP.- [1] Token amount to be used to provide LP.- [2] LockDuration of the LP tokens.- Access control: Public, OnlyOwner- there are 6 tier pools- _tierWeights are list of weights of the tiers- _tierMinTokens are list of min tokens required to participate in the tiers. Create a new campaign.","parameterDecorators":[{"name":"_token","description":"- The token address.","recommendedTypes":[]},{"name":"_subIndex","description":"- The fund raising round Id.","recommendedTypes":[]},{"name":"_campaignOwner","description":"- Campaign owner address.","recommendedTypes":[]},{"name":"_stats","description":"- Array of 4 uint256 values.","recommendedTypes":[]},{"name":"_dates","description":"- Array of 4 uint256 dates.","recommendedTypes":[]},{"name":"_liquidity","description":"- Array of 3 uint256 values.","recommendedTypes":[]},{"name":"_burnUnSold","description":"- Indicate to burn un-sold tokens or not. For successful campaign only.","recommendedTypes":[]},{"name":"_tokenLockTime","description":"","recommendedTypes":[]},{"name":"_tierWeights","description":"- Array of 6 uint256 values.","recommendedTypes":[]},{"name":"_tierMinTokens","description":"- Array of 6 uint256 values.","recommendedTypes":[]}],"returnDecorators":[{"name":"campaignAddress","description":"- The address of the new campaign smart contract created.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"getFeeAddress()","name":"getFeeAddress","description":"- Access control: External. Get the fee address.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"- Return the fee address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getLauncherToken()","name":"getLauncherToken","description":"- Access control: External. Get the launcher token address.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"- Return the address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getLpRouter()","name":"getLpRouter","description":"- Access control: External. Get the LP router address.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"- Return the LP router address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getStakerAddress()","name":"getStakerAddress","description":"- Access control: External. Get the staker token address.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"- Return the address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"recoverUnspentLp(uint256,address)","name":"recoverUnspentLp","description":"- Access control: External, OnlyOwner. Recover Unspent LP for a campaign.","parameterDecorators":[{"name":"_campaignID","description":"- The campaign ID.","recommendedTypes":[]},{"name":"_campaignOwnerForCheck","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Allows the current owner to relinquish control of the contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Allows the current owner to transfer control of the contract to a newOwner.","parameterDecorators":[{"name":"newOwner","description":"The address to transfer ownership to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}