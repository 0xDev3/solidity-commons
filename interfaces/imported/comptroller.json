{"schema":"../schema.json","tags":[],"name":"Comptroller","description":"","eventDecorators":[{"signature":"ActionPaused(string,bool)","name":"ActionPaused","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"action","description":"","recommendedTypes":[],"indexed":false},{"name":"pauseState","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ActionPaused(address,string,bool)","name":"ActionPaused","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":false},{"name":"action","description":"","recommendedTypes":[],"indexed":false},{"name":"pauseState","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Failure(uint256,uint256,uint256)","name":"Failure","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"error","description":"","recommendedTypes":[],"indexed":false},{"name":"info","description":"","recommendedTypes":[],"indexed":false},{"name":"detail","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketEntered(address,address)","name":"MarketEntered","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketExited(address,address)","name":"MarketExited","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketListed(address)","name":"MarketListed","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewBorrowCap(address,uint256)","name":"NewBorrowCap","description":"Emitted when borrow cap for a pToken is changed. Event fired when a item is sold.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":true},{"name":"newBorrowCap","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewCloseFactor(uint256,uint256)","name":"NewCloseFactor","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"oldCloseFactorMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newCloseFactorMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewCollateralFactor(address,uint256,uint256)","name":"NewCollateralFactor","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":false},{"name":"oldCollateralFactorMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newCollateralFactorMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewLiquidationIncentive(uint256,uint256)","name":"NewLiquidationIncentive","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"oldLiquidationIncentiveMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newLiquidationIncentiveMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewMaxAssets(uint256,uint256)","name":"NewMaxAssets","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"oldMaxAssets","description":"","recommendedTypes":[],"indexed":false},{"name":"newMaxAssets","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewMintCap(address,uint256)","name":"NewMintCap","description":"Emitted when mint cap for a pToken is changed. Event fired when a item is sold.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":true},{"name":"newMintCap","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPiggyDistribution(address,address)","name":"NewPiggyDistribution","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"oldPiggyDistribution","description":"","recommendedTypes":[],"indexed":false},{"name":"newPiggyDistribution","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPriceOracle(address,address)","name":"NewPriceOracle","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"oldPriceOracle","description":"","recommendedTypes":[],"indexed":false},{"name":"newPriceOracle","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event fired when a item is sold.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"_borrowGuardianPaused()","name":"_borrowGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"_mintGuardianPaused()","name":"_mintGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"_setBorrowPaused(address,bool)","name":"_setBorrowPaused","description":"","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[]},{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_setCloseFactor(uint256)","name":"_setCloseFactor","description":"Sets the closeFactor used when liquidating borrows. Admin function to set closeFactor.","parameterDecorators":[{"name":"newCloseFactorMantissa","description":"New close factor, scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See ErrorReporter for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setCollateralFactor(address,uint256)","name":"_setCollateralFactor","description":"Sets the collateralFactor for a market. Admin function to set per-market collateralFactor.","parameterDecorators":[{"name":"pToken","description":"The market to set the factor on.","recommendedTypes":[]},{"name":"newCollateralFactorMantissa","description":"The new collateral factor, scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See ErrorReporter for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setDistributeWpcPaused(bool)","name":"_setDistributeWpcPaused","description":"","parameterDecorators":[{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_setLiquidationIncentive(uint256)","name":"_setLiquidationIncentive","description":"Sets liquidationIncentive. Admin function to set liquidationIncentive.","parameterDecorators":[{"name":"newLiquidationIncentiveMantissa","description":"New liquidationIncentive scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See ErrorReporter for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setMarketBorrowCaps(address[],uint256[])","name":"_setMarketBorrowCaps","description":"Set the given borrow caps for the given pToken markets. Borrowing that brings total borrows to or above borrow cap will revert. Admin or borrowCapGuardian function to set the borrow caps. A borrow cap of 0 corresponds to unlimited borrowing.","parameterDecorators":[{"name":"pTokens","description":"The addresses of the markets (tokens) to change the borrow caps for.","recommendedTypes":[]},{"name":"newBorrowCaps","description":"The new borrow cap values in underlying to be set. A value of 0 corresponds to unlimited borrowing.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setMarketMintCaps(address[],uint256[])","name":"_setMarketMintCaps","description":"","parameterDecorators":[{"name":"pTokens","description":"","recommendedTypes":[]},{"name":"newMintCaps","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setMarketMinted(address,bool)","name":"_setMarketMinted","description":"","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[]},{"name":"status","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setMaxAssets(uint256)","name":"_setMaxAssets","description":"Sets maxAssets which controls how many markets can be entered. Admin function to set maxAssets.","parameterDecorators":[{"name":"newMaxAssets","description":"New max assets.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See ErrorReporter for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setMintPaused(address,bool)","name":"_setMintPaused","description":"","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[]},{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_setPiggyDistribution(address)","name":"_setPiggyDistribution","description":"Sets a new price piggyDistribution for the comptroller. Admin function to set a new piggy distribution.","parameterDecorators":[{"name":"newPiggyDistribution","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure (see ErrorReporter.sol for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setPriceOracle(address)","name":"_setPriceOracle","description":"Sets a new price oracle for the comptroller. Admin function to set a new price oracle.","parameterDecorators":[{"name":"newOracle","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure (see ErrorReporter.sol for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setSeizePaused(bool)","name":"_setSeizePaused","description":"","parameterDecorators":[{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_setTransferPaused(bool)","name":"_setTransferPaused","description":"","parameterDecorators":[{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_supportMarket(address)","name":"_supportMarket","description":"Add the market to the markets mapping and set it as listed. Admin function to set isListed and add support for the market.","parameterDecorators":[{"name":"pToken","description":"The address of the market (token) to list.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See enum Error for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"accountAssets(address,uint256)","name":"accountAssets","description":"PIGGY-MODIFY:Per-account mapping of \"assets you are in\", capped by maxAssets.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"allMarkets(uint256)","name":"allMarkets","description":"A list of all markets.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowAllowed(address,address,uint256)","name":"borrowAllowed","description":"PIGGY-MODIFY:Checks if the account should be allowed to borrow the underlying asset of the given market.","parameterDecorators":[{"name":"pToken","description":"The market to verify the borrow against.","recommendedTypes":[]},{"name":"borrower","description":"The account which would borrow the asset.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of underlying the account would borrow.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the borrow is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"borrowCapGuardian()","name":"borrowCapGuardian","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowCaps(address)","name":"borrowCaps","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowVerify(address,address,uint256)","name":"borrowVerify","description":"PIGGY-MODIFY:Validates borrow and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"pToken","description":"Asset whose underlying is being borrowed.","recommendedTypes":[]},{"name":"borrower","description":"The address borrowing the underlying.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of the underlying asset requested to borrow.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"checkMembership(address,address)","name":"checkMembership","description":"Returns whether the given account is entered in the given asset.","parameterDecorators":[{"name":"account","description":"The address of the account to check.","recommendedTypes":[]},{"name":"pToken","description":"The pToken to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if the account is in the asset, otherwise false.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"closeFactorMantissa()","name":"closeFactorMantissa","description":"Multiplier used to calculate the maximum repayAmount when liquidating a borrow.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"distributeWpcPaused()","name":"distributeWpcPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"enterMarkets(address[])","name":"enterMarkets","description":"PIGGY-MODIFY:Add assets to be included in account liquidity calculation.","parameterDecorators":[{"name":"pTokens","description":"The list of addresses of the cToken markets to be enabled.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Success indicator for whether each corresponding market was entered.","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":false},{"signature":"exitMarket(address)","name":"exitMarket","description":"PIGGY-MODIFY:Removes asset from sender's account liquidity calculation. Sender must not have an outstanding borrow balance in the asset, or be providing necessary collateral for an outstanding borrow.","parameterDecorators":[{"name":"pTokenAddress","description":"The address of the asset to be removed.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Whether or not the account successfully exited the market.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"getAccountLiquidity(address)","name":"getAccountLiquidity","description":"Determine the current account liquidity wrt collateral requirements.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getAllMarkets()","name":"getAllMarkets","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getAssetsIn(address)","name":"getAssetsIn","description":"Returns the assets an account has entered.","parameterDecorators":[{"name":"account","description":"The address of the account to pull assets for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"A dynamic list with the assets the account has entered.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getHypotheticalAccountLiquidity(address,address,uint256,uint256)","name":"getHypotheticalAccountLiquidity","description":"Determine what the account liquidity would be if the given amounts were redeemed/borrowed.","parameterDecorators":[{"name":"account","description":"The account to determine liquidity for.","recommendedTypes":[]},{"name":"pTokenModify","description":"The market to hypothetically redeem/borrow in.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of tokens to hypothetically redeem.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of underlying to hypothetically borrow.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize()","name":"initialize","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isMarketListed(address)","name":"isMarketListed","description":"","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isMarketMinted(address)","name":"isMarketMinted","description":"","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"liquidateBorrowAllowed(address,address,address,address,uint256)","name":"liquidateBorrowAllowed","description":"PIGGY-MODIFY:Checks if the liquidation should be allowed to occur.","parameterDecorators":[{"name":"pTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"pTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of underlying being repaid.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"liquidateBorrowVerify(address,address,address,address,uint256,uint256)","name":"liquidateBorrowVerify","description":"PIGGY-MODIFY:Validates liquidateBorrow and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"pTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"pTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of underlying being repaid.","recommendedTypes":[]},{"name":"seizeTokens","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"liquidateCalculateSeizeTokens(address,address,uint256)","name":"liquidateCalculateSeizeTokens","description":"","parameterDecorators":[{"name":"pTokenBorrowed","description":"","recommendedTypes":[]},{"name":"pTokenCollateral","description":"","recommendedTypes":[]},{"name":"actualRepayAmount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"liquidationIncentiveMantissa()","name":"liquidationIncentiveMantissa","description":"Multiplier representing the discount on collateral that a liquidator receives.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"markets(address)","name":"markets","description":"Official mapping of pTokens -> Market metadata.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"isListed","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"collateralFactorMantissa","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"isMinted","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"maxAssets()","name":"maxAssets","description":"Max number of assets a single account can participate in (borrow or use as collateral).","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"mintAllowed(address,address,uint256)","name":"mintAllowed","description":"PIGGY-MODIFY:Checks if the account should be allowed to mint tokens in the given market.","parameterDecorators":[{"name":"pToken","description":"The market to verify the mint against.","recommendedTypes":[]},{"name":"minter","description":"The account which would get the minted tokens.","recommendedTypes":[]},{"name":"mintAmount","description":"The amount of underlying being supplied to the market in exchange for tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"mintCaps(address)","name":"mintCaps","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"mintVerify(address,address,uint256,uint256)","name":"mintVerify","description":"PIGGY-MODIFY:Validates mint and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"pToken","description":"Asset being minted.","recommendedTypes":[]},{"name":"minter","description":"The address minting the tokens.","recommendedTypes":[]},{"name":"mintAmount","description":"The amount of the underlying asset being minted.","recommendedTypes":[]},{"name":"mintTokens","description":"The number of tokens being minted.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"oracle()","name":"oracle","description":"Oracle which gives the price of any given asset.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pTokenBorrowGuardianPaused(address)","name":"pTokenBorrowGuardianPaused","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"pTokenMintGuardianPaused(address)","name":"pTokenMintGuardianPaused","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"pauseGuardian()","name":"pauseGuardian","description":"The Pause Guardian can pause certain actions as a safety mechanism. Actions which allow users to remove their own assets cannot be paused. Liquidation / seizing / transfer can only be paused globally, not by market.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"redeemAllowed(address,address,uint256)","name":"redeemAllowed","description":"PIGGY-MODIFY:Checks if the account should be allowed to redeem tokens in the given market.","parameterDecorators":[{"name":"pToken","description":"The market to verify the redeem against.","recommendedTypes":[]},{"name":"redeemer","description":"The account which would redeem the tokens.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of cTokens to exchange for the underlying asset in the market.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the redeem is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"redeemVerify(address,address,uint256,uint256)","name":"redeemVerify","description":"PIGGY-MODIFY:Validates redeem and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"pToken","description":"Asset being redeemed.","recommendedTypes":[]},{"name":"redeemer","description":"The address redeeming the tokens.","recommendedTypes":[]},{"name":"redeemAmount","description":"The amount of the underlying asset being redeemed.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of tokens being redeemed.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"repayBorrowAllowed(address,address,address,uint256)","name":"repayBorrowAllowed","description":"PIGGY-MODIFY:Checks if the account should be allowed to repay a borrow in the given market.","parameterDecorators":[{"name":"pToken","description":"The market to verify the repay against.","recommendedTypes":[]},{"name":"payer","description":"The account which would repay the asset.","recommendedTypes":[]},{"name":"borrower","description":"The account which would borrowed the asset.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of the underlying asset the account would repay.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the repay is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"repayBorrowVerify(address,address,address,uint256,uint256)","name":"repayBorrowVerify","description":"PIGGY-MODIFY:Validates repayBorrow and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"pToken","description":"Asset being repaid.","recommendedTypes":[]},{"name":"payer","description":"The address repaying the borrow.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of underlying being repaid.","recommendedTypes":[]},{"name":"borrowerIndex","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"seizeAllowed(address,address,address,address,uint256)","name":"seizeAllowed","description":"PIGGY-MODIFY:Checks if the seizing of assets should be allowed to occur.","parameterDecorators":[{"name":"pTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"pTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"seizeTokens","description":"The number of collateral tokens to seize.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"seizeGuardianPaused()","name":"seizeGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"seizeVerify(address,address,address,address,uint256)","name":"seizeVerify","description":"PIGGY-MODIFY:Validates seize and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"pTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"pTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"seizeTokens","description":"The number of collateral tokens to seize.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferAllowed(address,address,address,uint256)","name":"transferAllowed","description":"PIGGY-MODIFY:Checks if the account should be allowed to transfer tokens in the given market.","parameterDecorators":[{"name":"pToken","description":"The market to verify the transfer against.","recommendedTypes":[]},{"name":"src","description":"The account which sources the tokens.","recommendedTypes":[]},{"name":"dst","description":"The account which receives the tokens.","recommendedTypes":[]},{"name":"transferTokens","description":"The number of pTokens to transfer.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the transfer is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"transferGuardianPaused()","name":"transferGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferVerify(address,address,address,uint256)","name":"transferVerify","description":"PIGGY-MODIFY:Validates transfer and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"pToken","description":"Asset being transferred.","recommendedTypes":[]},{"name":"src","description":"The account which sources the tokens.","recommendedTypes":[]},{"name":"dst","description":"The account which receives the tokens.","recommendedTypes":[]},{"name":"transferTokens","description":"The number of pTokens to transfer.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}