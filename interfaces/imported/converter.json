{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "Converter",
  "description": "Implementation of the {IConverter} interface. A simple converter contract that allows users to convert their Vether tokens by \"burning\" them (See {convert}) to acquire their equivalent Vader tokens based on the constant {VADER_VETHER_CONVERSION_RATE}. The contract assumes that it has been sufficiently funded with Vader tokens and will fail to execute trades if it has not been done so yet.",
  "eventDecorators": [
    {
      "signature": "Conversion(address,uint256,uint256)",
      "name": "Conversion",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "vetherAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "vaderAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "convert(uint256)",
      "name": "convert",
      "description": "Allows a user to convert their Vether to Vader. Emits a {Conversion} event indicating the amount of Vether the user \"burned\" and the amount of Vader that they acquired. Here, \"burned\" refers to the action of transferring them to an irrecoverable address, the {BURN} address. Requirements: - the caller has approved the contract for the necessary amount via Vether - the amount specified is non-zero - the contract has been supplied with the necessary Vader amount to fulfill the trade.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "vaderReceived",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [
        "Conversion(address,uint256,uint256)"
      ],
      "readOnly": false
    },
    {
      "signature": "vader()",
      "name": "vader",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vether()",
      "name": "vether",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}