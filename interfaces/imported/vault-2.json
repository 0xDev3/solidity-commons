{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "Vault",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdminSet(address,bool,address)",
      "name": "AdminSet",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "_admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_allowed",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ContractSet(address,bool,address)",
      "name": "ContractSet",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_allowed",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Deposited(address,address,uint256,bytes)",
      "name": "Deposited",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Issued(address,address,uint256,uint256,bytes)",
      "name": "Issued",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_optionId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_issuedId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_userId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SupervisorSet(address,bool,address)",
      "name": "SupervisorSet",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "_supervisor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_allowed",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdrawn(address,address,uint256,bytes)",
      "name": "Withdrawn",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ERC721_RECEIVED()",
      "name": "ERC721_RECEIVED",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "adminWhitelist(address)",
      "name": "adminWhitelist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "contractWhitelist(address)",
      "name": "contractWhitelist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "issueManyTokens(address,address[],uint256[],uint256[],uint256,bytes,bytes)",
      "name": "issueManyTokens",
      "description": "Withdraw NFTs by minting them.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "- Beneficiary's address.",
          "recommendedTypes": []
        },
        {
          "name": "_contracts",
          "description": "- NFT contract' addresses.",
          "recommendedTypes": []
        },
        {
          "name": "_optionIds",
          "description": "- Option ids.",
          "recommendedTypes": []
        },
        {
          "name": "_issuedIds",
          "description": "- Issued ids.",
          "recommendedTypes": []
        },
        {
          "name": "_expires",
          "description": "- Expiration of the signature.",
          "recommendedTypes": []
        },
        {
          "name": "_userId",
          "description": "- User id.",
          "recommendedTypes": []
        },
        {
          "name": "_signature",
          "description": "- Signature.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "issueManyTokens(address,address[],uint256[],uint256[],bytes)",
      "name": "issueManyTokens",
      "description": "Withdraw NFTs by minting them.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "- Beneficiary's address.",
          "recommendedTypes": []
        },
        {
          "name": "_contracts",
          "description": "- NFT contract' addresses.",
          "recommendedTypes": []
        },
        {
          "name": "_optionIds",
          "description": "- Option ids.",
          "recommendedTypes": []
        },
        {
          "name": "_issuedIds",
          "description": "- Issued ids.",
          "recommendedTypes": []
        },
        {
          "name": "_userId",
          "description": "- User id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "issueToken(address,address,uint256,uint256,bytes)",
      "name": "issueToken",
      "description": "Withdraw an NFT by minting it.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "- Beneficiary's address.",
          "recommendedTypes": []
        },
        {
          "name": "_contract",
          "description": "- NFT contract' address.",
          "recommendedTypes": []
        },
        {
          "name": "_optionId",
          "description": "- Option id.",
          "recommendedTypes": []
        },
        {
          "name": "_issuedId",
          "description": "- Issued id.",
          "recommendedTypes": []
        },
        {
          "name": "_userId",
          "description": "- User id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "issueToken(address,address,uint256,uint256,uint256,bytes,bytes)",
      "name": "issueToken",
      "description": "Withdraw an NFT by minting it committing a valid signature.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "- Beneficiary's address.",
          "recommendedTypes": []
        },
        {
          "name": "_contract",
          "description": "- NFT contract' address.",
          "recommendedTypes": []
        },
        {
          "name": "_optionId",
          "description": "- Option id.",
          "recommendedTypes": []
        },
        {
          "name": "_issuedId",
          "description": "- Issued id.",
          "recommendedTypes": []
        },
        {
          "name": "_expires",
          "description": "- Expiration of the signature.",
          "recommendedTypes": []
        },
        {
          "name": "_userId",
          "description": "- User id.",
          "recommendedTypes": []
        },
        {
          "name": "_signature",
          "description": "- Signature.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "messageProcessed(bytes32)",
      "name": "messageProcessed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onERC721Received(address,address,uint256,bytes)",
      "name": "onERC721Received",
      "description": "Handle the receipt of an NFT. The ERC721 smart contract calls this function on the recipient after a {IERC721-safeTransferFrom}. This function MUST return the function selector, otherwise the caller will revert the transaction. The selector to be returned can be obtained as `this.onERC721Received.selector`. This function MAY throw to revert and reject the transfer. Note: the ERC721 contract address is always the message sender.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_from",
          "description": "- The address which previously owned the token.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": "- The NFT identifier which is being transferred.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "- Additional data with no specified format.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "bytes4 - `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "Called by the owner to pause, triggers stopped state.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAdmin(address)",
      "name": "removeAdmin",
      "description": "Remove an address to the admin whitelist.",
      "parameterDecorators": [
        {
          "name": "_admin",
          "description": "- Address to be removed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAdmin(address,bool)",
      "name": "setAdmin",
      "description": "Add or remove an address to the admin whitelist.",
      "parameterDecorators": [
        {
          "name": "_admin",
          "description": "- Address to be allowed or not.",
          "recommendedTypes": []
        },
        {
          "name": "_allowed",
          "description": "- Whether the contract will be allowed or not.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setContract(address,bool)",
      "name": "setContract",
      "description": "Add or remove a contract to the contract whitelist.",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "- Contract to be allowed or not.",
          "recommendedTypes": []
        },
        {
          "name": "_allowed",
          "description": "- Whether the contract will be allowed or not.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSupervisor(address,bool)",
      "name": "setSupervisor",
      "description": "Add or remove an address to the supervisor whitelist.",
      "parameterDecorators": [
        {
          "name": "_supervisor",
          "description": "- Address to be allowed or not.",
          "recommendedTypes": []
        },
        {
          "name": "_allowed",
          "description": "- Whether the contract will be allowed or not.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supervisorWhitelist(address)",
      "name": "supervisorWhitelist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "Called by the owner to unpause, returns to normal state.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(address,address,uint256,uint256,bytes,bytes)",
      "name": "withdraw",
      "description": "Withdraw an NFT by committing a valid signature.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "- Beneficiary's address.",
          "recommendedTypes": []
        },
        {
          "name": "_contract",
          "description": "- NFT contract' address.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": "- Token id.",
          "recommendedTypes": []
        },
        {
          "name": "_expires",
          "description": "- Expiration of the signature.",
          "recommendedTypes": []
        },
        {
          "name": "_userId",
          "description": "- User id.",
          "recommendedTypes": []
        },
        {
          "name": "_signature",
          "description": "- Signature.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(address,address,uint256,bytes)",
      "name": "withdraw",
      "description": "Withdraw an NFT.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "- Beneficiary's address.",
          "recommendedTypes": []
        },
        {
          "name": "_contract",
          "description": "- NFT contract' address.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": "- Token id.",
          "recommendedTypes": []
        },
        {
          "name": "_userId",
          "description": "- User id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawMany(address,address[],uint256[],bytes)",
      "name": "withdrawMany",
      "description": "Withdraw many NFTs.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "- Beneficiary's address.",
          "recommendedTypes": []
        },
        {
          "name": "_contracts",
          "description": "- NFT contract' addresses.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenIds",
          "description": "- Token ids.",
          "recommendedTypes": []
        },
        {
          "name": "_userId",
          "description": "- User id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawMany(address,address[],uint256[],uint256,bytes,bytes)",
      "name": "withdrawMany",
      "description": "Withdraw many NFTs by committing a valid signature.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "- Beneficiary's address.",
          "recommendedTypes": []
        },
        {
          "name": "_contracts",
          "description": "- NFT contract' addresses.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenIds",
          "description": "- Token ids.",
          "recommendedTypes": []
        },
        {
          "name": "_expires",
          "description": "- Expiration of the signature.",
          "recommendedTypes": []
        },
        {
          "name": "_userId",
          "description": "- User id.",
          "recommendedTypes": []
        },
        {
          "name": "_signature",
          "description": "- Signature.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}