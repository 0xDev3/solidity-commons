{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "ThreeXBatchVault",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "acceptClientAccess(address)",
      "name": "acceptClientAccess",
      "description": "",
      "parameterDecorators": [
        {
          "name": "grantingAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "accountBalances(bytes32,address)",
      "name": "accountBalances",
      "description": "BatchId => account => balance in batch.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "accountBatches(address,uint256)",
      "name": "accountBatches",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addClient(address)",
      "name": "addClient",
      "description": "DAO role can add any client. This is used to allow clients to use the batch storage contract.",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "allowances(address,address,bytes32,address)",
      "name": "allowances",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approve(address,address,bytes32,uint256)",
      "name": "approve",
      "description": "approve allows the client contract to approve an address to be the recipient of a withdrawal or claim.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "delegatee",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "batchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "batchIds(uint256)",
      "name": "batchIds",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "batches(bytes32)",
      "name": "batches",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "batchType",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "batchId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "claimable",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "unclaimedShares",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "sourceTokenBalance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "targetTokenBalance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "sourceToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "targetToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claim(bytes32,address,uint256,address)",
      "name": "claim",
      "description": "This function checks all requirements for claiming, updates batches and balances and transfers tokens.",
      "parameterDecorators": [
        {
          "name": "batchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "shares",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "clients(address)",
      "name": "clients",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "contractId()",
      "name": "contractId",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createBatch(uint8,tuple(address,address))",
      "name": "createBatch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_batchType",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokens",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "targetToken",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "sourceToken",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delegates(address,address)",
      "name": "delegates",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(bytes32,address,uint256)",
      "name": "deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "batchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositTargetTokensIntoBatch(bytes32,uint256)",
      "name": "depositTargetTokensIntoBatch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "batchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAccountBalance(bytes32,address)",
      "name": "getAccountBalance",
      "description": "Get ids for all batches that a user has interacted with.",
      "parameterDecorators": [
        {
          "name": "batchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_account",
          "description": "The address for whom we want to retrieve batches.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAccountBatches(address)",
      "name": "getAccountBatches",
      "description": "Get ids for all batches that a user has interacted with.",
      "parameterDecorators": [
        {
          "name": "_account",
          "description": "The address for whom we want to retrieve batches.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBatch(bytes32)",
      "name": "getBatch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "batchId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "id",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bytes32"
            },
            {
              "name": "batchType",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint8"
            },
            {
              "name": "batchId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bytes32"
            },
            {
              "name": "claimable",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "unclaimedShares",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "sourceTokenBalance",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "targetTokenBalance",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "sourceToken",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "targetToken",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "owner",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBatchType(bytes32)",
      "name": "getBatchType",
      "description": "",
      "parameterDecorators": [
        {
          "name": "batchId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantClientAccess(address)",
      "name": "grantClientAccess",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newClient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialized()",
      "name": "initialized",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "moveUnclaimedIntoCurrentBatch(bytes32,bytes32,address,uint256)",
      "name": "moveUnclaimedIntoCurrentBatch",
      "description": "Moves funds from unclaimed batches into the current mint/redeem batch.",
      "parameterDecorators": [
        {
          "name": "_sourceBatch",
          "description": "the id of the claimable batch.",
          "recommendedTypes": []
        },
        {
          "name": "_destinationBatch",
          "description": "the id of the redeem batch.",
          "recommendedTypes": []
        },
        {
          "name": "owner",
          "description": "owner of the account balance.",
          "recommendedTypes": []
        },
        {
          "name": "shares",
          "description": "how many shares should be claimed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingClientAccessGrants(address,address)",
      "name": "pendingClientAccessGrants",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "previewClaim(bytes32,address,uint256)",
      "name": "previewClaim",
      "description": "",
      "parameterDecorators": [
        {
          "name": "batchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "shares",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeClient(address)",
      "name": "removeClient",
      "description": "DAO role can remove any client. This is used to remove clients that are no longer using the batch storage contract. A client may remove itself by calling this function.",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeClientAccess(address)",
      "name": "revokeClientAccess",
      "description": "",
      "parameterDecorators": [
        {
          "name": "client",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(bytes32,address,uint256,address)",
      "name": "withdraw",
      "description": "This function allows a user to withdraw their funds from a batch before that batch has been processed.",
      "parameterDecorators": [
        {
          "name": "batchId",
          "description": "From which batch should funds be withdrawn from.",
          "recommendedTypes": []
        },
        {
          "name": "owner",
          "description": "address that owns the account balance.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "amount of tokens to withdraw from batch.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "address that will receive the token transfer. if address(0) then no transfer is made.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawSourceTokenFromBatch(bytes32)",
      "name": "withdrawSourceTokenFromBatch",
      "description": "This function transfers the batch source tokens to the client usually for a minting or redeming operation.",
      "parameterDecorators": [
        {
          "name": "batchId",
          "description": "From which batch should funds be withdrawn from.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}