{"schema":"../schema.json","tags":[],"name":"TraderJoe_ZapOut_V1","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event emitted when a Uniswap V3 LP token has been unstaked.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"zapOut(address,address,address,uint256,address)","name":"zapOut","description":"Event emitted when a Uniswap V3 LP token has been unstaked.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":false},{"name":"pool","description":"","recommendedTypes":[],"indexed":false},{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"tokensRec","description":"","recommendedTypes":[],"indexed":false},{"name":"affiliate","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"ZapOut(address,address,uint256,uint256,address[],bytes[],address)","name":"ZapOut","description":"Zap out in a single token.","parameterDecorators":[{"name":"toTokenAddress","description":"Address of desired token.","recommendedTypes":[]},{"name":"fromPoolAddress","description":"Pool from which to remove liquidity.","recommendedTypes":[]},{"name":"incomingLP","description":"Quantity of LP to remove from pool.","recommendedTypes":[]},{"name":"minTokensRec","description":"Minimum quantity of tokens to receive.","recommendedTypes":[]},{"name":"swapTargets","description":"Execution targets for swaps.","recommendedTypes":[]},{"name":"swapData","description":"DEX swap data.","recommendedTypes":[]},{"name":"affiliate","description":"Affiliate address.","recommendedTypes":[]}],"returnDecorators":[{"name":"tokensRec","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"ZapOut2PairToken(address,uint256,address)","name":"ZapOut2PairToken","description":"Zap out in both tokens.","parameterDecorators":[{"name":"fromPoolAddress","description":"Pool from which to remove liquidity.","recommendedTypes":[]},{"name":"incomingLP","description":"Quantity of LP to remove from pool.","recommendedTypes":[]},{"name":"affiliate","description":"Affiliate address.","recommendedTypes":[]}],"returnDecorators":[{"name":"amountA","description":"Quantity of tokenA received after zapout.","recommendedTypes":[],"solidityType":"uint256"},{"name":"amountB","description":"Quantity of tokenB received after zapout.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"ZapOut2PairTokenWithPermit(address,uint256,address,bytes)","name":"ZapOut2PairTokenWithPermit","description":"Zap out in both tokens with permit.","parameterDecorators":[{"name":"fromPoolAddress","description":"Pool from which to remove liquidity.","recommendedTypes":[]},{"name":"incomingLP","description":"Quantity of LP to remove from pool.","recommendedTypes":[]},{"name":"affiliate","description":"Affiliate address to share fees.","recommendedTypes":[]},{"name":"permitSig","description":"Signature for permit.","recommendedTypes":[]}],"returnDecorators":[{"name":"amountA","description":"Quantity of tokenA received.","recommendedTypes":[],"solidityType":"uint256"},{"name":"amountB","description":"Quantity of tokenB received.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"ZapOutWithPermit(address,address,uint256,uint256,bytes,address[],bytes[],address)","name":"ZapOutWithPermit","description":"Zap out in a single token with permit.","parameterDecorators":[{"name":"toTokenAddress","description":"Address of desired token.","recommendedTypes":[]},{"name":"fromPoolAddress","description":"Pool from which to remove liquidity.","recommendedTypes":[]},{"name":"incomingLP","description":"Quantity of LP to remove from pool.","recommendedTypes":[]},{"name":"minTokensRec","description":"Minimum quantity of tokens to receive.","recommendedTypes":[]},{"name":"permitSig","description":"Signature for permit.","recommendedTypes":[]},{"name":"swapTargets","description":"Execution targets for swaps.","recommendedTypes":[]},{"name":"swapData","description":"DEX swap data.","recommendedTypes":[]},{"name":"affiliate","description":"Affiliate address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"affiliateBalance(address,address)","name":"affiliateBalance","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"affiliates(address)","name":"affiliates","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"affilliateWithdraw(address[])","name":"affilliateWithdraw","description":"Withdraw affilliate share, retaining goodwill share.","parameterDecorators":[{"name":"tokens","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"approvedTargets(address)","name":"approvedTargets","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"feeWhitelist(address)","name":"feeWhitelist","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"goodwill()","name":"goodwill","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeLiquidityReturn(address,uint256)","name":"removeLiquidityReturn","description":"Utility function to determine quantity and addresses of tokens being removed.","parameterDecorators":[{"name":"fromPoolAddress","description":"Pool from which to remove liquidity.","recommendedTypes":[]},{"name":"liquidity","description":"Quantity of LP tokens to remove.","recommendedTypes":[]}],"returnDecorators":[{"name":"amountA","description":"Quantity of tokenA removed.","recommendedTypes":[],"solidityType":"uint256"},{"name":"amountB","description":"Quantity of tokenB removed.","recommendedTypes":[],"solidityType":"uint256"},{"name":"token0","description":"Address of the underlying token to be removed.","recommendedTypes":[],"solidityType":"address"},{"name":"token1","description":"Address of the underlying token to be removed.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setApprovedTargets(address[],bool[])","name":"setApprovedTargets","description":"","parameterDecorators":[{"name":"targets","description":"","recommendedTypes":[]},{"name":"isApproved","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"set_affiliate(address,bool)","name":"set_affiliate","description":"","parameterDecorators":[{"name":"_affiliate","description":"","recommendedTypes":[]},{"name":"_status","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"set_feeWhitelist(address,bool)","name":"set_feeWhitelist","description":"","parameterDecorators":[{"name":"zapAddress","description":"","recommendedTypes":[]},{"name":"status","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"set_new_affiliateSplit(uint256)","name":"set_new_affiliateSplit","description":"","parameterDecorators":[{"name":"_new_affiliateSplit","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"set_new_goodwill(uint256)","name":"set_new_goodwill","description":"","parameterDecorators":[{"name":"_new_goodwill","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stopped()","name":"stopped","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"toggleContractActive()","name":"toggleContractActive","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalAffiliateBalance(address)","name":"totalAffiliateBalance","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawTokens(address[])","name":"withdrawTokens","description":"Withdraw goodwill share, retaining affilliate share.","parameterDecorators":[{"name":"tokens","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}