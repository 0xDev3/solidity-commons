{"schema":"../schema.json","tags":[],"name":"FactoryV1","description":"Factory V1. The template to be registered may or may not have an `initialize` function. However, at least a ERC173 and multicall for directed at self must be implemented. Abstract reusable contract into template and deploy them in small sizes `minimal proxy` and `beacon proxy`. This contract can receive a fee lower than the deploy cost, and registered addresses do not have to pay the fee. Beacon is managed in this contract, it can be useful if you need a scalable upgrade through the `beacon proxy`.","eventDecorators":[{"signature":"DeletedTemplate(bytes32)","name":"DeletedTemplate","description":"Emitted when supply rate for `target` is set to `rate`.","parameterDecorators":[{"name":"key","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Deployed(address,address)","name":"Deployed","description":"Emitted when supply rate for `target` is set to `rate`.","parameterDecorators":[{"name":"deployed","description":"","recommendedTypes":[],"indexed":false},{"name":"owner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"FeeChanged(uint256,uint256)","name":"FeeChanged","description":"Emitted when supply rate for `target` is set to `rate`.","parameterDecorators":[{"name":"prevFee","description":"","recommendedTypes":[],"indexed":false},{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"FeeToChanged(address,address)","name":"FeeToChanged","description":"Emitted when supply rate for `target` is set to `rate`.","parameterDecorators":[{"name":"prevFeeTo","description":"","recommendedTypes":[],"indexed":false},{"name":"feeTo","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewTemplate(bytes32,address,address)","name":"NewTemplate","description":"Emitted when supply rate for `target` is set to `rate`.","parameterDecorators":[{"name":"key","description":"","recommendedTypes":[],"indexed":true},{"name":"template","description":"","recommendedTypes":[],"indexed":false},{"name":"beacon","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when supply rate for `target` is set to `rate`.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UpdatedTemplate(bytes32,address)","name":"UpdatedTemplate","description":"Emitted when supply rate for `target` is set to `rate`.","parameterDecorators":[{"name":"key","description":"","recommendedTypes":[],"indexed":true},{"name":"template","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addTemplate(address)","name":"addTemplate","description":"템플릿으로 사용되기 적합한 인터페이스가 구현된 컨트랙트를 템플릿으로 가격과 함께 등록함. 같은 템플릿이 비콘과, 일반적인 템플릿으로 등록될 수 있습니다. 따라서 선택적으로 사용 가능합니다.","parameterDecorators":[{"name":"templateAddr","description":"템플릿으로 사용될 컨트랙트의 주소.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"baseFee()","name":"baseFee","description":"base fee.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"changeFee(uint256)","name":"changeFee","description":"고정 수수료를 변경.","parameterDecorators":[{"name":"newFee","description":"변경된 수수료.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeFeeTo(address)","name":"changeFeeTo","description":"수수료를 수취할 대상 변경.","parameterDecorators":[{"name":"newFeeTo","description":"수취할 대상 주소.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"clone(address,bytes,bytes[])","name":"clone","description":"Factori.eth에 등록되지 않은 컨트랙트를 Template로 하여 Minimal Proxy로 배포합니다.","parameterDecorators":[{"name":"templateAddr","description":"템플릿으로 사용할 이미 배포된 컨트랙트 주소.","recommendedTypes":[]},{"name":"initializationCallData","description":"배포되면서 호출되어야 하는 초기화 함수.","recommendedTypes":[]},{"name":"calls","description":"초기화 함수 이외에, 호출되어야 하는 함수들의 배열.","recommendedTypes":[]}],"returnDecorators":[{"name":"deployed","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"collect(address)","name":"collect","description":"Factori.eth에 쌓여있는 ETH와 토큰을 호출하여, 수수료 수취 주소에 전송함.","parameterDecorators":[{"name":"tokenAddr","description":"수취할 토큰 주소.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"compute(bool,bytes32,bytes)","name":"compute","description":"template id와 초기화 데이터 통해서 minimal proxy와 minimal beacon proxy로 배포할 주소를 미리 파악하는 함수. 연결된 지갑 주소에 따라 생성될 지갑 주소가 변경되므로, 연결되어 있는 주소를 필수로 확인하여야 합니다.","parameterDecorators":[{"name":"isBeacon","description":"비콘으로 배포해야 할 것인지 결정하는 인자.","recommendedTypes":[]},{"name":"templateId","description":"배포할 컨트랙트의 template id.","recommendedTypes":[]},{"name":"initializationCallData","description":"컨트랙트가 생성될 때 호출할 직렬화된 초기화 함수 정보.","recommendedTypes":[]}],"returnDecorators":[{"name":"deployable","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"computeClone(address,bytes)","name":"computeClone","description":"Factori.eth에 등록되지 않은 컨트랙트를 Template로 하여 minimal proxy로 배포할 주소를 미리 파악하는 함수. 연결된 지갑 주소에 따라 생성될 지갑 주소가 변경되므로, 연결되어 있는 주소를 필수로 확인하여야 합니다.","parameterDecorators":[{"name":"templateAddr","description":"배포할 컨트랙트의 template id.","recommendedTypes":[]},{"name":"initializationCallData","description":"컨트랙트가 생성될 때 호출할 직렬화된 초기화 함수 정보.","recommendedTypes":[]}],"returnDecorators":[{"name":"deployable","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"computeWithSeed(string,bool,bytes32,bytes)","name":"computeWithSeed","description":"template id와 Seed 문자열, 초기화 데이터 통해서 minimal proxy와 minimal beacon proxy로 배포할 주소를 미리 파악하는 함수. 연결된 지갑 주소에 따라 생성될 지갑 주소가 변경되므로, 연결되어 있는 주소를 필수로 확인하여야 합니다.","parameterDecorators":[{"name":"seed","description":"컨트랙트에 사용할 seed 문자열.","recommendedTypes":[]},{"name":"isBeacon","description":"비콘으로 배포해야 할 것인지 결정하는 인자.","recommendedTypes":[]},{"name":"templateId","description":"배포할 컨트랙트의 template id.","recommendedTypes":[]},{"name":"initializationCallData","description":"컨트랙트가 생성될 때 호출할 직렬화된 초기화 함수 정보.","recommendedTypes":[]}],"returnDecorators":[{"name":"deployable","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"deploy(bool,bytes32,bytes,bytes[])","name":"deploy","description":"template id를 통해서 minimal proxy와 minimal beacon proxy를 배포하는 함수. 일반적으로 배포되는 컨트랙트와 같이 컨트랙트가 생성될 때 초기화 함수를 실행해야 한다면, initializationCallData에 호출할 함수를 serialize하여 주입하여야 합니다. 컨트랙트 소유권을 별도로 관리해야하는 경우 multicall을 통해서 명시적인 소유권 이전이 되어야 합니다.","parameterDecorators":[{"name":"isBeacon","description":"비콘으로 배포해야 할 것인지 결정하는 인자.","recommendedTypes":[]},{"name":"templateId","description":"배포할 컨트랙트의 template id.","recommendedTypes":[]},{"name":"initializationCallData","description":"컨트랙트가 생성될 때 호출할 직렬화된 초기화 함수 정보.","recommendedTypes":[]},{"name":"calls","description":"컨트랙트가 배포된 이후, 필요한 일련의 함수 호출 정보.","recommendedTypes":[]}],"returnDecorators":[{"name":"deployed","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"deployWithSeed(string,bool,bytes32,bytes,bytes[])","name":"deployWithSeed","description":"template id와 외부에서 관리되는 seed를 통해서 minimal proxy와 minimal beacon proxy를 배포하는 함수. 일반적으로 배포되는 컨트랙트와 같이 컨트랙트가 생성될 때 초기화 함수를 실행해야 한다면, initializationCallData에 호출할 함수를 serialize하여 주입하여야 합니다. 컨트랙트 소유권을 별도로 관리해야하는 경우 multicall을 통해서 명시적인 소유권 이전이 되어야 합니다.","parameterDecorators":[{"name":"seed","description":"컨트랙트 주소 확정에 필요한 외부 seed.","recommendedTypes":[]},{"name":"isBeacon","description":"비콘으로 배포해야 할 것인지 결정하는 인자.","recommendedTypes":[]},{"name":"templateId","description":"배포할 컨트랙트의 template id.","recommendedTypes":[]},{"name":"initializationCallData","description":"컨트랙트가 생성될 때 호출할 직렬화된 초기화 함수 정보.","recommendedTypes":[]},{"name":"calls","description":"컨트랙트가 배포된 이후, 필요한 일련의 함수 호출 정보.","recommendedTypes":[]}],"returnDecorators":[{"name":"deployed","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"feeTo()","name":"feeTo","description":"fee collector.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getPrice()","name":"getPrice","description":"template id에 따라서 컨트랙트를 배포하기 위한 필요 가격을 가져오는 함. 연결된 지갑 주소에 따라 생성될 지갑 주소가 변경되므로, 연결되어 있는 주소를 필수로 확인하여야 합니다.","parameterDecorators":[],"returnDecorators":[{"name":"price","description":"이더리움으로 구성된 값을 가짐.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"multicall(bytes[])","name":"multicall","description":"","parameterDecorators":[{"name":"callData","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"returnData","description":"","recommendedTypes":[],"solidityType":"bytes[]"}],"emittableEvents":[],"readOnly":false},{"signature":"nonce()","name":"nonce","description":"template count.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Get the address of the owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"recoverOwnership(address,address)","name":"recoverOwnership","description":"","parameterDecorators":[{"name":"deployed","description":"","recommendedTypes":[]},{"name":"to","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeTemplate(bytes32)","name":"removeTemplate","description":"등록된 템플릿을 삭제하는 함수.","parameterDecorators":[{"name":"key","description":"삭제될 템플릿의 아이디.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"resignOwnership()","name":"resignOwnership","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"templates(bytes32)","name":"templates","description":"template key for template info.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"template","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"btemplate","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Set the address of the new owner of the contract.","parameterDecorators":[{"name":"newOwner","description":"The address of the new owner of the contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateTemplate(bytes32,address)","name":"updateTemplate","description":"등록된 템플릿의 정보를 변경하는 함수, 비콘인 경우에는 템플릿을 업데이트 할 수 있으나 비콘이 아니라면 업데이트 불가능.","parameterDecorators":[{"name":"key","description":"업데이트 될 템플릿의 아이디.","recommendedTypes":[]},{"name":"templateAddr","description":"비콘일 경우 템플릿 주소, 템플릿 소유주 주소를 순서대로 인코딩.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}