{"schema":"../schema.json","tags":[],"name":"SpaceFarmConfig","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"activateReward()","name":"activateReward","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getActivateAtBlock()","name":"getActivateAtBlock","description":"Return the amount of block required to activate the progress function.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCompany()","name":"getCompany","description":"Return the company's contract address.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getJTestaAmount()","name":"getJTestaAmount","description":"Return the jTesta amount value.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getLatestPrice()","name":"getLatestPrice","description":"Return the latest price for ETH-USD.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"getLiquidity()","name":"getLiquidity","description":"Return the current liquidity value.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint112"}],"emittableEvents":[],"readOnly":true},{"signature":"getPayAmount()","name":"getPayAmount","description":"Return the first pay amount value.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getProgressive()","name":"getProgressive","description":"Return the (min, max) progress bar values.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"getRequiredLiquidity(uint256)","name":"getRequiredLiquidity","description":"Return the liquidity value required to activate the progres function.","parameterDecorators":[{"name":"startLiquidity","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTestaFee(uint256)","name":"getTestaFee","description":"Return the amount of Testa wei to spend upon harvesting reward.","parameterDecorators":[{"name":"rewardETH","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTestaReward()","name":"getTestaReward","description":"Return the amount of Testa wei rewarded if we are activate the progress function.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"harvestFee()","name":"harvestFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"liquidityProgressRate()","name":"liquidityProgressRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"priceFeed()","name":"priceFeed","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setParem(address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,int256,int256)","name":"setParem","description":"Set all the basic parameters. Must only be called by the owner.","parameterDecorators":[{"name":"_priceFeed","description":"The new address of Price Oracle.","recommendedTypes":[]},{"name":"_pair","description":"The new pair address.","recommendedTypes":[]},{"name":"_company","description":"The new company address.","recommendedTypes":[]},{"name":"_activateReward","description":"The new reward value in USD given to activator.","recommendedTypes":[]},{"name":"_harvestFee","description":"The new harvest fee rate given to company.","recommendedTypes":[]},{"name":"_liquidityProgressRate","description":"The new minimum rate required to increae the progress.","recommendedTypes":[]},{"name":"_payAmount","description":"The new amount to be paid on entry.","recommendedTypes":[]},{"name":"_jTestaAmount","description":"The new jTesta amount required to activate the progress function.","recommendedTypes":[]},{"name":"_activateAtBlock","description":"","recommendedTypes":[]},{"name":"_minProgressive","description":"","recommendedTypes":[]},{"name":"_maxProgressive","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}