{"schema":"../schema.json","tags":[],"name":"HazeBUSD10K","description":"","eventDecorators":[{"signature":"Deposit(bytes32,uint32,uint256)","name":"Deposit","description":"Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"commitment","description":"","recommendedTypes":[],"indexed":true},{"name":"leafIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdrawal(address,bytes32,address,uint256)","name":"Withdrawal","description":"Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[],"indexed":false},{"name":"nullifierHash","description":"","recommendedTypes":[],"indexed":false},{"name":"relayer","description":"","recommendedTypes":[],"indexed":true},{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"FIELD_SIZE()","name":"FIELD_SIZE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"ROOT_HISTORY_SIZE()","name":"ROOT_HISTORY_SIZE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"ZERO_VALUE()","name":"ZERO_VALUE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"blocklist(address)","name":"blocklist","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"changeOperator(address)","name":"changeOperator","description":"operator can change his address.","parameterDecorators":[{"name":"_newOperator","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"commitments(bytes32)","name":"commitments","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"currentRootIndex()","name":"currentRootIndex","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"denomination()","name":"denomination","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit(bytes32)","name":"deposit","description":"Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.","parameterDecorators":[{"name":"_commitment","description":"the note commitment, which is PedersenHash(nullifier + secret).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"depositRewardDistributor()","name":"depositRewardDistributor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"enableBlockList()","name":"enableBlockList","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"enableReward()","name":"enableReward","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"filledSubtrees(uint256)","name":"filledSubtrees","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getLastRoot()","name":"getLastRoot","description":"Returns the last root.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"governance()","name":"governance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"hashLeftRight(bytes32,bytes32)","name":"hashLeftRight","description":"Hash 2 tree leaves, returns MiMC(_left, _right).","parameterDecorators":[{"name":"_left","description":"","recommendedTypes":[]},{"name":"_right","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"isKnownRoot(bytes32)","name":"isKnownRoot","description":"Whether the root is present in the root history.","parameterDecorators":[{"name":"_root","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isSpent(bytes32)","name":"isSpent","description":"whether a note is already spent.","parameterDecorators":[{"name":"_nullifierHash","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isSpentArray(bytes32[])","name":"isSpentArray","description":"whether an array of notes is already spent.","parameterDecorators":[{"name":"_nullifierHashes","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"spent","description":"","recommendedTypes":[],"solidityType":"bool[]"}],"emittableEvents":[],"readOnly":true},{"signature":"levels()","name":"levels","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"nextIndex()","name":"nextIndex","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"nullifierHashes(bytes32)","name":"nullifierHashes","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"operator()","name":"operator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"protocolFee()","name":"protocolFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"protocolFeeBase()","name":"protocolFeeBase","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"protocolFeeDistributor()","name":"protocolFeeDistributor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"protocolFeeMax()","name":"protocolFeeMax","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"roots(uint256)","name":"roots","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"setDepositRewardDistributor(address)","name":"setDepositRewardDistributor","description":"","parameterDecorators":[{"name":"_depositRewardDistributor","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setEnableBlockList(bool)","name":"setEnableBlockList","description":"","parameterDecorators":[{"name":"_enableBlockList","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setEnableReward(bool)","name":"setEnableReward","description":"","parameterDecorators":[{"name":"_enableReward","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setFeeDistributor(address)","name":"setFeeDistributor","description":"","parameterDecorators":[{"name":"_protocolFeeDistributor","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setGovernance(address)","name":"setGovernance","description":"","parameterDecorators":[{"name":"_governance","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setProtocolFee(uint256)","name":"setProtocolFee","description":"","parameterDecorators":[{"name":"_protocolFee","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"updateVerifier(address)","name":"updateVerifier","description":"allow operator to update SNARK verification keys. This is needed to update keys after the final trusted setup ceremony is held. After that operator rights are supposed to be transferred to zero address.","parameterDecorators":[{"name":"_newVerifier","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"verifier()","name":"verifier","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256)","name":"withdraw","description":"Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay).","parameterDecorators":[{"name":"_proof","description":"","recommendedTypes":[]},{"name":"_root","description":"","recommendedTypes":[]},{"name":"_nullifierHash","description":"","recommendedTypes":[]},{"name":"_recipient","description":"","recommendedTypes":[]},{"name":"_relayer","description":"","recommendedTypes":[]},{"name":"_fee","description":"","recommendedTypes":[]},{"name":"_refund","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"zeros(uint256)","name":"zeros","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true}]}