{"schema":"../schema.json","tags":["celo network"],"name":"UpdaterManager","description":"UpdaterManager. MVP / centralized version of contract that will manage Updater bonding, slashing, selection and rotation.","eventDecorators":[{"signature":"FakeSlashed(address)","name":"FakeSlashed","description":"Emitted when slashUpdater is called.","parameterDecorators":[{"name":"reporter","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewHome(address)","name":"NewHome","description":"Emitted when a new home is set.","parameterDecorators":[{"name":"home","description":"The address of the new home contract.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setHome(address)","name":"setHome","description":"Set the address of the a new home contract. only callable by trusted owner.","parameterDecorators":[{"name":"_home","description":"The address of the new home contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setUpdater(address)","name":"setUpdater","description":"Set the address of a new updater. only callable by trusted owner.","parameterDecorators":[{"name":"_updaterAddress","description":"The address of the new updater.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"slashUpdater(address)","name":"slashUpdater","description":"Slashes the updater. Currently does nothing, functionality will be implemented later when updater bonding and rotation are also implemented.","parameterDecorators":[{"name":"_reporter","description":"The address of the entity that reported the updater fraud.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updater()","name":"updater","description":"Get address of current updater.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the updater address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}