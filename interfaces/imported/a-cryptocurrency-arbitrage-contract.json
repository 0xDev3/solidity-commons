{
  "schema": "../schema.json",
  "tags": [
    "swaps",
    "uniswap",
    "curve finance"
  ],
  "name": "Divergence",
  "description": "A Cryptocurrency Arbitrage Contract. This contract can be used for Uniswap V3, Sushiswap, Dodo V2, Kyber, Curve, and Bancor V2.",
  "eventDecorators": [
    {
      "signature": "Received(address,uint256)",
      "name": "Received",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "WETH9()",
      "name": "WETH9",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "factory()",
      "name": "factory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initFlash(address,address,uint256,address,address,uint256)",
      "name": "initFlash",
      "description": "Requires 50 AFN sent to contract to call, then initializes a flash swap on Uniswap.",
      "parameterDecorators": [
        {
          "name": "token0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "exchange0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "exchange1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "slippage",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "refundETH()",
      "name": "refundETH",
      "description": "Refunds any ETH balance held by this contract to the `msg.sender`. Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapRouter()",
      "name": "swapRouter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sweepToken(address,uint256,address)",
      "name": "sweepToken",
      "description": "Transfers the full amount of a token held by this contract to recipient. The amountMinimum parameter prevents malicious contracts from stealing the token from users.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "The contract address of the token which will be transferred to `recipient`.",
          "recommendedTypes": []
        },
        {
          "name": "amountMinimum",
          "description": "The minimum amount of token required for a transfer.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "The destination address of the token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uniswapV3FlashCallback(uint256,uint256,bytes)",
      "name": "uniswapV3FlashCallback",
      "description": "Called to `msg.sender` after transferring to the recipient from IUniswapV3Pool#flash. In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.",
      "parameterDecorators": [
        {
          "name": "fee0",
          "description": "The fee amount in token0 due to the pool by the end of the flash.",
          "recommendedTypes": []
        },
        {
          "name": "fee1",
          "description": "The fee amount in token1 due to the pool by the end of the flash.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Any data passed through by the caller via the IUniswapV3PoolActions#flash call.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unwrapWETH9(uint256,address)",
      "name": "unwrapWETH9",
      "description": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH. The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
      "parameterDecorators": [
        {
          "name": "amountMinimum",
          "description": "The minimum amount of WETH9 to unwrap.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "The address receiving ETH.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawToken(address,address,uint256)",
      "name": "withdrawToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}