{
  "schema": "../schema.json",
  "tags": [
    "swaps",
    "uniswap"
  ],
  "name": "UniswapV2VeloxSwapV4",
  "description": "VeloxSwap based on algorithmic conditional trading exeuctions.",
  "eventDecorators": [
    {
      "signature": "ExchangeRegistered(string,address)",
      "name": "ExchangeRegistered",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "exchange",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "routerAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "GasFunded(string,address,bytes32,uint256)",
      "name": "GasFunded",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "strategyId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "seller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "txHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "gasCost",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "GasFundingTokenChanged(address,address)",
      "name": "GasFundingTokenChanged",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "oldValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SwapException(uint256,uint256,uint256)",
      "name": "SwapException",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "exception",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "info",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "detail",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ValueSwapped(string,address,address,address,uint256,uint256)",
      "name": "ValueSwapped",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "strategyId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "seller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenIn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenOut",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountIn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ADMIN_ADDRESS()",
      "name": "ADMIN_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ADMIN_ROLE()",
      "name": "ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAIN_CONTRACT()",
      "name": "MAIN_CONTRACT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "UNISWAP_FACTORY_ADDRESS()",
      "name": "UNISWAP_FACTORY_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "UNISWAP_ROUTER_ADDRESS()",
      "name": "UNISWAP_ROUTER_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "executedStrategies(string)",
      "name": "executedStrategies",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fundGasCost(string,address,bytes32,uint256)",
      "name": "fundGasCost",
      "description": "",
      "parameterDecorators": [
        {
          "name": "strategyId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "seller",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "txHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "wethAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "gasFundingEstimatedGas()",
      "name": "gasFundingEstimatedGas",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "gasFundingEstimatedGasDiscounted()",
      "name": "gasFundingEstimatedGasDiscounted",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getGasFundingTokenAddress()",
      "name": "getGasFundingTokenAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantAdminRole(address)",
      "name": "grantAdminRole",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_c",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "succeeded",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lifetimeGasWithrawn()",
      "name": "lifetimeGasWithrawn",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxLifetimeGasWithdrawl()",
      "name": "maxLifetimeGasWithdrawl",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeAdminRole(address)",
      "name": "revokeAdminRole",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_c",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "succeeded",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "sellExactTokensForTokens(bytes,bytes,uint256,uint16,bool,uint256)",
      "name": "sellExactTokensForTokens",
      "description": "This function should ONLY be executed when algorithmic conditons are met function sellExactTokensForTokens.",
      "parameterDecorators": [
        {
          "name": "signature",
          "description": "bytes EIP712 signature.",
          "recommendedTypes": []
        },
        {
          "name": "secureData",
          "description": "bytes encoding of chainId, exchange, identifier, seller, tokenInAddress, tokenOutAddress, tokenInAmount.",
          "recommendedTypes": []
        },
        {
          "name": "minTokenOutAmount",
          "description": "uint256.",
          "recommendedTypes": []
        },
        {
          "name": "feeFactor",
          "description": "uint - 1/10000 fraction of the amount, i.e. feeFactor of 1 means 0.01% fee.",
          "recommendedTypes": []
        },
        {
          "name": "takeFeeFromInput",
          "description": "bool.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "uint256 - UNIX timestamp.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sellExactTokensForTokens(bytes,bytes,uint256,uint16,bool,uint256,uint256)",
      "name": "sellExactTokensForTokens",
      "description": "This function should ONLY be executed when algorithmic conditons are met function sellExactTokensForTokens.",
      "parameterDecorators": [
        {
          "name": "signature",
          "description": "bytes EIP712 signature.",
          "recommendedTypes": []
        },
        {
          "name": "secureData",
          "description": "bytes encoding of chainId, exchange, identifier, seller, tokenInAddress, tokenOutAddress, tokenInAmount.",
          "recommendedTypes": []
        },
        {
          "name": "minTokenOutAmount",
          "description": "uint256.",
          "recommendedTypes": []
        },
        {
          "name": "feeFactor",
          "description": "uint - 1/10000 fraction of the amount, i.e. feeFactor of 1 means 0.01% fee.",
          "recommendedTypes": []
        },
        {
          "name": "takeFeeFromInput",
          "description": "bool.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "uint256 - UNIX timestamp.",
          "recommendedTypes": []
        },
        {
          "name": "estimatedGasFundingCost",
          "description": "uint - estimated gas for gas funding transaction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBypassSignature(bool)",
      "name": "setBypassSignature",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_setBypassSignature",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDefaultGasEstimates(uint128,uint128)",
      "name": "setDefaultGasEstimates",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_gasFundingEstimatedGas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_gasFundingEstimatedGasDiscounted",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGasFundingTokenAddress(address)",
      "name": "setGasFundingTokenAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setKnownExchange(string,address)",
      "name": "setKnownExchange",
      "description": "",
      "parameterDecorators": [
        {
          "name": "exchangeName",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "routerAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaxLifetimeGasWithdrawl(uint256)",
      "name": "setMaxLifetimeGasWithdrawl",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_maxLifetimeGasWithdrawl",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRootRole()",
      "name": "setRootRole",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "succeeded",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setUpAdminRole(address)",
      "name": "setUpAdminRole",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_c",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "succeeded",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawETH(uint256)",
      "name": "withdrawETH",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawToken(address,uint256)",
      "name": "withdrawToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}