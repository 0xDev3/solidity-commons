{"schema":"../schema.json","tags":[],"name":"LetsGoLA","description":"","eventDecorators":[{"signature":"ApprovalForAll(address,address,bool)","name":"ApprovalForAll","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"operator","description":"","recommendedTypes":[],"indexed":true},{"name":"approved","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OperatorChanged(address,address)","name":"OperatorChanged","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"operator","description":"","recommendedTypes":[],"indexed":true},{"name":"newoperator","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoyaltyInfoChanged(address,uint96)","name":"RoyaltyInfoChanged","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"receiver","description":"","recommendedTypes":[],"indexed":true},{"name":"fee","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TransferBatch(address,address,address,uint256[],uint256[])","name":"TransferBatch","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"operator","description":"","recommendedTypes":[],"indexed":true},{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"ids","description":"","recommendedTypes":[],"indexed":false},{"name":"values","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TransferSingle(address,address,address,uint256,uint256)","name":"TransferSingle","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"operator","description":"","recommendedTypes":[],"indexed":true},{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"id","description":"","recommendedTypes":[],"indexed":false},{"name":"value","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"URI(string,uint256)","name":"URI","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"value","description":"","recommendedTypes":[],"indexed":false},{"name":"id","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"tokenBaseURI(string)","name":"tokenBaseURI","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"value","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"AssignedNFTs()","name":"AssignedNFTs","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOf(address,uint256)","name":"balanceOf","description":"Get the balance of an account's Tokens.","parameterDecorators":[{"name":"account","description":"The address of the token holder.","recommendedTypes":[]},{"name":"tokenId","description":"ID of the Token.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"The owner's balance of the Token type requested.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"burn(uint256,uint256)","name":"burn","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"supply","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isApprovedForAll(address,address)","name":"isApprovedForAll","description":"Queries the approval status of an operator for a given owner.","parameterDecorators":[{"name":"account","description":"The owner of the Tokens.","recommendedTypes":[]},{"name":"_operator","description":"Address of authorized operator.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if the operator is approved, false if not.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"mint(address,string,uint256)","name":"mint","description":"","parameterDecorators":[{"name":"creator","description":"","recommendedTypes":[]},{"name":"uri","description":"","recommendedTypes":[]},{"name":"supply","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"name()","name":"name","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"operator()","name":"operator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"royaltyInfo(uint256,uint256)","name":"royaltyInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"_salePrice","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"safeTransferFrom(address,address,uint256,uint256,bytes)","name":"safeTransferFrom","description":"Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call). Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard). MUST revert if `_to` is the zero address. MUST revert if balance of holder for token `_id` is lower than the `_value` sent. MUST revert on any other error. MUST emit the `TransferSingle` event to reflect the balance change (see \"Safe Transfer Rules\" section of the standard). After the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).","parameterDecorators":[{"name":"from","description":"Source address.","recommendedTypes":[]},{"name":"to","description":"Target address.","recommendedTypes":[]},{"name":"tokenId","description":"ID of the token type.","recommendedTypes":[]},{"name":"amount","description":"Transfer amount.","recommendedTypes":[]},{"name":"data","description":"Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setApprovalForAll(address,bool)","name":"setApprovalForAll","description":"Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens. MUST emit the ApprovalForAll event on success.","parameterDecorators":[{"name":"_operator","description":"Address to add to the set of authorized operators.","recommendedTypes":[]},{"name":"approved","description":"True if the operator is approved, false to revoke approval.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBaseURI(string)","name":"setBaseURI","description":"","parameterDecorators":[{"name":"_baseURI","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setOperator(address)","name":"setOperator","description":"","parameterDecorators":[{"name":"_operator","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setRoyaltyFee(address,uint96)","name":"setRoyaltyFee","description":"Sets the royalty information for a specific token id, overriding the global default. Requirements: - `tokenId` must be already minted. - `receiver` cannot be the zero address. - `feeNumerator` cannot be greater than the fee denominator.","parameterDecorators":[{"name":"receiver","description":"","recommendedTypes":[]},{"name":"feeNumerator","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"symbol()","name":"symbol","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenURI(uint256)","name":"tokenURI","description":"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.","parameterDecorators":[{"name":"tokenId","description":"uint256 ID of the token to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"totalSupply()","name":"totalSupply","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"change the Ownership from current owner to newOwner address.","parameterDecorators":[{"name":"newOwner","description":": newOwner address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false}]}