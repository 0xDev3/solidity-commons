{"schema":"../schema.json","tags":[],"name":"BCPRegistration","description":"","eventDecorators":[{"signature":"PINChanged(int64,address)","name":"PINChanged","description":"Event for token purchase logging. provides information of changed PIN to the website.","parameterDecorators":[{"name":"SenderID","description":"uint that identifies a specific sender (is constant).","recommendedTypes":[],"indexed":false},{"name":"newPIN","description":"alternative PIN for the deleted one.","recommendedTypes":[],"indexed":false}]},{"signature":"fallbackCall(address,uint256)","name":"fallbackCall","description":"Event for token purchase logging.","parameterDecorators":[{"name":"CustomerAddress","description":"is the address that called the fallback function.","recommendedTypes":[],"indexed":false},{"name":"MonetaryAmount","description":"is the msg.value that was provided within the call.","recommendedTypes":[],"indexed":false}]},{"signature":"newClaim(int64,address,address,address,address,address)","name":"newClaim","description":"Event for token purchase logging. provides information of calls of the ResetPINPUK function in its first stage of the reset process.","parameterDecorators":[{"name":"SenderID","description":"uint that identifies a specific sender (is constant).","recommendedTypes":[],"indexed":false},{"name":"PIN","description":"is the main address.","recommendedTypes":[],"indexed":false},{"name":"PUK","description":"","recommendedTypes":[],"indexed":false},{"name":"PUK2a","description":"","recommendedTypes":[],"indexed":false},{"name":"PUK2b","description":"","recommendedTypes":[],"indexed":false},{"name":"PUK2c","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"newSender(int64,address,address,address,address,address)","name":"newSender","description":"Event for token purchase logging.","parameterDecorators":[{"name":"SenderID","description":"uint that identifies a specific sender (is constant).","recommendedTypes":[],"indexed":false},{"name":"PIN","description":"is the main address.","recommendedTypes":[],"indexed":false},{"name":"PUK","description":"is the address to change the PIN address.","recommendedTypes":[],"indexed":false},{"name":"PUK2a","description":"first of the PUK2 triplet. Is held by the sender.","recommendedTypes":[],"indexed":false},{"name":"PUK2b","description":"second of the PUK2 triplet. Is held by the first trusted party.","recommendedTypes":[],"indexed":false},{"name":"PUK2c","description":"third of the PUK2 triplet. Is held by the second trusted party.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"ChangePIN(int64,address)","name":"ChangePIN","description":"to change the PIN address via the PUKhas to be called by the PUK.","parameterDecorators":[{"name":"SenderID","description":"uint that identifies a specific sender (is constant).","recommendedTypes":[]},{"name":"_newPIN","description":"alternative PIN for the deleted one.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"Collect()","name":"Collect","description":"transfers all collected payments from this contract to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"GetPIN(int64)","name":"GetPIN","description":"returns the PIN of the SenderID.","parameterDecorators":[{"name":"SenderID","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"GetPUK(int64)","name":"GetPUK","description":"returns the PUK of the SenderID.","parameterDecorators":[{"name":"SenderID","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"GetSenderID()","name":"GetSenderID","description":"determines the SenderID via the address (PIN or PUK)the possibility to easlily get your SenderID increases the sender convenienceis needed for testing purposes, you have to kblock.timestamp the SenderID.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int64"}],"emittableEvents":[],"readOnly":true},{"signature":"GetSenderInformation(int64)","name":"GetSenderInformation","description":"returns the hole sender structhas to be called by the PUKis needed for testing purposes (backend) you have to check whether PIN and/or PUK got changed.","parameterDecorators":[{"name":"SenderID","description":"uint that identifies a specific sender (is constant).","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"NewSender(address,address)","name":"NewSender","description":"function registers new senders within a lower security level using the PUK address as PUK und PUK2 triplet.","parameterDecorators":[{"name":"_PIN","description":"is the SCAs main address.","recommendedTypes":[]},{"name":"_PUK","description":"is the senders main address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int64"}],"emittableEvents":[],"readOnly":false},{"signature":"NewSenderPro(address,address,address,address,address)","name":"NewSenderPro","description":"function register allows to set PIN, PUK and PUK2 triplet, thereby creating the SenderIDthis function has to be called via the PUK address.","parameterDecorators":[{"name":"_PIN","description":"is the SCAs main address.","recommendedTypes":[]},{"name":"_PUK","description":"is the senders main address.","recommendedTypes":[]},{"name":"_PUK2a","description":"first of the PUK2 triplet. Is held by the sender.","recommendedTypes":[]},{"name":"_PUK2b","description":"second of the PUK2 triplet. Is held by the first trusted party.","recommendedTypes":[]},{"name":"_PUK2c","description":"third of the PUK2 triplet. Is held by the second trusted party.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int64"}],"emittableEvents":[],"readOnly":false},{"signature":"ResetPINPUK(int64,address,address,address,address,address)","name":"ResetPINPUK","description":"","parameterDecorators":[{"name":"SenderID","description":"","recommendedTypes":[]},{"name":"_newPIN","description":"","recommendedTypes":[]},{"name":"_newPUK","description":"","recommendedTypes":[]},{"name":"_newPUK2a","description":"","recommendedTypes":[]},{"name":"_newPUK2b","description":"","recommendedTypes":[]},{"name":"_newPUK2c","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"keyMap(address)","name":"keyMap","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int64"}],"emittableEvents":[],"readOnly":true}]}