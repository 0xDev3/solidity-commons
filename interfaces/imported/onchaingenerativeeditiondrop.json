{"schema":"../schema.json","tags":[],"name":"OnChainGenerativeEditionDrop","description":"","eventDecorators":[{"signature":"EditionSold(uint256,address)","name":"EditionSold","description":"Unfarm gets emitted when an account unstakes LP tokens.","parameterDecorators":[{"name":"price","description":"","recommendedTypes":[],"indexed":false},{"name":"owner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PriceChanged(uint256)","name":"PriceChanged","description":"Unfarm gets emitted when an account unstakes LP tokens.","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"burn(uint256)","name":"burn","description":"","parameterDecorators":[{"name":"tokenId","description":"Token ID to burn User burn function for token id.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"dropSize()","name":"dropSize","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"implementation()","name":"implementation","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"mintEdition(address)","name":"mintEdition","description":"This mints one edition to the given address by an allowed minter on the edition instance.","parameterDecorators":[{"name":"to","description":"address to send the newly minted edition to.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"mintEditions(address[])","name":"mintEditions","description":"This mints multiple editions to the given list of addresses.","parameterDecorators":[{"name":"recipients","description":"list of addresses to send the newly minted editions to.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"numberCanMint()","name":"numberCanMint","description":"Returns the number of editions allowed to mint (max_uint256 when open edition).","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Simple override for owner interface.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"purchase()","name":"purchase","description":"This allows the user to purchase a edition edition at the given price in the contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"salePrice()","name":"salePrice","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setApprovedMinter(address,bool)","name":"setApprovedMinter","description":"Sets the approved minting status of the given address. This requires that msg.sender is the owner of the given edition id. If the ZeroAddress (address(0x0)) is set as a minter, anyone will be allowed to mint. This setup is similar to setApprovalForAll in the ERC721 spec.","parameterDecorators":[{"name":"minter","description":"address to set approved minting status for.","recommendedTypes":[]},{"name":"allowed","description":"boolean if that address is allowed to mint.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBaseURI(string)","name":"setBaseURI","description":"Allows for updates of edition urls by the owner of the edition. Only URLs can be updated (data-uris are supported), hashes cannot be updated.","parameterDecorators":[{"name":"_baseURI","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setSalePrice(uint256)","name":"setSalePrice","description":"This sets a simple ETH sales price Setting a sales price allows users to mint the edition until it sells out. For more granular sales, use an external sales contract.","parameterDecorators":[{"name":"_salePrice","description":"if sale price is 0 sale is stopped, otherwise that amount of ETH is needed to start the sale.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenURI(uint256)","name":"tokenURI","description":"Get URI for given token id.","parameterDecorators":[{"name":"tokenId","description":"token id to get uri for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"base64-encoded json metadata object.","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"totalSupply()","name":"totalSupply","description":"returns the number of minted tokens within the edition.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw()","name":"withdraw","description":"This withdraws ETH from the contract to the contract owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}