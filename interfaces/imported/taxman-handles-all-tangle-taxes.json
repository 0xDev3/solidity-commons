{
  "schema": "../schema.json",
  "tags": [],
  "name": "TaxMan",
  "description": "TaxMan, handles all Tangle taxes. Allows adding/changing/removing of any taxes, provides information about current taxes, and holds the tax function used in Tangle transfers.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "splitCut(tuple(uint8,tuple)[])",
      "name": "splitCut",
      "description": "",
      "parameterDecorators": [
        {
          "name": "splitCuts",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "action",
              "description": "",
              "type": "uint8"
            },
            {
              "name": "split",
              "description": "",
              "type": "tuple"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "splits()",
      "name": "splits",
      "description": "Gets all splits and their address, numerator, and denominator.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "All splits and their address, numerator, and denominator.",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tax(address,uint256)",
      "name": "tax",
      "description": "Taxes a Tangle transfer, routes taxes and reduces transfer value by each tax amount routed.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "The value of Tangle being transferred.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The post-tax transfer value.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}