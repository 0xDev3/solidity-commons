{
  "schema": "../schema.json",
  "tags": [],
  "name": "TaskBoard",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AccessControlTokenUpdated(address,address)",
      "name": "AccessControlTokenUpdated",
      "description": "Event for token purchase logging. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "previousAdress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Assigned(uint256,address)",
      "name": "Assigned",
      "description": "Event for token purchase logging. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Canceled(uint256,address)",
      "name": "Canceled",
      "description": "Event for token purchase logging. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "by",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Completed(uint256,address,address,uint256)",
      "name": "Completed",
      "description": "Event for token purchase logging. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "by",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Created(uint256,address)",
      "name": "Created",
      "description": "Event for token purchase logging. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "issuer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Funded(uint256,address,uint256)",
      "name": "Funded",
      "description": "Event for token purchase logging. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "collaborator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MinBountyUpdated(uint256,uint256)",
      "name": "MinBountyUpdated",
      "description": "Event for token purchase logging. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "previousValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event for token purchase logging. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Refunded(uint256,address,uint256)",
      "name": "Refunded",
      "description": "Event for token purchase logging. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenAddressUpdated(address,address)",
      "name": "TokenAddressUpdated",
      "description": "Event for token purchase logging. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "previousAdress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Unassigned(uint256,address,address)",
      "name": "Unassigned",
      "description": "Event for token purchase logging. Logged when the receiver changes.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "by",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "accessControlToken()",
      "name": "accessControlToken",
      "description": "Returns the token address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cancel(uint256)",
      "name": "cancel",
      "description": "Cancel to fund task `taskId`, allowing collaborators to refund their tokens.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "The task identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "checkIfTaqtiler(address)",
      "name": "checkIfTaqtiler",
      "description": "Returns if `operator` is owned by a taqtiler. Check if `operator` has some balance on `accessControlToken`, assuming that those are only owned by taqtilers.",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "The address to be verified.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collaborators(uint256)",
      "name": "collaborators",
      "description": "Get the accounts that contributed to task `taskId`.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "The task identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "complete(uint256)",
      "name": "complete",
      "description": "Complete task `taskId`, sending staked tokens to who is assigned to it.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "The task identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "create(uint256,string,string,bytes32,bytes32)",
      "name": "create",
      "description": "Create a task, setting `msg.sender` as its issuer.",
      "parameterDecorators": [
        {
          "name": "initialBounty",
          "description": "The task initial bounty.",
          "recommendedTypes": []
        },
        {
          "name": "description",
          "description": "The task description.",
          "recommendedTypes": []
        },
        {
          "name": "title",
          "description": "The task title.",
          "recommendedTypes": []
        },
        {
          "name": "tag1",
          "description": "The task first tag.",
          "recommendedTypes": []
        },
        {
          "name": "tag2",
          "description": "The task second tag.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "taskId",
          "description": "The task identifier.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fund(uint256,uint256)",
      "name": "fund",
      "description": "Use `amount` tokens from `msg.sender` to fund task `taskId`.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "The task identifier.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "The amount of tokens beeing staked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fundedAmounts(uint256,address)",
      "name": "fundedAmounts",
      "description": "Returns the amount funded on a task by a collaborator.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fundsByCollaborator(address)",
      "name": "fundsByCollaborator",
      "description": "Get all funds made by `collaboratorAddress` per task.",
      "parameterDecorators": [
        {
          "name": "collaboratorAddress",
          "description": "The collaborator address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "funds",
          "description": "List of funds made by `collaboratorAddress` and their amounts per task.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "taskId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "collaborator",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fundsByTask(uint256)",
      "name": "fundsByTask",
      "description": "Get all funds made to `taskId` per collaborator.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "The task identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "funds",
          "description": "List of funds that were contributed to task `taskId` and their amounts per contributor.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "taskId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "collaborator",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllTasks()",
      "name": "getAllTasks",
      "description": "Get all tasks in this contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "allTasks",
          "description": "List of all tasks that were created.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "bounty",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "issuer",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "assignedTo",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "status",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint8"
            },
            {
              "name": "open",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "exists",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "title",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "description",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "tag1",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bytes32"
            },
            {
              "name": "tag2",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bytes32"
            },
            {
              "name": "collaborators",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address[]"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minBounty()",
      "name": "minBounty",
      "description": "The minimun amount of tokens required to fund a task, including its creation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "refund(uint256)",
      "name": "refund",
      "description": "Refund the amount of tokens delivered by collaborator on task `taskId`. This function is idempotent and can be called by anyone.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "The task identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "selfAssign(uint256)",
      "name": "selfAssign",
      "description": "Assign `msg.sender` to task `taskId`.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "The task identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMinBounty(uint256)",
      "name": "setMinBounty",
      "description": "Update The minimun amount nedded to fund/create a task to `_minBounty`.",
      "parameterDecorators": [
        {
          "name": "_minBounty",
          "description": "The minimun amount nedded to fund/create a task.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTaqAccessControl(address)",
      "name": "setTaqAccessControl",
      "description": "Update accessControlToken address from `accessControlToken` to `_token`. Should use only the {TaqEmployee} address for now.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The new accessControlToken address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTokenAddress(address)",
      "name": "setTokenAddress",
      "description": "Update token address from `token` to `_token`. Should use only the TaqCoin address for now.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The new token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "taskCounter()",
      "name": "taskCounter",
      "description": "Returns the amount of tasks created.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tasks(uint256)",
      "name": "tasks",
      "description": "Returns a task given its id.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "bounty",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "issuer",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "assignedTo",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "open",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "exists",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "title",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "description",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "tag1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "tag2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "Returns the token address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unassign(uint256)",
      "name": "unassign",
      "description": "Unassign task `taskId` from who it is currently assigned to.",
      "parameterDecorators": [
        {
          "name": "taskId",
          "description": "The task identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}