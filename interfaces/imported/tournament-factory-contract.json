{
  "schema": "../schema.json",
  "tags": [],
  "name": "Factory",
  "description": "Tournament Factory contract. Owned by admin, anyone can create tournament. Deploys tournaments and stores them.",
  "eventDecorators": [
    {
      "signature": "NewTournament(address,address)",
      "name": "NewTournament",
      "description": "emitted after each successful withdrawal. Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "_tournament",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "emitted after each successful withdrawal. Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TournamentDeleted(address)",
      "name": "TournamentDeleted",
      "description": "emitted after each successful withdrawal. Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "_tournament",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "counter()",
      "name": "counter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deleteTournament(address)",
      "name": "deleteTournament",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "factoryAddress()",
      "name": "factoryAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "newTournament(string,uint256,uint256,uint256)",
      "name": "newTournament",
      "description": "Creates a new tournament. Deploys a new tournament contract; stores object in factory.",
      "parameterDecorators": [
        {
          "name": "_baseURI",
          "description": "Base URI containing tournament name, desc, images, etc.",
          "recommendedTypes": []
        },
        {
          "name": "registrationFee",
          "description": "Tournament registration fee.",
          "recommendedTypes": []
        },
        {
          "name": "startTime",
          "description": "UNIX Time - Tournamnet starts.",
          "recommendedTypes": []
        },
        {
          "name": "registrationClosesAt",
          "description": "UNIX Time - Tournament registration ends.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_newTournament",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "parameters()",
      "name": "parameters",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "baseURI",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "registrationFee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "registrationClosesAt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "factoryAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardToken()",
      "name": "rewardToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakingAddress()",
      "name": "stakingAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "superAdmin()",
      "name": "superAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tournaments(address)",
      "name": "tournaments",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "treasuryAddress()",
      "name": "treasuryAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateRewardToken(address)",
      "name": "updateRewardToken",
      "description": "Update reward token; default is TENKA.",
      "parameterDecorators": [
        {
          "name": "newRewardToken",
          "description": "new token contract address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateTreasuryAddress(address)",
      "name": "updateTreasuryAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_treasuryAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}