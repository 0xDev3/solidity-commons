{
  "schema": "../schema.json",
  "tags": [
    "swaps"
  ],
  "name": "SwapContract",
  "description": "",
  "eventDecorators": [
    {
      "signature": "BurnLPTokensForFloat(address,uint256,uint256,uint256,uint256,bytes32)",
      "name": "BurnLPTokensForFloat",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountOfLP",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountOfFloat",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "currentPriceLP",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "withdrawal",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "txid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DistributeNodeRewards(uint256)",
      "name": "DistributeNodeRewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "rewardLPTsForNodes",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "IssueLPTokensForFloat(address,uint256,uint256,uint256,uint256,bytes32)",
      "name": "IssueLPTokensForFloat",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountOfFloat",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountOfLP",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "currentPriceLP",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "depositFees",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "txid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RewardsCollection(address,uint256,uint256,uint256)",
      "name": "RewardsCollection",
      "description": "",
      "parameterDecorators": [
        {
          "name": "feesToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "rewards",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountLPTokensForNode",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "currentPriceLP",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Swap(address,address,uint256)",
      "name": "Swap",
      "description": "Events.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BTCT_ADDR()",
      "name": "BTCT_ADDR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "churn(address,bytes32[],bool[],uint8,uint8,uint8,uint8)",
      "name": "churn",
      "description": "churn transfers contract ownership and set variables of the next TSS validator set.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "The address of new Owner.",
          "recommendedTypes": []
        },
        {
          "name": "_rewardAddressAndAmounts",
          "description": "The reward addresses and amounts.",
          "recommendedTypes": []
        },
        {
          "name": "_isRemoved",
          "description": "The flags to remove node.",
          "recommendedTypes": []
        },
        {
          "name": "_churnedInCount",
          "description": "The number of next party size of TSS group.",
          "recommendedTypes": []
        },
        {
          "name": "_tssThreshold",
          "description": "The number of next threshold.",
          "recommendedTypes": []
        },
        {
          "name": "_nodeRewardsRatio",
          "description": "The number of rewards ratio for node owners.",
          "recommendedTypes": []
        },
        {
          "name": "_withdrawalFeeBPS",
          "description": "The amount of wthdrawal fees.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "churnedInCount()",
      "name": "churnedInCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collectSwapFeesForBTC(address,uint256,uint256,uint256)",
      "name": "collectSwapFeesForBTC",
      "description": "collectSwapFeesForBTC collects fees in the case of swap BTCT to BTC.",
      "parameterDecorators": [
        {
          "name": "_destToken",
          "description": "The address of target token.",
          "recommendedTypes": []
        },
        {
          "name": "_incomingAmount",
          "description": "The spent amount. (BTCT).",
          "recommendedTypes": []
        },
        {
          "name": "_minerFee",
          "description": "The miner fees of BTC transaction.",
          "recommendedTypes": []
        },
        {
          "name": "_rewardsAmount",
          "description": "The fees that should be paid.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositFeesBPS()",
      "name": "depositFeesBPS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "distributeNodeRewards()",
      "name": "distributeNodeRewards",
      "description": "distributeNodeRewards sends rewards for Nodes.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "feesLPTokensForNode()",
      "name": "feesLPTokensForNode",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getActiveNodes()",
      "name": "getActiveNodes",
      "description": "getActiveNodes returns active nodes list (stakes and amount).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentPriceLP()",
      "name": "getCurrentPriceLP",
      "description": "getCurrentPriceLP returns the current exchange rate of LP token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "nowPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDepositFeeRate(address,uint256)",
      "name": "getDepositFeeRate",
      "description": "getDepositFeeRate returns deposit fees rate.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The address of target token.",
          "recommendedTypes": []
        },
        {
          "name": "_amountOfFloat",
          "description": "The amount of float.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "depositFeeRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFloatReserve(address,address)",
      "name": "getFloatReserve",
      "description": "getFloatReserve returns float reserves.",
      "parameterDecorators": [
        {
          "name": "_tokenA",
          "description": "The address of target tokenA.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenB",
          "description": "The address of target tokenB.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "reserveA",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "reserveB",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialExchangeRate()",
      "name": "initialExchangeRate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isTxUsed(bytes32)",
      "name": "isTxUsed",
      "description": "isTxUsed sends rewards for Nodes.",
      "parameterDecorators": [
        {
          "name": "_txid",
          "description": "The txid which is for recording.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lockedLPTokensForNode()",
      "name": "lockedLPTokensForNode",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lpToken()",
      "name": "lpToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "multiTransferERC20TightlyPacked(address,bytes32[],uint256,uint256,bytes32[])",
      "name": "multiTransferERC20TightlyPacked",
      "description": "multiTransferERC20TightlyPacked sends tokens from contract.",
      "parameterDecorators": [
        {
          "name": "_destToken",
          "description": "The address of target token.",
          "recommendedTypes": []
        },
        {
          "name": "_addressesAndAmounts",
          "description": "The address of recipient and amount.",
          "recommendedTypes": []
        },
        {
          "name": "_totalSwapped",
          "description": "The amount of swap.",
          "recommendedTypes": []
        },
        {
          "name": "_rewardsAmount",
          "description": "The fees that should be paid.",
          "recommendedTypes": []
        },
        {
          "name": "_redeemedFloatTxIds",
          "description": "The txids which is for recording.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "nodeRewardsRatio()",
      "name": "nodeRewardsRatio",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "recordIncomingFloat(address,bytes32,bool,bytes32)",
      "name": "recordIncomingFloat",
      "description": "recordIncomingFloat mints LP token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The address of target token.",
          "recommendedTypes": []
        },
        {
          "name": "_addressesAndAmountOfFloat",
          "description": "The address of recipient and amount.",
          "recommendedTypes": []
        },
        {
          "name": "_zerofee",
          "description": "The flag to accept zero fees.",
          "recommendedTypes": []
        },
        {
          "name": "_txid",
          "description": "The txids which is for recording.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "recordOutcomingFloat(address,bytes32,uint256,bytes32)",
      "name": "recordOutcomingFloat",
      "description": "recordOutcomingFloat burns LP token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The address of target token.",
          "recommendedTypes": []
        },
        {
          "name": "_addressesAndAmountOfLPtoken",
          "description": "The address of recipient and amount.",
          "recommendedTypes": []
        },
        {
          "name": "_minerFee",
          "description": "The miner fees of BTC transaction.",
          "recommendedTypes": []
        },
        {
          "name": "_txid",
          "description": "The txid which is for recording.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "recordUTXOSweepMinerFee(uint256,bytes32)",
      "name": "recordUTXOSweepMinerFee",
      "description": "recordUTXOSweepMinerFee reduces float amount by collected miner fees.",
      "parameterDecorators": [
        {
          "name": "_minerFee",
          "description": "The miner fees of BTC transaction.",
          "recommendedTypes": []
        },
        {
          "name": "_txid",
          "description": "The txid which is for recording.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "singleTransferERC20(address,address,uint256,uint256,uint256,bytes32[])",
      "name": "singleTransferERC20",
      "description": "singleTransferERC20 sends tokens from contract.",
      "parameterDecorators": [
        {
          "name": "_destToken",
          "description": "The address of target token.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "The address of recipient.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "The amount of tokens.",
          "recommendedTypes": []
        },
        {
          "name": "_totalSwapped",
          "description": "The amount of swap.",
          "recommendedTypes": []
        },
        {
          "name": "_rewardsAmount",
          "description": "The fees that should be paid.",
          "recommendedTypes": []
        },
        {
          "name": "_redeemedFloatTxIds",
          "description": "The txids which is for recording.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tssThreshold()",
      "name": "tssThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "whitelist(address)",
      "name": "whitelist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawalFeeBPS()",
      "name": "withdrawalFeeBPS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}