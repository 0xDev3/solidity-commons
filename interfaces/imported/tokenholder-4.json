{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "staking"
  ],
  "name": "TokenHolder",
  "description": "This contract provides a safety mechanism for allowing the owner to send tokens that were sent to the contract by mistake back to the sender. We consider every contract to be a 'token holder' since it's currently not possible for a contract to deny receiving tokens. Note that we use the non standard ERC-20 interface which has no return value for transfer in order to support both non standard as well as standard token contracts. see https://github.com/ethereum/solidity/issues/4116.",
  "eventDecorators": [
    {
      "signature": "OwnerUpdate(address,address)",
      "name": "OwnerUpdate",
      "description": "deprecated, backward compatibility, use `ConverterAnchorRemoved`.",
      "parameterDecorators": [
        {
          "name": "_prevOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptOwnership()",
      "name": "acceptOwnership",
      "description": "used by a new owner to accept an ownership transfer.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "newOwner()",
      "name": "newOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "new contract owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawTokens(address,address,uint256)",
      "name": "withdrawTokens",
      "description": "withdraws tokens held by the contract and sends them to an account can only be called by the owner.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "ERC20 token contract address.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "account to receive the new amount.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}