{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "staking",
    "strategies",
    "aave"
  ],
  "name": "StakedTokenTransferStrategy",
  "description": "StakedTokenTransferStrategy. Transfer strategy that stakes the rewards into a staking contract and transfers the staking contract token. The underlying token must be transferred to this contract to be able to stake it on demand.",
  "eventDecorators": [
    {
      "signature": "EmergencyWithdrawal(address,address,address,uint256)",
      "name": "EmergencyWithdrawal",
      "description": "event when an ERC1155 contract is created.",
      "parameterDecorators": [
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "dropApproval()",
      "name": "dropApproval",
      "description": "Drop approval of AAVE to the Staked Aave contract in case of emergency.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyWithdrawal(address,address,uint256)",
      "name": "emergencyWithdrawal",
      "description": "Perform an emergency token withdrawal only callable by the Rewards admin.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of the token to withdraw funds from this contract.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address of the recipient of the withdrawal.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of the withdrawal.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getIncentivesController()",
      "name": "getIncentivesController",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns the address of the Incentives Controller.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRewardsAdmin()",
      "name": "getRewardsAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns the address of the Rewards admin.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStakeContract()",
      "name": "getStakeContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Staked Token contract address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUnderlyingToken()",
      "name": "getUnderlyingToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Underlying token address from the stake contract.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "performTransfer(address,address,uint256)",
      "name": "performTransfer",
      "description": "Perform custom transfer logic via delegate call from source contract to a TransferStrategy implementation.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "Account to transfer rewards.",
          "recommendedTypes": []
        },
        {
          "name": "reward",
          "description": "Address of the reward token.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount to transfer to the \"to\" address parameter.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns true bool if transfer logic succeeds.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renewApproval()",
      "name": "renewApproval",
      "description": "Perform a MAX_UINT approval of AAVE to the Staked Aave contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}