{
  "schema": "../schema.json",
  "tags": [],
  "name": "GenericScheme",
  "description": "GenericScheme. A scheme for proposing and executing calls to an arbitrary function on a specific contract on behalf of the organization avatar.",
  "eventDecorators": [
    {
      "signature": "NewCallProposal(address,bytes32,bytes,uint256,string)",
      "name": "NewCallProposal",
      "description": "An event that's emitted when a user's staked balance decreases.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_callData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_descriptionHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalDeleted(address,bytes32)",
      "name": "ProposalDeleted",
      "description": "An event that's emitted when a user's staked balance decreases.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ProposalExecuted(address,bytes32,bytes)",
      "name": "ProposalExecuted",
      "description": "An event that's emitted when a user's staked balance decreases.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_genericCallReturnValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalExecutedByVotingMachine(address,bytes32,int256)",
      "name": "ProposalExecutedByVotingMachine",
      "description": "An event that's emitted when a user's staked balance decreases.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_param",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "avatar()",
      "name": "avatar",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOfStakingToken(address,bytes32)",
      "name": "balanceOfStakingToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "burnReputation(uint256,address,bytes32)",
      "name": "burnReputation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "contractToCall()",
      "name": "contractToCall",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "execute(bytes32)",
      "name": "execute",
      "description": "execution of proposals after it has been decided by the voting machine.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executeProposal(bytes32,int256)",
      "name": "executeProposal",
      "description": "execution of proposals, can only be called by the voting machine in which the vote is held.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_decision",
          "description": "a parameter of the voting result, 1 yes and 2 is no.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTotalReputationSupply(bytes32)",
      "name": "getTotalReputationSupply",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,bytes32,address)",
      "name": "initialize",
      "description": "initialize.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "the avatar to mint reputation from.",
          "recommendedTypes": []
        },
        {
          "name": "_votingMachine",
          "description": "the voting machines address to.",
          "recommendedTypes": []
        },
        {
          "name": "_voteParams",
          "description": "voting machine parameters.",
          "recommendedTypes": []
        },
        {
          "name": "_contractToCall",
          "description": "the target contract this scheme will call to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "mintReputation(uint256,address,bytes32)",
      "name": "mintReputation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "organizationProposals(bytes32)",
      "name": "organizationProposals",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "callData",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "exist",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "passed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalsInfo(address,bytes32)",
      "name": "proposalsInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "avatar",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposeCall(bytes,uint256,string)",
      "name": "proposeCall",
      "description": "propose to call on behalf of the _avatar The function trigger NewCallProposal event.",
      "parameterDecorators": [
        {
          "name": "_callData",
          "description": "- The abi encode data for the call.",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "value(ETH) to transfer with the call.",
          "recommendedTypes": []
        },
        {
          "name": "_descriptionHash",
          "description": "proposal description hash.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reputationOf(address,bytes32)",
      "name": "reputationOf",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakingTokenTransfer(address,address,uint256,bytes32)",
      "name": "stakingTokenTransfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "voteParams()",
      "name": "voteParams",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "votingMachine()",
      "name": "votingMachine",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}