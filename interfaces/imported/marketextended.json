{
  "schema": "../schema.json",
  "tags": [],
  "name": "MarketExtended",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdminChanged(address,address)",
      "name": "AdminChanged",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "previousAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BeaconUpgraded(address)",
      "name": "BeaconUpgraded",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "beacon",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ConfigChange(uint8,uint256,uint256)",
      "name": "ConfigChange",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "configChangeType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value1",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value2",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Initialized(uint8)",
      "name": "Initialized",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "version",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MintingPauseChange(bool)",
      "name": "MintingPauseChange",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "isPaused",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SeparateMarketLaunchedAndSeeded(uint32,address,address,address,address,int256)",
      "name": "SeparateMarketLaunchedAndSeeded",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "marketIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "oracleManager",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "liquidityManager",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "paymentToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "initialAssetPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TierAdded(tuple,uint256)",
      "name": "TierAdded",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "newTier",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "initialSeed",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Upgraded(address)",
      "name": "Upgraded",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "implementation",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ADMIN_ROLE()",
      "name": "ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "UPGRADER_ROLE()",
      "name": "UPGRADER_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addPoolToExistingMarket(tuple(string,string,uint8,address,uint96),uint256,address,uint32)",
      "name": "addPoolToExistingMarket",
      "description": "",
      "parameterDecorators": [
        {
          "name": "initPool",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "name",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "symbol",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "poolType",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "token",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "leverage",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "initialActualLiquidityForNewPool",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "seederAndAdmin",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_marketIndex",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMarketFundingRateMultiplier(uint256)",
      "name": "changeMarketFundingRateMultiplier",
      "description": "Update the yearly funding rate multiplier for the market. Can only be called by the current admin.",
      "parameterDecorators": [
        {
          "name": "_fundingRateMultiplier_e18",
          "description": "New funding rate multiplier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "gems()",
      "name": "gems",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMiaAddress(uint8,uint256)",
      "name": "getMiaAddress",
      "description": "Purely a convenience function to get the pool token token address. Used in testing.",
      "parameterDecorators": [
        {
          "name": "poolType",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getNumberOfPools(bool)",
      "name": "getNumberOfPools",
      "description": "Returns the number of pools of poolType i.e. Long or Short.",
      "parameterDecorators": [
        {
          "name": "isLong",
          "description": "true for long, false for short.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSeederAddress()",
      "name": "getSeederAddress",
      "description": "Purely a convenience function to get the seeder address. Used in testing.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_batchedAmountPaymentToken_deposit(uint8,uint256)",
      "name": "get_batchedAmountPaymentToken_deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "poolType",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_batchedAmountPoolToken_redeem(uint8,uint256)",
      "name": "get_batchedAmountPoolToken_redeem",
      "description": "",
      "parameterDecorators": [
        {
          "name": "poolType",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_effectiveLiquidityForPoolType()",
      "name": "get_effectiveLiquidityForPoolType",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128[2]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_even_batchedAmountPaymentToken_deposit(uint8,uint256)",
      "name": "get_even_batchedAmountPaymentToken_deposit",
      "description": "Returns batched deposit amount in payment token for even numbered epochs.",
      "parameterDecorators": [
        {
          "name": "poolType",
          "description": "indicates either Long or Short pool type.",
          "recommendedTypes": []
        },
        {
          "name": "pool",
          "description": "index of the pool on the market side.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_even_batchedAmountPoolToken_redeem(uint8,uint256)",
      "name": "get_even_batchedAmountPoolToken_redeem",
      "description": "Returns batched redeem amount in pool token token for even numbered epochs.",
      "parameterDecorators": [
        {
          "name": "poolType",
          "description": "indicates either Long or Short pool type.",
          "recommendedTypes": []
        },
        {
          "name": "pool",
          "description": "index of the pool on the market side.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_fundingRateMultiplier_e18()",
      "name": "get_fundingRateMultiplier_e18",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_marketDeprecated()",
      "name": "get_marketDeprecated",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_maxPercentChange()",
      "name": "get_maxPercentChange",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_mintingPaused()",
      "name": "get_mintingPaused",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_odd_batchedAmountPaymentToken_deposit(uint8,uint256)",
      "name": "get_odd_batchedAmountPaymentToken_deposit",
      "description": "Returns batched deposit amount in payment token for odd numbered epochs.",
      "parameterDecorators": [
        {
          "name": "poolType",
          "description": "indicates either Long or Short pool type.",
          "recommendedTypes": []
        },
        {
          "name": "pool",
          "description": "index of the pool on the market side.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_odd_batchedAmountPoolToken_redeem(uint8,uint256)",
      "name": "get_odd_batchedAmountPoolToken_redeem",
      "description": "Returns batched redeem amount in pool token token for odd numbered epochs.",
      "parameterDecorators": [
        {
          "name": "poolType",
          "description": "indicates either Long or Short pool type.",
          "recommendedTypes": []
        },
        {
          "name": "pool",
          "description": "index of the pool on the market side.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_total_value_realized_in_market()",
      "name": "get_total_value_realized_in_market",
      "description": "Returns the total liquidity in the market.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "totalValueRealizedInMarket",
          "description": "total liquidity in all pools on both sides.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)",
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initializePools(tuple(tuple[],uint256,address,uint32,address,address))",
      "name": "initializePools",
      "description": "",
      "parameterDecorators": [
        {
          "name": "params",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "initPools",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "initialEffectiveLiquidityToSeedEachPool",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "seederAndAdmin",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "_marketIndex",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "oracleManager",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liquidityManager",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "initializationSuccess",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pauseMinting()",
      "name": "pauseMinting",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paymentToken()",
      "name": "paymentToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proxiableUUID()",
      "name": "proxiableUUID",
      "description": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registry()",
      "name": "registry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)",
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)",
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unpauseMinting()",
      "name": "unpauseMinting",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateMarketOracle(address)",
      "name": "updateMarketOracle",
      "description": "Update oracle for a market. Can only be called by the current admin.",
      "parameterDecorators": [
        {
          "name": "_newOracleManager",
          "description": "Address of the replacement oracle manager.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeTo(address)",
      "name": "upgradeTo",
      "description": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.",
      "parameterDecorators": [
        {
          "name": "newImplementation",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "Upgraded(address)"
      ],
      "readOnly": false
    },
    {
      "signature": "upgradeToAndCall(address,bytes)",
      "name": "upgradeToAndCall",
      "description": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.",
      "parameterDecorators": [
        {
          "name": "newImplementation",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "Upgraded(address)"
      ],
      "readOnly": false
    }
  ]
}