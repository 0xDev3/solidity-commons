{"schema":"../schema.json","tags":[],"name":"RaiseFactory","description":"","eventDecorators":[{"signature":"NewProposal(address,bytes32)","name":"NewProposal","description":"Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"issuer","description":"","recommendedTypes":[],"indexed":true},{"name":"identifier","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OperatorsContractChanged(address,address)","name":"OperatorsContractChanged","description":"Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"caller","description":"","recommendedTypes":[],"indexed":true},{"name":"operatorsAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OperatorsContractPending(address,address)","name":"OperatorsContractPending","description":"Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"caller","description":"","recommendedTypes":[],"indexed":true},{"name":"operatorsAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ProposalAccepted(address,bytes32,address,address,address)","name":"ProposalAccepted","description":"Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"accruedReward","description":"User's accrued reward.","recommendedTypes":[],"indexed":true},{"name":"amount","description":"The amount of withdrawn tokens.","recommendedTypes":[],"indexed":true},{"name":"balance","description":"Current user balance.","recommendedTypes":[],"indexed":false},{"name":"lastDepositDuration","description":"Duration of the last deposit in seconds.","recommendedTypes":[],"indexed":false},{"name":"sender","description":"User address.","recommendedTypes":[],"indexed":false}]},{"signature":"ProposalDeclined(address,bytes32,address,uint256)","name":"ProposalDeclined","description":"Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"issuer","description":"","recommendedTypes":[],"indexed":true},{"name":"identifier","description":"","recommendedTypes":[],"indexed":true},{"name":"operator","description":"","recommendedTypes":[],"indexed":true},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RaiseOperatorsContractChanged(address,address)","name":"RaiseOperatorsContractChanged","description":"Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"caller","description":"","recommendedTypes":[],"indexed":true},{"name":"raiseOperatorsAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RaiseOperatorsContractPending(address,address)","name":"RaiseOperatorsContractPending","description":"Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"caller","description":"","recommendedTypes":[],"indexed":true},{"name":"raiseOperatorsAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UpdatedImplementation(address)","name":"UpdatedImplementation","description":"Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"implementation","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UpdatedProxyAdmin(address)","name":"UpdatedProxyAdmin","description":"Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"proxyAdmin","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"confirmOperatorsContract()","name":"confirmOperatorsContract","description":"The function should be called from new operators contract by admin to insure that operatorsPending address is the real contract address.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"confirmRaiseOperatorsContract()","name":"confirmRaiseOperatorsContract","description":"The function should be called from new operators contract by admin to insure that operatorsPending address is the real contract address.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"dchf()","name":"dchf","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getImplementationAndProxy(bytes32)","name":"getImplementationAndProxy","description":"","parameterDecorators":[{"name":"_identifier","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getIssuer(bytes32)","name":"getIssuer","description":"","parameterDecorators":[{"name":"_identifier","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getOperatorsContract()","name":"getOperatorsContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getOperatorsPending()","name":"getOperatorsPending","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRaiseOperatorsContract()","name":"getRaiseOperatorsContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRaiseOperatorsPending()","name":"getRaiseOperatorsPending","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getToken(bytes32)","name":"getToken","description":"","parameterDecorators":[{"name":"_identifier","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"implementation()","name":"implementation","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"implementationExists(bytes32)","name":"implementationExists","description":"","parameterDecorators":[{"name":"_identifier","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address,address,address)","name":"initialize","description":"Initialization instead of constructor, called once to initialize all the necessary values.","parameterDecorators":[{"name":"_dchf","description":"DCHF proxy contract address.","recommendedTypes":[]},{"name":"_baseOperators","description":"BaseOperators contract address.","recommendedTypes":[]},{"name":"_raiseOperators","description":"RaiseOperators contract address.","recommendedTypes":[]},{"name":"_proxyAdmin","description":"Default proxy admin address.","recommendedTypes":[]},{"name":"_implementation","description":"Raise implementation pointer address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialize(address,address)","name":"initialize","description":"Initialization instead of constructor, called once. The setOperatorsContract function can be called only by Admin role with confirmation through the operators contract.","parameterDecorators":[{"name":"_baseOperators","description":"BaseOperators contract address.","recommendedTypes":[]},{"name":"_raiseOperators","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialize(address)","name":"initialize","description":"Initialization instead of constructor, called once. The setOperatorsContract function can be called only by Admin role with confirmation through the operators contract.","parameterDecorators":[{"name":"_baseOperators","description":"BaseOperators contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isAdmin(address)","name":"isAdmin","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isAdminOrSystem(address)","name":"isAdminOrSystem","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isInitialized()","name":"isInitialized","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isInvestor(address)","name":"isInvestor","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isIssuer(address)","name":"isIssuer","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isMultisig(address)","name":"isMultisig","description":"","parameterDecorators":[{"name":"_contract","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isOperator(address)","name":"isOperator","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isOperatorOrSystem(address)","name":"isOperatorOrSystem","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isRelay(address)","name":"isRelay","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isSystem(address)","name":"isSystem","description":"","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"newRaiseProposal(bytes32)","name":"newRaiseProposal","description":"Called by issuer to propose new capital raise.","parameterDecorators":[{"name":"_identifier","description":"Unique identifier of raise.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"operatorProposal(bytes32,bool,uint256,uint256,uint256,uint256,uint256,uint256,address)","name":"operatorProposal","description":"Called by operator to accept a capital raise proposal with all of the necessary values for the raise.","parameterDecorators":[{"name":"_identifier","description":"Unique identifier of raise.","recommendedTypes":[]},{"name":"_accept","description":"Whether the operator has accepted.","recommendedTypes":[]},{"name":"_min","description":"Minimum amount required in DCHF for the capital raise.","recommendedTypes":[]},{"name":"_max","description":"Maximum amount required in DCHF for the capital raise.","recommendedTypes":[]},{"name":"_price","description":"DCHF price per share.","recommendedTypes":[]},{"name":"_subscription","description":"Minimum amount in DCHF that is required for a subscription.","recommendedTypes":[]},{"name":"_open","description":"Opening time in unix epoch time.","recommendedTypes":[]},{"name":"_close","description":"Closing time in unix epoch time.","recommendedTypes":[]},{"name":"_token","description":"Equity token associated to the capital raise.","recommendedTypes":[]}],"returnDecorators":[{"name":"proxy","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"proxyAdmin()","name":"proxyAdmin","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"raise(bytes32)","name":"raise","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"implementation","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"proxy","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"issuer","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"token","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setOperatorsContract(address)","name":"setOperatorsContract","description":"Set the new the address of Operators contract, should be confirmed from operators contract by calling confirmFor(addr) where addr is the address of current contract instance. This is done to prevent the case when the new contract address is broken and control of the contract can be lost in such case.","parameterDecorators":[{"name":"_baseOperators","description":"BaseOperators contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRaiseOperatorsContract(address)","name":"setRaiseOperatorsContract","description":"Set the new the address of Operators contract, should be confirmed from operators contract by calling confirmFor(addr) where addr is the address of current contract instance. This is done to prevent the case when the new contract address is roken and control of the contract can be lost in such case.","parameterDecorators":[{"name":"_raiseOperators","description":"RaiseOperators contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateImplementation(address)","name":"updateImplementation","description":"Update the raise implementation address used when deploying proxy contracts.","parameterDecorators":[{"name":"_implementation","description":"Address of the raise implementation contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateProxyAdmin(address)","name":"updateProxyAdmin","description":"Update the proxy admin address used when deploying proxy contracts.","parameterDecorators":[{"name":"_proxyAdmin","description":"Address of the default proxy admin address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}