{
  "schema": "../schema.json",
  "tags": [],
  "name": "RoyaltyEngineV1",
  "description": "Engine to lookup royalty configurations.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "_getRoyaltyAndSpec(address,uint256,uint256)",
      "name": "_getRoyaltyAndSpec",
      "description": "Get the royalty and royalty spec for a given token returns recipients array, amounts array, royalty spec, royalty address, whether or not to add to cache.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "recipients",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "amounts",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "spec",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int16"
        },
        {
          "name": "royaltyAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "addToCache",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCachedRoyaltySpec(address)",
      "name": "getCachedRoyaltySpec",
      "description": "View function to get the cached spec of a token.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoyalty(address,uint256,uint256)",
      "name": "getRoyalty",
      "description": "See {IRoyaltyEngineV1-getRoyalty}.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "recipients",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "amounts",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getRoyaltyView(address,uint256,uint256)",
      "name": "getRoyaltyView",
      "description": "See {IRoyaltyEngineV1-getRoyaltyView}.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "recipients",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "amounts",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "royaltyRegistry_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "invalidateCachedRoyaltySpec(address)",
      "name": "invalidateCachedRoyaltySpec",
      "description": "Invalidate the cached spec (useful for situations where tooken royalty implementation changes to a different spec).",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "royaltyRegistry()",
      "name": "royaltyRegistry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}