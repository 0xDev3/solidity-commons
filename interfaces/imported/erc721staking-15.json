{"schema":"../schema.json","tags":[],"name":"ERC721Staking","description":"","eventDecorators":[{"signature":"ContractURIUpdated(string,string)","name":"ContractURIUpdated","description":"Event fired when Catalog is created. Logged when the receiver changes.","parameterDecorators":[{"name":"prevURI","description":"","recommendedTypes":[],"indexed":false},{"name":"newURI","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"Event fired when Catalog is created. Logged when the receiver changes.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"Event fired when Catalog is created. Logged when the receiver changes.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"Event fired when Catalog is created. Logged when the receiver changes.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"NUMBER_ROLE()","name":"NUMBER_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"availableRewards(address)","name":"availableRewards","description":"","parameterDecorators":[{"name":"_staker","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"claimRewards()","name":"claimRewards","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"contractURI()","name":"contractURI","description":"Returns the contract metadata URI.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"deployer()","name":"deployer","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls the specified role. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\").","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getStakedTokens(address)","name":"getStakedTokens","description":"","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants a role to an account, if not previously granted. Caller must have admin role for the `role`. Emits {RoleGranted Event}.","parameterDecorators":[{"name":"role","description":"keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\").","recommendedTypes":[]},{"name":"account","description":"Address of the account to which the role is being granted.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Checks whether an account has a particular role. Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\").","recommendedTypes":[]},{"name":"account","description":"Address of the account for which the role is being checked.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"hasRoleWithSwitch(bytes32,address)","name":"hasRoleWithSwitch","description":"Checks whether an account has a particular role; role restrictions can be swtiched on and off. Returns `true` if `account` has been granted `role`. Role restrictions can be swtiched on and off: - If address(0) has ROLE, then the ROLE restrictions don't apply. - If address(0) does not have ROLE, then the ROLE restrictions will apply.","parameterDecorators":[{"name":"role","description":"keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\").","recommendedTypes":[]},{"name":"account","description":"Address of the account for which the role is being checked.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"nftCollection()","name":"nftCollection","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"number()","name":"number","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes role from the account. Caller must have the `role`, with caller being the same as `account`. Emits {RoleRevoked Event}.","parameterDecorators":[{"name":"role","description":"keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\").","recommendedTypes":[]},{"name":"account","description":"Address of the account from which the role is being revoked.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes role from an account. Caller must have admin role for the `role`. Emits {RoleRevoked Event}.","parameterDecorators":[{"name":"role","description":"keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\").","recommendedTypes":[]},{"name":"account","description":"Address of the account from which the role is being revoked.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardsToken()","name":"rewardsToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setContractURI(string)","name":"setContractURI","description":"Lets a contract admin set the URI for contract-level metadata. Caller should be authorized to setup contractURI, e.g. contract admin. See {_canSetContractURI}. Emits {ContractURIUpdated Event}.","parameterDecorators":[{"name":"_uri","description":"keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\").","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake(uint256)","name":"stake","description":"","parameterDecorators":[{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakerAddress(uint256)","name":"stakerAddress","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"stakers(address)","name":"stakers","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amountStaked","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"timeOfLastUpdate","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"unclaimedRewards","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256)","name":"withdraw","description":"","parameterDecorators":[{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}