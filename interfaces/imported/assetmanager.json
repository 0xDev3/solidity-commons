{
  "schema": "../schema.json",
  "tags": [],
  "name": "AssetManager",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AddAvailableCollateralAsset(address,address)",
      "name": "AddAvailableCollateralAsset",
      "description": "Swap gets emitted when an accounts exchanges tokens. Emitted when a NFT stops staking; either through standard means or by expulsion.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AddAvailableLoanAsset(address,address)",
      "name": "AddAvailableLoanAsset",
      "description": "Swap gets emitted when an accounts exchanges tokens. Emitted when a NFT stops staking; either through standard means or by expulsion.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Swap gets emitted when an accounts exchanges tokens. Emitted when a NFT stops staking; either through standard means or by expulsion.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RemoveAvailableCollateralAsset(address,address)",
      "name": "RemoveAvailableCollateralAsset",
      "description": "Swap gets emitted when an accounts exchanges tokens. Emitted when a NFT stops staking; either through standard means or by expulsion.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RemoveAvailableLoanAsset(address,address)",
      "name": "RemoveAvailableLoanAsset",
      "description": "Swap gets emitted when an accounts exchanges tokens. Emitted when a NFT stops staking; either through standard means or by expulsion.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetAutomaticLoanLimit(address,uint256,uint256)",
      "name": "SetAutomaticLoanLimit",
      "description": "Swap gets emitted when an accounts exchanges tokens. Emitted when a NFT stops staking; either through standard means or by expulsion.",
      "parameterDecorators": [
        {
          "name": "_setter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_oldLimit",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newLimit",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetConsumer(address,address)",
      "name": "SetConsumer",
      "description": "Swap gets emitted when an accounts exchanges tokens. Emitted when a NFT stops staking; either through standard means or by expulsion.",
      "parameterDecorators": [
        {
          "name": "_setter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_consumer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetLoanTwapOracle(address,address)",
      "name": "SetLoanTwapOracle",
      "description": "Swap gets emitted when an accounts exchanges tokens. Emitted when a NFT stops staking; either through standard means or by expulsion.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_twap",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetTwapOracle(address,address,address)",
      "name": "SetTwapOracle",
      "description": "Swap gets emitted when an accounts exchanges tokens. Emitted when a NFT stops staking; either through standard means or by expulsion.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_twap",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferAsset(address,address,address,uint256)",
      "name": "TransferAsset",
      "description": "Swap gets emitted when an accounts exchanges tokens. Emitted when a NFT stops staking; either through standard means or by expulsion.",
      "parameterDecorators": [
        {
          "name": "_requester",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawAsset(address,address,uint256)",
      "name": "WithdrawAsset",
      "description": "Swap gets emitted when an accounts exchanges tokens. Emitted when a NFT stops staking; either through standard means or by expulsion.",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "USDC()",
      "name": "USDC",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WETH()",
      "name": "WETH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addAvailableCollateralAsset(address)",
      "name": "addAvailableCollateralAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addAvailableLoanAsset(address)",
      "name": "addAvailableLoanAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "automaticLoanLimit()",
      "name": "automaticLoanLimit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collectInstallment(address,uint256,uint256,bool)",
      "name": "collectInstallment",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_currency",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_interest",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_collateral",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "consumer()",
      "name": "consumer",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAvailableCollateralAsset(address)",
      "name": "isAvailableCollateralAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAvailableLoanAsset(address)",
      "name": "isAvailableLoanAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isValidAutomaticLoan(address,uint256)",
      "name": "isValidAutomaticLoan",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amountIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAvailableCollateralAsset(address)",
      "name": "removeAvailableCollateralAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeAvailableLoanAsset(address)",
      "name": "removeAvailableLoanAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "requestETH(address,uint256)",
      "name": "requestETH",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "requestToken(address,address,uint256)",
      "name": "requestToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAutomaticLoanLimit(uint256)",
      "name": "setAutomaticLoanLimit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newLimit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setConsumer(address)",
      "name": "setConsumer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_consumer_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLoanAssetTwapOracle(address,address)",
      "name": "setLoanAssetTwapOracle",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_twap",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawAsset(address,address,uint256)",
      "name": "withdrawAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}