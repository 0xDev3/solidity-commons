{"schema":"../schema.json","tags":["tokens"],"name":"ClaimToken","description":"","eventDecorators":[{"signature":"LogTokensClaimed(address,uint256)","name":"LogTokensClaimed","description":"Event emitted when the `sender` unlocks `amount` of `token` lp-tokens.","parameterDecorators":[{"name":"whiteListedAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]},{"signature":"LogWhiteListedAddressAdded(address,uint256)","name":"LogWhiteListedAddressAdded","description":"Event emitted when the `sender` unlocks `amount` of `token` lp-tokens.","parameterDecorators":[{"name":"whiteListedAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"withdrawPercentage","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event emitted when the `sender` unlocks `amount` of `token` lp-tokens.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"WithdrawTokenCompleted(address,uint256)","name":"WithdrawTokenCompleted","description":"Event emitted when the `sender` unlocks `amount` of `token` lp-tokens.","parameterDecorators":[{"name":"whiteListedAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]},{"signature":"bulkClaimCompleted(uint256)","name":"bulkClaimCompleted","description":"Event emitted when the `sender` unlocks `amount` of `token` lp-tokens.","parameterDecorators":[{"name":"totalAmountDistributed","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addMultipleWhiteListedAddresses(address[],uint256[])","name":"addMultipleWhiteListedAddresses","description":"Function add multiple whiteListedAddresses to the vesting contract.","parameterDecorators":[{"name":"_whiteListedAddresses","description":"Array of whiteListedAddress addresses. The array length should be less than 230, otherwise it will overflow the gas limit.","recommendedTypes":[]},{"name":"_withdrawPercentages","description":"Corresponding percentages of the whiteListedAddresses.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addWhiteListedAddress(address,uint256)","name":"addWhiteListedAddress","description":"Function add whiteListedAddress to the contract.","parameterDecorators":[{"name":"_whiteListedAddress","description":"The address of the whiteListedAddress.","recommendedTypes":[]},{"name":"_withdrawPercentage","description":"The percentage that the whiteListedAddress should receive in each vesting period.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bulkClaimOnBehalf(address[])","name":"bulkClaimOnBehalf","description":"Function is to claim on behalf of group of customers.","parameterDecorators":[{"name":"_whiteListedAddresses","description":"The list of whiteListedAddress.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claim()","name":"claim","description":"Function that withdraws all available tokens for the current period.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimOnBehalf(address)","name":"claimOnBehalf","description":"Function is to claim on behalf of a customer.","parameterDecorators":[{"name":"_whiteListedAddress","description":"The address of the whiteListedAddress.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getClaimAmount(address)","name":"getClaimAmount","description":"Function that shows the remaining amount to claim.","parameterDecorators":[{"name":"_whiteListedAddress","description":"The address of the whiteListedAddress.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"maxPercentage()","name":"maxPercentage","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalPercentages()","name":"totalPercentages","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalWhiteListedAddresses()","name":"totalWhiteListedAddresses","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"whiteListedAddresses(address)","name":"whiteListedAddresses","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"withdrawnAmount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"withdrawPercentage","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"exists","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"notClaimed","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawToken(address,uint256)","name":"withdrawToken","description":"Function is to claim on behalf of group of customers.","parameterDecorators":[{"name":"_whiteListedAddress","description":"The address of the whiteListedAddress.","recommendedTypes":[]},{"name":"amount","description":"withdrawal amount.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}