{"schema":"../schema.json","tags":[],"name":"Staking","description":"The staking contract for Furucombo.","eventDecorators":[{"signature":"Approved(address,address,bool)","name":"Approved","description":"A DApp has been deauthorized by a user for a worker.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"purchaser","description":"who paid for the tokens.","recommendedTypes":[],"indexed":true},{"name":"value","description":"weis paid for purchase.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"A DApp has been deauthorized by a user for a worker.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"A DApp has been deauthorized by a user for a worker.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Staked(address,address,uint256)","name":"Staked","description":"A DApp has been deauthorized by a user for a worker.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"purchaser","description":"who paid for the tokens.","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"A DApp has been deauthorized by a user for a worker.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unstaked(address,address,uint256)","name":"Unstaked","description":"A DApp has been deauthorized by a user for a worker.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"purchaser","description":"who paid for the tokens.","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"balanceOf(address)","name":"balanceOf","description":"Check the staked balance of user.","parameterDecorators":[{"name":"user","description":"The user address.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"The staked balance.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"claimWeek(address,uint256,uint256,bytes32[])","name":"claimWeek","description":"The claiming function. The function call is forwarded to the redeem contract.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[]},{"name":"week","description":"","recommendedTypes":[]},{"name":"balance","description":"","recommendedTypes":[]},{"name":"merkleProof","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimWeeks(address,tuple(uint256,uint256,bytes32[])[])","name":"claimWeeks","description":"The claiming function. The function call is forwarded to the redeem contract.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[]},{"name":"claims","description":"","recommendedTypes":[],"parameters":[{"name":"week","description":"","type":"uint256"},{"name":"balance","description":"","type":"uint256"},{"name":"merkleProof","description":"","type":"bytes32[]"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isApproved(address,address)","name":"isApproved","description":"Verify if the agent is approved by user. Approval is required to perform `unstakeFor`.","parameterDecorators":[{"name":"user","description":"The user address.","recommendedTypes":[]},{"name":"agent","description":"The agent address to be verified.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"The pausing funciton. Can only be triggered by owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"redeemable()","name":"redeemable","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setApproval(address,bool)","name":"setApproval","description":"Set the approval for agent.","parameterDecorators":[{"name":"agent","description":"The agent to be approved/disapproved.","recommendedTypes":[]},{"name":"approval","description":"The approval.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake(uint256)","name":"stake","description":"The staking function.","parameterDecorators":[{"name":"amount","description":"The amount to be staked.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakeFor(address,uint256)","name":"stakeFor","description":"The delegate staking function.","parameterDecorators":[{"name":"onBehalfOf","description":"The address to be staked.","recommendedTypes":[]},{"name":"amount","description":"The amount to be staked.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakingToken()","name":"stakingToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpause()","name":"unpause","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unstake(uint256)","name":"unstake","description":"The unstaking function.","parameterDecorators":[{"name":"amount","description":"The amount to be unstaked.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unstakeFor(address,uint256)","name":"unstakeFor","description":"The delegate staking function. Approval is required. The unstaked balance will be transferred to the caller.","parameterDecorators":[{"name":"onBehalfOf","description":"The address to be unstaked.","recommendedTypes":[]},{"name":"amount","description":"The amount to be unstaked.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}