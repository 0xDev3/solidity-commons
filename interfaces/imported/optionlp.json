{
  "schema": "../schema.json",
  "tags": [],
  "name": "OptionLP",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AddressesSet(tuple)",
      "name": "AddressesSet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_addresses",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EmergencyWithdrawn(address)",
      "name": "EmergencyWithdrawn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LPDustCleared(address,uint256)",
      "name": "LPDustCleared",
      "description": "",
      "parameterDecorators": [
        {
          "name": "epochStrikeToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LPPositionFilled(address,uint256,uint256,uint256,address)",
      "name": "LPPositionFilled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "epochStrikeToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "premium",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "seller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "LPPositionKilled(address,uint256)",
      "name": "LPPositionKilled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "epochStrikeToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityForStrikeAdded(address,uint256)",
      "name": "LiquidityForStrikeAdded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "epochStrikeToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SsovExpiryUpdated(address,uint256)",
      "name": "SsovExpiryUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "ssov",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expiry",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SsovForTokenRegistered(address,bool,address)",
      "name": "SsovForTokenRegistered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isPut",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ssov",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SsovForTokenRemoved(address,bool,address)",
      "name": "SsovForTokenRemoved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isPut",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ssov",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addToLP(address,bool,uint256,uint256,uint256,address)",
      "name": "addToLP",
      "description": "Adds a new LP position for a token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Token address.",
          "recommendedTypes": []
        },
        {
          "name": "isPut",
          "description": "Is the LP for puts.",
          "recommendedTypes": []
        },
        {
          "name": "strikes",
          "description": "Strikes to purchase at.",
          "recommendedTypes": []
        },
        {
          "name": "liquidityPerStrike",
          "description": "Liquidity alloted per strike.",
          "recommendedTypes": []
        },
        {
          "name": "discountToMarket",
          "description": "Discount to market offered per strike in %.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address to send option tokens to if purchase succeeds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether new LP position was created.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addresses()",
      "name": "addresses",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "usd",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "emergencyWithdrawn(address[],bool)",
      "name": "emergencyWithdrawn",
      "description": "Transfers all funds to msg.sender. Can only be called by the owner.",
      "parameterDecorators": [
        {
          "name": "tokens",
          "description": "The list of erc20 tokens to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "transferNative",
          "description": "Whether should transfer the native currency.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fillLPPosition(address,uint256,uint256)",
      "name": "fillLPPosition",
      "description": "Fills an LP position with available liquidity.",
      "parameterDecorators": [
        {
          "name": "epochStrikeToken",
          "description": "epoch strike token address.",
          "recommendedTypes": []
        },
        {
          "name": "lpIndex",
          "description": "Index of LP position.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of options to buy from each LP position.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether LP positions were filled.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllLpPositions(address)",
      "name": "getAllLpPositions",
      "description": "",
      "parameterDecorators": [
        {
          "name": "strikeToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "lpId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "epoch",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "strike",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "liquidity",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "liquidityUsed",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "discount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "purchased",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "buyer",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "killed",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEpochTokens(address,uint256)",
      "name": "getEpochTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "epoch",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOptionTokenInfo(address)",
      "name": "getOptionTokenInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "ssov",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "strike",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tokenLiquidity",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSsov(address)",
      "name": "getSsov",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSsovEpoch(address)",
      "name": "getSsovEpoch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSsovEpochExpiries(address)",
      "name": "getSsovEpochExpiries",
      "description": "",
      "parameterDecorators": [
        {
          "name": "ssov",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSsovEpochStrikeToken(address,uint256,uint256)",
      "name": "getSsovEpochStrikeToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "epoch",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "strike",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSsovEpochStrikes(address,uint256)",
      "name": "getSsovEpochStrikes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "epoch",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "strikes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSsovExpiry(address)",
      "name": "getSsovExpiry",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSsovPremiumCalculation(address,uint256,uint256)",
      "name": "getSsovPremiumCalculation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "strike",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenVaultRegistry(address,bool)",
      "name": "getTokenVaultRegistry",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "isPut",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserLpPositions(address,address)",
      "name": "getUserLpPositions",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "epochStrikeToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "positions",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "lpId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "epoch",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "strike",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "liquidity",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "liquidityUsed",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "discount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "purchased",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "buyer",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "killed",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "killLPPosition(address,uint256)",
      "name": "killLPPosition",
      "description": "Kills multiple active LP positions.",
      "parameterDecorators": [
        {
          "name": "epochStrikeToken",
          "description": "epoch strike token address.",
          "recommendedTypes": []
        },
        {
          "name": "lpIndex",
          "description": "Index of LP position.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether LP positions were killed.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multiAddToLP(address,bool,uint256[],uint256[],uint256[],address)",
      "name": "multiAddToLP",
      "description": "Adds multiple new LP positions for a token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Token address.",
          "recommendedTypes": []
        },
        {
          "name": "isPut",
          "description": "Is the LP for puts.",
          "recommendedTypes": []
        },
        {
          "name": "strikes",
          "description": "Strikes to purchase at.",
          "recommendedTypes": []
        },
        {
          "name": "liquidityPerStrike",
          "description": "Liquidity alloted per strike.",
          "recommendedTypes": []
        },
        {
          "name": "discountToMarket",
          "description": "Discount to market offered per strike in %.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address to send option tokens to if purchase succeeds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether new LP position was created.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multiFillLPPosition(address,uint256[],uint256[])",
      "name": "multiFillLPPosition",
      "description": "Fills multiple LP positions with available liquidity.",
      "parameterDecorators": [
        {
          "name": "epochStrikeToken",
          "description": "epoch strike token address.",
          "recommendedTypes": []
        },
        {
          "name": "lpIndices",
          "description": "Index of LP position.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of options to buy from each LP position.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether LP positions were filled.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multiKillLPPosition(address,uint256[])",
      "name": "multiKillLPPosition",
      "description": "Kills multiple active LP positions.",
      "parameterDecorators": [
        {
          "name": "epochStrikeToken",
          "description": "epoch strike token address.",
          "recommendedTypes": []
        },
        {
          "name": "lpIndices",
          "description": "Index of LP position.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether LP positions were killed.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "Pauses the vault for emergency cases. Can only be called by the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registerSsovForToken(address,bool,address)",
      "name": "registerSsovForToken",
      "description": "Register the vault for token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Token address.",
          "recommendedTypes": []
        },
        {
          "name": "isPut",
          "description": "Is puts.",
          "recommendedTypes": []
        },
        {
          "name": "vault",
          "description": "SSOV address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether was registration successful.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAddresses(tuple(address))",
      "name": "setAddresses",
      "description": "Sets (adds) a list of addresses to the address list. Can only be called by the owner.",
      "parameterDecorators": [
        {
          "name": "_addresses",
          "description": "addresses of contracts in the Addresses struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "usd",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "Unpauses the vault. Can only be called by the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unregisterSsovForToken(address,bool)",
      "name": "unregisterSsovForToken",
      "description": "Unregister the vault for token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Token address.",
          "recommendedTypes": []
        },
        {
          "name": "isPut",
          "description": "Is puts.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether was registration successful.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateSsovEpoch(address)",
      "name": "updateSsovEpoch",
      "description": "Updates the list of epoch expiries.",
      "parameterDecorators": [
        {
          "name": "ssov",
          "description": "addresses of ssov.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}