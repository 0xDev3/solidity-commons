{"schema":"../schema.json","tags":[],"name":"TimeBasedSwitch","description":"","eventDecorators":[{"signature":"EtherReceived(address,uint256)","name":"EtherReceived","description":"","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SwitchCreated(uint256)","name":"SwitchCreated","description":"","parameterDecorators":[{"name":"unlockTimestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SwitchTerminated(address)","name":"SwitchTerminated","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SwitchTriggered(address)","name":"SwitchTriggered","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SwitchUpdated(bytes32)","name":"SwitchUpdated","description":"","parameterDecorators":[{"name":"message","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"createSwitch(bytes32,uint256,uint256,address,address)","name":"createSwitch","description":"Function that creates a switch struct and stores it to users map object. This function works if the switch for this account doesn't exist, is not valid, if the amount is not correct or if time parameter is less then minimum of 1 day.","parameterDecorators":[{"name":"_switchName","description":"Human-readable name of the switch.","recommendedTypes":[]},{"name":"_time","description":"The time parameter sets the number of blocks for the lock expiration in seconds.","recommendedTypes":[]},{"name":"_amount","description":"The amount to lock.","recommendedTypes":[]},{"name":"_executor","description":"The executor of the switch.","recommendedTypes":[]},{"name":"_benefitor","description":"The benefitor of the switch No return, reverts on error.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getSwitchInfo(address)","name":"getSwitchInfo","description":"Function that returns Switch struct of given _switchOwner address. This function is allowed only for executors, befitors or switch creator.","parameterDecorators":[{"name":"_switchOwner","description":"The account mapped to the switch.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param5","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"lockCollectible(address,uint256)","name":"lockCollectible","description":"Function to lock erc721 token into switch.","parameterDecorators":[{"name":"_tokenAddress","description":"- Address of erc721 token.","recommendedTypes":[]},{"name":"_tokenId","description":"- Id of token to lock No return, reverts on error.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lockToken(address,uint256)","name":"lockToken","description":"Function to lock erc20 token into switch.","parameterDecorators":[{"name":"_tokenAddress","description":"- Address of erc20 token.","recommendedTypes":[]},{"name":"_amount","description":"- Amount of token to lock No return, reverts on error.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"onERC721Received(address,address,uint256,bytes)","name":"onERC721Received","description":"the ERC721 contract address is always the message sender. Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.","parameterDecorators":[{"name":"operator","description":"","recommendedTypes":[]},{"name":"from","description":"","recommendedTypes":[]},{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"terminateSwitchEarly()","name":"terminateSwitchEarly","description":"Function that tries to terminate switch before the unlock block. This function is allowed only for switch creator. Funds are returned to the owner before destroying switch No return, reverts on error.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tryExecuteSwitch(address)","name":"tryExecuteSwitch","description":"Function that if triggered after lock expires executes the switch. This function allows only executors or the switch creator to access it.","parameterDecorators":[{"name":"account","description":"The account mapped to the switch No return, reverts on error.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateSwitchAmount()","name":"updateSwitchAmount","description":"Function that tries to update switch locked amount. This function is allowed only for switch creator. Funds are only added on top and can't be deduced from original amount. No return, reverts on error.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateSwitchBenefitor(address)","name":"updateSwitchBenefitor","description":"Function that tries to update switch benefitors address. This function is allowed only for switch owner.","parameterDecorators":[{"name":"_benefitor","description":"New benefitor address No return, reverts on error.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateSwitchExecutor(address)","name":"updateSwitchExecutor","description":"Function that tries to update switch executors address. This function is allowed only for switch owner.","parameterDecorators":[{"name":"_executor","description":"New executor address No return, reverts on error.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateSwitchUnlockTime(uint256)","name":"updateSwitchUnlockTime","description":"Function that directly sets unlockTimestamp parameter as new unlock time. This function is allowed only for switch owner and it requires time parameter to be minimum 1 day.","parameterDecorators":[{"name":"_unlockTimestamp","description":"New unlock time No return, reverts on error.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}