{"schema":"../schema.json","tags":[],"name":"AggregatorFacade","description":"A facade forAggregator versions to conform to the new v0.6 Aggregator V3 interface.","eventDecorators":[{"signature":"AnswerUpdated(int256,uint256,uint256)","name":"AnswerUpdated","description":"deprecated, backward compatibility, use `ConverterAnchorRemoved`.","parameterDecorators":[{"name":"current","description":"","recommendedTypes":[],"indexed":true},{"name":"roundId","description":"","recommendedTypes":[],"indexed":true},{"name":"updatedAt","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewRound(uint256,address,uint256)","name":"NewRound","description":"deprecated, backward compatibility, use `ConverterAnchorRemoved`.","parameterDecorators":[{"name":"roundId","description":"","recommendedTypes":[],"indexed":true},{"name":"startedBy","description":"","recommendedTypes":[],"indexed":true},{"name":"startedAt","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"aggregator()","name":"aggregator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"decimals()","name":"decimals","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"description()","name":"description","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"getAnswer(uint256)","name":"getAnswer","description":"get past rounds answers. #[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.","parameterDecorators":[{"name":"_roundId","description":"the answer number to retrieve the answer for.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoundData(uint80)","name":"getRoundData","description":"get data about a round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt value. Note that for rounds that haven't yet received responses from all oracles, answer and updatedAt may change between queries.","parameterDecorators":[{"name":"_roundId","description":"the round ID to retrieve the round data for.","recommendedTypes":[]}],"returnDecorators":[{"name":"roundId","description":"is the round ID for which data was retrieved.","recommendedTypes":[],"solidityType":"uint80"},{"name":"answer","description":"is the answer for the given round.","recommendedTypes":[],"solidityType":"int256"},{"name":"startedAt","description":"is always equal to updatedAt because the underlying Aggregator contract does not expose this information.","recommendedTypes":[],"solidityType":"uint256"},{"name":"updatedAt","description":"is the timestamp when the round last was updated (i.e. answer was last computed).","recommendedTypes":[],"solidityType":"uint256"},{"name":"answeredInRound","description":"is always equal to roundId because the underlying Aggregator contract does not expose this information.","recommendedTypes":[],"solidityType":"uint80"}],"emittableEvents":[],"readOnly":true},{"signature":"getTimestamp(uint256)","name":"getTimestamp","description":"get block timestamp when an answer was last updated. #[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.","parameterDecorators":[{"name":"_roundId","description":"the answer number to retrieve the updated timestamp for.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"latestAnswer()","name":"latestAnswer","description":"Reads the current answer from aggregator delegated to. #[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"latestRound()","name":"latestRound","description":"get the latest completed round where the answer was updated. #[deprecated]. Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"latestRoundData()","name":"latestRoundData","description":"get data about the latest round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt value. Note that for rounds that haven't yet received responses from all oracles, answer and updatedAt may change between queries.","parameterDecorators":[],"returnDecorators":[{"name":"roundId","description":"is the round ID for which data was retrieved.","recommendedTypes":[],"solidityType":"uint80"},{"name":"answer","description":"is the answer for the given round.","recommendedTypes":[],"solidityType":"int256"},{"name":"startedAt","description":"is always equal to updatedAt because the underlying Aggregator contract does not expose this information.","recommendedTypes":[],"solidityType":"uint256"},{"name":"updatedAt","description":"is the timestamp when the round last was updated (i.e. answer was last computed).","recommendedTypes":[],"solidityType":"uint256"},{"name":"answeredInRound","description":"is always equal to roundId because the underlying Aggregator contract does not expose this information.","recommendedTypes":[],"solidityType":"uint80"}],"emittableEvents":[],"readOnly":true},{"signature":"latestTimestamp()","name":"latestTimestamp","description":"Reads the last updated height from aggregator delegated to. #[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"version()","name":"version","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}