{"schema":"../schema.json","tags":["tokens","swaps"],"name":"MetaSwapDeposit","description":"MetaSwapDeposit.","eventDecorators":[],"functionDecorators":[{"signature":"addLiquidity(uint256[],uint256,uint256)","name":"addLiquidity","description":"Add liquidity to the pool with the given amounts of tokens.","parameterDecorators":[{"name":"amounts","description":"the amounts of each token to add, in their native precision.","recommendedTypes":[]},{"name":"minToMint","description":"the minimum LP tokens adding this amount of liquidity should mint, otherwise revert. Handy for front-running mitigation.","recommendedTypes":[]},{"name":"deadline","description":"latest timestamp to accept this transaction.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"amount of LP token user minted and received.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"baseSwap()","name":"baseSwap","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"baseTokens(uint256)","name":"baseTokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateRemoveLiquidity(uint256)","name":"calculateRemoveLiquidity","description":"A simple method to calculate amount of each underlying tokens that is returned upon burning given amount of LP tokens.","parameterDecorators":[{"name":"amount","description":"the amount of LP tokens that would be burned on withdrawal.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"array of token balances that the user will receive.","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateRemoveLiquidityOneToken(uint256,uint8)","name":"calculateRemoveLiquidityOneToken","description":"Calculate the amount of underlying token available to withdraw when withdrawing via only single token.","parameterDecorators":[{"name":"tokenAmount","description":"the amount of LP token to burn.","recommendedTypes":[]},{"name":"tokenIndex","description":"index of which token will be withdrawn.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"availableTokenAmount calculated amount of underlying token available to withdraw.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateSwap(uint8,uint8,uint256)","name":"calculateSwap","description":"Calculate amount of tokens you receive on swap.","parameterDecorators":[{"name":"tokenIndexFrom","description":"the token the user wants to sell.","recommendedTypes":[]},{"name":"tokenIndexTo","description":"the token the user wants to buy.","recommendedTypes":[]},{"name":"dx","description":"the amount of tokens the user wants to sell. If the token charges a fee on transfers, use the amount that gets transferred after the fee.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"amount of tokens the user will receive.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateTokenAmount(uint256[],bool)","name":"calculateTokenAmount","description":"A simple method to calculate prices from deposits or withdrawals, excluding fees but including slippage. This is helpful as an input into the various \"min\" parameters on calls to fight front-running. When withdrawing from the base pool in imbalanced fashion, the recommended slippage setting is 0.2% or higher. This shouldn't be used outside frontends for user estimates.","parameterDecorators":[{"name":"amounts","description":"an array of token amounts to deposit or withdrawal, corresponding to pooledTokens. The amount should be in each pooled token's native precision. If a token charges a fee on transfers, use the amount that gets transferred after the fee.","recommendedTypes":[]},{"name":"deposit","description":"whether this is a deposit or a withdrawal.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"token amount the user will receive.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getToken(uint8)","name":"getToken","description":"Returns the address of the pooled token at given index. Reverts if tokenIndex is out of range. This is a flattened representation of the pooled tokens.","parameterDecorators":[{"name":"index","description":"the index of the token.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"address of the token at given index.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address)","name":"initialize","description":"Sets the address for the base Swap contract, MetaSwap contract, and the MetaSwap LP token contract.","parameterDecorators":[{"name":"_baseSwap","description":"the address of the base Swap contract.","recommendedTypes":[]},{"name":"_metaSwap","description":"the address of the MetaSwap contract.","recommendedTypes":[]},{"name":"_metaLPToken","description":"the address of the MetaSwap LP token contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"metaLPToken()","name":"metaLPToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"metaSwap()","name":"metaSwap","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"metaTokens(uint256)","name":"metaTokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeLiquidity(uint256,uint256[],uint256)","name":"removeLiquidity","description":"Burn LP tokens to remove liquidity from the pool. Withdraw fee that decays linearly over period of 4 weeks since last deposit will apply. Liquidity can always be removed, even when the pool is paused.","parameterDecorators":[{"name":"amount","description":"the amount of LP tokens to burn.","recommendedTypes":[]},{"name":"minAmounts","description":"the minimum amounts of each token in the pool acceptable for this burn. Useful as a front-running mitigation.","recommendedTypes":[]},{"name":"deadline","description":"latest timestamp to accept this transaction.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"amounts of tokens user received.","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":false},{"signature":"removeLiquidityImbalance(uint256[],uint256,uint256)","name":"removeLiquidityImbalance","description":"Remove liquidity from the pool, weighted differently than the pool's current balances. Withdraw fee that decays linearly over period of 4 weeks since last deposit will apply.","parameterDecorators":[{"name":"amounts","description":"how much of each token to withdraw.","recommendedTypes":[]},{"name":"maxBurnAmount","description":"the max LP token provider is willing to pay to remove liquidity. Useful as a front-running mitigation.","recommendedTypes":[]},{"name":"deadline","description":"latest timestamp to accept this transaction.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"amount of LP tokens burned.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"removeLiquidityOneToken(uint256,uint8,uint256,uint256)","name":"removeLiquidityOneToken","description":"Remove liquidity from the pool all in one token. Withdraw fee that decays linearly over period of 4 weeks since last deposit will apply.","parameterDecorators":[{"name":"tokenAmount","description":"the amount of the token you want to receive.","recommendedTypes":[]},{"name":"tokenIndex","description":"the index of the token you want to receive.","recommendedTypes":[]},{"name":"minAmount","description":"the minimum amount to withdraw, otherwise revert.","recommendedTypes":[]},{"name":"deadline","description":"latest timestamp to accept this transaction.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"amount of chosen token user received.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"swap(uint8,uint8,uint256,uint256,uint256)","name":"swap","description":"Swap two underlying tokens using the meta pool and the base pool.","parameterDecorators":[{"name":"tokenIndexFrom","description":"the token the user wants to swap from.","recommendedTypes":[]},{"name":"tokenIndexTo","description":"the token the user wants to swap to.","recommendedTypes":[]},{"name":"dx","description":"the amount of tokens the user wants to swap from.","recommendedTypes":[]},{"name":"minDy","description":"the min amount the user would like to receive, or revert.","recommendedTypes":[]},{"name":"deadline","description":"latest timestamp to accept this transaction.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"tokens(uint256)","name":"tokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}