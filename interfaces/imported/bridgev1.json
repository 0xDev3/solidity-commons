{
  "schema": "../schema.json",
  "tags": [
    "bridges"
  ],
  "name": "BridgeV1",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Deposit(address,uint256,uint256,uint256,uint256,address,string,string)",
      "name": "Deposit",
      "description": "To call when there is consensus on final result. Token transfer event.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "is Token sender address, which is the standard Ethereum network account address.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "is Number of token transfers.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "networkid",
          "description": "network.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "nonce",
          "description": "is accout nonce.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "blockNumber",
          "description": "is Block number of the current event.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fromAsset",
          "description": "is The standard erc20 address that needs to be transferred out is transferred from Ethereum network to dfinity network.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "toAsset",
          "description": "is Dfinity network target Token address.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "to",
          "description": "is The token needs to be transferred to the wallet account of dfinity network.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "EthAddress()",
      "name": "EthAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "account(address)",
      "name": "account",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "accountLockout(address)",
      "name": "accountLockout",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "accountNonce(address)",
      "name": "accountNonce",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addAsset(uint256,address,tuple(string,string,uint256,bool))",
      "name": "addAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "networkid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "erc20",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "token",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "symbol",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "decimal",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "exist",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addNetWork(uint256)",
      "name": "addNetWork",
      "description": "",
      "parameterDecorators": [
        {
          "name": "networkid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "assetPipeline(address,uint256)",
      "name": "assetPipeline",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "symbol",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "decimal",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "exist",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "committee(address)",
      "name": "committee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "isMember",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "committeeNum()",
      "name": "committeeNum",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "denominator()",
      "name": "denominator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "depositErc20Token(address,uint256,uint256,string)",
      "name": "depositErc20Token",
      "description": "Transfer the standard erc20 token on Ethereum to the dfinity network.",
      "parameterDecorators": [
        {
          "name": "_erc20token",
          "description": "is Erc20 token address to be transferred.",
          "recommendedTypes": []
        },
        {
          "name": "networkid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "is Number of erc20 tokens to be transferred.",
          "recommendedTypes": []
        },
        {
          "name": "wallet",
          "description": "is the destination wallet address of the other network.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositEth(uint256,string)",
      "name": "depositEth",
      "description": "Transfer etheum main network token eth, which will flow from etheum to dfinity network through bridge network.",
      "parameterDecorators": [
        {
          "name": "networkid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "wallet",
          "description": "is the destination wallet address of the other network.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAccountNonce(address)",
      "name": "getAccountNonce",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFee(uint256)",
      "name": "getFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "molecule()",
      "name": "molecule",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "network(uint256)",
      "name": "network",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniswapPair(address)",
      "name": "uniswapPair",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniswapTokens(address)",
      "name": "uniswapTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "token0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "token1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}