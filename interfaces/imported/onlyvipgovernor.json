{
  "schema": "../schema.json",
  "tags": [],
  "name": "OnlyVIPGovernor",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ProposalCanceled(uint256)",
      "name": "ProposalCanceled",
      "description": "Must be emitted in withdraw() function.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)",
      "name": "ProposalCreated",
      "description": "Must be emitted in withdraw() function.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "proposer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "targets",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "signatures",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "calldatas",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "startBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "description",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalExecuted(uint256)",
      "name": "ProposalExecuted",
      "description": "Must be emitted in withdraw() function.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalThresholdSet(uint256,uint256)",
      "name": "ProposalThresholdSet",
      "description": "Must be emitted in withdraw() function.",
      "parameterDecorators": [
        {
          "name": "oldProposalThreshold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newProposalThreshold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "QuorumNumeratorUpdated(uint256,uint256)",
      "name": "QuorumNumeratorUpdated",
      "description": "Must be emitted in withdraw() function.",
      "parameterDecorators": [
        {
          "name": "oldQuorumNumerator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newQuorumNumerator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VoteCast(address,uint256,uint8,uint256,string)",
      "name": "VoteCast",
      "description": "Must be emitted in withdraw() function.",
      "parameterDecorators": [
        {
          "name": "voter",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "support",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "weight",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "reason",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VotingDelaySet(uint256,uint256)",
      "name": "VotingDelaySet",
      "description": "Must be emitted in withdraw() function.",
      "parameterDecorators": [
        {
          "name": "oldVotingDelay",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newVotingDelay",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VotingPeriodSet(uint256,uint256)",
      "name": "VotingPeriodSet",
      "description": "Must be emitted in withdraw() function.",
      "parameterDecorators": [
        {
          "name": "oldVotingPeriod",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newVotingPeriod",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BALLOT_TYPEHASH()",
      "name": "BALLOT_TYPEHASH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "COUNTING_MODE()",
      "name": "COUNTING_MODE",
      "description": "See {IGovernor-COUNTING_MODE}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "castVote(uint256,uint8)",
      "name": "castVote",
      "description": "See {IGovernor-castVote}.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "support",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)",
      "name": "castVoteBySig",
      "description": "See {IGovernor-castVoteBySig}.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "support",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "castVoteWithReason(uint256,uint8,string)",
      "name": "castVoteWithReason",
      "description": "See {IGovernor-castVoteWithReason}.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "support",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "reason",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "execute(address[],uint256[],bytes[],bytes32)",
      "name": "execute",
      "description": "See {IGovernor-execute}.",
      "parameterDecorators": [
        {
          "name": "targets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldatas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "descriptionHash",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getVotes(address,uint256)",
      "name": "getVotes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasVoted(uint256,address)",
      "name": "hasVoted",
      "description": "See {IGovernor-hasVoted}.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hashProposal(address[],uint256[],bytes[],bytes32)",
      "name": "hashProposal",
      "description": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.",
      "parameterDecorators": [
        {
          "name": "targets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldatas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "descriptionHash",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [
        "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)"
      ],
      "readOnly": true
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "See {IGovernor-name}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalDeadline(uint256)",
      "name": "proposalDeadline",
      "description": "See {IGovernor-proposalDeadline}.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalSnapshot(uint256)",
      "name": "proposalSnapshot",
      "description": "See {IGovernor-proposalSnapshot}.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalThreshold()",
      "name": "proposalThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalVotes(uint256)",
      "name": "proposalVotes",
      "description": "Accessor to the internal vote counts.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "againstVotes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "forVotes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "abstainVotes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "propose(address[],uint256[],bytes[],string)",
      "name": "propose",
      "description": "See {IGovernor-propose}.",
      "parameterDecorators": [
        {
          "name": "targets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldatas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "description",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "quorum(uint256)",
      "name": "quorum",
      "description": "",
      "parameterDecorators": [
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "quorumDenominator()",
      "name": "quorumDenominator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "quorumNumerator()",
      "name": "quorumNumerator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setProposalThreshold(uint256)",
      "name": "setProposalThreshold",
      "description": "Update the proposal threshold. This operation can only be performed through a governance proposal. Emits a {ProposalThresholdSet} event.",
      "parameterDecorators": [
        {
          "name": "newProposalThreshold",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "ProposalThresholdSet(uint256,uint256)"
      ],
      "readOnly": false
    },
    {
      "signature": "setVotingDelay(uint256)",
      "name": "setVotingDelay",
      "description": "Update the voting delay. This operation can only be performed through a governance proposal. Emits a {VotingDelaySet} event.",
      "parameterDecorators": [
        {
          "name": "newVotingDelay",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "VotingDelaySet(uint256,uint256)"
      ],
      "readOnly": false
    },
    {
      "signature": "setVotingPeriod(uint256)",
      "name": "setVotingPeriod",
      "description": "Update the voting period. This operation can only be performed through a governance proposal. Emits a {VotingPeriodSet} event.",
      "parameterDecorators": [
        {
          "name": "newVotingPeriod",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "VotingPeriodSet(uint256,uint256)"
      ],
      "readOnly": false
    },
    {
      "signature": "state(uint256)",
      "name": "state",
      "description": "See {IGovernor-state}.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateQuorumNumerator(uint256)",
      "name": "updateQuorumNumerator",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newQuorumNumerator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "version()",
      "name": "version",
      "description": "See {IGovernor-version}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "votingDelay()",
      "name": "votingDelay",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "votingPeriod()",
      "name": "votingPeriod",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}