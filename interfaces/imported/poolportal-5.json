{"schema":"../schema.json","tags":[],"name":"PoolPortal","description":"","eventDecorators":[{"signature":"BuyPool(address,uint256,address)","name":"BuyPool","description":"An event emitted when dVIX is burned and removed of stake.","parameterDecorators":[{"name":"poolToken","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"trader","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"An event emitted when dVIX is burned and removed of stake.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SellPool(address,uint256,address)","name":"SellPool","description":"An event emitted when dVIX is burned and removed of stake.","parameterDecorators":[{"name":"poolToken","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"trader","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"bancorData()","name":"bancorData","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"buyPool(uint256,uint256,address,address[],uint256[],bytes32[],bytes)","name":"buyPool","description":"buy Bancor or Uniswap pool.","parameterDecorators":[{"name":"_amount","description":"amount of pool token.","recommendedTypes":[]},{"name":"_type","description":"pool type.","recommendedTypes":[]},{"name":"_poolToken","description":"pool token address (NOTE: for Bancor type 2 don't forget extract pool address from container).","recommendedTypes":[]},{"name":"_connectorsAddress","description":"address of pool connectors (NOTE: for Uniswap ETH should be pass in [0], ERC20 in [1]).","recommendedTypes":[]},{"name":"_connectorsAmount","description":"amount of pool connectors (NOTE: for Uniswap ETH amount should be pass in [0], ERC20 in [1]).","recommendedTypes":[]},{"name":"_additionalArgs","description":"bytes32 array for case if need pass some extra params, can be empty.","recommendedTypes":[]},{"name":"_additionalData","description":"for provide any additional data, if not used just set \"0x\", for Bancor _additionalData[0] should be converterVersion and _additionalData[1] should be converterType.","recommendedTypes":[]}],"returnDecorators":[{"name":"poolAmountReceive","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"connectorsSpended","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":false},{"signature":"getBacorConverterAddressByRelay(address,uint256)","name":"getBacorConverterAddressByRelay","description":"helper for get bancor converter by bancor relay addrses.","parameterDecorators":[{"name":"_relay","description":"address of bancor relay.","recommendedTypes":[]},{"name":"_poolType","description":"bancor pool type.","recommendedTypes":[]}],"returnDecorators":[{"name":"converter","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getBalancerConnectorsAmountByPoolAmount(uint256,address)","name":"getBalancerConnectorsAmountByPoolAmount","description":"helper for get amounts all Balancer connectors for input amount of pool for Balancer step 1 get all tokens step 2 get user amount from each token by a user pool share.","parameterDecorators":[{"name":"_amount","description":"pool amount.","recommendedTypes":[]},{"name":"_pool","description":"address of balancer pool.","recommendedTypes":[]}],"returnDecorators":[{"name":"tokens","description":"","recommendedTypes":[],"solidityType":"address[]"},{"name":"tokensAmount","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getBancorConnectorsAmountByRelayAmount(uint256,address,address)","name":"getBancorConnectorsAmountByRelayAmount","description":"helper for get value in pool for a certain connector address.","parameterDecorators":[{"name":"_amount","description":"relay amount.","recommendedTypes":[]},{"name":"_relay","description":"address of bancor relay.","recommendedTypes":[]},{"name":"_connector","description":"address of relay connector.","recommendedTypes":[]}],"returnDecorators":[{"name":"connectorAmount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getBancorConnectorsByRelay(address)","name":"getBancorConnectorsByRelay","description":"helper for get Bancor ERC20 connectors addresses for old Bancor version.","parameterDecorators":[{"name":"_relay","description":"address of bancor relay.","recommendedTypes":[]}],"returnDecorators":[{"name":"connectors","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getBancorRatio(address,address,uint256)","name":"getBancorRatio","description":"helper for get ratio between assets in bancor newtork.","parameterDecorators":[{"name":"_from","description":"token or relay address.","recommendedTypes":[]},{"name":"_to","description":"token or relay address.","recommendedTypes":[]},{"name":"_amount","description":"amount from.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getDataForBuyingPool(address,uint256,uint256)","name":"getDataForBuyingPool","description":"this function provide necessary data for buy a old BNT and UNI v1 pools by input amount.","parameterDecorators":[{"name":"_poolToken","description":"pool token address.","recommendedTypes":[]},{"name":"_type","description":"pool type.","recommendedTypes":[]},{"name":"_amount","description":"amount of pool token (NOTE: amount of ETH for Uniswap).","recommendedTypes":[]}],"returnDecorators":[{"name":"connectorsAddress","description":"","recommendedTypes":[],"solidityType":"address[]"},{"name":"connectorsAmount","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenByUniswapExchange(address)","name":"getTokenByUniswapExchange","description":"return ERC20 address from Uniswap exchange address.","parameterDecorators":[{"name":"_exchange","description":"address of uniswap exchane.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getUniswapConnectorsAmountByPoolAmount(uint256,address)","name":"getUniswapConnectorsAmountByPoolAmount","description":"helper for get amounts for both Uniswap connectors for input amount of pool.","parameterDecorators":[{"name":"_amount","description":"relay amount.","recommendedTypes":[]},{"name":"_exchange","description":"address of uniswap exchane.","recommendedTypes":[]}],"returnDecorators":[{"name":"ethAmount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"ercAmount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUniswapTokenAmountByETH(address,uint256)","name":"getUniswapTokenAmountByETH","description":"return token ration in ETH in Uniswap network.","parameterDecorators":[{"name":"_token","description":"address of ERC20 token.","recommendedTypes":[]},{"name":"_amount","description":"ETH amount.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUniswapV2ConnectorsAmountByPoolAmount(uint256,address)","name":"getUniswapV2ConnectorsAmountByPoolAmount","description":"helper for get amounts for both Uniswap connectors for input amount of pool for Uniswap version 2.","parameterDecorators":[{"name":"_amount","description":"pool amount.","recommendedTypes":[]},{"name":"_exchange","description":"address of uniswap exchane.","recommendedTypes":[]}],"returnDecorators":[{"name":"tokenAmountOne","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"tokenAmountTwo","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"tokenAddressOne","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"tokenAddressTwo","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"sellPool(uint256,uint256,address,bytes32[],bytes)","name":"sellPool","description":"sell Bancor or Uniswap pool.","parameterDecorators":[{"name":"_amount","description":"amount of pool token.","recommendedTypes":[]},{"name":"_type","description":"pool type.","recommendedTypes":[]},{"name":"_poolToken","description":"pool token address.","recommendedTypes":[]},{"name":"_additionalArgs","description":"bytes32 array for case if need pass some extra params, can be empty.","recommendedTypes":[]},{"name":"_additionalData","description":"for provide any additional data, if not used just set \"0x\".","recommendedTypes":[]}],"returnDecorators":[{"name":"connectorsAddress","description":"","recommendedTypes":[],"solidityType":"address[]"},{"name":"connectorsAmount","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":false},{"signature":"setNewGetBancorData(address)","name":"setNewGetBancorData","description":"","parameterDecorators":[{"name":"_bancorData","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tokensTypes()","name":"tokensTypes","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"uniswapFactoryV1()","name":"uniswapFactoryV1","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"uniswapV2Router()","name":"uniswapV2Router","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"version()","name":"version","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}