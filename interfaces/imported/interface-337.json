{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "STERegistryV1",
  "description": "Registry to keep track of registered tokens symbols and be able to deploy ERC1400 tokens from the STEFactory.",
  "eventDecorators": [
    {
      "signature": "ModulesDeployed(address[],bytes32[])",
      "name": "ModulesDeployed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_modules",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_names",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Pause(address)",
      "name": "Pause",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpause(address)",
      "name": "Unpause",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TickerRemoved(string,address)",
      "name": "TickerRemoved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_ticker",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_removedBy",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NewSecurityToken(string,string,address,address,uint256,address,bool,uint256)",
      "name": "NewSecurityToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_ticker",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_name",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_securityTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_addedAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_registrant",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_fromAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_protocolVersion",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RegisterTicker(address,string,uint256,bool)",
      "name": "RegisterTicker",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_ticker",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_registrationDate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_fromAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProtocolFactorySet(address,uint8,uint8,uint8)",
      "name": "ProtocolFactorySet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_STFactory",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_major",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_minor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_patch",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LatestVersionSet(uint8,uint8,uint8)",
      "name": "LatestVersionSet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProtocolFactoryRemoved(address,uint8,uint8,uint8)",
      "name": "ProtocolFactoryRemoved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_STFactory",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_major",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_minor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_patch",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProxyOwnershipTransferred(address,address)",
      "name": "ProxyOwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Upgraded(string,address)",
      "name": "Upgraded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newVersion",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newImplementation",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "setProtocolFactory(address,uint8,uint8,uint8)",
      "name": "setProtocolFactory",
      "description": "Changes the SecurityToken contract for a particular factory version Changing versions does not affect existing tokens.",
      "parameterDecorators": [
        {
          "name": "_STFactoryAddress",
          "description": "is the address of the proxy.",
          "recommendedTypes": []
        },
        {
          "name": "_major",
          "description": "Major version of the proxy.",
          "recommendedTypes": []
        },
        {
          "name": "_minor",
          "description": "Minor version of the proxy.",
          "recommendedTypes": []
        },
        {
          "name": "_patch",
          "description": "Patch version of the proxy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proxyOwner()",
      "name": "proxyOwner",
      "description": "Tells the address of the proxy owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBytes32Value(bytes32)",
      "name": "getBytes32Value",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_variable",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokensForOwner(address)",
      "name": "getTokensForOwner",
      "description": "Returns the list of all tokens for a specific owner.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setModuleDeployer(address)",
      "name": "setModuleDeployer",
      "description": "Set the module that will deploy.",
      "parameterDecorators": [
        {
          "name": "_newModuleDeployer",
          "description": "The address to use for module deployment.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTickersByOwner(address)",
      "name": "getTickersByOwner",
      "description": "Returns the list of tickers owned by the selected address.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "is the address which owns the list of tickers.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deployModules(uint256,bytes32[])",
      "name": "deployModules",
      "description": "Deploys some modules and their owner will be this registry.",
      "parameterDecorators": [
        {
          "name": "_protocolVersion",
          "description": "version.",
          "recommendedTypes": []
        },
        {
          "name": "extensionProtocolsToDeploy",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newlyDeployedModules",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTickerOwner(string)",
      "name": "getTickerOwner",
      "description": "Gets the owner of the ticker.",
      "parameterDecorators": [
        {
          "name": "_ticker",
          "description": "Ticker whose owner need to determine.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tickerOwner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "Called by the owner to unpause, returns to normal state.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBytesValue(bytes32)",
      "name": "getBytesValue",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_variable",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAddressValue(bytes32)",
      "name": "getAddressValue",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_variable",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "version()",
      "name": "version",
      "description": "Tells the version name of the current implementation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGetterRegistry(address)",
      "name": "setGetterRegistry",
      "description": "Set the implementation contract address.",
      "parameterDecorators": [
        {
          "name": "_getterContract",
          "description": "Address of the contract implementation.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeTo(string,address)",
      "name": "upgradeTo",
      "description": "Allows the upgradeability owner to upgrade the current version of the proxy.",
      "parameterDecorators": [
        {
          "name": "_newVersion",
          "description": "representing the version name of the new implementation to be set.",
          "recommendedTypes": []
        },
        {
          "name": "_newImplementation",
          "description": "representing the address of the new implementation to be set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "implementation()",
      "name": "implementation",
      "description": "Tells the address of the current implementation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address,address,uint8,uint8,uint8)",
      "name": "initialize",
      "description": "Initializes instance of STR.",
      "parameterDecorators": [
        {
          "name": "_steFactoryAddress",
          "description": "is the address of the STEFactory.",
          "recommendedTypes": []
        },
        {
          "name": "_modulesDeployer",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_major",
          "description": "version.",
          "recommendedTypes": []
        },
        {
          "name": "_minor",
          "description": "version.",
          "recommendedTypes": []
        },
        {
          "name": "_patch",
          "description": "version.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getArrayAddress(bytes32)",
      "name": "getArrayAddress",
      "description": "getArrayBytes32(keccak256(abi.encodePacked(\"tokensOwnedByOwner\", 0x1)).length;.",
      "parameterDecorators": [
        {
          "name": "_key",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "Called by the owner to pause, triggers stopped state.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setupToken(address,string,address,address[])",
      "name": "setupToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newSecurityTokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_ticker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_deployedModules",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "securityTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reclaimERC20(address)",
      "name": "reclaimERC20",
      "description": "Reclaims all ERC20Basic compatible tokens.",
      "parameterDecorators": [
        {
          "name": "_tokenContract",
          "description": "is the address of the token contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Gets the owner of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSecurityTokenData(address)",
      "name": "getSecurityTokenData",
      "description": "Returns the security token data by address.",
      "parameterDecorators": [
        {
          "name": "_securityToken",
          "description": "is the address of the security token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenSymbol",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "tokenTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBoolValue(bytes32)",
      "name": "getBoolValue",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_variable",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bytes32ToString(bytes32)",
      "name": "bytes32ToString",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_bytes32",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "upgradeToAndCall(string,address,bytes)",
      "name": "upgradeToAndCall",
      "description": "Allows the upgradeability owner to upgrade the current version of the proxy and call the new implementation to initialize whatever is needed through a low level call.",
      "parameterDecorators": [
        {
          "name": "_newVersion",
          "description": "representing the version name of the new implementation to be set.",
          "recommendedTypes": []
        },
        {
          "name": "_newImplementation",
          "description": "representing the address of the new implementation to be set.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "represents the msg.data to bet sent in the low level call. This parameter may include the function signature of the implementation to be called with the needed payload.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeTicker(string)",
      "name": "removeTicker",
      "description": "Removes the ticker details, associated ownership & security token mapping.",
      "parameterDecorators": [
        {
          "name": "_ticker",
          "description": "is the token ticker.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "generateNewSecurityToken(string,string,uint8,address[],bytes32[],address,uint256,address[])",
      "name": "generateNewSecurityToken",
      "description": "Deploys an instance of a new Security Token and records it to the registry.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "is the name of the token.",
          "recommendedTypes": []
        },
        {
          "name": "_ticker",
          "description": "is the ticker symbol of the security token.",
          "recommendedTypes": []
        },
        {
          "name": "_granularity",
          "description": "is the number of granularity of the Security Token.",
          "recommendedTypes": []
        },
        {
          "name": "_controllers",
          "description": "Issuer controllers whom will be able to do force transfer, redemptions, etc.",
          "recommendedTypes": []
        },
        {
          "name": "_defaultPartitions",
          "description": "An array of bytes32 representations of the Whether to activate the certificates feature.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_protocolVersion",
          "description": "Version of securityToken contract - `_protocolVersion` is the packed value of uin8[3] array (it will be calculated offchain) - if _protocolVersion == 0 then latest version of securityToken will be generated.",
          "recommendedTypes": []
        },
        {
          "name": "_deployedModules",
          "description": "These must be MIM, Validator, Checker, and then any others.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "securityTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getStringValue(bytes32)",
      "name": "getStringValue",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_variable",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getArrayBytes32(bytes32)",
      "name": "getArrayBytes32",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_key",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tickerAvailable(string)",
      "name": "tickerAvailable",
      "description": "Checks if the entered ticker is registered and has not expired.",
      "parameterDecorators": [
        {
          "name": "_ticker",
          "description": "is the token ticker.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addExistingSecurityTokenToRegistry(string,address,address,uint256)",
      "name": "addExistingSecurityTokenToRegistry",
      "description": "Adds a new custom Security Token and saves it to the registry. (Token should follow the IERC1400 interface).",
      "parameterDecorators": [
        {
          "name": "_ticker",
          "description": "is the ticker symbol of the security token.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "is the owner of the token.",
          "recommendedTypes": []
        },
        {
          "name": "_securityToken",
          "description": "is the address of the securityToken.",
          "recommendedTypes": []
        },
        {
          "name": "_deployedAt",
          "description": "is the timestamp at which the security token is deployed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeProtocolFactory(uint8,uint8,uint8)",
      "name": "removeProtocolFactory",
      "description": "Removes a STFactory.",
      "parameterDecorators": [
        {
          "name": "_major",
          "description": "Major version of the proxy.",
          "recommendedTypes": []
        },
        {
          "name": "_minor",
          "description": "Minor version of the proxy.",
          "recommendedTypes": []
        },
        {
          "name": "_patch",
          "description": "Patch version of the proxy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isPaused()",
      "name": "isPaused",
      "description": "Check whether the registry is paused or not.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setLatestVersion(uint8,uint8,uint8)",
      "name": "setLatestVersion",
      "description": "Changes the default protocol version Changing versions does not affect existing tokens.",
      "parameterDecorators": [
        {
          "name": "_major",
          "description": "Major version of the proxy.",
          "recommendedTypes": []
        },
        {
          "name": "_minor",
          "description": "Minor version of the proxy.",
          "recommendedTypes": []
        },
        {
          "name": "_patch",
          "description": "Patch version of the proxy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "moduleDeployer()",
      "name": "moduleDeployer",
      "description": "Gets the module deployer.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stringToBytes32(string)",
      "name": "stringToBytes32",
      "description": "",
      "parameterDecorators": [
        {
          "name": "source",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "result",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSecurityToken(address)",
      "name": "isSecurityToken",
      "description": "Checks that Security Token is registered.",
      "parameterDecorators": [
        {
          "name": "_securityToken",
          "description": "is the address of the security token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUintValue(bytes32)",
      "name": "getUintValue",
      "description": "string _name = getString(keccak256(abi.encodePacked(\"registeredSymbols_name\", \"TOKEN\"));.",
      "parameterDecorators": [
        {
          "name": "_variable",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSTFactoryAddress()",
      "name": "getSTFactoryAddress",
      "description": "Get the current STFactory Address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "stFactoryAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferProxyOwnership(address)",
      "name": "transferProxyOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getArrayUint(bytes32)",
      "name": "getArrayUint",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_key",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSecurityTokenAddress(string)",
      "name": "getSecurityTokenAddress",
      "description": "Get security token address by ticker name.",
      "parameterDecorators": [
        {
          "name": "_ticker",
          "description": "Symbol of the Scurity token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}