{"schema":"../schema.json","tags":[],"name":"MyGovernor","description":"","eventDecorators":[{"signature":"AdminChanged(address,address)","name":"AdminChanged","description":"Event for token purchase logging.","parameterDecorators":[{"name":"previousAdmin","description":"","recommendedTypes":[],"indexed":false},{"name":"newAdmin","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"BeaconUpgraded(address)","name":"BeaconUpgraded","description":"Event for token purchase logging.","parameterDecorators":[{"name":"beacon","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event for token purchase logging.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ProposalCanceled(uint256)","name":"ProposalCanceled","description":"Event for token purchase logging.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)","name":"ProposalCreated","description":"Event for token purchase logging.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[],"indexed":false},{"name":"proposer","description":"","recommendedTypes":[],"indexed":false},{"name":"targets","description":"","recommendedTypes":[],"indexed":false},{"name":"values","description":"","recommendedTypes":[],"indexed":false},{"name":"signatures","description":"","recommendedTypes":[],"indexed":false},{"name":"calldatas","description":"","recommendedTypes":[],"indexed":false},{"name":"startBlock","description":"","recommendedTypes":[],"indexed":false},{"name":"endBlock","description":"","recommendedTypes":[],"indexed":false},{"name":"description","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ProposalExecuted(uint256)","name":"ProposalExecuted","description":"Event for token purchase logging.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ProposalQueued(uint256,uint256)","name":"ProposalQueued","description":"Event for token purchase logging.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[],"indexed":false},{"name":"eta","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ProposalThresholdSet(uint256,uint256)","name":"ProposalThresholdSet","description":"Event for token purchase logging.","parameterDecorators":[{"name":"oldProposalThreshold","description":"","recommendedTypes":[],"indexed":false},{"name":"newProposalThreshold","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"QuorumNumeratorUpdated(uint256,uint256)","name":"QuorumNumeratorUpdated","description":"Event for token purchase logging.","parameterDecorators":[{"name":"oldQuorumNumerator","description":"","recommendedTypes":[],"indexed":false},{"name":"newQuorumNumerator","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TimelockChange(address,address)","name":"TimelockChange","description":"Event for token purchase logging.","parameterDecorators":[{"name":"oldTimelock","description":"","recommendedTypes":[],"indexed":false},{"name":"newTimelock","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Upgraded(address)","name":"Upgraded","description":"Event for token purchase logging.","parameterDecorators":[{"name":"implementation","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"VoteCast(address,uint256,uint8,uint256,string)","name":"VoteCast","description":"Event for token purchase logging.","parameterDecorators":[{"name":"voter","description":"","recommendedTypes":[],"indexed":true},{"name":"proposalId","description":"","recommendedTypes":[],"indexed":false},{"name":"support","description":"","recommendedTypes":[],"indexed":false},{"name":"weight","description":"","recommendedTypes":[],"indexed":false},{"name":"reason","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"VotingDelaySet(uint256,uint256)","name":"VotingDelaySet","description":"Event for token purchase logging.","parameterDecorators":[{"name":"oldVotingDelay","description":"","recommendedTypes":[],"indexed":false},{"name":"newVotingDelay","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"VotingPeriodSet(uint256,uint256)","name":"VotingPeriodSet","description":"Event for token purchase logging.","parameterDecorators":[{"name":"oldVotingPeriod","description":"","recommendedTypes":[],"indexed":false},{"name":"newVotingPeriod","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"BALLOT_TYPEHASH()","name":"BALLOT_TYPEHASH","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"COUNTING_MODE()","name":"COUNTING_MODE","description":"See {IGovernor-COUNTING_MODE}.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"castVote(uint256,uint8)","name":"castVote","description":"See {IGovernor-castVote}.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[]},{"name":"support","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)","name":"castVoteBySig","description":"See {IGovernor-castVoteBySig}.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[]},{"name":"support","description":"","recommendedTypes":[]},{"name":"v","description":"","recommendedTypes":[]},{"name":"r","description":"","recommendedTypes":[]},{"name":"s","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"castVoteWithReason(uint256,uint8,string)","name":"castVoteWithReason","description":"See {IGovernor-castVoteWithReason}.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[]},{"name":"support","description":"","recommendedTypes":[]},{"name":"reason","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"execute(address[],uint256[],bytes[],bytes32)","name":"execute","description":"See {IGovernor-execute}.","parameterDecorators":[{"name":"targets","description":"","recommendedTypes":[]},{"name":"values","description":"","recommendedTypes":[]},{"name":"calldatas","description":"","recommendedTypes":[]},{"name":"descriptionHash","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"getVotes(address,uint256)","name":"getVotes","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]},{"name":"blockNumber","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"hasVoted(uint256,address)","name":"hasVoted","description":"See {IGovernor-hasVoted}.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"hashProposal(address[],uint256[],bytes[],bytes32)","name":"hashProposal","description":"See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.","parameterDecorators":[{"name":"targets","description":"","recommendedTypes":[]},{"name":"values","description":"","recommendedTypes":[]},{"name":"calldatas","description":"","recommendedTypes":[]},{"name":"descriptionHash","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":["ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)"],"readOnly":true},{"signature":"initialize(address,address)","name":"initialize","description":"","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]},{"name":"_timelock","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"name()","name":"name","description":"See {IGovernor-name}.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalDeadline(uint256)","name":"proposalDeadline","description":"See {IGovernor-proposalDeadline}.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalEta(uint256)","name":"proposalEta","description":"Public accessor to check the eta of a queued proposal.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalSnapshot(uint256)","name":"proposalSnapshot","description":"See {IGovernor-proposalSnapshot}.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalThreshold()","name":"proposalThreshold","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalVotes(uint256)","name":"proposalVotes","description":"Accessor to the internal vote counts.","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"againstVotes","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"forVotes","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"abstainVotes","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"propose(address[],uint256[],bytes[],string)","name":"propose","description":"","parameterDecorators":[{"name":"targets","description":"","recommendedTypes":[]},{"name":"values","description":"","recommendedTypes":[]},{"name":"calldatas","description":"","recommendedTypes":[]},{"name":"description","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"queue(address[],uint256[],bytes[],bytes32)","name":"queue","description":"Function to queue a proposal to the timelock.","parameterDecorators":[{"name":"targets","description":"","recommendedTypes":[]},{"name":"values","description":"","recommendedTypes":[]},{"name":"calldatas","description":"","recommendedTypes":[]},{"name":"descriptionHash","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"quorum(uint256)","name":"quorum","description":"","parameterDecorators":[{"name":"blockNumber","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"quorumDenominator()","name":"quorumDenominator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"quorumNumerator()","name":"quorumNumerator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setProposalThreshold(uint256)","name":"setProposalThreshold","description":"Update the proposal threshold. This operation can only be performed through a governance proposal. Emits a {ProposalThresholdSet} event.","parameterDecorators":[{"name":"newProposalThreshold","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["ProposalThresholdSet(uint256,uint256)"],"readOnly":false},{"signature":"setVotingDelay(uint256)","name":"setVotingDelay","description":"Update the voting delay. This operation can only be performed through a governance proposal. Emits a {VotingDelaySet} event.","parameterDecorators":[{"name":"newVotingDelay","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["VotingDelaySet(uint256,uint256)"],"readOnly":false},{"signature":"setVotingPeriod(uint256)","name":"setVotingPeriod","description":"Update the voting period. This operation can only be performed through a governance proposal. Emits a {VotingPeriodSet} event.","parameterDecorators":[{"name":"newVotingPeriod","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["VotingPeriodSet(uint256,uint256)"],"readOnly":false},{"signature":"state(uint256)","name":"state","description":"","parameterDecorators":[{"name":"proposalId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"timelock()","name":"timelock","description":"Public accessor to check the address of the timelock.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateQuorumNumerator(uint256)","name":"updateQuorumNumerator","description":"","parameterDecorators":[{"name":"newQuorumNumerator","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateTimelock(address)","name":"updateTimelock","description":"Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates must be proposed, scheduled and executed using the {Governor} workflow.","parameterDecorators":[{"name":"newTimelock","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeTo(address)","name":"upgradeTo","description":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.","parameterDecorators":[{"name":"newImplementation","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["Upgraded(address)"],"readOnly":false},{"signature":"upgradeToAndCall(address,bytes)","name":"upgradeToAndCall","description":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.","parameterDecorators":[{"name":"newImplementation","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["Upgraded(address)"],"readOnly":false},{"signature":"version()","name":"version","description":"See {IGovernor-version}.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"votingDelay()","name":"votingDelay","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"votingPeriod()","name":"votingPeriod","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}