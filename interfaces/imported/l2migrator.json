{"schema":"../schema.json","tags":[],"name":"L2Migrator","description":"","eventDecorators":[{"signature":"ClaimStakeEnabled(bool)","name":"ClaimStakeEnabled","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"_enabled","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ControllerContractUpdate(bytes32,address)","name":"ControllerContractUpdate","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"caller","description":"- The account that called the function.","recommendedTypes":[],"indexed":false},{"name":"relayer","description":"- The relayer address to be added or removed.","recommendedTypes":[],"indexed":false}]},{"signature":"DelegatorPoolCreated(address,address)","name":"DelegatorPoolCreated","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"caller","description":"- The account that called the function.","recommendedTypes":[],"indexed":true},{"name":"relayer","description":"- The relayer address to be added or removed.","recommendedTypes":[],"indexed":false}]},{"signature":"DelegatorPoolImplUpdate(address)","name":"DelegatorPoolImplUpdate","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"_delegatorPoolImpl","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"L1MigratorUpdate(address)","name":"L1MigratorUpdate","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"_l1MigratorAddr","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MigrateDelegatorFinalized(tuple)","name":"MigrateDelegatorFinalized","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"params","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MigrateSenderFinalized(tuple)","name":"MigrateSenderFinalized","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"params","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MigrateUnbondingLocksFinalized(tuple)","name":"MigrateUnbondingLocksFinalized","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"params","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetController(address)","name":"SetController","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"controller","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StakeClaimed(address,address,uint256,uint256)","name":"StakeClaimed","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"delegator","description":"","recommendedTypes":[],"indexed":true},{"name":"delegate","description":"","recommendedTypes":[],"indexed":false},{"name":"stake","description":"","recommendedTypes":[],"indexed":false},{"name":"fees","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TxToL1(address,address,uint256,bytes)","name":"TxToL1","description":"Withdraw gets emitted when an account withdraws tokens that have been succesfully unstaked and thus unlocked for withdrawal.","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[],"indexed":true},{"name":"_to","description":"","recommendedTypes":[],"indexed":true},{"name":"_id","description":"","recommendedTypes":[],"indexed":true},{"name":"_data","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"bondingManagerAddr()","name":"bondingManagerAddr","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"claimStake(address,uint256,uint256,bytes32[],address)","name":"claimStake","description":"Completes delegator migration using a Merkle proof that a delegator's state was included in a state snapshot represented by a Merkle tree root. Assume that only EOAs are included in the snapshot Regardless of the caller of this function, the EOA from L1 will be able to access its stake on L2.","parameterDecorators":[{"name":"_delegate","description":"Address that is migrating.","recommendedTypes":[]},{"name":"_stake","description":"Stake of delegator on L1.","recommendedTypes":[]},{"name":"_fees","description":"Fees of delegator on L1.","recommendedTypes":[]},{"name":"_proof","description":"Merkle proof of inclusion in Merkle tree state snapshot.","recommendedTypes":[]},{"name":"_newDelegate","description":"Optional address of a new delegate on L2.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimStakeEnabled()","name":"claimStakeEnabled","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"claimedDelegatedStake(address)","name":"claimedDelegatedStake","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"controller()","name":"controller","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"delegatorPoolImpl()","name":"delegatorPoolImpl","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"delegatorPools(address)","name":"delegatorPools","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"finalizeMigrateDelegator(tuple(address,address,uint256,uint256,uint256,address))","name":"finalizeMigrateDelegator","description":"Called by L1Migrator to complete transcoder/delegator state migration.","parameterDecorators":[{"name":"_params","description":"L1 state relevant for migration.","recommendedTypes":[],"parameters":[{"name":"l1Addr","description":"","type":"address"},{"name":"l2Addr","description":"","type":"address"},{"name":"stake","description":"","type":"uint256"},{"name":"delegatedStake","description":"","type":"uint256"},{"name":"fees","description":"","type":"uint256"},{"name":"delegate","description":"","type":"address"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"finalizeMigrateSender(tuple(address,address,uint256,uint256))","name":"finalizeMigrateSender","description":"Called by L1Migrator to complete sender deposit/reserve migration.","parameterDecorators":[{"name":"_params","description":"L1 state relevant for migration.","recommendedTypes":[],"parameters":[{"name":"l1Addr","description":"","type":"address"},{"name":"l2Addr","description":"","type":"address"},{"name":"deposit","description":"","type":"uint256"},{"name":"reserve","description":"","type":"uint256"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"finalizeMigrateUnbondingLocks(tuple(address,address,uint256,uint256[],address))","name":"finalizeMigrateUnbondingLocks","description":"Called by L1Migrator to complete unbonding locks migration.","parameterDecorators":[{"name":"_params","description":"L1 state relevant for migration.","recommendedTypes":[],"parameters":[{"name":"l1Addr","description":"","type":"address"},{"name":"l2Addr","description":"","type":"address"},{"name":"total","description":"","type":"uint256"},{"name":"unbondingLockIds","description":"","type":"uint256[]"},{"name":"delegate","description":"","type":"address"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialize(address,address)","name":"initialize","description":"","parameterDecorators":[{"name":"_l1MigratorAddr","description":"","recommendedTypes":[]},{"name":"_delegatorPoolImpl","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"l1MigratorAddr()","name":"l1MigratorAddr","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"merkleSnapshotAddr()","name":"merkleSnapshotAddr","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"migratedDelegators(address)","name":"migratedDelegators","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"migratedSenders(address)","name":"migratedSenders","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"migratedUnbondingLocks(address,uint256)","name":"migratedUnbondingLocks","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"setClaimStakeEnabled(bool)","name":"setClaimStakeEnabled","description":"Enable/disable claimStake().","parameterDecorators":[{"name":"_enabled","description":"True/false indicating claimStake() enabled/disabled.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setController(address)","name":"setController","description":"Set controller. Only callable by current controller.","parameterDecorators":[{"name":"_controller","description":"Controller contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setDelegatorPoolImpl(address)","name":"setDelegatorPoolImpl","description":"Sets DelegatorPool implementation contract.","parameterDecorators":[{"name":"_delegatorPoolImpl","description":"DelegatorPool implementation contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setL1Migrator(address)","name":"setL1Migrator","description":"Sets L1Migrator.","parameterDecorators":[{"name":"_l1MigratorAddr","description":"L1Migrator address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"syncControllerContracts()","name":"syncControllerContracts","description":"Fetches addresses and sets bondingManagerAddr, ticketBrokerAddr, merkleSnapshotAddr if they are different from the stored addresses.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"targetContractId()","name":"targetContractId","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"ticketBrokerAddr()","name":"ticketBrokerAddr","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenAddr()","name":"tokenAddr","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}