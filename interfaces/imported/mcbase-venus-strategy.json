{"schema":"../schema.json","tags":["lending","strategies","yield"],"name":"McBaseVenusStrategy","description":"McBase Venus Strategy. It maximizes yields doing leveraged lending with a single configurable BEP20 asset on the Venus lending platform.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StratHarvest(address)","name":"StratHarvest","description":"Events that the contract emits.","parameterDecorators":[{"name":"harvester","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"StratRebalance(uint256,uint256)","name":"StratRebalance","description":"","parameterDecorators":[{"name":"_borrowRate","description":"","recommendedTypes":[],"indexed":false},{"name":"_borrowDepth","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"BORROW_DEPTH_MAX()","name":"BORROW_DEPTH_MAX","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"BORROW_RATE_MAX()","name":"BORROW_RATE_MAX","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"MAX_FEE()","name":"MAX_FEE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"REWARDS_FEE()","name":"REWARDS_FEE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"TREASURY_FEE()","name":"TREASURY_FEE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"WITHDRAWAL_FEE()","name":"WITHDRAWAL_FEE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"WITHDRAWAL_MAX()","name":"WITHDRAWAL_MAX","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"availableWant()","name":"availableWant","description":"Required for various functions that need to deduct {reserves} from total {want}.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"how much {want} the hontract holds without reserves.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOf()","name":"balanceOf","description":"Function to calculate the total underlaying {want} held by the strat. It takes into account both the funds at hand, and the funds allocated in the {vtoken} contract. It uses a cache of the balances stored in {depositedBalance} to enable a few UI helper functions to exist. Sensitive functions should call 'updateBalance()' first to make sure the data is up to date.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"total {want} held by the strat.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOfStrat()","name":"balanceOfStrat","description":"Balance in strat contract.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"how much {want} the contract holds.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowDepth()","name":"borrowDepth","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowRate()","name":"borrowRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"deleverageOnce(uint256)","name":"deleverageOnce","description":"Extra safety measure that allows us to manually unwind one level. In case we somehow get into as state where the cost of unwinding freezes the system. We can manually unwind a few levels with this function and then 'rebalance()' with new {borrowRate} and {borrowConfig} values.","parameterDecorators":[{"name":"_borrowRate","description":"configurable borrow rate in case it's required to unwind successfully.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deposit()","name":"deposit","description":"Function that puts the funds to work. It gets called whenever someone deposits in the strategy's vault. It does {borrowDepth} levels of compound lending. It also updates the helper {depositedBalance} variable.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"depositedBalance()","name":"depositedBalance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"harvest()","name":"harvest","description":"Core function of the strat, in charge of collecting and re-investing rewards. 1. It claims {venus} rewards from the Unitroller. 3. It charges the system fee and sends it to BIFI stakers. 4. It swaps the remaining rewards into more {want}. 4. It re-invests the remaining profits.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"minLeverage()","name":"minLeverage","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"panic()","name":"panic","description":"Pauses deposits. Withdraws all funds from the Venus Platform.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"pause()","name":"pause","description":"Pauses the strat.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"rebalance(uint256,uint256)","name":"rebalance","description":"xw. Updates the risk profile and rebalances the vault funds accordingly.","parameterDecorators":[{"name":"_borrowRate","description":"percent to borrow on each leverage level.","recommendedTypes":[]},{"name":"_borrowDepth","description":"how many levels to leveraxge the funds.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"reserves()","name":"reserves","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"retireStrat()","name":"retireStrat","description":"Function that has to be called as part of strat migration. It sends all the available funds back to the vault, ready to be migrated to the new strat.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewards()","name":"rewards","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"treasury()","name":"treasury","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"unirouter()","name":"unirouter","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"unitroller()","name":"unitroller","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"unpause()","name":"unpause","description":"Unpauses the strat.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateBalance()","name":"updateBalance","description":"It helps mantain a cached version of the {want} deposited in venus. We use it to be able to keep the vault's 'balance()' function and 'getPricePerFullShare()' with view visibility.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"vault()","name":"vault","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"venus()","name":"venus","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"venusToWantRoute(uint256)","name":"venusToWantRoute","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"venusToWbnbRoute(uint256)","name":"venusToWbnbRoute","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"vtoken()","name":"vtoken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"want()","name":"want","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"wbnb()","name":"wbnb","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256)","name":"withdraw","description":"Withdraws funds and sends them back to the vault. It deleverages from venus first, and then deposits again after the withdraw to make sure it mantains the desired ratio.","parameterDecorators":[{"name":"_amount","description":"How much {want} to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}