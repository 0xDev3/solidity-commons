{"schema":"../schema.json","tags":["nft"],"name":"NFTFarmer","description":"THIS IS JUST AND EXAMPLE AND SHOULD NOT BE USED IN PRODUCTION!!!!!!!!!!!!!!!!!!!.","eventDecorators":[{"signature":"Closed(uint256)","name":"Closed","description":"Emitted when a token is locked or the lock on a token is extended. Emitted when `curator` deposited `tokens` on `subgraphDeploymentID` as curation signal. The `curator` receives `signal` amount according to the curation pool bonding curve. An amount of `curationTax` will be collected and burned.","parameterDecorators":[{"name":"_remainingTokens","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RewardsClaimed(address,uint256,uint256)","name":"RewardsClaimed","description":"Emitted when a token is locked or the lock on a token is extended. Emitted when `curator` deposited `tokens` on `subgraphDeploymentID` as curation signal. The `curator` receives `signal` amount according to the curation pool bonding curve. An amount of `curationTax` will be collected and burned.","parameterDecorators":[{"name":"_claimer","description":"","recommendedTypes":[],"indexed":false},{"name":"_lockedTokens","description":"","recommendedTypes":[],"indexed":false},{"name":"_payout","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Started(uint256)","name":"Started","description":"Emitted when a token is locked or the lock on a token is extended. Emitted when `curator` deposited `tokens` on `subgraphDeploymentID` as curation signal. The `curator` receives `signal` amount according to the curation pool bonding curve. An amount of `curationTax` will be collected and burned.","parameterDecorators":[{"name":"_totalRewards","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"claimRewards()","name":"claimRewards","description":"this is a super basic example yield farming functionall it does is prove that you have locked tokens and can therefore claim some rewardsonly allowed to claim once though based on our mapping.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimed(address)","name":"claimed","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"close()","name":"close","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialize(uint256)","name":"initialize","description":"function to iniaitlize and pull the funds into the contract to be paid outthis would probably be an onlyOwner function in real usage.","parameterDecorators":[{"name":"totalRewards","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lockToken()","name":"lockToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"nftContract()","name":"nftContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"remainingRewards()","name":"remainingRewards","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardRate()","name":"rewardRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardToken()","name":"rewardToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rewards()","name":"rewards","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}