{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "loans"
  ],
  "name": "LiquidateLoanAToken",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ErrorHandled(string)",
      "name": "ErrorHandled",
      "description": "Triggered when the ubi committee has been updated.",
      "parameterDecorators": [
        {
          "name": "stringFailure",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Triggered when the ubi committee has been updated.",
      "parameterDecorators": [
        {
          "name": "newUbiCommittee",
          "description": "New UBI Committee address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldUbiCommittee",
          "description": "Old UBI Committee address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Received(address,uint256)",
      "name": "Received",
      "description": "Triggered when the ubi committee has been updated.",
      "parameterDecorators": [
        {
          "name": "newUbiCommittee",
          "description": "New UBI Committee address.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "oldUbiCommittee",
          "description": "Old UBI Committee address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ADDRESSES_PROVIDER()",
      "name": "ADDRESSES_PROVIDER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "LENDING_POOL()",
      "name": "LENDING_POOL",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "executeFlashLoans(address,uint256,address,address,address[],address)",
      "name": "executeFlashLoans",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_assetToLiquidate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_flashAmt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_collateral",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_userToLiquidate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_swapPath",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_receivedToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executeOperation(address[],uint256[],uint256[],address,bytes)",
      "name": "executeOperation",
      "description": "This function is called after your contract has received the flash loaned amount.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amounts",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "premiums",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "params",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapRouter()",
      "name": "swapRouter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}