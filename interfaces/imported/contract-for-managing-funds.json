{"schema":"../schema.json","tags":["escrows"],"name":"Cashier","description":"Contract for managing funds. Warning: the contract hasn't been audited yet! Roughly following OpenZeppelin's Escrow at https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/payment/.","eventDecorators":[{"signature":"LogAmountDistribution(uint256,address,uint256,uint8)","name":"LogAmountDistribution","description":"event when an ERC1155 contract is created.","parameterDecorators":[{"name":"_tokenIdVoucher","description":"","recommendedTypes":[],"indexed":true},{"name":"_to","description":"","recommendedTypes":[],"indexed":false},{"name":"_payment","description":"","recommendedTypes":[],"indexed":false},{"name":"_type","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogOrderCreated(uint256,address,uint256,uint8)","name":"LogOrderCreated","description":"event when an ERC1155 contract is created.","parameterDecorators":[{"name":"_tokenIdSupply","description":"","recommendedTypes":[],"indexed":true},{"name":"_seller","description":"","recommendedTypes":[],"indexed":false},{"name":"_quantity","description":"","recommendedTypes":[],"indexed":false},{"name":"_paymentType","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogWithdrawal(address,address,uint256)","name":"LogWithdrawal","description":"event when an ERC1155 contract is created.","parameterDecorators":[{"name":"_caller","description":"","recommendedTypes":[],"indexed":false},{"name":"_payee","description":"","recommendedTypes":[],"indexed":false},{"name":"_payment","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"event when an ERC1155 contract is created.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"event when an ERC1155 contract is created.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"event when an ERC1155 contract is created.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"escrow(address)","name":"escrow","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getEscrowAmount(address)","name":"getEscrowAmount","description":"Get the amount in escrow of an address.","parameterDecorators":[{"name":"_account","description":"The address of an account to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"The balance in escrow.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requestCreateOrder_ETH_ETH(uint256[])","name":"requestCreateOrder_ETH_ETH","description":"Issuer/Seller offers promises as supply tokens and needs to escrow the deposit.","parameterDecorators":[{"name":"metadata","description":"metadata which is required for creation of a voucher Metadata array is used as in some scenarios we need several more params, as we need to recover owner address in order to permit the contract to transfer funds in his behalf. Since the params get too many, we end up in situation that the stack is too deep. uint256 _validFrom = metadata[0]; uint256 _validTo = metadata[1]; uint256 _price = metadata[2]; uint256 _depositSe = metadata[3]; uint256 _depositBu = metadata[4]; uint256 _quantity = metadata[5];.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requestCreateOrder_ETH_TKN_WithPermit(address,uint256,uint256,uint8,bytes32,bytes32,uint256[])","name":"requestCreateOrder_ETH_TKN_WithPermit","description":"","parameterDecorators":[{"name":"_tokenDepositAddress","description":"","recommendedTypes":[]},{"name":"_tokensSent","description":"","recommendedTypes":[]},{"name":"deadline","description":"","recommendedTypes":[]},{"name":"v","description":"","recommendedTypes":[]},{"name":"r","description":"","recommendedTypes":[]},{"name":"s","description":"","recommendedTypes":[]},{"name":"metadata","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requestCreateOrder_TKN_ETH(address,uint256[])","name":"requestCreateOrder_TKN_ETH","description":"","parameterDecorators":[{"name":"_tokenPriceAddress","description":"","recommendedTypes":[]},{"name":"metadata","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requestCreateOrder_TKN_TKN_WithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32,uint256[])","name":"requestCreateOrder_TKN_TKN_WithPermit","description":"","parameterDecorators":[{"name":"_tokenPriceAddress","description":"","recommendedTypes":[]},{"name":"_tokenDepositAddress","description":"","recommendedTypes":[]},{"name":"_tokensSent","description":"","recommendedTypes":[]},{"name":"deadline","description":"","recommendedTypes":[]},{"name":"v","description":"","recommendedTypes":[]},{"name":"r","description":"","recommendedTypes":[]},{"name":"s","description":"","recommendedTypes":[]},{"name":"metadata","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requestVoucher_ETH_ETH(uint256,address)","name":"requestVoucher_ETH_ETH","description":"Consumer requests/buys a voucher by filling an order and receiving a Voucher Token in return.","parameterDecorators":[{"name":"_tokenIdSupply","description":"ID of the supply token.","recommendedTypes":[]},{"name":"_issuer","description":"Address of the issuer of the supply token.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requestVoucher_ETH_TKN_WithPermit(uint256,address,uint256,uint256,uint8,bytes32,bytes32)","name":"requestVoucher_ETH_TKN_WithPermit","description":"","parameterDecorators":[{"name":"_tokenIdSupply","description":"","recommendedTypes":[]},{"name":"_issuer","description":"","recommendedTypes":[]},{"name":"_tokensDeposit","description":"","recommendedTypes":[]},{"name":"deadline","description":"","recommendedTypes":[]},{"name":"v","description":"","recommendedTypes":[]},{"name":"r","description":"","recommendedTypes":[]},{"name":"s","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requestVoucher_TKN_ETH_WithPermit(uint256,address,uint256,uint256,uint8,bytes32,bytes32)","name":"requestVoucher_TKN_ETH_WithPermit","description":"","parameterDecorators":[{"name":"_tokenIdSupply","description":"","recommendedTypes":[]},{"name":"_issuer","description":"","recommendedTypes":[]},{"name":"_tokensPrice","description":"","recommendedTypes":[]},{"name":"deadline","description":"","recommendedTypes":[]},{"name":"v","description":"","recommendedTypes":[]},{"name":"r","description":"","recommendedTypes":[]},{"name":"s","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requestVoucher_TKN_TKN_WithPermit(uint256,address,uint256,uint256,uint8,bytes32,bytes32,uint8,bytes32,bytes32)","name":"requestVoucher_TKN_TKN_WithPermit","description":"","parameterDecorators":[{"name":"_tokenIdSupply","description":"","recommendedTypes":[]},{"name":"_issuer","description":"","recommendedTypes":[]},{"name":"_tokensSent","description":"","recommendedTypes":[]},{"name":"deadline","description":"","recommendedTypes":[]},{"name":"vPrice","description":"","recommendedTypes":[]},{"name":"rPrice","description":"","recommendedTypes":[]},{"name":"sPrice","description":"","recommendedTypes":[]},{"name":"vDeposit","description":"","recommendedTypes":[]},{"name":"rDeposit","description":"","recommendedTypes":[]},{"name":"sDeposit","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpause()","name":"unpause","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdraw(uint256)","name":"withdraw","description":"Trigger withdrawals of what funds are releasable The caller of this function triggers transfers to all involved entities (pool, issuer, token holder), also paying for gas. This function would be optimized a lot, here verbose for readability.","parameterDecorators":[{"name":"_tokenIdVoucher","description":"ID of a voucher token (ERC-721) to try withdraw funds from.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawDeposits(uint256)","name":"withdrawDeposits","description":"","parameterDecorators":[{"name":"_tokenIdSupply","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawPool()","name":"withdrawPool","description":"Trigger withdrawals of pooled funds.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawWhenPaused(uint256)","name":"withdrawWhenPaused","description":"Trigger withdrawals of what funds are releasable The caller of this function triggers transfers to all involved entities (pool, issuer, token holder), also paying for gas. This function would be optimized a lot, here verbose for readability.","parameterDecorators":[{"name":"_tokenIdVoucher","description":"an array of voucher tokens (ERC-721) to try withdraw funds from.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}