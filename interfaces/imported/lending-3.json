{
  "schema": "../schema.json",
  "tags": [
    "lending"
  ],
  "name": "Lending",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "borrow(address,uint256)",
      "name": "borrow",
      "description": "Borrow up to the amount of remaining credit.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositErc20(address,uint256)",
      "name": "depositErc20",
      "description": "Deposit(lend) collateral in any erc20 token. As users can potentially be borrowers as well, the function charges the upfront interest fee. Iff the erc20 token is whitelisted in the tax token, users can rececive the upfront interest fee in tax token.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositEth()",
      "name": "depositEth",
      "description": "Deposit(lend) collateral in ETH. As users can potentially be borrowers as well, the function charges the upfront interest fee. Users can rececive the upfront interest fee in tax token.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "forceLiquidate(address,address)",
      "name": "forceLiquidate",
      "description": "Force liquidate if the user doesn't have enough collateral.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "userAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAccountInfo(address,address)",
      "name": "getAccountInfo",
      "description": "Get account info of the token belonging to the user.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "userAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "lendAccount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "borrowAccount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "remainingCredit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBorrowerAccount(address,address)",
      "name": "getBorrowerAccount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "userAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total borrowing amount of the token belonging to the user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInterest()",
      "name": "getInterest",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "interest fee charged when deposit.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLenderAccount(address,address)",
      "name": "getLenderAccount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "userAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total lending amount of the token belonging to the user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRemainingCredit(address,address)",
      "name": "getRemainingCredit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "userAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "remaining credit amount of the token belonging to the user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStakingAddress()",
      "name": "getStakingAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "staking contract address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTaxTokenAddress()",
      "name": "getTaxTokenAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "tax token address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenInfo(address)",
      "name": "getTokenInfo",
      "description": "Get token info.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "totalLendAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalBorrowAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalBorrowing(address)",
      "name": "getTotalBorrowing",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total borrowing amount of the token.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalLending(address)",
      "name": "getTotalLending",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total lending amount of the token.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTvl(address)",
      "name": "getTvl",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total value locked of the token.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "repayErc20(address,uint256)",
      "name": "repayErc20",
      "description": "Repay the borrowing erc20 token up to the amount of borrowing.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "repayEth()",
      "name": "repayEth",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(address,uint256)",
      "name": "withdraw",
      "description": "Withdraw the deposited (lended) collateral up to the amount of remaining credit.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}