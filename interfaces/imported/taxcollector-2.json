{
  "schema": "../schema.json",
  "tags": [],
  "name": "TaxCollector",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AddAuthorization(address)",
      "name": "AddAuthorization",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AddSecondaryReceiver(bytes32,uint256,uint256,uint256,uint256)",
      "name": "AddSecondaryReceiver",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collateralType",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "secondaryReceiverNonce",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "latestSecondaryReceiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "secondaryReceiverAllotedTax",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "secondaryReceiverRevenueSources",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CollectTax(bytes32,uint256,int256)",
      "name": "CollectTax",
      "description": "",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DistributeTax(bytes32,address,int256)",
      "name": "DistributeTax",
      "description": "",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "InitializeCollateralType(bytes32)",
      "name": "InitializeCollateralType",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collateralType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ModifyParameters(bytes32,bytes32,uint256)",
      "name": "ModifyParameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ModifyParameters(bytes32,uint256)",
      "name": "ModifyParameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "parameter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ModifyParameters(bytes32,address)",
      "name": "ModifyParameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "parameter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ModifyParameters(bytes32,uint256,uint256)",
      "name": "ModifyParameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ModifyParameters(bytes32,uint256,uint256,address)",
      "name": "ModifyParameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collateralType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "position",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "taxPercentage",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "receiverAccount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ModifySecondaryReceiver(bytes32,uint256,uint256,uint256,uint256)",
      "name": "ModifySecondaryReceiver",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collateralType",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "secondaryReceiverNonce",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "latestSecondaryReceiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "secondaryReceiverAllotedTax",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "secondaryReceiverRevenueSources",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RemoveAuthorization(address)",
      "name": "RemoveAuthorization",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addAuthorization(address)",
      "name": "addAuthorization",
      "description": "Add auth to an account.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Account to add auth to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "authorizedAccounts(address)",
      "name": "authorizedAccounts",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collateralList(uint256)",
      "name": "collateralList",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collateralListLength()",
      "name": "collateralListLength",
      "description": "Get the collateralList length.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collateralTypes(bytes32)",
      "name": "collateralTypes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "stabilityFee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "updateTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collectedManyTax(uint256,uint256)",
      "name": "collectedManyTax",
      "description": "Check if multiple collateral types are up to date with taxation.",
      "parameterDecorators": [
        {
          "name": "start",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "end",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "ok",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "globalStabilityFee()",
      "name": "globalStabilityFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initializeCollateralType(bytes32)",
      "name": "initializeCollateralType",
      "description": "Initialize a brand new collateral type.",
      "parameterDecorators": [
        {
          "name": "collateralType",
          "description": "Collateral type name (e.g ETH-A, TBTC-B).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isSecondaryReceiver(uint256)",
      "name": "isSecondaryReceiver",
      "description": "Check if a tax receiver is at a certain position in the list.",
      "parameterDecorators": [
        {
          "name": "_receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestSecondaryReceiver()",
      "name": "latestSecondaryReceiver",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxSecondaryReceivers()",
      "name": "maxSecondaryReceivers",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "modifyParameters(bytes32,uint256,uint256,address)",
      "name": "modifyParameters",
      "description": "Create or modify a secondary tax receiver's data.",
      "parameterDecorators": [
        {
          "name": "collateralType",
          "description": "Collateral type that will give SF to the tax receiver.",
          "recommendedTypes": []
        },
        {
          "name": "position",
          "description": "Receiver position in the list. Used to determine whether a new tax receiver is created or an existing one is edited.",
          "recommendedTypes": []
        },
        {
          "name": "taxPercentage",
          "description": "Percentage of SF offered to the tax receiver.",
          "recommendedTypes": []
        },
        {
          "name": "receiverAccount",
          "description": "Receiver address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "modifyParameters(bytes32,uint256,uint256)",
      "name": "modifyParameters",
      "description": "Set whether a tax receiver can incur negative fees.",
      "parameterDecorators": [
        {
          "name": "collateralType",
          "description": "Collateral type giving fees to the tax receiver.",
          "recommendedTypes": []
        },
        {
          "name": "position",
          "description": "Receiver position in the list.",
          "recommendedTypes": []
        },
        {
          "name": "val",
          "description": "Value that specifies whether a tax receiver can incur negative rates.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "modifyParameters(bytes32,address)",
      "name": "modifyParameters",
      "description": "Modify general address params.",
      "parameterDecorators": [
        {
          "name": "parameter",
          "description": "The name of the parameter modified.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "New value for the parameter.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "modifyParameters(bytes32,bytes32,uint256)",
      "name": "modifyParameters",
      "description": "Modify collateral specific uint256 params.",
      "parameterDecorators": [
        {
          "name": "collateralType",
          "description": "Collateral type who's parameter is modified.",
          "recommendedTypes": []
        },
        {
          "name": "parameter",
          "description": "The name of the parameter modified.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "New value for the parameter.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "modifyParameters(bytes32,uint256)",
      "name": "modifyParameters",
      "description": "Modify general uint256 params.",
      "parameterDecorators": [
        {
          "name": "parameter",
          "description": "The name of the parameter modified.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "New value for the parameter.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "primaryTaxReceiver()",
      "name": "primaryTaxReceiver",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAuthorization(address)",
      "name": "removeAuthorization",
      "description": "Remove auth from an account.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Account to remove auth from.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "safeEngine()",
      "name": "safeEngine",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "secondaryReceiverAccounts(uint256)",
      "name": "secondaryReceiverAccounts",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "secondaryReceiverAllotedTax(bytes32)",
      "name": "secondaryReceiverAllotedTax",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "secondaryReceiverNonce()",
      "name": "secondaryReceiverNonce",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "secondaryReceiverRevenueSources(address)",
      "name": "secondaryReceiverRevenueSources",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "secondaryReceiversAmount()",
      "name": "secondaryReceiversAmount",
      "description": "Get the secondary tax receiver list length.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "secondaryTaxReceivers(bytes32,uint256)",
      "name": "secondaryTaxReceivers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "canTakeBackTax",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "taxPercentage",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "taxMany(uint256,uint256)",
      "name": "taxMany",
      "description": "Collect tax from multiple collateral types at once.",
      "parameterDecorators": [
        {
          "name": "start",
          "description": "Index in collateralList from which to start looping and calculating the tax outcome.",
          "recommendedTypes": []
        },
        {
          "name": "end",
          "description": "Index in collateralList at which we stop looping and calculating the tax outcome.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "taxManyOutcome(uint256,uint256)",
      "name": "taxManyOutcome",
      "description": "Check how much SF will be charged (to collateral types between indexes 'start' and 'end' in the collateralList) during the next taxation.",
      "parameterDecorators": [
        {
          "name": "start",
          "description": "Index in collateralList from which to start looping and calculating the tax outcome.",
          "recommendedTypes": []
        },
        {
          "name": "end",
          "description": "Index in collateralList at which we stop looping and calculating the tax outcome.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "ok",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "rad",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "taxSingle(bytes32)",
      "name": "taxSingle",
      "description": "Collect tax from a single collateral type.",
      "parameterDecorators": [
        {
          "name": "collateralType",
          "description": "Collateral type to tax.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "taxSingleOutcome(bytes32)",
      "name": "taxSingleOutcome",
      "description": "Get how much SF will be distributed after taxing a specific collateral type.",
      "parameterDecorators": [
        {
          "name": "collateralType",
          "description": "Collateral type to compute the taxation outcome for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "usedSecondaryReceiver(address)",
      "name": "usedSecondaryReceiver",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}