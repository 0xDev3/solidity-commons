{"schema":"../schema.json","tags":[],"name":"LuckyMachineCoordinator","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"getRandomNumber()","name":"getRandomNumber","description":"","parameterDecorators":[],"returnDecorators":[{"name":"requestID","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"nonces(bytes32)","name":"nonces","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rawFulfillRandomness(bytes32,uint256)","name":"rawFulfillRandomness","description":"","parameterDecorators":[{"name":"requestId","description":"","recommendedTypes":[]},{"name":"randomness","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setKeyHash(bytes32)","name":"setKeyHash","description":"Can update keyHash if access to node is compromised. This should not be updated unless you are sure what you are doing.","parameterDecorators":[{"name":"_keyHash","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setLINK(address)","name":"setLINK","description":"Can update LINK address if necessary. Should not have to call this, but here in case testnet address is set or token address updated for any reason.","parameterDecorators":[{"name":"_linkAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setVRFCoordinator(address)","name":"setVRFCoordinator","description":"Can update vrfCoordinator if access to node is compromised. This should not be updated unless you are sure what you are doing.","parameterDecorators":[{"name":"_vrfCoordinator","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}