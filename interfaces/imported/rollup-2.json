{
  "schema": "../schema.json",
  "tags": [],
  "name": "Rollup",
  "description": "",
  "eventDecorators": [
    {
      "signature": "NodeConfirmed(uint256,bytes32,uint256,bytes32,uint256)",
      "name": "NodeConfirmed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "nodeNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "afterSendAcc",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "afterSendCount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "afterLogAcc",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "afterLogCount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NodeCreated(uint256,bytes32,bytes32,bytes32,uint256,uint256,bytes32,bytes32[3][2],uint256[4][2])",
      "name": "NodeCreated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "nodeNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "parentNodeHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "nodeHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "executionHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "inboxMaxCount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "afterInboxBatchEndCount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "afterInboxBatchAcc",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "assertionBytes32Fields",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "assertionIntFields",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NodeRejected(uint256)",
      "name": "NodeRejected",
      "description": "",
      "parameterDecorators": [
        {
          "name": "nodeNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NodesDestroyed(uint256,uint256)",
      "name": "NodesDestroyed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "startNode",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "endNode",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnerFunctionCalled(uint256)",
      "name": "OwnerFunctionCalled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RollupChallengeStarted(address,address,address,uint256)",
      "name": "RollupChallengeStarted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "challengeContract",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "asserter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "challenger",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "challengedNode",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RollupCreated(bytes32)",
      "name": "RollupCreated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "machineHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StakerReassigned(address,uint256)",
      "name": "StakerReassigned",
      "description": "",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newNode",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "_stakerMap(address)",
      "name": "_stakerMap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "latestStakedNode",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amountStaked",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "currentChallenge",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "isStaked",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "amountStaked(address)",
      "name": "amountStaked",
      "description": "Get the amount staked of the given staker.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "Staker address to lookup.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount staked of the staker.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "arbGasSpeedLimitPerBlock()",
      "name": "arbGasSpeedLimitPerBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "baseStake()",
      "name": "baseStake",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "challengeExecutionBisectionDegree()",
      "name": "challengeExecutionBisectionDegree",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "challengeFactory()",
      "name": "challengeFactory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "confirmPeriodBlocks()",
      "name": "confirmPeriodBlocks",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currentChallenge(address)",
      "name": "currentChallenge",
      "description": "Get the current challenge of the given staker.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "Staker address to lookup.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Current challenge of the staker.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "delayedBridge()",
      "name": "delayedBridge",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "extraChallengeTimeBlocks()",
      "name": "extraChallengeTimeBlocks",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "firstUnresolvedNode()",
      "name": "firstUnresolvedNode",
      "description": "If all nodes have been resolved, this will be latestNodeCreated + 1.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Index of the first unresolved node.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAdminFacet()",
      "name": "getAdminFacet",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFacets()",
      "name": "getFacets",
      "description": "Fallback and delegate functions from OZ https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/proxy/TransparentUpgradeableProxy.sol And dispatch pattern from EIP-2535: Diamonds.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getNode(uint256)",
      "name": "getNode",
      "description": "Get the address of the Node contract for the given node.",
      "parameterDecorators": [
        {
          "name": "nodeNum",
          "description": "Index of the node.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Address of the Node contract.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getNodeHash(uint256)",
      "name": "getNodeHash",
      "description": "",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Node hash as of this node number.",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStakerAddress(uint256)",
      "name": "getStakerAddress",
      "description": "Get the address of the staker at the given index.",
      "parameterDecorators": [
        {
          "name": "stakerNum",
          "description": "Index of the staker.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Address of the staker.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserFacet()",
      "name": "getUserFacet",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(bytes32,uint256[4],address,address,bytes,address[6],address[2],uint256[2])",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_machineHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_rollupParams",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_stakeToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_extraConfig",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "connectedContracts",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_facets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sequencerInboxParams",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isMaster()",
      "name": "isMaster",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isStaked(address)",
      "name": "isStaked",
      "description": "Check whether the given staker is staked.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "Staker address to check.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "True or False for whether the staker was staked.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isZombie(address)",
      "name": "isZombie",
      "description": "",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastStakeBlock()",
      "name": "lastStakeBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Ethereum block that the most recent stake was created.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestConfirmed()",
      "name": "latestConfirmed",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Index of the latest confirmed node.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestNodeCreated()",
      "name": "latestNodeCreated",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Index of the latest rollup node created.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestStakedNode(address)",
      "name": "latestStakedNode",
      "description": "Get the latest staked node of the given staker.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "Staker address to lookup.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Latest node staked of the staker.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minimumAssertionPeriod()",
      "name": "minimumAssertionPeriod",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nodeFactory()",
      "name": "nodeFactory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "outbox()",
      "name": "outbox",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rollupEventBridge()",
      "name": "rollupEventBridge",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sequencerBridge()",
      "name": "sequencerBridge",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sequencerInboxMaxDelayBlocks()",
      "name": "sequencerInboxMaxDelayBlocks",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sequencerInboxMaxDelaySeconds()",
      "name": "sequencerInboxMaxDelaySeconds",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakeToken()",
      "name": "stakeToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakerCount()",
      "name": "stakerCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Number of active stakers currently staked.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawableFunds(address)",
      "name": "withdrawableFunds",
      "description": "Get the amount of funds withdrawable by the given address.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "Address to check the funds of.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of funds withdrawable by owner.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "zombieAddress(uint256)",
      "name": "zombieAddress",
      "description": "Get the original staker address of the zombie at the given index.",
      "parameterDecorators": [
        {
          "name": "zombieNum",
          "description": "Index of the zombie to lookup.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Original staker address of the zombie.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "zombieCount()",
      "name": "zombieCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Current number of un-removed zombies.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "zombieLatestStakedNode(uint256)",
      "name": "zombieLatestStakedNode",
      "description": "Get Latest node that the given zombie at the given index is staked on.",
      "parameterDecorators": [
        {
          "name": "zombieNum",
          "description": "Index of the zombie to lookup.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Latest node that the given zombie is staked on.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}