{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "escrows"
  ],
  "name": "Escrow",
  "description": "Escrow. 단 하나의 Ownership을 가집니다. 베스팅 컨트랙트와 연결되어 작동합니다. Erica token을 예탁 할 수 있는 컨트랙트이며, 여기네는 대상 토큰만 예치할 수 있습니다. 추가적인 보상을 등록해야 한다면 해당 정보를 베스팅 단계에서 등록할 수 있습니다.",
  "eventDecorators": [
    {
      "signature": "Approved(bytes32,uint32)",
      "name": "Approved",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "delay",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Delayed(uint32)",
      "name": "Delayed",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "delay",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposited(address,uint256)",
      "name": "Deposited",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Locked(address,address)",
      "name": "Locked",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "vestingContract",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Requested(address,uint32,uint256)",
      "name": "Requested",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "availableAt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Resolved(bytes32)",
      "name": "Resolved",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Staled(bytes32)",
      "name": "Staled",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Withdrew(address,uint256)",
      "name": "Withdrew",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "customer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DOMAIN_SEPARATOR()",
      "name": "DOMAIN_SEPARATOR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "VESTING_TYPEHASH()",
      "name": "VESTING_TYPEHASH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeWithdrawDelay(uint32)",
      "name": "changeWithdrawDelay",
      "description": "지연시간을 변경하며, 이 조치는 현재 대기중인 출금 요청에 반영되지 않습니다.",
      "parameterDecorators": [
        {
          "name": "withdrawDelay",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delay()",
      "name": "delay",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(uint256)",
      "name": "deposit",
      "description": "Social 토큰을 예치하는 함수입니다. 이를 호출하기 위해서는 토큰이 해당 컨트랙트에 approve되어 있어야 합니다.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "예치할 토큰의 수량.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositWithSig(uint256,uint256,uint8,bytes32,bytes32)",
      "name": "depositWithSig",
      "description": "Social 토큰을 예치하는 함수입니다. 이를 호출하기 위해서는 ERC2612를 만족하는 서명값과 제한 시간을 필요로 합니다.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "예치할 토큰의 수량.",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "해당 서명의 제한 시간.",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "서명 값 v.",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "서명 값 r.",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "서명 값 s.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deposits(address)",
      "name": "deposits",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "endOf(bytes32)",
      "name": "endOf",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,uint32)",
      "name": "initialize",
      "description": "해당 컨트랙트를 초기화 합니다.",
      "parameterDecorators": [
        {
          "name": "socialToken",
          "description": "해당 컨트랙트에 예치되어야 하는 토큰 주소.",
          "recommendedTypes": []
        },
        {
          "name": "vestingAddr",
          "description": "토큰을 실제로 수여할 컨트랙트 주소.",
          "recommendedTypes": []
        },
        {
          "name": "withdrawDelay",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nonces(address)",
      "name": "nonces",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Get the address of the owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "resignOwnership()",
      "name": "resignOwnership",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "social()",
      "name": "social",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stateOf(bytes32)",
      "name": "stateOf",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Set the address of the new owner of the contract.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "The address of the new owner of the contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "version()",
      "name": "version",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vesting(tuple(address,address,uint256,address[],uint256[],uint32,uint32,uint8,bytes32,bytes32))",
      "name": "vesting",
      "description": "예치되어 있는 토큰을 특정 주소로 할당하는 함수이며, 이를 통해서 Vesting Contract를 호출하게 됩니다. recruiter는 아래 정보와 함께 서명값을 해당 컨트랙트의 소유자에게 전송하여야 합니다.",
      "parameterDecorators": [
        {
          "name": "param",
          "description": "VestingParam 데이터.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "recruiter",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "to",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "subTokens",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "subAmounts",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "startTime",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "endTime",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "v",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "r",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "s",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vestingContract()",
      "name": "vestingContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "waits(address)",
      "name": "waits",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw()",
      "name": "withdraw",
      "description": "출금 요청된 금액 전부, 지연 시간이 지났을 때 출금됩니다.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawRequest(uint256)",
      "name": "withdrawRequest",
      "description": "예치된 토큰을 출금하기 위해 요청.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "출금 요청할 수량 요청.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}