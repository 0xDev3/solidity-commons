{"schema":"../schema.json","tags":["bridges"],"name":"Bridge","description":"BandChain Bridge.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`. Emitted when the implementation of a variable debt token is upgraded.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"blockDetails(uint256)","name":"blockDetails","description":"Mapping from block height to the struct that contains block time and hash of \"oracle\" iAVL Merkle tree.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"oracleState","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"timeSecond","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"timeNanoSecond","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"relayAndMultiVerify(bytes)","name":"relayAndMultiVerify","description":"Performs oracle state relay and many times of oracle data verification in one go. The caller submits the encoded proof and receives back the decoded data, ready to be validated and used.","parameterDecorators":[{"name":"data","description":"The encoded data for oracle state relay and an array of data verification.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple[]"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":false},{"signature":"relayAndVerify(bytes)","name":"relayAndVerify","description":"Performs oracle state relay and oracle data verification in one go. The caller submits the encoded proof and receives back the decoded data, ready to be validated and used.","parameterDecorators":[{"name":"data","description":"The encoded data for oracle state relay and data verification.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":false},{"signature":"relayBlock(tuple(bytes32,bytes32,bytes32,bytes32,bytes32),tuple(bytes32,uint64,uint64,uint32,bytes32,bytes32,bytes32,bytes32),tuple(bytes32,bytes32,uint8,bytes,bytes)[])","name":"relayBlock","description":"Relays a detail of Bandchain block to the bridge contract.","parameterDecorators":[{"name":"multiStore","description":"Extra multi store to compute app hash. See MultiStore lib.","recommendedTypes":[],"parameters":[{"name":"accToGovStoresMerkleHash","description":"","type":"bytes32"},{"name":"mainAndMintStoresMerkleHash","description":"","type":"bytes32"},{"name":"oracleIAVLStateHash","description":"","type":"bytes32"},{"name":"paramsStoresMerkleHash","description":"","type":"bytes32"},{"name":"slashingToUpgradeStoresMerkleHash","description":"","type":"bytes32"}]},{"name":"merkleParts","description":"Extra merkle parts to compute block hash. See BlockHeaderMerkleParts lib.","recommendedTypes":[],"parameters":[{"name":"versionAndChainIdHash","description":"","type":"bytes32"},{"name":"height","description":"","type":"uint64"},{"name":"timeSecond","description":"","type":"uint64"},{"name":"timeNanoSecond","description":"","type":"uint32"},{"name":"lastBlockIDAndOther","description":"","type":"bytes32"},{"name":"nextValidatorHashAndConsensusHash","description":"","type":"bytes32"},{"name":"lastResultsHash","description":"","type":"bytes32"},{"name":"evidenceAndProposerHash","description":"","type":"bytes32"}]},{"name":"signatures","description":"The signatures signed on this block, sorted alphabetically by address.","recommendedTypes":[],"parameters":[{"name":"r","description":"","type":"bytes32"},{"name":"s","description":"","type":"bytes32"},{"name":"v","description":"","type":"uint8"},{"name":"signedDataPrefix","description":"","type":"bytes"},{"name":"signedDataSuffix","description":"","type":"bytes"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalValidatorPower()","name":"totalValidatorPower","description":"The total voting power of active validators currently on duty.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateValidatorPowers(tuple(address,uint256)[])","name":"updateValidatorPowers","description":"Update validator powers by owner.","parameterDecorators":[{"name":"validators","description":"The changed set of BandChain validators.","recommendedTypes":[],"parameters":[{"name":"addr","description":"","type":"address"},{"name":"power","description":"","type":"uint256"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"validatorPowers(address)","name":"validatorPowers","description":"Mapping from an address to its voting power.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"verifyOracleData(uint256,tuple(string,uint64,bytes,uint64,uint64),tuple(string,uint64,uint64,uint64,uint64,uint8,bytes),uint256,tuple(bool,uint8,uint256,uint256,bytes32)[])","name":"verifyOracleData","description":"Verifies that the given data is a valid data on BandChain as of the relayed block height.","parameterDecorators":[{"name":"blockHeight","description":"The block height. Someone must already relay this block.","recommendedTypes":[]},{"name":"requestPacket","description":"The request packet is this request.","recommendedTypes":[],"parameters":[{"name":"clientID","description":"","type":"string"},{"name":"oracleScriptID","description":"","type":"uint64"},{"name":"params","description":"","type":"bytes"},{"name":"askCount","description":"","type":"uint64"},{"name":"minCount","description":"","type":"uint64"}]},{"name":"responsePacket","description":"The response packet of this request.","recommendedTypes":[],"parameters":[{"name":"clientID","description":"","type":"string"},{"name":"requestID","description":"","type":"uint64"},{"name":"ansCount","description":"","type":"uint64"},{"name":"requestTime","description":"","type":"uint64"},{"name":"resolveTime","description":"","type":"uint64"},{"name":"resolveStatus","description":"","type":"uint8"},{"name":"result","description":"","type":"bytes"}]},{"name":"version","description":"Lastest block height that the data node was updated.","recommendedTypes":[]},{"name":"merklePaths","description":"Merkle proof that shows how the data leave is part of the oracle iAVL.","recommendedTypes":[],"parameters":[{"name":"isDataOnRight","description":"","type":"bool"},{"name":"subtreeHeight","description":"","type":"uint8"},{"name":"subtreeSize","description":"","type":"uint256"},{"name":"subtreeVersion","description":"","type":"uint256"},{"name":"siblingHash","description":"","type":"bytes32"}]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true}]}