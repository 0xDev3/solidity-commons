{
  "schema": "../schema.json",
  "tags": [],
  "name": "RandomAuRa",
  "description": "`ValidatorSetAuRa.newValidatorSet` function.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "getCipher(uint256,address)",
      "name": "getCipher",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_collectRound",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_miningAddress",
          "description": "The mining address of validator.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "commitHash(bytes32,bytes)",
      "name": "commitHash",
      "description": "the node is restarted (see the `getCipher` getter).",
      "parameterDecorators": [
        {
          "name": "_numberHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_cipher",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onFinishCollectRound()",
      "name": "onFinishCollectRound",
      "description": "Can only be called by the `BlockRewardAuRa` contract (by its `reward` function).",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "collectRoundLength()",
      "name": "collectRoundLength",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(uint256,address,bool)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_collectRoundLength",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_validatorSet",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_punishForUnreveal",
          "description": "A boolean flag defining whether to punish validators for unrevealing.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isInitialized()",
      "name": "isInitialized",
      "description": "Returns a boolean flag indicating if the `initialize` function has been called.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "punishForUnreveal()",
      "name": "punishForUnreveal",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "commitPhaseLength()",
      "name": "commitPhaseLength",
      "description": "Returns the length of the commits/reveals phase which is always half of the collection round length.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "revealSkips(uint256,address)",
      "name": "revealSkips",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingEpoch",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_miningAddress",
          "description": "The mining address of the validator.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sentReveal(uint256,address)",
      "name": "sentReveal",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_collectRound",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_miningAddress",
          "description": "The mining address of the validator.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCommitAndCipher(uint256,address)",
      "name": "getCommitAndCipher",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_collectRound",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_miningAddress",
          "description": "The mining address of validator.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isCommitPhase()",
      "name": "isCommitPhase",
      "description": "the number during the current collection round.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nextCommitPhaseStartBlock()",
      "name": "nextCommitPhaseStartBlock",
      "description": "Returns the number of the first block of the next (future) commit phase.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currentCollectRound()",
      "name": "currentCollectRound",
      "description": "Returns the serial number of the current collection round.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nextCollectRoundStartBlock()",
      "name": "nextCollectRoundStartBlock",
      "description": "Returns the number of the first block of the next (future) collection round.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currentSeed()",
      "name": "currentSeed",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "revealSecret(uint256)",
      "name": "revealSecret",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_number",
          "description": "The validator's number.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revealSecretCallable(address,uint256)",
      "name": "revealSecretCallable",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_miningAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_number",
          "description": "The validator's number passed to the `revealSecret` function.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isCommitted(uint256,address)",
      "name": "isCommitted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_collectRound",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_miningAddress",
          "description": "The mining address of the validator.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isRevealPhase()",
      "name": "isRevealPhase",
      "description": "the current collection round.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nextRevealPhaseStartBlock()",
      "name": "nextRevealPhaseStartBlock",
      "description": "Returns the number of the first block of the next (future) reveal phase.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setPunishForUnreveal(bool)",
      "name": "setPunishForUnreveal",
      "description": "Changes the `punishForUnreveal` boolean flag. Can only be called by an owner.",
      "parameterDecorators": [
        {
          "name": "_punishForUnreveal",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "commitHashCallable(address,bytes32)",
      "name": "commitHashCallable",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_miningAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_numberHash",
          "description": "The Keccak-256 hash of validator's number passed to the `commitHash` function.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "validatorSetContract()",
      "name": "validatorSetContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCommit(uint256,address)",
      "name": "getCommit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_collectRound",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_miningAddress",
          "description": "The mining address of validator.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currentCollectRoundStartBlock()",
      "name": "currentCollectRoundStartBlock",
      "description": "Returns the number of the first block of the current collection round.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "revealNumberCallable(address,uint256)",
      "name": "revealNumberCallable",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_miningAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_number",
          "description": "The validator's number passed to the `revealNumber` function.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "revealNumber(uint256)",
      "name": "revealNumber",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_number",
          "description": "The validator's number.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}