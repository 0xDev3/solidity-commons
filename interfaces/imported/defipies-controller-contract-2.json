{"schema":"../schema.json","tags":[],"name":"Controller","description":"DeFiPie's Controller Contract.","eventDecorators":[{"signature":"ActionPaused(string,bool)","name":"ActionPaused","description":"Emitted when an action is paused globally. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"action","description":"","recommendedTypes":[],"indexed":false},{"name":"pauseState","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ActionPaused(address,string,bool)","name":"ActionPaused","description":"Emitted when an action is paused on a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":false},{"name":"action","description":"","recommendedTypes":[],"indexed":false},{"name":"pauseState","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DistributedBorrowerPie(address,address,uint256,uint256)","name":"DistributedBorrowerPie","description":"Emitted when PIE is distributed to a borrower. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":true},{"name":"borrower","description":"","recommendedTypes":[],"indexed":true},{"name":"pieDelta","description":"","recommendedTypes":[],"indexed":false},{"name":"pieBorrowIndex","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DistributedSupplierPie(address,address,uint256,uint256)","name":"DistributedSupplierPie","description":"Emitted when PIE is distributed to a supplier. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":true},{"name":"supplier","description":"","recommendedTypes":[],"indexed":true},{"name":"pieDelta","description":"","recommendedTypes":[],"indexed":false},{"name":"pieSupplyIndex","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Failure(uint256,uint256,uint256)","name":"Failure","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"error","description":"","recommendedTypes":[],"indexed":false},{"name":"info","description":"","recommendedTypes":[],"indexed":false},{"name":"detail","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketEntered(address,address)","name":"MarketEntered","description":"Emitted when an account enters a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketExited(address,address)","name":"MarketExited","description":"Emitted when an account exits a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketListed(address)","name":"MarketListed","description":"Emitted when an admin supports a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketPied(address,bool)","name":"MarketPied","description":"Emitted when market pieed status is changed. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":false},{"name":"isPied","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewCloseFactor(uint256,uint256)","name":"NewCloseFactor","description":"Emitted when close factor is changed by admin. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"oldCloseFactorMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newCloseFactorMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewCollateralFactor(address,uint256,uint256)","name":"NewCollateralFactor","description":"Emitted when a collateral factor is changed by admin. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":false},{"name":"oldCollateralFactorMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newCollateralFactorMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewLiquidationIncentive(uint256,uint256)","name":"NewLiquidationIncentive","description":"Emitted when liquidation incentive is changed by admin. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"oldLiquidationIncentiveMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newLiquidationIncentiveMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewMaxAssets(uint256,uint256)","name":"NewMaxAssets","description":"Emitted when maxAssets is changed by admin. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"oldMaxAssets","description":"","recommendedTypes":[],"indexed":false},{"name":"newMaxAssets","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPauseGuardian(address,address)","name":"NewPauseGuardian","description":"Emitted when pause guardian is changed. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"oldPauseGuardian","description":"","recommendedTypes":[],"indexed":false},{"name":"newPauseGuardian","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPieRate(uint256,uint256)","name":"NewPieRate","description":"Emitted when PIE rate is changed. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"oldPieRate","description":"","recommendedTypes":[],"indexed":false},{"name":"newPieRate","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPriceOracle(address,address)","name":"NewPriceOracle","description":"Emitted when price oracle is changed. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"oldPriceOracle","description":"","recommendedTypes":[],"indexed":false},{"name":"newPriceOracle","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PieSpeedUpdated(address,uint256)","name":"PieSpeedUpdated","description":"Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[],"indexed":true},{"name":"newSpeed","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"_addPieMarkets(address[])","name":"_addPieMarkets","description":"","parameterDecorators":[{"name":"pTokens","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_become(address)","name":"_become","description":"","parameterDecorators":[{"name":"unitroller","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_borrowGuardianPaused()","name":"_borrowGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"_dropPieMarket(address)","name":"_dropPieMarket","description":"Remove a market from pieMarkets, preventing it from earning PIE in the flywheel.","parameterDecorators":[{"name":"pToken","description":"The address of the market to drop.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_mintGuardianPaused()","name":"_mintGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"_setBorrowPaused(address,bool)","name":"_setBorrowPaused","description":"","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[]},{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_setCloseFactor(uint256)","name":"_setCloseFactor","description":"Sets the closeFactor used when liquidating borrows. Admin function to set closeFactor.","parameterDecorators":[{"name":"newCloseFactorMantissa","description":"New close factor, scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See ErrorReporter for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setCollateralFactor(address,uint256)","name":"_setCollateralFactor","description":"Sets the collateralFactor for a market. Admin function to set per-market collateralFactor.","parameterDecorators":[{"name":"pToken","description":"The market to set the factor on.","recommendedTypes":[]},{"name":"newCollateralFactorMantissa","description":"The new collateral factor, scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See ErrorReporter for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setFactoryContract(address)","name":"_setFactoryContract","description":"","parameterDecorators":[{"name":"_factory","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setLiquidationIncentive(uint256)","name":"_setLiquidationIncentive","description":"Sets liquidationIncentive. Admin function to set liquidationIncentive.","parameterDecorators":[{"name":"newLiquidationIncentiveMantissa","description":"New liquidationIncentive scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See ErrorReporter for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setMaxAssets(uint256)","name":"_setMaxAssets","description":"Sets maxAssets which controls how many markets can be entered. Admin function to set maxAssets.","parameterDecorators":[{"name":"newMaxAssets","description":"New max assets.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See ErrorReporter for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setMintPaused(address,bool)","name":"_setMintPaused","description":"","parameterDecorators":[{"name":"pToken","description":"","recommendedTypes":[]},{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_setPauseGuardian(address)","name":"_setPauseGuardian","description":"Admin function to change the Pause Guardian.","parameterDecorators":[{"name":"newPauseGuardian","description":"The address of the new Pause Guardian.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See enum Error for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setPieAddress(address)","name":"_setPieAddress","description":"Sets a PIE address for the controller.","parameterDecorators":[{"name":"pieAddress_","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setPieRate(uint256)","name":"_setPieRate","description":"Set the amount of PIE distributed per block.","parameterDecorators":[{"name":"pieRate_","description":"The amount of PIE wei per block to distribute.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setPriceOracle(address)","name":"_setPriceOracle","description":"Sets a new price oracle for the controller. Admin function to set a new price oracle.","parameterDecorators":[{"name":"newOracle","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure (see ErrorReporter.sol for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setSeizePaused(bool)","name":"_setSeizePaused","description":"","parameterDecorators":[{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_setTransferPaused(bool)","name":"_setTransferPaused","description":"","parameterDecorators":[{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_supportMarket(address)","name":"_supportMarket","description":"Add the market to the markets mapping and set it as listed. Admin function to set isListed and add support for the market.","parameterDecorators":[{"name":"pToken","description":"The address of the market (token) to list.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See enum Error for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"accountAssets(address,uint256)","name":"accountAssets","description":"Per-account mapping of \"assets you are in\", capped by maxAssets.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"admin()","name":"admin","description":"Administrator for this contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"allMarkets(uint256)","name":"allMarkets","description":"A list of all markets.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowAllowed(address,address,uint256)","name":"borrowAllowed","description":"Checks if the account should be allowed to borrow the underlying asset of the given market.","parameterDecorators":[{"name":"pToken","description":"The market to verify the borrow against.","recommendedTypes":[]},{"name":"borrower","description":"The account which would borrow the asset.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of underlying the account would borrow.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the borrow is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"borrowGuardianPaused(address)","name":"borrowGuardianPaused","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"checkMembership(address,address)","name":"checkMembership","description":"Returns whether the given account is entered in the given asset.","parameterDecorators":[{"name":"account","description":"The address of the account to check.","recommendedTypes":[]},{"name":"pToken","description":"The pToken to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if the account is in the asset, otherwise false.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"claimPie(address,address[])","name":"claimPie","description":"Claim all the pie accrued by holder in the specified markets.","parameterDecorators":[{"name":"holder","description":"The address to claim PIE for.","recommendedTypes":[]},{"name":"pTokens","description":"The list of markets to claim PIE in.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimPie(address)","name":"claimPie","description":"Claim all the pie accrued by holder in all markets.","parameterDecorators":[{"name":"holder","description":"The address to claim PIE for.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimPie(address[],address[],bool,bool)","name":"claimPie","description":"Claim all pie accrued by the holders.","parameterDecorators":[{"name":"holders","description":"The addresses to claim PIE for.","recommendedTypes":[]},{"name":"pTokens","description":"The list of markets to claim PIE in.","recommendedTypes":[]},{"name":"borrowers","description":"Whether or not to claim PIE earned by borrowing.","recommendedTypes":[]},{"name":"suppliers","description":"Whether or not to claim PIE earned by supplying.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"closeFactorMantissa()","name":"closeFactorMantissa","description":"Multiplier used to calculate the maximum repayAmount when liquidating a borrow.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"controllerImplementation()","name":"controllerImplementation","description":"Active brains of Unitroller.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"enterMarkets(address[])","name":"enterMarkets","description":"Add assets to be included in account liquidity calculation.","parameterDecorators":[{"name":"pTokens","description":"The list of addresses of the pToken markets to be enabled.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Success indicator for whether each corresponding market was entered.","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":false},{"signature":"exitMarket(address)","name":"exitMarket","description":"Removes asset from sender's account liquidity calculation. Sender must not have an outstanding borrow balance in the asset, or be providing neccessary collateral for an outstanding borrow.","parameterDecorators":[{"name":"pTokenAddress","description":"The address of the asset to be removed.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Whether or not the account successfully exited the market.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"factory()","name":"factory","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getAccountLiquidity(address)","name":"getAccountLiquidity","description":"Determine the current account liquidity wrt collateral requirements.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getAllMarkets()","name":"getAllMarkets","description":"Return all of the markets. The automatic getter may be used to access an individual market.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The list of market addresses.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getAssetsIn(address)","name":"getAssetsIn","description":"Returns the assets an account has entered.","parameterDecorators":[{"name":"account","description":"The address of the account to pull assets for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"A dynamic list with the assets the account has entered.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getBlockNumber()","name":"getBlockNumber","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getHypotheticalAccountLiquidity(address,address,uint256,uint256)","name":"getHypotheticalAccountLiquidity","description":"Determine what the account liquidity would be if the given amounts were redeemed/borrowed.","parameterDecorators":[{"name":"account","description":"The account to determine liquidity for.","recommendedTypes":[]},{"name":"pTokenModify","description":"The market to hypothetically redeem/borrow in.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of tokens to hypothetically redeem.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of underlying to hypothetically borrow.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getOracle()","name":"getOracle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getPieAddress()","name":"getPieAddress","description":"Return the address of the PIE token.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address of PIE.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isController()","name":"isController","description":"Indicator that this is a Controller contract (for inspection).","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"liquidateBorrowAllowed(address,address,address,address,uint256)","name":"liquidateBorrowAllowed","description":"Checks if the liquidation should be allowed to occur.","parameterDecorators":[{"name":"pTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"pTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of underlying being repaid.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"liquidateCalculateSeizeTokens(address,address,uint256)","name":"liquidateCalculateSeizeTokens","description":"Calculate number of tokens of collateral asset to seize given an underlying amount. Used in liquidation (called in pToken.liquidateBorrowFresh).","parameterDecorators":[{"name":"pTokenBorrowed","description":"The address of the borrowed pToken.","recommendedTypes":[]},{"name":"pTokenCollateral","description":"The address of the collateral pToken.","recommendedTypes":[]},{"name":"actualRepayAmount","description":"The amount of pTokenBorrowed underlying to convert into pTokenCollateral tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"liquidationIncentiveMantissa()","name":"liquidationIncentiveMantissa","description":"Multiplier representing the discount on collateral that a liquidator receives.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"markets(address)","name":"markets","description":"Official mapping of pTokens -> Market metadata.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"isListed","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"collateralFactorMantissa","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"isPied","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"maxAssets()","name":"maxAssets","description":"Max number of assets a single account can participate in (borrow or use as collateral).","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"mintAllowed(address,address,uint256)","name":"mintAllowed","description":"Checks if the account should be allowed to mint tokens in the given market.","parameterDecorators":[{"name":"pToken","description":"The market to verify the mint against.","recommendedTypes":[]},{"name":"minter","description":"The account which would get the minted tokens.","recommendedTypes":[]},{"name":"mintAmount","description":"The amount of underlying being supplied to the market in exchange for tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"mintGuardianPaused(address)","name":"mintGuardianPaused","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"oracle()","name":"oracle","description":"Oracle which gives the price of any given asset.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pauseGuardian()","name":"pauseGuardian","description":"The Pause Guardian can pause certain actions as a safety mechanism. Actions which allow users to remove their own assets cannot be paused. Liquidation / seizing / transfer can only be paused globally, not by market.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingAdmin()","name":"pendingAdmin","description":"Pending administrator for this contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingControllerImplementation()","name":"pendingControllerImplementation","description":"Pending brains of Unitroller.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pieAccrued(address)","name":"pieAccrued","description":"The PIE accrued but not yet transferred to each user.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pieAddress()","name":"pieAddress","description":"Address of the PIE token.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pieBorrowState(address)","name":"pieBorrowState","description":"The PIE market borrow state for each market.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"","recommendedTypes":[],"solidityType":"uint224"},{"name":"block","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"pieBorrowerIndex(address,address)","name":"pieBorrowerIndex","description":"The PIE borrow index for each market for each borrower as of the last time they accrued PIE.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pieClaimThreshold()","name":"pieClaimThreshold","description":"The threshold above which the flywheel transfers PIE, in wei.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pieInitialIndex()","name":"pieInitialIndex","description":"The initial PIE index for a market.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint224"}],"emittableEvents":[],"readOnly":true},{"signature":"pieRate()","name":"pieRate","description":"The rate at which the flywheel distributes PIE, per block.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pieSpeeds(address)","name":"pieSpeeds","description":"The portion of pieRate that each market currently receives.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pieSupplierIndex(address,address)","name":"pieSupplierIndex","description":"The PIE borrow index for each market for each supplier as of the last time they accrued PIE.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pieSupplyState(address)","name":"pieSupplyState","description":"The PIE market supply state for each market.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"","recommendedTypes":[],"solidityType":"uint224"},{"name":"block","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"redeemAllowed(address,address,uint256)","name":"redeemAllowed","description":"Checks if the account should be allowed to redeem tokens in the given market.","parameterDecorators":[{"name":"pToken","description":"The market to verify the redeem against.","recommendedTypes":[]},{"name":"redeemer","description":"The account which would redeem the tokens.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of pTokens to exchange for the underlying asset in the market.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the redeem is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"refreshPieSpeeds()","name":"refreshPieSpeeds","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"repayBorrowAllowed(address,address,address,uint256)","name":"repayBorrowAllowed","description":"Checks if the account should be allowed to repay a borrow in the given market.","parameterDecorators":[{"name":"pToken","description":"The market to verify the repay against.","recommendedTypes":[]},{"name":"payer","description":"The account which would repay the asset.","recommendedTypes":[]},{"name":"borrower","description":"The account which would borrowed the asset.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of the underlying asset the account would repay.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the repay is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"seizeAllowed(address,address,address,address,uint256)","name":"seizeAllowed","description":"Checks if the seizing of assets should be allowed to occur.","parameterDecorators":[{"name":"pTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"pTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"seizeTokens","description":"The number of collateral tokens to seize.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"seizeGuardianPaused()","name":"seizeGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"transferAllowed(address,address,address,uint256)","name":"transferAllowed","description":"Checks if the account should be allowed to transfer tokens in the given market.","parameterDecorators":[{"name":"pToken","description":"The market to verify the transfer against.","recommendedTypes":[]},{"name":"src","description":"The account which sources the tokens.","recommendedTypes":[]},{"name":"dst","description":"The account which receives the tokens.","recommendedTypes":[]},{"name":"transferTokens","description":"The number of pTokens to transfer.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the transfer is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"transferGuardianPaused()","name":"transferGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true}]}