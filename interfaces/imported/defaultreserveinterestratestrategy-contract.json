{
  "schema": "../schema.json",
  "tags": [
    "strategies",
    "aave"
  ],
  "name": "DefaultReserveInterestRateStrategy",
  "description": "DefaultReserveInterestRateStrategy contract. The model of interest rate is based on 2 slopes, one before the `OPTIMAL_USAGE_RATIO` point of usage and another from that one to 100%. - An instance of this same contract, can't be used across different Aave markets, due to the caching of the PoolAddressesProvider*. Implements the calculation of the interest rates depending on the reserve state.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "ADDRESSES_PROVIDER()",
      "name": "ADDRESSES_PROVIDER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_EXCESS_STABLE_TO_TOTAL_DEBT_RATIO()",
      "name": "MAX_EXCESS_STABLE_TO_TOTAL_DEBT_RATIO",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_EXCESS_USAGE_RATIO()",
      "name": "MAX_EXCESS_USAGE_RATIO",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "OPTIMAL_STABLE_TO_TOTAL_DEBT_RATIO()",
      "name": "OPTIMAL_STABLE_TO_TOTAL_DEBT_RATIO",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "OPTIMAL_USAGE_RATIO()",
      "name": "OPTIMAL_USAGE_RATIO",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateInterestRates(tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address))",
      "name": "calculateInterestRates",
      "description": "Calculates the interest rates depending on the reserve's state and configurations.",
      "parameterDecorators": [
        {
          "name": "params",
          "description": "The parameters needed to calculate interest rates.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "unbacked",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liquidityAdded",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liquidityTaken",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "totalStableDebt",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "totalVariableDebt",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "averageStableBorrowRate",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "reserveFactor",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "reserve",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "aToken",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "liquidityRate The liquidity rate expressed in rays.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_1",
          "description": "stableBorrowRate The stable borrow rate expressed in rays.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_2",
          "description": "variableBorrowRate The variable borrow rate expressed in rays*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBaseStableBorrowRate()",
      "name": "getBaseStableBorrowRate",
      "description": "Returns the base stable borrow rate.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The base stable borrow rate*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBaseVariableBorrowRate()",
      "name": "getBaseVariableBorrowRate",
      "description": "Returns the base variable borrow rate.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The base variable borrow rate, expressed in ray*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMaxVariableBorrowRate()",
      "name": "getMaxVariableBorrowRate",
      "description": "Returns the maximum variable borrow rate.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The maximum variable borrow rate, expressed in ray*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStableRateExcessOffset()",
      "name": "getStableRateExcessOffset",
      "description": "Returns the stable rate excess offset. An additional premium applied to the stable when stable debt > OPTIMAL_STABLE_TO_TOTAL_DEBT_RATIO.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The stable rate excess offset.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStableRateSlope1()",
      "name": "getStableRateSlope1",
      "description": "Returns the stable rate slope below optimal usage ratio. Its the stable rate when usage ratio > 0 and <= OPTIMAL_USAGE_RATIO.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The stable rate slope*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStableRateSlope2()",
      "name": "getStableRateSlope2",
      "description": "Returns the stable rate slope above optimal usage ratio. Its the variable rate when usage ratio > OPTIMAL_USAGE_RATIO.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The stable rate slope*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getVariableRateSlope1()",
      "name": "getVariableRateSlope1",
      "description": "Returns the variable rate slope below optimal usage ratio. Its the variable rate when usage ratio > 0 and <= OPTIMAL_USAGE_RATIO.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The variable rate slope*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getVariableRateSlope2()",
      "name": "getVariableRateSlope2",
      "description": "Returns the variable rate slope above optimal usage ratio. Its the variable rate when usage ratio > OPTIMAL_USAGE_RATIO.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The variable rate slope*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}