{
  "schema": "../schema.json",
  "tags": [],
  "name": "Owner",
  "description": "Owner. Set & change owner.",
  "eventDecorators": [
    {
      "signature": "OwnerSet(address,address)",
      "name": "OwnerSet",
      "description": "Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.",
      "parameterDecorators": [
        {
          "name": "oldOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "changeOwner(address)",
      "name": "changeOwner",
      "description": "constructor() { owner = msg.sender; // 'msg.sender' is sender of current call, contract deployer for a constructor emit OwnerSet(address(0), owner); } /**. Set contract deployer as owner } /**Change owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "address of new owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getOwner()",
      "name": "getOwner",
      "description": "Return owner address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address of owner.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}