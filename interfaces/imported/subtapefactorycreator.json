{
  "schema": "../schema.json",
  "tags": [],
  "name": "SubtapeFactoryCreator",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "contractCount()",
      "name": "contractCount",
      "description": "Counter for current contract id upgraded making this public for debugging reasons but we can make it private again in a bit.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createSubtapeFactory(string,string)",
      "name": "createSubtapeFactory",
      "description": "Creates a subtape factory. note:I want this function to be callable from the inheriting contract. I am not super great at solidity yet, so I'm not totally sure what these access modifiers do. I had it set as external but I was not able to call it from the inheriting function when it was external. Public was the only way I could call it from the inheriting function AND test the functionality of this contract on its own (sort of like unit testing the contract vs integration testing the main contract) Anyways, I'm not sure if thats the right way to go about it, so if these contracts get audited that is something I would want to check so I'm making a point of it here.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_symbol",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getFactoryAtId(uint256)",
      "name": "getFactoryAtId",
      "description": "",
      "parameterDecorators": [
        {
          "name": "factoryId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "implementation()",
      "name": "implementation",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}