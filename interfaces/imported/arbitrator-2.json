{"schema":"../schema.json","tags":[],"name":"Arbitrator","description":"","eventDecorators":[{"signature":"LogRequestArbitration(bytes32,uint256,address,uint256)","name":"LogRequestArbitration","description":"","parameterDecorators":[{"name":"question_id","description":"","recommendedTypes":[],"indexed":true},{"name":"fee_paid","description":"","recommendedTypes":[],"indexed":false},{"name":"requester","description":"","recommendedTypes":[],"indexed":false},{"name":"remaining","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetRealitio(address)","name":"LogSetRealitio","description":"","parameterDecorators":[{"name":"realitio","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetQuestionFee(uint256)","name":"LogSetQuestionFee","description":"","parameterDecorators":[{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetDisputeFee(uint256)","name":"LogSetDisputeFee","description":"","parameterDecorators":[{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetCustomDisputeFee(bytes32,uint256)","name":"LogSetCustomDisputeFee","description":"","parameterDecorators":[{"name":"question_id","description":"","recommendedTypes":[],"indexed":true},{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"realitycheck()","name":"realitycheck","description":"Returns the Realitio contract address - deprecated in favour of realitio().","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setDisputeFee(uint256)","name":"setDisputeFee","description":"","parameterDecorators":[{"name":"fee","description":"The default fee amount.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"metadata()","name":"metadata","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"setCustomDisputeFee(bytes32,uint256)","name":"setCustomDisputeFee","description":"","parameterDecorators":[{"name":"question_id","description":"","recommendedTypes":[]},{"name":"fee","description":"The fee amount.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setQuestionFee(uint256)","name":"setQuestionFee","description":"This fee can be used as a revenue source, an anti-spam measure, or both.","parameterDecorators":[{"name":"fee","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdraw(address)","name":"withdraw","description":"","parameterDecorators":[{"name":"addr","description":"The address to which the balance should be sent.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRealitio(address)","name":"setRealitio","description":"","parameterDecorators":[{"name":"addr","description":"The address of the Reality Check contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawERC20(address,address)","name":"withdrawERC20","description":"Also only normally useful if a per-question fee is set, otherwise we only have ETH.","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]},{"name":"addr","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"arbitration_bounties(bytes32)","name":"arbitration_bounties","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getDisputeFee(bytes32)","name":"getDisputeFee","description":"Uses a general default, but can be over-ridden on a question-by-question basis.","parameterDecorators":[{"name":"question_id","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"requestArbitration(bytes32,uint256)","name":"requestArbitration","description":"","parameterDecorators":[{"name":"question_id","description":"","recommendedTypes":[]},{"name":"max_previous","description":"If specified, reverts if a bond higher than this was submitted after you sent your transaction.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"realitio()","name":"realitio","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)","name":"assignWinnerAndSubmitAnswerByArbitrator","description":"","parameterDecorators":[{"name":"question_id","description":"","recommendedTypes":[]},{"name":"answer","description":"","recommendedTypes":[]},{"name":"payee_if_wrong","description":"","recommendedTypes":[]},{"name":"last_history_hash","description":"","recommendedTypes":[]},{"name":"last_answer_or_commitment_id","description":"","recommendedTypes":[]},{"name":"last_answerer","description":"The address that supplied the last answer.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMetaData(string)","name":"setMetaData","description":"Set a metadata string, expected to be JSON, containing things like arbitrator TOS address.","parameterDecorators":[{"name":"_metadata","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"callWithdraw()","name":"callWithdraw","description":"This works in the same way whether the realitio contract is using ETH or an ERC20 token.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"cancelArbitration(bytes32)","name":"cancelArbitration","description":"","parameterDecorators":[{"name":"question_id","description":"The question in question.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"submitAnswerByArbitrator(bytes32,bytes32,address)","name":"submitAnswerByArbitrator","description":"","parameterDecorators":[{"name":"question_id","description":"","recommendedTypes":[]},{"name":"answer","description":"","recommendedTypes":[]},{"name":"answerer","description":"The answerer. If arbitration changed the answer, it should be the payer. If not, the old answerer.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}