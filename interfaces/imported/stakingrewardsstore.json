{"schema":"../schema.json","tags":["liquidity"],"name":"StakingRewardsStore","description":"This contract stores staking rewards liquidity and pool specific data.","eventDecorators":[{"signature":"PoolProgramAdded(address,uint256,uint256,uint256)","name":"PoolProgramAdded","description":"triggered when a program is being added.","parameterDecorators":[{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[],"indexed":true},{"name":"startTime","description":"the starting time of the program.","recommendedTypes":[],"indexed":false},{"name":"endTime","description":"the ending time of the program.","recommendedTypes":[],"indexed":false},{"name":"rewardRate","description":"the program's rewards rate per-second.","recommendedTypes":[],"indexed":false}]},{"signature":"PoolProgramRemoved(address)","name":"PoolProgramRemoved","description":"triggered when a program is being removed.","parameterDecorators":[{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[],"indexed":true}]},{"signature":"ProviderLastClaimTimeUpdated(address,uint256)","name":"ProviderLastClaimTimeUpdated","description":"triggered when provider's last claim time is being updated.","parameterDecorators":[{"name":"provider","description":"the owner of the liquidity.","recommendedTypes":[],"indexed":true},{"name":"claimTime","description":"the time of the last claim.","recommendedTypes":[],"indexed":false}]},{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"ROLE_OWNER()","name":"ROLE_OWNER","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"ROLE_SEEDER()","name":"ROLE_SEEDER","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"ROLE_SUPERVISOR()","name":"ROLE_SUPERVISOR","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"addPastPoolPrograms(address[],address[2][],uint32[2][],uint256[],uint256[],uint256[])","name":"addPastPoolPrograms","description":"adds past programs.","parameterDecorators":[{"name":"poolTokens","description":"pool tokens representing the rewards pool.","recommendedTypes":[]},{"name":"reserveTokens","description":"reserve tokens representing the liquidity in the pool.","recommendedTypes":[]},{"name":"rewardShares","description":"reserve reward shares.","recommendedTypes":[]},{"name":"startTime","description":"starting times of the program.","recommendedTypes":[]},{"name":"endTimes","description":"ending times of the program.","recommendedTypes":[]},{"name":"rewardRates","description":"program's rewards rate per-second.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addPoolProgram(address,address[2],uint32[2],uint256,uint256)","name":"addPoolProgram","description":"adds a program.","parameterDecorators":[{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[]},{"name":"reserveTokens","description":"the reserve tokens representing the liquidity in the pool.","recommendedTypes":[]},{"name":"rewardShares","description":"reserve reward shares.","recommendedTypes":[]},{"name":"endTime","description":"the ending time of the program.","recommendedTypes":[]},{"name":"rewardRate","description":"the program's rewards rate per-second.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"extendPoolProgram(address,uint256)","name":"extendPoolProgram","description":"extends the ending time of a program.","parameterDecorators":[{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[]},{"name":"newEndTime","description":"the new ending time of the program.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMember(bytes32,uint256)","name":"getRoleMember","description":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMemberCount(bytes32)","name":"getRoleMemberCount","description":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isPoolParticipating(address)","name":"isPoolParticipating","description":"returns whether the specified pool is participating in the rewards program.","parameterDecorators":[{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"whether the specified pool is participating in the rewards program.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isReserveParticipating(address,address)","name":"isReserveParticipating","description":"returns whether the specified reserve is participating in the rewards program.","parameterDecorators":[{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[]},{"name":"reserveToken","description":"the reserve token of the added liquidity.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"whether the specified reserve is participating in the rewards program.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"poolProgram(address)","name":"poolProgram","description":"returns a program.","parameterDecorators":[{"name":"poolToken","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"address[2]"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"uint32[2]"}],"emittableEvents":[],"readOnly":true},{"signature":"poolPrograms()","name":"poolPrograms","description":"returns all programs.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256[]"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256[]"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint256[]"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"address[2][]"},{"name":"param5","description":"","recommendedTypes":[],"solidityType":"uint32[2][]"}],"emittableEvents":[],"readOnly":true},{"signature":"poolRewards(address,address)","name":"poolRewards","description":"returns the rewards data of a specific reserve in a specific pool.","parameterDecorators":[{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[]},{"name":"reserveToken","description":"the reserve token in the rewards pool.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"providerLastClaimTime(address)","name":"providerLastClaimTime","description":"returns provider's last claim time.","parameterDecorators":[{"name":"provider","description":"the owner of the liquidity.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"provider's last claim time.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"providerRewards(address,address,address)","name":"providerRewards","description":"returns rewards data of a specific provider.","parameterDecorators":[{"name":"provider","description":"the owner of the liquidity.","recommendedTypes":[]},{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[]},{"name":"reserveToken","description":"the reserve token in the rewards pool.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param5","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"removePoolProgram(address)","name":"removePoolProgram","description":"removes a program.","parameterDecorators":[{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"setPoolsRewardData(address[],address[],uint256[],uint256[],uint256[])","name":"setPoolsRewardData","description":"seeds pool rewards data for multiple pools.","parameterDecorators":[{"name":"poolTokens","description":"pool tokens representing the rewards pool.","recommendedTypes":[]},{"name":"reserveTokens","description":"reserve tokens representing the liquidity in the pool.","recommendedTypes":[]},{"name":"lastUpdateTimes","description":"last update times (for both the network and reserve tokens).","recommendedTypes":[]},{"name":"rewardsPerToken","description":"reward rates per-token (for both the network and reserve tokens).","recommendedTypes":[]},{"name":"totalClaimedRewards","description":"total claimed rewards up until now (for both the network and reserve tokens).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setProviderRewardData(address,address,address[],uint256[],uint256[],uint256[],uint256[],uint256[],uint32[])","name":"setProviderRewardData","description":"seeds specific provider's reward data for multiple providers.","parameterDecorators":[{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[]},{"name":"reserveToken","description":"the reserve token in the rewards pool.","recommendedTypes":[]},{"name":"providers","description":"owners of the liquidity.","recommendedTypes":[]},{"name":"rewardsPerToken","description":"new reward rates per-token.","recommendedTypes":[]},{"name":"pendingBaseRewards","description":"updated pending base rewards.","recommendedTypes":[]},{"name":"totalClaimedRewards","description":"total claimed rewards up until now.","recommendedTypes":[]},{"name":"effectiveStakingTimes","description":"new effective staking times.","recommendedTypes":[]},{"name":"baseRewardsDebts","description":"updated base rewards debts.","recommendedTypes":[]},{"name":"baseRewardsDebtMultipliers","description":"updated base rewards debt multipliers.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updatePoolRewardsData(address,address,uint256,uint256,uint256)","name":"updatePoolRewardsData","description":"updates the reward data of a specific reserve in a specific pool.","parameterDecorators":[{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[]},{"name":"reserveToken","description":"the reserve token in the rewards pool.","recommendedTypes":[]},{"name":"lastUpdateTime","description":"the last update time.","recommendedTypes":[]},{"name":"rewardPerToken","description":"the new reward rate per-token.","recommendedTypes":[]},{"name":"totalClaimedRewards","description":"the total claimed rewards up until now.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateProviderLastClaimTime(address)","name":"updateProviderLastClaimTime","description":"updates provider's last claim time.","parameterDecorators":[{"name":"provider","description":"the owner of the liquidity.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateProviderRewardsData(address,address,address,uint256,uint256,uint256,uint256,uint256,uint32)","name":"updateProviderRewardsData","description":"updates provider rewards data.","parameterDecorators":[{"name":"provider","description":"the owner of the liquidity.","recommendedTypes":[]},{"name":"poolToken","description":"the pool token representing the rewards pool.","recommendedTypes":[]},{"name":"reserveToken","description":"the reserve token in the rewards pool.","recommendedTypes":[]},{"name":"rewardPerToken","description":"the new reward rate per-token.","recommendedTypes":[]},{"name":"pendingBaseRewards","description":"the updated pending base rewards.","recommendedTypes":[]},{"name":"totalClaimedRewards","description":"the total claimed rewards up until now.","recommendedTypes":[]},{"name":"effectiveStakingTime","description":"the new effective staking time.","recommendedTypes":[]},{"name":"baseRewardsDebt","description":"the updated base rewards debt.","recommendedTypes":[]},{"name":"baseRewardsDebtMultiplier","description":"the updated base rewards debt multiplier.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}