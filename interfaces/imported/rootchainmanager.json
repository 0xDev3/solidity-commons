{
  "schema": "../schema.json",
  "tags": [],
  "name": "RootChainManager",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "depositEtherFor(address)",
      "name": "depositEtherFor",
      "description": "Move ether from root to child chain, accepts ether transfer Keep in mind this ether cannot be used to pay gas on child chain Use Matic tokens deposited using plasma mechanism for that.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "address of account that should receive WETH on child chain.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositFor(address,address,bytes)",
      "name": "depositFor",
      "description": "Move tokens from root to child chain. This mechanism supports arbitrary tokens as long as its predicate has been registered and the token is mapped.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "address of account that should receive this deposit on child chain.",
          "recommendedTypes": []
        },
        {
          "name": "rootToken",
          "description": "address of token that is being deposited.",
          "recommendedTypes": []
        },
        {
          "name": "depositData",
          "description": "bytes data that is sent to predicate and child token contracts to handle deposit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ethPredicateAddress()",
      "name": "ethPredicateAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "predicateAddress()",
      "name": "predicateAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setPredicateAddress(address,address)",
      "name": "setPredicateAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "eth",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}