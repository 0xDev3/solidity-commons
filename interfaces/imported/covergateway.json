{
  "schema": "../schema.json",
  "tags": [],
  "name": "CoverGateway",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "buyCover(tuple(uint256,address,uint8,uint256,uint256,tuple,bytes))",
      "name": "buyCover",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_buyCover",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "offerId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "buyer",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "coverMonths",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "coverQty",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "insuredSum",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "assetPricing",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "premiumPermit",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeConfigAddress(address)",
      "name": "changeConfigAddress",
      "description": "change config contract address.",
      "parameterDecorators": [
        {
          "name": "_configAddress",
          "description": "is the new address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeDependentContractAddress()",
      "name": "changeDependentContractAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "coinSigner()",
      "name": "coinSigner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "devWallet()",
      "name": "devWallet",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEndAt(uint256)",
      "name": "getEndAt",
      "description": "calculate endAt for cover.",
      "parameterDecorators": [
        {
          "name": "_coverId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "endAt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStartAt(uint256)",
      "name": "getStartAt",
      "description": "calculate startAt for cover.",
      "parameterDecorators": [
        {
          "name": "_coverId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "startAt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isCoverActiveExists(uint256)",
      "name": "isCoverActiveExists",
      "description": "for checking is still there any cover active on offer cover.",
      "parameterDecorators": [
        {
          "name": "_offerId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "false = there is NO cover active on this offer, true = there is any cover active on this offer.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isRequestCoverSucceed(uint256)",
      "name": "isRequestCoverSucceed",
      "description": "get actual state of cover request.",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "state",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "provideCover(tuple(uint256,address,uint256,tuple,bytes))",
      "name": "provideCover",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_provideCover",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "requestId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "provider",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "fundingSum",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "assetPricing",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "assetPermit",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}