{
  "schema": "../schema.json",
  "tags": [
    "nft"
  ],
  "name": "DigitalaxAuction",
  "description": "Primary sale auction contract for Digitalax NFTs.",
  "eventDecorators": [
    {
      "signature": "AuctionCancelled(uint256)",
      "name": "AuctionCancelled",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "garmentTokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AuctionCreated(uint256)",
      "name": "AuctionCreated",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "garmentTokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AuctionResulted(uint256,address,uint256)",
      "name": "AuctionResulted",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "newAmount",
          "description": "new amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "prevAmount",
          "description": "previous amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "token address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BidPlaced(uint256,address,uint256)",
      "name": "BidPlaced",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "newAmount",
          "description": "new amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "prevAmount",
          "description": "previous amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "token address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BidRefunded(address,uint256)",
      "name": "BidRefunded",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "bidder",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "bid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BidWithdrawn(uint256,address,uint256)",
      "name": "BidWithdrawn",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "newAmount",
          "description": "new amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "prevAmount",
          "description": "previous amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "token address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DigitalaxAuctionContractDeployed()",
      "name": "DigitalaxAuctionContractDeployed",
      "description": "Event emitted only on construction. To be used by indexers. triggered when the system balance for a given token is updated.",
      "parameterDecorators": []
    },
    {
      "signature": "PauseToggled(bool)",
      "name": "PauseToggled",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "isPaused",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdateAccessControls(address)",
      "name": "UpdateAccessControls",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "accessControls",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "UpdateAuctionEndTime(uint256,uint256)",
      "name": "UpdateAuctionEndTime",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "garmentTokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdateAuctionReservePrice(uint256,uint256)",
      "name": "UpdateAuctionReservePrice",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "garmentTokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "reservePrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdateAuctionStartTime(uint256,uint256)",
      "name": "UpdateAuctionStartTime",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "garmentTokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdateBidWithdrawalLockTime(uint256)",
      "name": "UpdateBidWithdrawalLockTime",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "bidWithdrawalLockTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdateMinBidIncrement(uint256)",
      "name": "UpdateMinBidIncrement",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "minBidIncrement",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdatePlatformFee(uint256)",
      "name": "UpdatePlatformFee",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "platformFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdatePlatformFeeRecipient(address)",
      "name": "UpdatePlatformFeeRecipient",
      "description": "triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "platformFeeRecipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "accessControls()",
      "name": "accessControls",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "auctions(uint256)",
      "name": "auctions",
      "description": "Garment ERC721 Token ID -> Auction Parameters.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "reservePrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "resulted",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bidWithdrawalLockTime()",
      "name": "bidWithdrawalLockTime",
      "description": "global bid withdrawal lock time.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cancelAuction(uint256)",
      "name": "cancelAuction",
      "description": "Cancels and inflight and un-resulted auctions, returning the funds to the top bidder if found. Only admin.",
      "parameterDecorators": [
        {
          "name": "_garmentTokenId",
          "description": "Token ID of the garment being auctioned.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createAuction(uint256,uint256,uint256,uint256)",
      "name": "createAuction",
      "description": "Creates a new auction for a given garment. Only the owner of a garment can create an auction and must have approved the contractIn addition to owning the garment, the sender also has to have the MINTER role.End time for the auction must be in the future.",
      "parameterDecorators": [
        {
          "name": "_garmentTokenId",
          "description": "Token ID of the garment being auctioned.",
          "recommendedTypes": []
        },
        {
          "name": "_reservePrice",
          "description": "Garment cannot be sold for less than this or minBidIncrement, whichever is higher.",
          "recommendedTypes": []
        },
        {
          "name": "_startTimestamp",
          "description": "Unix epoch in seconds for the auction start time.",
          "recommendedTypes": []
        },
        {
          "name": "_endTimestamp",
          "description": "Unix epoch in seconds for the auction end time.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createAuctionOnBehalfOfOwner(uint256,uint256,uint256,uint256)",
      "name": "createAuctionOnBehalfOfOwner",
      "description": "Admin or smart contract can list approved Garments. Sender must have admin or smart contract roleOwner must have approved this contract for the garment or all garments they ownEnd time for the auction must be in the future.",
      "parameterDecorators": [
        {
          "name": "_garmentTokenId",
          "description": "Token ID of the garment being auctioned.",
          "recommendedTypes": []
        },
        {
          "name": "_reservePrice",
          "description": "Garment cannot be sold for less than this or minBidIncrement, whichever is higher.",
          "recommendedTypes": []
        },
        {
          "name": "_startTimestamp",
          "description": "Unix epoch in seconds for the auction start time.",
          "recommendedTypes": []
        },
        {
          "name": "_endTimestamp",
          "description": "Unix epoch in seconds for the auction end time.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "garmentNft()",
      "name": "garmentNft",
      "description": "Garment ERC721 NFT - the only NFT that can be auctioned in this contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAuction(uint256)",
      "name": "getAuction",
      "description": "Method for getting all info about the auction.",
      "parameterDecorators": [
        {
          "name": "_garmentTokenId",
          "description": "Token ID of the garment being auctioned.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_reservePrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_startTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_endTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_resulted",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getHighestBidder(uint256)",
      "name": "getHighestBidder",
      "description": "Method for getting all info about the highest bidder.",
      "parameterDecorators": [
        {
          "name": "_garmentTokenId",
          "description": "Token ID of the garment being auctioned.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_bidder",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "_bid",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_lastBidTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "highestBids(uint256)",
      "name": "highestBids",
      "description": "Garment ERC721 Token ID -> highest bidder info (if a bid has been received).",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "bidder",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "bid",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastBidTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPaused()",
      "name": "isPaused",
      "description": "for switching off auction creations, bids and withdrawals.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minBidIncrement()",
      "name": "minBidIncrement",
      "description": "globally and across all auctions, the amount by which a bid has to increase.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "placeBid(uint256)",
      "name": "placeBid",
      "description": "Places a new bid, out bidding the existing bidder if found and criteria is reached. Only callable when the auction is openBids from smart contracts are prohibited to prevent griefing with always reverting receiver.",
      "parameterDecorators": [
        {
          "name": "_garmentTokenId",
          "description": "Token ID of the garment being auctioned.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "platformFee()",
      "name": "platformFee",
      "description": "global platform fee, assumed to always be to 1 decimal place i.e. 120 = 12.0%.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "platformFeeRecipient()",
      "name": "platformFeeRecipient",
      "description": "where to send platform fee funds to.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "resultAuction(uint256)",
      "name": "resultAuction",
      "description": "Results a finished auction. Only admin or smart contractAuction can only be resulted if there has been a bidder and reserve met.If there have been no bids, the auction needs to be cancelled instead using `cancelAuction()`.",
      "parameterDecorators": [
        {
          "name": "_garmentTokenId",
          "description": "Token ID of the garment being auctioned.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "toggleIsPaused()",
      "name": "toggleIsPaused",
      "description": "Toggling the pause flag. Only admin.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateAccessControls(address)",
      "name": "updateAccessControls",
      "description": "Method for updating the access controls contract used by the NFT. Only admin.",
      "parameterDecorators": [
        {
          "name": "_accessControls",
          "description": "Address of the new access controls contract (Cannot be zero address).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateAuctionEndTime(uint256,uint256)",
      "name": "updateAuctionEndTime",
      "description": "Update the current end time for an auction. Only adminAuction must exist.",
      "parameterDecorators": [
        {
          "name": "_garmentTokenId",
          "description": "Token ID of the garment being auctioned.",
          "recommendedTypes": []
        },
        {
          "name": "_endTimestamp",
          "description": "New end time (unix epoch in seconds).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateAuctionReservePrice(uint256,uint256)",
      "name": "updateAuctionReservePrice",
      "description": "Update the current reserve price for an auction. Only adminAuction must exist.",
      "parameterDecorators": [
        {
          "name": "_garmentTokenId",
          "description": "Token ID of the garment being auctioned.",
          "recommendedTypes": []
        },
        {
          "name": "_reservePrice",
          "description": "New Ether reserve price (WEI value).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateAuctionStartTime(uint256,uint256)",
      "name": "updateAuctionStartTime",
      "description": "Update the current start time for an auction. Only adminAuction must exist.",
      "parameterDecorators": [
        {
          "name": "_garmentTokenId",
          "description": "Token ID of the garment being auctioned.",
          "recommendedTypes": []
        },
        {
          "name": "_startTime",
          "description": "New start time (unix epoch in seconds).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateBidWithdrawalLockTime(uint256)",
      "name": "updateBidWithdrawalLockTime",
      "description": "Update the global bid withdrawal lockout time. Only admin.",
      "parameterDecorators": [
        {
          "name": "_bidWithdrawalLockTime",
          "description": "New bid withdrawal lock time.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateMinBidIncrement(uint256)",
      "name": "updateMinBidIncrement",
      "description": "Update the amount by which bids have to increase, across all auctions. Only admin.",
      "parameterDecorators": [
        {
          "name": "_minBidIncrement",
          "description": "New bid step in WEI.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePlatformFee(uint256)",
      "name": "updatePlatformFee",
      "description": "Method for updating platform fee. Only admin.",
      "parameterDecorators": [
        {
          "name": "_platformFee",
          "description": "uint256 the platform fee to set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePlatformFeeRecipient(address)",
      "name": "updatePlatformFeeRecipient",
      "description": "Method for updating platform fee address. Only admin.",
      "parameterDecorators": [
        {
          "name": "_platformFeeRecipient",
          "description": "payable address the address to sends the funds to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawBid(uint256)",
      "name": "withdrawBid",
      "description": "Given a sender who has the highest bid on a garment, allows them to withdraw their bid. Only callable by the existing top bidder.",
      "parameterDecorators": [
        {
          "name": "_garmentTokenId",
          "description": "Token ID of the garment being auctioned.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}