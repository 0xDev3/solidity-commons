{"schema":"../schema.json","tags":["tokens"],"name":"CarbonCreditRakeback","description":"A Carbon Credit Token Rakeback Implementation.","eventDecorators":[{"signature":"FeeDivisorUpdated(address,uint256)","name":"FeeDivisorUpdated","description":"Triggered when an amount of an ERC20 has been transferred from this contract to an address.","parameterDecorators":[{"name":"token","description":"ERC20 token address.","recommendedTypes":[],"indexed":false},{"name":"feeDivisor","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Triggered when an amount of an ERC20 has been transferred from this contract to an address.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"batchRemoveFeeDivisor(address[])","name":"batchRemoveFeeDivisor","description":"batch remove of feeDivisors.","parameterDecorators":[{"name":"tokens_","description":"- array of CarbonCreditTokens.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"batchSetFeeDivisor(address[],uint256[])","name":"batchSetFeeDivisor","description":"batch setting of the feeDivisor.","parameterDecorators":[{"name":"tokens_","description":"- array of CarbonCreditTokens.","recommendedTypes":[]},{"name":"feeDivisor_","description":"- array of feeDivisors.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bundle()","name":"bundle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"feeDivisor(address)","name":"feeDivisor","description":"The fee divisor of a token. This uses the bundles default as a fallback if not specified, so it'll always work.","parameterDecorators":[{"name":"token_","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the fee divisor.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"hasTokenWithFeeDivisor(address)","name":"hasTokenWithFeeDivisor","description":"Checks if a token has a fee divisor specified in this contract.","parameterDecorators":[{"name":"token_","description":"- a carbon credit token.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"whether we have a token fee divisor or not.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address)","name":"initialize","description":"","parameterDecorators":[{"name":"bundle_","description":"- the bundle that this rakeback contract controls.","recommendedTypes":[]},{"name":"owner_","description":"- the owner of this rakeback contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"offsetSpecific(address,uint256)","name":"offsetSpecific","description":"Offsets a specific GCO2 token.","parameterDecorators":[{"name":"token_","description":"the GCO2 token to offset.","recommendedTypes":[]},{"name":"amount_","description":"the amount of tokens to offset.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the amount of offsetted tokens after fee.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeFeeDivisor(address)","name":"removeFeeDivisor","description":"","parameterDecorators":[{"name":"token_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setFeeDivisor(address,uint256)","name":"setFeeDivisor","description":"","parameterDecorators":[{"name":"token_","description":"","recommendedTypes":[]},{"name":"feeDivisor_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"swapBundle(address,address,uint256)","name":"swapBundle","description":"Swaps a given GCO2 token between bundles.","parameterDecorators":[{"name":"targetBundle_","description":"the bundle where the GCO2 token should be bundled into.","recommendedTypes":[]},{"name":"token_","description":"the GCO2 token to swap.","recommendedTypes":[]},{"name":"amount_","description":"the amount of tokens to swap.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the amount of tokens arriving in the bundle (after fee).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"tokenWithFeeDivisorAtIndex(uint256)","name":"tokenWithFeeDivisorAtIndex","description":"A token with a fee divisor.","parameterDecorators":[{"name":"index_","description":"- the index position taken from tokenCount().","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"address of the token at the index.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenWithFeeDivisorCount()","name":"tokenWithFeeDivisorCount","description":"Number of tokens that have a fee override.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the number of tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unbundle(address,uint256)","name":"unbundle","description":"Unbundle the given token for the given amount. The sender needs to have given approval for the amount for the bundle.","parameterDecorators":[{"name":"token_","description":"The token the sender wishes to unbundle.","recommendedTypes":[]},{"name":"amount_","description":"The amount the sender wishes to unbundle.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the amount after fees that the user receives.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false}]}