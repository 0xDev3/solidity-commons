{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "Reserve",
  "description": "Ensures price stability of StableTokens with respect to their pegs.",
  "eventDecorators": [
    {
      "signature": "AssetAllocationSet(bytes32[],uint256[])",
      "name": "AssetAllocationSet",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Unstake amount.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "holder",
          "description": "Address of the holder.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DailySpendingRatioSet(uint256)",
      "name": "DailySpendingRatioSet",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "ratio",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ExchangeSpenderAdded(address)",
      "name": "ExchangeSpenderAdded",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "exchangeSpender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ExchangeSpenderRemoved(address)",
      "name": "ExchangeSpenderRemoved",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "exchangeSpender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OtherReserveAddressAdded(address)",
      "name": "OtherReserveAddressAdded",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "otherReserveAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OtherReserveAddressRemoved(address,uint256)",
      "name": "OtherReserveAddressRemoved",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Unstake amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "holder",
          "description": "Address of the holder.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Unstake amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "holder",
          "description": "Address of the holder.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RegistrySet(address)",
      "name": "RegistrySet",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "registryAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ReserveGoldTransferred(address,address,uint256)",
      "name": "ReserveGoldTransferred",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "spender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SpenderAdded(address)",
      "name": "SpenderAdded",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "spender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SpenderRemoved(address)",
      "name": "SpenderRemoved",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "spender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TobinTaxReserveRatioSet(uint256)",
      "name": "TobinTaxReserveRatioSet",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TobinTaxSet(uint256)",
      "name": "TobinTaxSet",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TobinTaxStalenessThresholdSet(uint256)",
      "name": "TobinTaxStalenessThresholdSet",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenAdded(address)",
      "name": "TokenAdded",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TokenRemoved(address,uint256)",
      "name": "TokenRemoved",
      "description": "Notifies when found an error decoding request result.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Unstake amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "holder",
          "description": "Address of the holder.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addExchangeSpender(address)",
      "name": "addExchangeSpender",
      "description": "Gives an address permission to spend Reserve without limit.",
      "parameterDecorators": [
        {
          "name": "spender",
          "description": "The address that is allowed to spend Reserve funds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addOtherReserveAddress(address)",
      "name": "addOtherReserveAddress",
      "description": "Add a reserve address whose balance shall be included in the reserve ratio.",
      "parameterDecorators": [
        {
          "name": "reserveAddress",
          "description": "The reserve address to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addSpender(address)",
      "name": "addSpender",
      "description": "Gives an address permission to spend Reserve funds.",
      "parameterDecorators": [
        {
          "name": "spender",
          "description": "The address that is allowed to spend Reserve funds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addToken(address)",
      "name": "addToken",
      "description": "Add a token that the reserve will stabilize.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "The address of the token being stabilized.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "assetAllocationSymbols(uint256)",
      "name": "assetAllocationSymbols",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetAllocationWeights(bytes32)",
      "name": "assetAllocationWeights",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "exchangeSpenderAddresses(uint256)",
      "name": "exchangeSpenderAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "frozenReserveGoldDays()",
      "name": "frozenReserveGoldDays",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "frozenReserveGoldStartBalance()",
      "name": "frozenReserveGoldStartBalance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "frozenReserveGoldStartDay()",
      "name": "frozenReserveGoldStartDay",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAssetAllocationSymbols()",
      "name": "getAssetAllocationSymbols",
      "description": "Returns a list of token symbols that have been allocated.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAssetAllocationWeights()",
      "name": "getAssetAllocationWeights",
      "description": "Returns a list of weights used for the allocation of reserve assets.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDailySpendingRatio()",
      "name": "getDailySpendingRatio",
      "description": "Get daily spending ratio.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getExchangeSpenders()",
      "name": "getExchangeSpenders",
      "description": "Returns addresses of exchanges permitted to spend Reserve funds. Because exchangeSpenderAddresses was introduced after cUSD, cUSD's exchange is not included in this list.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFrozenReserveGoldBalance()",
      "name": "getFrozenReserveGoldBalance",
      "description": "Returns the amount of frozen CELO in the reserve.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOrComputeTobinTax()",
      "name": "getOrComputeTobinTax",
      "description": "Returns the tobin tax, recomputing it if it's stale.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getOtherReserveAddresses()",
      "name": "getOtherReserveAddresses",
      "description": "Returns the list other addresses included in the reserve total.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOtherReserveAddressesGoldBalance()",
      "name": "getOtherReserveAddressesGoldBalance",
      "description": "Returns the amount of CELO included in other reserve addresses.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReserveGoldBalance()",
      "name": "getReserveGoldBalance",
      "description": "Returns the amount of CELO included in the reserve.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReserveRatio()",
      "name": "getReserveRatio",
      "description": "Computes the ratio of current reserve balance to total stable token valuation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokens()",
      "name": "getTokens",
      "description": "Returns the list of stabilized token addresses.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUnfrozenBalance()",
      "name": "getUnfrozenBalance",
      "description": "Returns the amount of unfrozen CELO in the reserve.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUnfrozenReserveGoldBalance()",
      "name": "getUnfrozenReserveGoldBalance",
      "description": "Returns the amount of unfrozen CELO included in the reserve.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getVersionNumber()",
      "name": "getVersionNumber",
      "description": "Returns the storage, major, minor, and patch version of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,uint256,uint256,uint256,uint256,bytes32[],uint256[],uint256,uint256)",
      "name": "initialize",
      "description": "Used in place of the constructor to allow the contract to be upgradable via proxy.",
      "parameterDecorators": [
        {
          "name": "registryAddress",
          "description": "The address of the registry core smart contract.",
          "recommendedTypes": []
        },
        {
          "name": "_tobinTaxStalenessThreshold",
          "description": "The initial number of seconds to cache tobin tax value for.",
          "recommendedTypes": []
        },
        {
          "name": "_spendingRatio",
          "description": "The relative daily spending limit for the reserve spender.",
          "recommendedTypes": []
        },
        {
          "name": "_frozenGold",
          "description": "The balance of reserve gold that is frozen.",
          "recommendedTypes": []
        },
        {
          "name": "_frozenDays",
          "description": "The number of days during which the frozen gold thaws.",
          "recommendedTypes": []
        },
        {
          "name": "_assetAllocationSymbols",
          "description": "The symbols of the reserve assets.",
          "recommendedTypes": []
        },
        {
          "name": "_assetAllocationWeights",
          "description": "The reserve asset weights.",
          "recommendedTypes": []
        },
        {
          "name": "_tobinTax",
          "description": "The tobin tax value as a fixidity fraction.",
          "recommendedTypes": []
        },
        {
          "name": "_tobinTaxReserveRatio",
          "description": "When to turn on the tobin tax, as a fixidity fraction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialized()",
      "name": "initialized",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isExchangeSpender(address)",
      "name": "isExchangeSpender",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOtherReserveAddress(address)",
      "name": "isOtherReserveAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSpender(address)",
      "name": "isSpender",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isToken(address)",
      "name": "isToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastSpendingDay()",
      "name": "lastSpendingDay",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "otherReserveAddresses(uint256)",
      "name": "otherReserveAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registry()",
      "name": "registry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeExchangeSpender(address,uint256)",
      "name": "removeExchangeSpender",
      "description": "Takes away an address's permission to spend Reserve funds without limits.",
      "parameterDecorators": [
        {
          "name": "spender",
          "description": "The address that is to be no longer allowed to spend Reserve funds.",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "The index in exchangeSpenderAddresses of spender.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeOtherReserveAddress(address,uint256)",
      "name": "removeOtherReserveAddress",
      "description": "Remove reserve address whose balance shall no longer be included in the reserve ratio.",
      "parameterDecorators": [
        {
          "name": "reserveAddress",
          "description": "The reserve address to remove.",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "The index of the reserve address in otherReserveAddresses.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeSpender(address)",
      "name": "removeSpender",
      "description": "Takes away an address's permission to spend Reserve funds.",
      "parameterDecorators": [
        {
          "name": "spender",
          "description": "The address that is to be no longer allowed to spend Reserve funds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeToken(address,uint256)",
      "name": "removeToken",
      "description": "Remove a token that the reserve will no longer stabilize.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "The address of the token no longer being stabilized.",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "The index of the token in _tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAssetAllocations(bytes32[],uint256[])",
      "name": "setAssetAllocations",
      "description": "Sets target allocations for CELO and a diversified basket of non-Celo assets.",
      "parameterDecorators": [
        {
          "name": "symbols",
          "description": "The symbol of each asset in the Reserve portfolio.",
          "recommendedTypes": []
        },
        {
          "name": "weights",
          "description": "The weight for the corresponding asset as unwrapped Fixidity.Fraction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDailySpendingRatio(uint256)",
      "name": "setDailySpendingRatio",
      "description": "Set the ratio of reserve that is spendable per day.",
      "parameterDecorators": [
        {
          "name": "ratio",
          "description": "Spending ratio as unwrapped Fraction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFrozenGold(uint256,uint256)",
      "name": "setFrozenGold",
      "description": "Sets the balance of reserve gold frozen from transfer.",
      "parameterDecorators": [
        {
          "name": "frozenGold",
          "description": "The amount of CELO frozen.",
          "recommendedTypes": []
        },
        {
          "name": "frozenDays",
          "description": "The number of days the frozen CELO thaws over.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRegistry(address)",
      "name": "setRegistry",
      "description": "Updates the address pointing to a Registry contract.",
      "parameterDecorators": [
        {
          "name": "registryAddress",
          "description": "The address of a registry contract for routing to other contracts.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTobinTax(uint256)",
      "name": "setTobinTax",
      "description": "Sets the tobin tax.",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "The tobin tax.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTobinTaxReserveRatio(uint256)",
      "name": "setTobinTaxReserveRatio",
      "description": "Sets the reserve ratio at which the tobin tax sets in.",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "The reserve ratio at which the tobin tax sets in.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTobinTaxStalenessThreshold(uint256)",
      "name": "setTobinTaxStalenessThreshold",
      "description": "Sets the number of seconds to cache the tobin tax value for.",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "The number of seconds to cache the tobin tax value for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "spendingLimit()",
      "name": "spendingLimit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tobinTax()",
      "name": "tobinTax",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tobinTaxCache()",
      "name": "tobinTaxCache",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "numerator",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tobinTaxReserveRatio()",
      "name": "tobinTaxReserveRatio",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tobinTaxStalenessThreshold()",
      "name": "tobinTaxStalenessThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferExchangeGold(address,uint256)",
      "name": "transferExchangeGold",
      "description": "Transfer unfrozen gold to any address, used for one side of CP-DOTO. Transfers are not subject to a daily spending limit.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "The address that will receive the gold.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "The amount of gold to transfer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferGold(address,uint256)",
      "name": "transferGold",
      "description": "Transfer gold to a whitelisted address subject to reserve spending limits.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "The address that will receive the gold.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "The amount of gold to transfer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}