{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "Erc20Sub2SubMappingTokenFactory",
  "description": "",
  "eventDecorators": [
    {
      "signature": "BurnAndRemoteUnlocked(uint256,bytes32,address,address,address,uint256,uint256)",
      "name": "BurnAndRemoteUnlocked",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "transferId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "messageHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DailyLimitChange(address,uint256)",
      "name": "DailyLimitChange",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "dailyLimit",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "IssuingERC20Created(address,address)",
      "name": "IssuingERC20Created",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "originalToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "mappingToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewLogicSetted(uint32,address)",
      "name": "NewLogicSetted",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "tokenType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RemoteUnlockFailure(uint256,address,address,uint256,uint256)",
      "name": "RemoteUnlockFailure",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "transferId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "originalToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "originalSender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TokenIssued(uint256,address,address,uint256)",
      "name": "TokenIssued",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "transferId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenRemintForFailed(uint256,address,address,uint256)",
      "name": "TokenRemintForFailed",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "transferId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BLACK_HOLE_ADDRESS()",
      "name": "BLACK_HOLE_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "CALLEREE_ROLE()",
      "name": "CALLEREE_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "CALLER_ROLE()",
      "name": "CALLER_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DAO_ADMIN_ROLE()",
      "name": "DAO_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "OPERATOR_ROLE()",
      "name": "OPERATOR_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "allMappingTokens(uint256)",
      "name": "allMappingTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "burnAndRemoteUnlock(uint32,uint256,address,address,uint256)",
      "name": "burnAndRemoteUnlock",
      "description": "burn mapping token and unlock remote original token.",
      "parameterDecorators": [
        {
          "name": "remoteSpecVersion",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "remoteReceiveGasLimit",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "mappingToken",
          "description": "the burt mapping token address.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "the recipient of the remote unlocked token.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "the amount of the burn and unlock.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calcMaxWithdraw(address)",
      "name": "calcMaxWithdraw",
      "description": "Returns maximum withdraw amount.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns amount.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeDailyLimit(address,uint256)",
      "name": "changeDailyLimit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "mappingToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "dailyLimit(address)",
      "name": "dailyLimit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fee()",
      "name": "fee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMappingToken(address,address)",
      "name": "getMappingToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "backingAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "originalToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleMember(bytes32,uint256)",
      "name": "getRoleMember",
      "description": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleMemberCount(bytes32)",
      "name": "getRoleMemberCount",
      "description": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Overload {grantRole} to track enumerable memberships.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "guard()",
      "name": "guard",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "handleIssuingFailureFromRemote(uint256,address,address,uint256)",
      "name": "handleIssuingFailureFromRemote",
      "description": "this will be called by messageEndpoint when the remote backing unlock failed and want to unlock the mapping token.",
      "parameterDecorators": [
        {
          "name": "transferId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "the original token address.",
          "recommendedTypes": []
        },
        {
          "name": "origin_sender",
          "description": "the origin_sender who will receive the unlocked token.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "amount of the unlocked token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hash(bytes)",
      "name": "hash",
      "description": "",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "helixFee()",
      "name": "helixFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_messageEndpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "issueMappingToken(address,address,uint256)",
      "name": "issueMappingToken",
      "description": "issue mapping token, only can be called by inboundLane.",
      "parameterDecorators": [
        {
          "name": "originalToken",
          "description": "the original token address.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "the recipient of the issued mapping token.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "the amount of the issued mapping token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lastDay(address)",
      "name": "lastDay",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mappingToken2OriginalToken(address)",
      "name": "mappingToken2OriginalToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "messageEndpoint()",
      "name": "messageEndpoint",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "newErc20Contract(uint32,address,string,string,string,uint8,uint256)",
      "name": "newErc20Contract",
      "description": "create new erc20 mapping contract, this can only be called by inboundLane.",
      "parameterDecorators": [
        {
          "name": "tokenType",
          "description": "the original token type.",
          "recommendedTypes": []
        },
        {
          "name": "originalToken",
          "description": "the original token address.",
          "recommendedTypes": []
        },
        {
          "name": "bridgedChainName",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "name",
          "description": "the name of the original erc20 token.",
          "recommendedTypes": []
        },
        {
          "name": "symbol",
          "description": "the symbol of the original erc20 token.",
          "recommendedTypes": []
        },
        {
          "name": "decimals",
          "description": "the decimals of the original erc20 token.",
          "recommendedTypes": []
        },
        {
          "name": "dailyLimit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "mappingToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "remoteBacking()",
      "name": "remoteBacking",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "remoteUnlockFailure(uint32,uint256,uint256,address,address,uint256)",
      "name": "remoteUnlockFailure",
      "description": "send a unlock message to backing when issue mapping token faild to redeem original token.",
      "parameterDecorators": [
        {
          "name": "remoteSpecVersion",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "remoteReceiveGasLimit",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "transferId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "originalToken",
          "description": "the original token address.",
          "recommendedTypes": []
        },
        {
          "name": "originalSender",
          "description": "the originalSender of the remote unlocked token, must be the same as msg.send of the failed message.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "the amount of the failed issue token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Overload {renounceRole} to track enumerable memberships.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rescueFunds(address,address,uint256)",
      "name": "rescueFunds",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Overload {revokeRole} to track enumerable memberships.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "salt2MappingToken(bytes32)",
      "name": "salt2MappingToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setHelixFee(uint256)",
      "name": "setHelixFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_helixFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMessageEndpoint(address)",
      "name": "setMessageEndpoint",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_messageEndpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRemoteBacking(address)",
      "name": "setRemoteBacking",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_remoteBacking",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTokenContractLogic(uint32,address)",
      "name": "setTokenContractLogic",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenType",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "logic",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "spentToday(address)",
      "name": "spentToday",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenLength()",
      "name": "tokenLength",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenType2Logic(uint32)",
      "name": "tokenType2Logic",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferMappingTokenOwnership(address,address)",
      "name": "transferMappingTokenOwnership",
      "description": "only admin can transfer the ownership of the mapping token from factory to other account generally we should not do this. When we encounter a non-recoverable error, we temporarily transfer the privileges to a maintenance account.",
      "parameterDecorators": [
        {
          "name": "mappingToken",
          "description": "the address the mapping token.",
          "recommendedTypes": []
        },
        {
          "name": "new_owner",
          "description": "the new owner of the mapping token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateGuard(address)",
      "name": "updateGuard",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newGuard",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawFee(address,uint256)",
      "name": "withdrawFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}