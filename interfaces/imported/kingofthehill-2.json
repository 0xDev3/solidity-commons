{"schema":"../schema.json","tags":[],"name":"KingOfTheHill","description":"","eventDecorators":[],"functionDecorators":[{"signature":"_price()","name":"_price","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"claimCrown()","name":"claimCrown","description":"This is the main and most important functionality of this game, to claim the crown by claiming the crown, we mean, of course, placing the highest bid, you can only place twice as much as the latest bid place, this is controlled by the modifier 'costs' that is located in AccessControl, why did I choose to do so ? For the main reason that, placing a bid twice as much as the latest one, means that you become a KING, for that a ROLE is GRANTED to you, and another's player role is being REVOKED, to keep track of that is the main function of AccessControl.sol Then, we assign the value sent to the variable price, the sender becomes the king, and we be track of his balance with the mapping. *.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimPrice()","name":"claimPrice","description":"The second most important function of that game. When the block.numbers of the current turn ended, the game froze, until the king retrives his sendValue when she retrive her price, the price is reduced by 80% and stored into a new variable, then we take the remaining, and store it to the owner profit variable to send it to him. finally, we set the balance of the king to zero the price is now ready for the next turn we send the profit to the owner we send the price to the King we reset the adress of the King we add a new turn with the _endOfTurn variable + the current block number + 8.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"king()","name":"king","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"remainingBlock()","name":"remainingBlock","description":"This function serves to see the remaining blocks before the end of the turn, it's like a clock tic-tacking before no one can claim the crown anymore, and only the king can interract with the smart-contract, therefore reseting it for another turn.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}