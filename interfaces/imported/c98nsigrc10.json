{
  "schema": "../schema.json",
  "tags": [],
  "name": "C98NSiGrc10",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Cancelled(uint256)",
      "name": "Cancelled",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "requestId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposited(address,uint256)",
      "name": "Deposited",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Executed(bool,uint256,address,uint256,bytes)",
      "name": "Executed",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requestId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "destination",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnersChanged(address[],uint16,uint16)",
      "name": "OwnersChanged",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "implementation",
          "description": "The new subToken implementation*.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "proxy",
          "description": "The variable debt token proxy address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Requested(uint256,address,uint256,bytes,uint16,uint16)",
      "name": "Requested",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "requestId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "destination",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "currentVote",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requiredVote",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Revoked(address,uint256,uint16,uint16)",
      "name": "Revoked",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requestId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "currentVote",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requiredVote",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Voted(address,uint256,uint16,uint16)",
      "name": "Voted",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requestId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "currentVote",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "requiredVote",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "cancelRequest()",
      "name": "cancelRequest",
      "description": "Cancel current request. Throw error if request does not exist.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeOwners(address[],uint16[],uint16)",
      "name": "changeOwners",
      "description": "Add/remove/change owner, with their respective voting weight, and number of votes needed to perform the request.",
      "parameterDecorators": [
        {
          "name": "nOwners",
          "description": "Array of owners' address that need to change.",
          "recommendedTypes": []
        },
        {
          "name": "vPowers",
          "description": "Array of voting weight of the nOwners, vPower == 0 will remove the respective user.",
          "recommendedTypes": []
        },
        {
          "name": "vRate",
          "description": "New number of required votes to perform the request. vRate == 0 will keep the current number of required votes.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createRequest(address,uint256,bytes)",
      "name": "createRequest",
      "description": "Submit a new request for voting, the owner submitting request will count as voted.",
      "parameterDecorators": [
        {
          "name": "destination",
          "description": "address of the recipient to interface with (address/contract...).",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "of ETH to send.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "data of the function call in ABI encoded format.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "hasVoted(address)",
      "name": "hasVoted",
      "description": "Check whether a owner has voted.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "voted",
          "description": "user's voting status.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "vWeight",
          "description": "voting weight of owner.",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owners()",
      "name": "owners",
      "description": "return list of currents owners and their respective voting weight.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "request()",
      "name": "request",
      "description": "Return current request information.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "destination",
          "description": "destination address of the recipient to interface with (address/contract...).",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "value",
          "description": "value of ETH to send.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "data",
          "description": "data data of the function call in ABI encoded format.",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "requestProgress()",
      "name": "requestProgress",
      "description": "Return current number of votes vs required number of votes to execute request.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "requestId",
          "description": "ID of current request.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "timestamp",
          "description": "Timestamp when the request is created.",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "currentVote",
          "description": "Number of votes for current request.",
          "recommendedTypes": [],
          "solidityType": "uint16"
        },
        {
          "name": "requiredVote",
          "description": "Required number of votes to execute current request.",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "revoke()",
      "name": "revoke",
      "description": "Owner cancel their vote for the current request.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vote()",
      "name": "vote",
      "description": "Owner vote for the current request. Then execute the request if enough votes.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "voteRequirement()",
      "name": "voteRequirement",
      "description": "Return required number of votes vs total number of votes of all owners.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "requiredVote",
          "description": "Required number of votes to execute request.",
          "recommendedTypes": [],
          "solidityType": "uint16"
        },
        {
          "name": "totalVote",
          "description": "Total number of votes of all owners.",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}