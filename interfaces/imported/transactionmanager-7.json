{
  "schema": "../schema.json",
  "tags": [
    "locking",
    "liquidity"
  ],
  "name": "TransactionManager",
  "description": "TransactionManager.",
  "eventDecorators": [
    {
      "signature": "AssetAdded(address,address)",
      "name": "AssetAdded",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "addedAssetId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AssetOwnershipRenounced(bool)",
      "name": "AssetOwnershipRenounced",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "renounced",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AssetOwnershipRenunciationProposed(uint256)",
      "name": "AssetOwnershipRenunciationProposed",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AssetRemoved(address,address)",
      "name": "AssetRemoved",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "removedAssetId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "LiquidityAdded(address,address,uint256,address)",
      "name": "LiquidityAdded",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "router",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "assetId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityRemoved(address,address,uint256,address)",
      "name": "LiquidityRemoved",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "router",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "assetId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipProposed(address)",
      "name": "OwnershipProposed",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "proposedOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RouterAdded(address,address)",
      "name": "RouterAdded",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "addedRouter",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RouterOwnershipRenounced(bool)",
      "name": "RouterOwnershipRenounced",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "renounced",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RouterOwnershipRenunciationProposed(uint256)",
      "name": "RouterOwnershipRenunciationProposed",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RouterRemoved(address,address)",
      "name": "RouterRemoved",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "removedRouter",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TransactionCancelled(address,address,bytes32,tuple,address)",
      "name": "TransactionCancelled",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "router",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "transactionId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "args",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransactionFulfilled(address,address,bytes32,tuple,bool,bool,bytes,address)",
      "name": "TransactionFulfilled",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "router",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "transactionId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "args",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isContract",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "returnData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransactionPrepared(address,address,bytes32,tuple,address,tuple)",
      "name": "TransactionPrepared",
      "description": "Emitted when a subgraph version is updated.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "router",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "transactionId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "txData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "args",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "MAX_TIMEOUT()",
      "name": "MAX_TIMEOUT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MIN_TIMEOUT()",
      "name": "MIN_TIMEOUT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "acceptProposedOwner()",
      "name": "acceptProposedOwner",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addAssetId(address)",
      "name": "addAssetId",
      "description": "Used to add assets on same chain as contract that can be transferred.",
      "parameterDecorators": [
        {
          "name": "assetId",
          "description": "AssetId to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addLiquidity(uint256,address)",
      "name": "addLiquidity",
      "description": "This is used by any router to increase their available liquidity for a given asset.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of liquidity to add for the router.",
          "recommendedTypes": []
        },
        {
          "name": "assetId",
          "description": "The address (or `address(0)` if native asset) of the asset you're adding liquidity for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addLiquidityFor(uint256,address,address)",
      "name": "addLiquidityFor",
      "description": "This is used by anyone to increase a router's available liquidity for a given asset.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of liquidity to add for the router.",
          "recommendedTypes": []
        },
        {
          "name": "assetId",
          "description": "The address (or `address(0)` if native asset) of the asset you're adding liquidity for.",
          "recommendedTypes": []
        },
        {
          "name": "router",
          "description": "The router you are adding liquidity on behalf of.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addRouter(address)",
      "name": "addRouter",
      "description": "Used to add routers that can transact crosschain.",
      "parameterDecorators": [
        {
          "name": "router",
          "description": "Router address to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "approvedAssets(address)",
      "name": "approvedAssets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approvedRouters(address)",
      "name": "approvedRouters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetOwnershipTimestamp()",
      "name": "assetOwnershipTimestamp",
      "description": "Returns the timestamp when asset ownership was last proposed to be renounced.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cancel(tuple(tuple,bytes,bytes))",
      "name": "cancel",
      "description": "",
      "parameterDecorators": [
        {
          "name": "args",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "txData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "signature",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "encodedMeta",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "receivingChainTxManagerAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "user",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "router",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "initiator",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "sendingAssetId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "receivingAssetId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "sendingChainFallback",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "receivingAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "callTo",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "callDataHash",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bytes32"
            },
            {
              "name": "transactionId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bytes32"
            },
            {
              "name": "sendingChainId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "receivingChainId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "expiry",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "preparedBlockNumber",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delay()",
      "name": "delay",
      "description": "Returns the delay period before a new owner can be accepted.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fulfill(tuple(tuple,uint256,bytes,bytes,bytes))",
      "name": "fulfill",
      "description": "",
      "parameterDecorators": [
        {
          "name": "args",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "txData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "relayerFee",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "signature",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "callData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "encodedMeta",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "receivingChainTxManagerAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "user",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "router",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "initiator",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "sendingAssetId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "receivingAssetId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "sendingChainFallback",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "receivingAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "callTo",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "callDataHash",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bytes32"
            },
            {
              "name": "transactionId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bytes32"
            },
            {
              "name": "sendingChainId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "receivingChainId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "expiry",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "preparedBlockNumber",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getChainId()",
      "name": "getChainId",
      "description": "Gets the chainId for this contract. If not specified during init will use the block.chainId.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_chainId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStoredChainId()",
      "name": "getStoredChainId",
      "description": "Allows us to get the chainId that this contract has stored.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "interpreter()",
      "name": "interpreter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAssetOwnershipRenounced()",
      "name": "isAssetOwnershipRenounced",
      "description": "Indicates if the ownership of the asset whitelist has been renounced.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isRouterOwnershipRenounced()",
      "name": "isRouterOwnershipRenounced",
      "description": "Indicates if the ownership of the router whitelist has been renounced.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "prepare(tuple(tuple,uint256,uint256,bytes,bytes,bytes,bytes))",
      "name": "prepare",
      "description": "",
      "parameterDecorators": [
        {
          "name": "args",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "invariantData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "expiry",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "encryptedCallData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "encodedBid",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "bidSignature",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "encodedMeta",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "receivingChainTxManagerAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "user",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "router",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "initiator",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "sendingAssetId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "receivingAssetId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "sendingChainFallback",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "receivingAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "callTo",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "callDataHash",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bytes32"
            },
            {
              "name": "transactionId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bytes32"
            },
            {
              "name": "sendingChainId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "receivingChainId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "expiry",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "preparedBlockNumber",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proposeAssetOwnershipRenunciation()",
      "name": "proposeAssetOwnershipRenunciation",
      "description": "Indicates if the ownership of the asset whitelist has been renounced.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proposeNewOwner(address)",
      "name": "proposeNewOwner",
      "description": "Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process.",
      "parameterDecorators": [
        {
          "name": "newlyProposed",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proposeRouterOwnershipRenunciation()",
      "name": "proposeRouterOwnershipRenunciation",
      "description": "Indicates if the ownership of the router whitelist has been renounced.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proposed()",
      "name": "proposed",
      "description": "Returns the address of the proposed owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposedTimestamp()",
      "name": "proposedTimestamp",
      "description": "Returns the address of the proposed owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAssetId(address)",
      "name": "removeAssetId",
      "description": "Used to remove assets on same chain as contract that can be transferred.",
      "parameterDecorators": [
        {
          "name": "assetId",
          "description": "AssetId to remove.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeLiquidity(uint256,address,address)",
      "name": "removeLiquidity",
      "description": "This is used by any router to decrease their available liquidity for a given asset.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of liquidity to remove for the router.",
          "recommendedTypes": []
        },
        {
          "name": "assetId",
          "description": "The address (or `address(0)` if native asset) of the asset you're removing liquidity for.",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "The address that will receive the liquidity being removed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeRouter(address)",
      "name": "removeRouter",
      "description": "Used to remove routers that can transact crosschain.",
      "parameterDecorators": [
        {
          "name": "router",
          "description": "Router address to remove.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceAssetOwnership()",
      "name": "renounceAssetOwnership",
      "description": "Indicates if the ownership of the asset whitelist has been renounced.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Renounces ownership of the contract after a delay.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRouterOwnership()",
      "name": "renounceRouterOwnership",
      "description": "Indicates if the ownership of the asset whitelist has been renounced.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounced()",
      "name": "renounced",
      "description": "Indicates if the ownership has been renounced() by checking if current owner is address(0).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "routerBalances(address,address)",
      "name": "routerBalances",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "routerOwnershipTimestamp()",
      "name": "routerOwnershipTimestamp",
      "description": "Returns the timestamp when router ownership was last proposed to be renounced.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "variantTransactionData(bytes32)",
      "name": "variantTransactionData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}