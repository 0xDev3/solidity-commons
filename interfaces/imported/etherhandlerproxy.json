{"schema":"../schema.json","tags":[],"name":"EtherHandlerProxy","description":"","eventDecorators":[],"functionDecorators":[{"signature":"SI()","name":"SI","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"borrow(uint256,bool)","name":"borrow","description":"Forward the borrow request for borrow to the handler logic contract.","parameterDecorators":[{"name":"unifiedTokenAmount","description":"The amount of coins to borrow.","recommendedTypes":[]},{"name":"flag","description":"Flag for the full calcuation mode.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"whether the borrow has been made successfully or not.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"deposit(uint256,bool)","name":"deposit","description":"Forward the deposit request for deposit to the handler logic contract.","parameterDecorators":[{"name":"unifiedTokenAmount","description":"The amount of coins to deposit.","recommendedTypes":[]},{"name":"flag","description":"Flag for the full calcuation mode.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"whether the deposit has been made successfully or not.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"getHandlerAddr()","name":"getHandlerAddr","description":"Get the address of handler.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The handler address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getHandlerID()","name":"getHandlerID","description":"Get ID of handler.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The connected handler ID.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getSiHandlerAddr()","name":"getSiHandlerAddr","description":"Get address of service incentive contract.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The service incentive contract address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"handler()","name":"handler","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"handlerProxy(bytes)","name":"handlerProxy","description":"Call other functions in handler logic contract.","parameterDecorators":[{"name":"data","description":"The encoded value of the function and argument.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"handlerViewProxy(bytes)","name":"handlerViewProxy","description":"Call other view functions in handler logic contract. (delegatecall does not work for view functions).","parameterDecorators":[{"name":"data","description":"The encoded value of the function and argument.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"initialize(uint256,address,address,address,address,address,string,address,address)","name":"initialize","description":"Initialize the contract.","parameterDecorators":[{"name":"_handlerID","description":"ID of handler.","recommendedTypes":[]},{"name":"handlerAddr","description":"","recommendedTypes":[]},{"name":"marketManagerAddr","description":"The address of market manager.","recommendedTypes":[]},{"name":"interestModelAddr","description":"The address of handler interest model contract address.","recommendedTypes":[]},{"name":"marketDataStorageAddr","description":"The address of handler data storage.","recommendedTypes":[]},{"name":"erc20Addr","description":"The address of target ERC-20 token (underlying asset).","recommendedTypes":[]},{"name":"_tokenName","description":"The name of target ERC-20 token.","recommendedTypes":[]},{"name":"siHandlerAddr","description":"The address of service incentive contract.","recommendedTypes":[]},{"name":"SIHandlerDataStorageAddr","description":"The address of service incentive data storage.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"migration(address)","name":"migration","description":"Move assets to sender for the migration event.","parameterDecorators":[{"name":"target","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"ownershipTransfer(address)","name":"ownershipTransfer","description":"Replace the owner of the handler.","parameterDecorators":[{"name":"_owner","description":"the address of the new owner.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"repay(uint256,bool)","name":"repay","description":"Forward the repay request for repay to the handler logic contract.","parameterDecorators":[{"name":"unifiedTokenAmount","description":"The amount of coins to repay.","recommendedTypes":[]},{"name":"flag","description":"Flag for the full calcuation mode.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"whether the repay has been made successfully or not.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setHandlerAddr(address)","name":"setHandlerAddr","description":"Set the address of handler.","parameterDecorators":[{"name":"handlerAddr","description":"The address of handler.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setHandlerID(uint256)","name":"setHandlerID","description":"Set ID of handler.","parameterDecorators":[{"name":"_handlerID","description":"The id of handler.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setSiHandlerAddr(address)","name":"setSiHandlerAddr","description":"Set the address of service incentive contract.","parameterDecorators":[{"name":"siHandlerAddr","description":"The address of service incentive contract.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"siProxy(bytes)","name":"siProxy","description":"Call other functions in service incentive logic contract.","parameterDecorators":[{"name":"data","description":"The encoded value of the function and argument.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"siViewProxy(bytes)","name":"siViewProxy","description":"Call other view functions in service incentive logic contract. (delegatecall does not work for view functions).","parameterDecorators":[{"name":"data","description":"The encoded value of the function and argument.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"withdraw(uint256,bool)","name":"withdraw","description":"Forward the withdraw request for withdraw to the handler logic contract.","parameterDecorators":[{"name":"unifiedTokenAmount","description":"The amount of coins to withdraw.","recommendedTypes":[]},{"name":"flag","description":"Flag for the full calcuation mode.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"whether the withdraw has been made successfully or not.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false}]}