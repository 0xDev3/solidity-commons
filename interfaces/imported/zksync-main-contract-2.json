{"schema":"../schema.json","tags":[],"name":"ZkSync","description":"zkSync main contract.","eventDecorators":[{"signature":"BlockCommit(uint32)","name":"BlockCommit","description":"Event emitted when a block is committed.","parameterDecorators":[{"name":"blockNumber","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"BlockVerification(uint32)","name":"BlockVerification","description":"Event emitted when a block is verified.","parameterDecorators":[{"name":"blockNumber","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"BlocksRevert(uint32,uint32)","name":"BlocksRevert","description":"Event emitted when blocks are reverted.","parameterDecorators":[{"name":"totalBlocksVerified","description":"","recommendedTypes":[],"indexed":false},{"name":"totalBlocksCommitted","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DepositCommit(uint32,uint32,address,uint16,uint128)","name":"DepositCommit","description":"Deposit committed event.","parameterDecorators":[{"name":"zkSyncBlockId","description":"","recommendedTypes":[],"indexed":true},{"name":"accountId","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ExodusMode()","name":"ExodusMode","description":"Exodus mode entered event.","parameterDecorators":[]},{"signature":"FactAuth(address,uint32,bytes)","name":"FactAuth","description":"Event emitted when user sends a authentication fact (e.g. pub-key hash).","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"nonce","description":"","recommendedTypes":[],"indexed":false},{"name":"fact","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"FullExitCommit(uint32,uint32,address,uint16,uint128)","name":"FullExitCommit","description":"Full exit committed event.","parameterDecorators":[{"name":"zkSyncBlockId","description":"","recommendedTypes":[],"indexed":true},{"name":"accountId","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPriorityRequest(address,uint64,uint8,bytes,uint256)","name":"NewPriorityRequest","description":"New priority request event. Emitted when a request is placed into mapping.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":false},{"name":"serialId","description":"","recommendedTypes":[],"indexed":false},{"name":"opType","description":"","recommendedTypes":[],"indexed":false},{"name":"pubData","description":"","recommendedTypes":[],"indexed":false},{"name":"expirationBlock","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OnchainDeposit(address,uint16,uint128,address)","name":"OnchainDeposit","description":"Event emitted when user send a transaction to deposit her funds.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"owner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OnchainWithdrawal(address,uint16,uint128)","name":"OnchainWithdrawal","description":"Event emitted when user funds are withdrawn from the account.","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PendingWithdrawalsAdd(uint32,uint32)","name":"PendingWithdrawalsAdd","description":"Pending withdrawals index range that were added in the verifyBlock operation. NOTE: processed indexes in the queue map are [queueStartIndex, queueEndIndex).","parameterDecorators":[{"name":"queueStartIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"queueEndIndex","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PendingWithdrawalsComplete(uint32,uint32)","name":"PendingWithdrawalsComplete","description":"Pending withdrawals index range that were executed in the completeWithdrawals operation. NOTE: processed indexes in the queue map are [queueStartIndex, queueEndIndex).","parameterDecorators":[{"name":"queueStartIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"queueEndIndex","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RollupWithdrawal(address,uint16,uint128)","name":"RollupWithdrawal","description":"Event emitted when user funds are withdrawn from the rollup.","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"authFacts(address,uint32)","name":"authFacts","description":"User authenticated fact hashes for some nonce.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"balancesToWithdraw(bytes22)","name":"balancesToWithdraw","description":"Root-chain balances (per owner and token id, see packAddressAndTokenId) to withdraw.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"balanceToWithdraw","description":"","recommendedTypes":[],"solidityType":"uint128"},{"name":"gasReserveValue","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"blocks_DEPRECATED(uint32)","name":"blocks_DEPRECATED","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"committedAtBlock","description":"","recommendedTypes":[],"solidityType":"uint32"},{"name":"priorityOperations","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"chunks","description":"","recommendedTypes":[],"solidityType":"uint32"},{"name":"withdrawalsDataHash","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"commitment","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"stateRoot","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"cancelOutstandingDepositsForExodusMode(uint64,bytes[])","name":"cancelOutstandingDepositsForExodusMode","description":"Accrues users balances from deposit priority requests in Exodus mode. WARNING: Only for Exodus modeCanceling may take several separate transactions to be completed.","parameterDecorators":[{"name":"_n","description":"number of requests to process.","recommendedTypes":[]},{"name":"depositsPubdata","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"commitBlocks(tuple(uint32,uint64,bytes32,uint256,bytes32,bytes32),tuple(uint32,uint32,bytes32,bytes,uint256,tuple[])[])","name":"commitBlocks","description":"","parameterDecorators":[{"name":"_lastCommittedBlockData","description":"","recommendedTypes":[],"parameters":[{"name":"blockNumber","description":"","type":"uint32"},{"name":"priorityOperations","description":"","type":"uint64"},{"name":"pendingOnchainOperationsHash","description":"","type":"bytes32"},{"name":"timestamp","description":"","type":"uint256"},{"name":"stateHash","description":"","type":"bytes32"},{"name":"commitment","description":"","type":"bytes32"}]},{"name":"_newBlocksData","description":"","recommendedTypes":[],"parameters":[{"name":"blockNumber","description":"","type":"uint32"},{"name":"feeAccount","description":"","type":"uint32"},{"name":"newStateHash","description":"","type":"bytes32"},{"name":"publicData","description":"","type":"bytes"},{"name":"timestamp","description":"","type":"uint256"},{"name":"onchainOperations","description":"","type":"tuple[]"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"depositERC20(address,uint104,address)","name":"depositERC20","description":"Deposit ERC20 token to Layer 2 - transfer ERC20 tokens from user into contract, validate it, register deposit.","parameterDecorators":[{"name":"_token","description":"Token address.","recommendedTypes":[]},{"name":"_amount","description":"Token amount.","recommendedTypes":[]},{"name":"_zkSyncAddress","description":"Receiver Layer 2 address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"depositETH(address)","name":"depositETH","description":"Deposit ETH to Layer 2 - transfer ether from user into contract, validate it, register deposit.","parameterDecorators":[{"name":"_zkSyncAddress","description":"The receiver Layer 2 address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"executeBlocks(tuple(tuple,bytes[])[])","name":"executeBlocks","description":"","parameterDecorators":[{"name":"_blocksData","description":"","recommendedTypes":[],"parameters":[{"name":"storedBlock","description":"","type":"tuple"},{"name":"pendingOnchainOpsPubdata","description":"","type":"bytes[]"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"exit(tuple(uint32,uint64,bytes32,uint256,bytes32,bytes32),uint32,uint16,uint128,tuple(uint256[],uint256[],uint256[],uint8[],uint256[16]))","name":"exit","description":"Withdraws token from Franklin to root chain in case of exodus mode. User must provide proof that he owns funds.","parameterDecorators":[{"name":"_storedBlockInfo","description":"Last verified block.","recommendedTypes":[],"parameters":[{"name":"blockNumber","description":"","type":"uint32"},{"name":"priorityOperations","description":"","type":"uint64"},{"name":"pendingOnchainOperationsHash","description":"","type":"bytes32"},{"name":"timestamp","description":"","type":"uint256"},{"name":"stateHash","description":"","type":"bytes32"},{"name":"commitment","description":"","type":"bytes32"}]},{"name":"_accountId","description":"Id of the account in the tree.","recommendedTypes":[]},{"name":"_tokenId","description":"Verified token id.","recommendedTypes":[]},{"name":"_amount","description":"Amount for owner (must be total amount, not part of it).","recommendedTypes":[]},{"name":"_proof","description":"Proof.","recommendedTypes":[],"parameters":[{"name":"recursiveInput","description":"","type":"uint256[]"},{"name":"proof","description":"","type":"uint256[]"},{"name":"commitments","description":"","type":"uint256[]"},{"name":"vkIndexes","description":"","type":"uint8[]"},{"name":"subproofsLimbs","description":"","type":"uint256[16]"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"exited(uint32,uint16)","name":"exited","description":"Flag indicates that a user has exited certain token balance (per account id and tokenId).","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"exodusMode()","name":"exodusMode","description":"Flag indicates that exodus (mass exit) mode is triggeredOnce it was raised, it can not be cleared again, and all users must exit.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"firstPendingWithdrawalIndex_DEPRECATED()","name":"firstPendingWithdrawalIndex_DEPRECATED","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"firstPriorityRequestId()","name":"firstPriorityRequestId","description":"First open priority request id.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"fullExit(uint32,address)","name":"fullExit","description":"Register full exit request - pack pubdata, add priority request.","parameterDecorators":[{"name":"_accountId","description":"Numerical id of the account.","recommendedTypes":[]},{"name":"_token","description":"Token address, 0 address for ether.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getBalanceToWithdraw(address,uint16)","name":"getBalanceToWithdraw","description":"Gets value from balancesToWithdraw.","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[]},{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"getNoticePeriod()","name":"getNoticePeriod","description":"Notice period before activation preparation status of upgrade mode.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"governance()","name":"governance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(bytes)","name":"initialize","description":"zkSync contract initialization. Can be external because Proxy contract intercepts illegal calls of this function. _governanceAddress The address of Governance contract_verifierAddress The address of Verifier contract_genesisStateHash Genesis blocks (first block) state tree root hash.","parameterDecorators":[{"name":"initializationParameters","description":"Encoded representation of initialization parameters:.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isReadyForUpgrade()","name":"isReadyForUpgrade","description":"Checks that contract is ready for upgrade.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"bool flag indicating that contract is ready for upgrade.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"numberOfPendingWithdrawals_DEPRECATED()","name":"numberOfPendingWithdrawals_DEPRECATED","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingWithdrawals_DEPRECATED(uint32)","name":"pendingWithdrawals_DEPRECATED","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"to","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"tokenId","description":"","recommendedTypes":[],"solidityType":"uint16"}],"emittableEvents":[],"readOnly":true},{"signature":"priorityRequests(uint64)","name":"priorityRequests","description":"Priority Requests mapping (request id - operation).","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"hashedPubData","description":"","recommendedTypes":[],"solidityType":"bytes20"},{"name":"expirationBlock","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"opType","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"priorityRequests_DEPRECATED(uint64)","name":"priorityRequests_DEPRECATED","description":"Priority Requests mapping (request id - operation).","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"opType","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"pubData","description":"","recommendedTypes":[],"solidityType":"bytes"},{"name":"expirationBlock","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"proofBlocks(tuple(uint32,uint64,bytes32,uint256,bytes32,bytes32)[],tuple(uint256[],uint256[],uint256[],uint8[],uint256[16]))","name":"proofBlocks","description":"Blocks commitment verification.Only verifies block commitments without any other processing.","parameterDecorators":[{"name":"_committedBlocks","description":"","recommendedTypes":[],"parameters":[{"name":"blockNumber","description":"","type":"uint32"},{"name":"priorityOperations","description":"","type":"uint64"},{"name":"pendingOnchainOperationsHash","description":"","type":"bytes32"},{"name":"timestamp","description":"","type":"uint256"},{"name":"stateHash","description":"","type":"bytes32"},{"name":"commitment","description":"","type":"bytes32"}]},{"name":"_proof","description":"","recommendedTypes":[],"parameters":[{"name":"recursiveInput","description":"","type":"uint256[]"},{"name":"proof","description":"","type":"uint256[]"},{"name":"commitments","description":"","type":"uint256[]"},{"name":"vkIndexes","description":"","type":"uint8[]"},{"name":"subproofsLimbs","description":"","type":"uint256[16]"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"revertBlocks(tuple(uint32,uint64,bytes32,uint256,bytes32,bytes32)[])","name":"revertBlocks","description":"Reverts unverified blocks.","parameterDecorators":[{"name":"_blocksToRevert","description":"","recommendedTypes":[],"parameters":[{"name":"blockNumber","description":"","type":"uint32"},{"name":"priorityOperations","description":"","type":"uint64"},{"name":"pendingOnchainOperationsHash","description":"","type":"bytes32"},{"name":"timestamp","description":"","type":"uint256"},{"name":"stateHash","description":"","type":"bytes32"},{"name":"commitment","description":"","type":"bytes32"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAuthPubkeyHash(bytes,uint32)","name":"setAuthPubkeyHash","description":"","parameterDecorators":[{"name":"_pubkey_hash","description":"","recommendedTypes":[]},{"name":"_nonce","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"storedBlockHashes(uint32)","name":"storedBlockHashes","description":"Stored hashed StoredBlockInfo for some block number.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"totalBlocksCommitted()","name":"totalBlocksCommitted","description":"Total number of committed blocks i.e. blocks[totalBlocksCommitted] points at the latest committed block.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"totalBlocksProofed()","name":"totalBlocksProofed","description":"Total blocks proofed.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"totalBlocksVerified()","name":"totalBlocksVerified","description":"Total number of verified blocks i.e. blocks[totalBlocksVerified] points at the latest verified block (block 0 is genesis).","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"totalCommittedPriorityRequests()","name":"totalCommittedPriorityRequests","description":"Total number of committed requests.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"totalOpenPriorityRequests()","name":"totalOpenPriorityRequests","description":"Total number of requests.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"triggerExodusIfNeeded()","name":"triggerExodusIfNeeded","description":"Checks if Exodus mode must be entered. If true - enters exodus mode and emits ExodusMode event. Exodus mode must be entered in case of current ethereum block number is higher than the oldestof existed priority requests expiration block number.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"bool flag that is true if the Exodus mode must be entered.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"upgrade(bytes)","name":"upgrade","description":"zkSync contract upgrade. Can be external because Proxy contract intercepts illegal calls of this function.","parameterDecorators":[{"name":"upgradeParameters","description":"Encoded representation of upgrade parameters.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeCanceled()","name":"upgradeCanceled","description":"Notification that upgrade canceled.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeFinishes()","name":"upgradeFinishes","description":"Notification that upgrade finishes.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeNoticePeriodStarted()","name":"upgradeNoticePeriodStarted","description":"Notification that upgrade notice period started.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradePreparationActivationTime()","name":"upgradePreparationActivationTime","description":"Upgrade preparation activation timestamp (as seconds since unix epoch).","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"upgradePreparationActive()","name":"upgradePreparationActive","description":"Flag indicates that upgrade preparation status is active.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"upgradePreparationStarted()","name":"upgradePreparationStarted","description":"Notification that upgrade preparation status is activated.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"verifier()","name":"verifier","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawERC20(address,uint128)","name":"withdrawERC20","description":"Withdraw ERC20 token to Layer 1 - register withdrawal and transfer ERC20 to sender.","parameterDecorators":[{"name":"_token","description":"Token address.","recommendedTypes":[]},{"name":"_amount","description":"amount to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawERC20Guarded(address,address,uint128,uint128)","name":"withdrawERC20Guarded","description":"Sends tokens. NOTE: will revert if transfer call fails or rollup balance difference (before and after transfer) is bigger than _maxAmount.","parameterDecorators":[{"name":"_tokenAddress","description":"Token address.","recommendedTypes":[]},{"name":"_to","description":"Address of recipient.","recommendedTypes":[]},{"name":"_amount","description":"Amount of tokens to transfer.","recommendedTypes":[]},{"name":"_maxAmount","description":"Maximum possible amount of tokens to transfer to this account.","recommendedTypes":[]}],"returnDecorators":[{"name":"withdrawnAmount","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":false},{"signature":"withdrawETH(uint128)","name":"withdrawETH","description":"Withdraw ETH to Layer 1 - register withdrawal and transfer ether to sender.","parameterDecorators":[{"name":"_amount","description":"Ether amount to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}