{"schema":"../schema.json","tags":[],"name":"Dispatcher","description":"Proxying requests to other contracts. Client should use ABI of real contract and address of this contract.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when a token is locked or the lock on a token is extended.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RolledBack(address,address,address)","name":"RolledBack","description":"Emitted when a token is locked or the lock on a token is extended.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StateVerified(address,address)","name":"StateVerified","description":"Emitted when a token is locked or the lock on a token is extended.","parameterDecorators":[{"name":"testTarget","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UpgradeFinished(address,address)","name":"UpgradeFinished","description":"Emitted when a token is locked or the lock on a token is extended.","parameterDecorators":[{"name":"target","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Upgraded(address,address,address)","name":"Upgraded","description":"Emitted when a token is locked or the lock on a token is extended.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"finishUpgrade(address)","name":"finishUpgrade","description":"Override function using empty code because no reason to call this function in Dispatcher.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"implementation()","name":"implementation","description":"ERC897, gets the address of the implementation where every call will be delegated.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"true if `msg.sender` is the owner of the contract.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isUpgrade()","name":"isUpgrade","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the address of the owner.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"previousTarget()","name":"previousTarget","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"proxyType()","name":"proxyType","description":"ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore. Allows the current owner to relinquish control of the contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rollback()","name":"rollback","description":"Rollback to previous target. Test storage carefully before upgrade again after rollback.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"target()","name":"target","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Allows the current owner to transfer control of the contract to a newOwner.","parameterDecorators":[{"name":"newOwner","description":"The address to transfer ownership to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgrade(address)","name":"upgrade","description":"Verify new contract storage and upgrade target.","parameterDecorators":[{"name":"_target","description":"New target contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"verifyState(address)","name":"verifyState","description":"Method for verifying storage state. Should check that new target contract returns right storage value.","parameterDecorators":[{"name":"_testTarget","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}