{"schema":"../schema.json","tags":["tokens","strategies","avalanche"],"name":"TraderJoeFeeCollector","description":"This contract implements a fee collector strategy for TraderJoe's MasterChef. It accumulates the converted reward token sent from strategies (WAVAX/JOE) and deposits into MasterChef. The rewards/bonus accumulated on MasterChed from reserve funds are, on the other hand, collected and sent to the buyback/collector contract. These operations happen via the gulp function.","eventDecorators":[{"signature":"AnnounceDelayedAction(bytes4,bytes32)","name":"AnnounceDelayedAction","description":"Emitted when the contract is unpaused.","parameterDecorators":[{"name":"_selector","description":"","recommendedTypes":[],"indexed":false},{"name":"_hash","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ChangeBuyback(address,address)","name":"ChangeBuyback","description":"Emitted when the contract is unpaused.","parameterDecorators":[{"name":"_oldBuyback","description":"","recommendedTypes":[],"indexed":false},{"name":"_newBuyback","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ChangeCollector(address,address)","name":"ChangeCollector","description":"Emitted when the contract is unpaused.","parameterDecorators":[{"name":"_oldCollector","description":"","recommendedTypes":[],"indexed":false},{"name":"_newCollector","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ChangeTreasury(address,address)","name":"ChangeTreasury","description":"Emitted when the contract is unpaused.","parameterDecorators":[{"name":"_oldTreasury","description":"","recommendedTypes":[],"indexed":false},{"name":"_newTreasury","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ExecuteDelayedAction(bytes4,bytes32)","name":"ExecuteDelayedAction","description":"Emitted when the contract is unpaused.","parameterDecorators":[{"name":"_selector","description":"","recommendedTypes":[],"indexed":false},{"name":"_hash","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Migrate(address)","name":"Migrate","description":"Emitted when the contract is unpaused.","parameterDecorators":[{"name":"_migrationRecipient","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when the contract is unpaused.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"announceDelayedAction(bytes4,bytes)","name":"announceDelayedAction","description":"","parameterDecorators":[{"name":"_selector","description":"","recommendedTypes":[]},{"name":"_params","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"buyback()","name":"buyback","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"collector()","name":"collector","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"gulp()","name":"gulp","description":"Performs the conversion of the reward token received from strategies into the reserve token. Also collects the rewards from its deposits and sent it to the buyback contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"migrate(address,bool)","name":"migrate","description":"Performs a migration of this contracts funds. This is a privileged function.","parameterDecorators":[{"name":"_migrationRecipient","description":"The address to receive the migrated funds.","recommendedTypes":[]},{"name":"_emergency","description":"A flag indicating whether or not use the emergency mode from the underlying MasterChef contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"recoverLostFunds(address)","name":"recoverLostFunds","description":"Allows the recovery of tokens sent by mistake to this contract, excluding tokens relevant to its operations. The full balance is sent to the treasury address. This is a privileged function.","parameterDecorators":[{"name":"_token","description":"The address of the token to be recovered.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"reserveToken()","name":"reserveToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardToken()","name":"rewardToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setBuyback(address)","name":"setBuyback","description":"Updates the buyback contract address used to send collected rewards. This is a privileged function.","parameterDecorators":[{"name":"_newBuyback","description":"The new buyback contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCollector(address)","name":"setCollector","description":"Updates the fee collector contract address used to send collected bonus. This is a privileged function.","parameterDecorators":[{"name":"_newCollector","description":"The new fee collector contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTreasury(address)","name":"setTreasury","description":"Updates the treasury address used to recover lost funds. This is a privileged function.","parameterDecorators":[{"name":"_newTreasury","description":"The new treasury address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"treasury()","name":"treasury","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}