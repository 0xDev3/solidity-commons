{
  "schema": "../schema.json",
  "tags": [],
  "name": "Flipper",
  "description": "",
  "eventDecorators": [
    {
      "signature": "PendingGovernorshipTransfer(address,address)",
      "name": "PendingGovernorshipTransfer",
      "description": "Emitted when a user sells wTokens to the AMM. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "previousGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "GovernorshipTransferred(address,address)",
      "name": "GovernorshipTransferred",
      "description": "Emitted when a user sells wTokens to the AMM. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "previousGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "governor()",
      "name": "governor",
      "description": "Returns the address of the current Governor.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyOusdWithUsdt(uint256)",
      "name": "buyOusdWithUsdt",
      "description": "Purchase OUSD with USDT.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of OUSD to purchase, in 18 fixed decimals.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyOusdWithDai(uint256)",
      "name": "buyOusdWithDai",
      "description": "Purchase OUSD with Dai.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of OUSD to purchase, in 18 fixed decimals.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimGovernance()",
      "name": "claimGovernance",
      "description": "Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawAll()",
      "name": "withdrawAll",
      "description": "Owner function to withdraw all tradable tokens. Equivalent to \"pausing\" the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sellOusdForDai(uint256)",
      "name": "sellOusdForDai",
      "description": "Sell OUSD for Dai.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of OUSD to sell, in 18 fixed decimals.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyOusdWithUsdc(uint256)",
      "name": "buyOusdWithUsdc",
      "description": "Purchase OUSD with USDC.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of OUSD to purchase, in 18 fixed decimals.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sellOusdForUsdc(uint256)",
      "name": "sellOusdForUsdc",
      "description": "Sell OUSD for USDC.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of OUSD to sell, in 18 fixed decimals.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isGovernor()",
      "name": "isGovernor",
      "description": "Returns true if the caller is the current Governor.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sellOusdForUsdt(uint256)",
      "name": "sellOusdForUsdt",
      "description": "Sell OUSD for USDT.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of OUSD to sell, in 18 fixed decimals.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferGovernance(address)",
      "name": "transferGovernance",
      "description": "Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete.",
      "parameterDecorators": [
        {
          "name": "_newGovernor",
          "description": "Address of the new Governor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(address,uint256)",
      "name": "withdraw",
      "description": "Owner function to withdraw a specific amount of a token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rebaseOptIn()",
      "name": "rebaseOptIn",
      "description": "Opting into yield reduces the gas cost per transfer by about 4K, since ousd needs to do less accounting and one less storage write.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}