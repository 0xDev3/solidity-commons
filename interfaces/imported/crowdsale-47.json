{"schema":"../schema.json","tags":[],"name":"Crowdsale","description":"","eventDecorators":[{"signature":"CrowdsaleFinalized()","name":"CrowdsaleFinalized","description":"","parameterDecorators":[]},{"signature":"TokensPurchased(address,address,uint256,uint256)","name":"TokensPurchased","description":"Event for token purchase logging.","parameterDecorators":[{"name":"purchaser","description":"who paid for the tokens.","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":true},{"name":"value","description":"value of wei or token paid for purchase.","recommendedTypes":[],"indexed":false},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"amountRaised()","name":"amountRaised","description":"Amount of wei raised.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOf(address)","name":"balanceOf","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the balance of an account.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"buyTokens(address,uint256)","name":"buyTokens","description":"low level token purchase with a token ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.","parameterDecorators":[{"name":"_beneficiary","description":"Recipient of the token purchase.","recommendedTypes":[]},{"name":"_tokenAmount","description":"Value in wei or token involved in the purchase.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"buyTokensEth(address)","name":"buyTokensEth","description":"low level token purchase with ETH ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.","parameterDecorators":[{"name":"_beneficiary","description":"Recipient of the token purchase.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"endTime()","name":"endTime","description":"ending time of crowdsale.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"finalize()","name":"finalize","description":"Must be called after crowdsale ends, to do some extra finalization work. Calls the contracts finalization function.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"goal()","name":"goal","description":"minimum amount of funds to be raised in weis or tokens.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"goalReached()","name":"goalReached","description":"Checks whether funding goal was reached.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Whether funding goal was reached.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"hasClosed()","name":"hasClosed","description":"Checks whether the period in which the crowdsale is open has already elapsed.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Whether crowdsale period has elapsed.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"initCrowdsale(address,address,address,uint256,uint256,uint256,uint256,uint256,address)","name":"initCrowdsale","description":"","parameterDecorators":[{"name":"_funder","description":"The address that funds the token for crowdsale.","recommendedTypes":[]},{"name":"_token","description":"Address of the token being sold.","recommendedTypes":[]},{"name":"_paymentCurrency","description":"The currency the crowdsale accepts for payment. Can be ETH or token address.","recommendedTypes":[]},{"name":"_totalTokens","description":"The total number of tokens to sell in crowdsale.","recommendedTypes":[]},{"name":"_startTime","description":"Crowdsale start time.","recommendedTypes":[]},{"name":"_endTime","description":"Crowdsale end time.","recommendedTypes":[]},{"name":"_rate","description":"Number of token units a buyer gets per wei or token.","recommendedTypes":[]},{"name":"_goal","description":"Minimum amount of funds to be raised in weis or tokens.","recommendedTypes":[]},{"name":"_wallet","description":"Address where collected funds will be forwarded to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isOpen()","name":"isOpen","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"true if the crowdsale is open, false otherwise.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"marketTemplate()","name":"marketTemplate","description":"MISOMarket template id for the factory contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"paymentCurrency()","name":"paymentCurrency","description":"The currency the crowdsale accepts for payment. Can be ETH or token address.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rate()","name":"rate","description":"How many token units a buyer gets per token or wei. The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK 1 wei will give you 1 unit, or 0.001 TOK.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"startTime()","name":"startTime","description":"starting time of crowdsale.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"token()","name":"token","description":"The token being sold.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawTokens(address)","name":"withdrawTokens","description":"Withdraw tokens only after crowdsale ends.","parameterDecorators":[{"name":"beneficiary","description":"Whose tokens will be withdrawn.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}