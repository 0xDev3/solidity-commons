{"schema":"../schema.json","tags":["tokens"],"name":"LegacyTokensExtension","description":"the Gluon-Plasma Extension contract for supporting deposit and withdraw for legacy tokens - depositing an token into an app - withdrawing an token from an app - transferring an token across apps.","eventDecorators":[{"signature":"OwnerAdded(address)","name":"OwnerAdded","description":"","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnerRemoved(address)","name":"OwnerRemoved","description":"","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TokenAdded(address)","name":"TokenAdded","description":"","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TokenRemoved(address)","name":"TokenRemoved","description":"","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"addOwner(address)","name":"addOwner","description":"authorize an `account` with owner access.","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addToken(address)","name":"addToken","description":"add a token.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"balances(uint32,address)","name":"balances","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"current(uint32)","name":"current","description":"","parameterDecorators":[{"name":"appId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"depositEther(uint32)","name":"depositEther","description":"deposit ETH token on behalf of the sender into an app's safe.","parameterDecorators":[{"name":"appId","description":"index of the target app.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"depositToken(uint32,address,uint256)","name":"depositToken","description":"deposit ERC20 token token (represented by address 0x0) on behalf of the sender into an app's safe. an account must call token.approve(logic, quantity) beforehand.","parameterDecorators":[{"name":"appId","description":"index of the target app.","recommendedTypes":[]},{"name":"token","description":"address of ERC20 token contract.","recommendedTypes":[]},{"name":"quantity","description":"how much of token.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getBalance(uint32,address)","name":"getBalance","description":"what is the current balance of `token` in the `appId` app's safe?.","parameterDecorators":[{"name":"appId","description":"","recommendedTypes":[]},{"name":"token","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getOwners()","name":"getOwners","description":"list all accounts with an owner access.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokens()","name":"getTokens","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"gluon()","name":"gluon","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner(address)","name":"isOwner","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isTokenAllowed(address)","name":"isTokenAllowed","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owners(uint256)","name":"owners","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeOwner(address)","name":"removeOwner","description":"revoke an `account` owner access (while ensuring at least one owner remains).","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeToken(address)","name":"removeToken","description":"remove a token.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tokenBalances(address)","name":"tokenBalances","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"tokens(uint256)","name":"tokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transfer(uint32,uint32,bytes)","name":"transfer","description":"withdraw a quantity of token from a source app's safe and transfer it (within Gluon) to a target app's safe. quantity & token should be derived by the source app.","parameterDecorators":[{"name":"from","description":"index of the source app.","recommendedTypes":[]},{"name":"to","description":"index of the target app.","recommendedTypes":[]},{"name":"parameters","description":"a bytes-marshalled record containing at the very least quantity & token.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"version()","name":"version","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint32,bytes)","name":"withdraw","description":"withdraw a quantity of token from an app's safe. quantity & token should be derived by the app.","parameterDecorators":[{"name":"appId","description":"index of the target app.","recommendedTypes":[]},{"name":"parameters","description":"a bytes-marshalled record containing at the very least quantity & token.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}