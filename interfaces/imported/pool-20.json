{
  "schema": "../schema.json",
  "tags": [],
  "name": "Pool",
  "description": "",
  "eventDecorators": [
    {
      "signature": "TokensReceived(address,address,uint256,bytes)",
      "name": "TokensReceived",
      "description": "",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DOMAIN_SEPARATOR()",
      "name": "DOMAIN_SEPARATOR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "acceptAsset(address,uint8,uint256,bytes)",
      "name": "acceptAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_currentyType",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_premiumPermit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeConfigAddress(address)",
      "name": "changeConfigAddress",
      "description": "change config contract address.",
      "parameterDecorators": [
        {
          "name": "_configAddress",
          "description": "is the new address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeDependentContractAddress()",
      "name": "changeDependentContractAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "daiTokenAddr()",
      "name": "daiTokenAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "devWallet()",
      "name": "devWallet",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getListingFee(uint256,uint256,uint256)",
      "name": "getListingFee",
      "description": "Calculate listing fee (in infi token) NOTE : This one need to take price from chainlink.",
      "parameterDecorators": [
        {
          "name": "insuredSum",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "insuredSumCurrencyDecimal",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "feeCoinPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onTransferReceived(address,address,uint256,bytes)",
      "name": "onTransferReceived",
      "description": "",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferAndBurnInfi(uint256)",
      "name": "transferAndBurnInfi",
      "description": "",
      "parameterDecorators": [
        {
          "name": "listingFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferAsset(address,uint8,uint256)",
      "name": "transferAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_currentyType",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "usdcTokenAddr()",
      "name": "usdcTokenAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "usdtTokenAddr()",
      "name": "usdtTokenAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "verifyMessage(tuple(string,string,uint256,uint256,uint8,bytes32,bytes32),address)",
      "name": "verifyMessage",
      "description": "For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].",
      "parameterDecorators": [
        {
          "name": "coinPricing",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "coinId",
              "description": "",
              "type": "string"
            },
            {
              "name": "coinSymbol",
              "description": "",
              "type": "string"
            },
            {
              "name": "coinPrice",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "lastUpdatedAt",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "sigV",
              "description": "",
              "type": "uint8"
            },
            {
              "name": "sigR",
              "description": "",
              "type": "bytes32"
            },
            {
              "name": "sigS",
              "description": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "name": "whose",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}