{"schema":"../schema.json","tags":["bridges"],"name":"GenericHandler","description":"Handles generic deposits and deposit executions. This contract is intended to be used with the Bridge contract. Copied directly from here: https://github.com/ChainSafe/chainbridge-solidity/releases/tag/v1.0.0.","eventDecorators":[],"functionDecorators":[{"signature":"_bridgeAddress()","name":"_bridgeAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"_contractAddressToDepositFunctionSignature(address)","name":"_contractAddressToDepositFunctionSignature","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":true},{"signature":"_contractAddressToExecuteFunctionSignature(address)","name":"_contractAddressToExecuteFunctionSignature","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":true},{"signature":"_contractAddressToResourceID(address)","name":"_contractAddressToResourceID","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"_contractWhitelist(address)","name":"_contractWhitelist","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"_depositRecords(uint8,uint64)","name":"_depositRecords","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_destinationChainID","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"_depositer","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"_resourceID","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"_metaData","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"_resourceIDToContractAddress(bytes32)","name":"_resourceIDToContractAddress","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit(bytes32,uint8,uint64,address,bytes)","name":"deposit","description":"A deposit is initiatied by making a deposit in the Bridge contract.Data passed into the function should be constructed as follows: len(data) uint256 bytes 0 - 32 data bytes bytes 64 - END{contractAddress} is required to be whitelistedIf {_contractAddressToDepositFunctionSignature}[{contractAddress}] is set, {metaData} is expected to consist of needed function arguments.","parameterDecorators":[{"name":"resourceID","description":"","recommendedTypes":[]},{"name":"destinationChainID","description":"Chain ID deposit is expected to be bridged to.","recommendedTypes":[]},{"name":"depositNonce","description":"This value is generated as an ID by the Bridge contract.","recommendedTypes":[]},{"name":"depositer","description":"Address of account making the deposit in the Bridge contract.","recommendedTypes":[]},{"name":"data","description":"Consists of: {resourceID}, {lenMetaData}, and {metaData} all padded to 32 bytes.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"executeProposal(bytes32,bytes)","name":"executeProposal","description":"Proposal execution should be initiated when a proposal is finalized in the Bridge contract.Data passed into the function should be constructed as follows: len(data) uint256 bytes 0 - 32 data bytes bytes 32 - END{contractAddress} is required to be whitelistedIf {_contractAddressToExecuteFunctionSignature}[{contractAddress}] is set, {metaData} is expected to consist of needed function arguments.","parameterDecorators":[{"name":"resourceID","description":"","recommendedTypes":[]},{"name":"data","description":"Consists of {resourceID}, {lenMetaData}, and {metaData}.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getDepositRecord(uint64,uint8)","name":"getDepositRecord","description":"","parameterDecorators":[{"name":"depositNonce","description":"This ID will have been generated by the Bridge contract.","recommendedTypes":[]},{"name":"destId","description":"ID of chain deposit will be bridged to.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"DepositRecord which consists of: - _destinationChainID ChainID deposited tokens are intended to end up on. - _resourceID ResourceID used when {deposit} was executed. - _depositer Address that initially called {deposit} in the Bridge contract. - _metaData Data to be passed to method executed in corresponding {resourceID} contract.","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"setResource(bytes32,address,bytes4,bytes4)","name":"setResource","description":"First verifies {_resourceIDToContractAddress}[{resourceID}] and {_contractAddressToResourceID}[{contractAddress}] are not already set, then sets {_resourceIDToContractAddress} with {contractAddress}, {_contractAddressToResourceID} with {resourceID}, {_contractAddressToDepositFunctionSignature} with {depositFunctionSig}, {_contractAddressToExecuteFunctionSignature} with {executeFunctionSig}, and {_contractWhitelist} to true for {contractAddress}.","parameterDecorators":[{"name":"resourceID","description":"ResourceID to be used when making deposits.","recommendedTypes":[]},{"name":"contractAddress","description":"Address of contract to be called when a deposit is made and a deposited is executed.","recommendedTypes":[]},{"name":"depositFunctionSig","description":"Function signature of method to be called in {contractAddress} when a deposit is made.","recommendedTypes":[]},{"name":"executeFunctionSig","description":"Function signature of method to be called in {contractAddress} when a deposit is executed.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}