{
  "schema": "../schema.json",
  "tags": [],
  "name": "BaseManager",
  "description": "BaseManager.",
  "eventDecorators": [
    {
      "signature": "AdapterAdded(address)",
      "name": "AdapterAdded",
      "description": "Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "_adapter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AdapterRemoved(address)",
      "name": "AdapterRemoved",
      "description": "Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "_adapter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MethodologistChanged(address,address)",
      "name": "MethodologistChanged",
      "description": "Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "_oldMethodologist",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newMethodologist",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OperatorChanged(address,address)",
      "name": "OperatorChanged",
      "description": "Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "_oldOperator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newOperator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addAdapter(address)",
      "name": "addAdapter",
      "description": "MUTUAL UPGRADE: Add a new adapter that the BaseManager can call.",
      "parameterDecorators": [
        {
          "name": "_adapter",
          "description": "New adapter to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addModule(address)",
      "name": "addModule",
      "description": "OPERATOR ONLY: Add a new module to the SetToken.",
      "parameterDecorators": [
        {
          "name": "_module",
          "description": "New module to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAdapters()",
      "name": "getAdapters",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "interactManager(address,bytes)",
      "name": "interactManager",
      "description": "ADAPTER ONLY: Interact with a module registered on the SetToken.",
      "parameterDecorators": [
        {
          "name": "_module",
          "description": "Module to interact with.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "Byte data of function to call in module.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isAdapter(address)",
      "name": "isAdapter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "methodologist()",
      "name": "methodologist",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "operator()",
      "name": "operator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAdapter(address)",
      "name": "removeAdapter",
      "description": "MUTUAL UPGRADE: Remove an existing adapter tracked by the BaseManager.",
      "parameterDecorators": [
        {
          "name": "_adapter",
          "description": "Old adapter to remove.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeModule(address)",
      "name": "removeModule",
      "description": "OPERATOR ONLY: Remove a new module from the SetToken.",
      "parameterDecorators": [
        {
          "name": "_module",
          "description": "Module to remove.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setManager(address)",
      "name": "setManager",
      "description": "MUTUAL UPGRADE: Update the SetToken manager address. Operator and Methodologist must each call this function to execute the update.",
      "parameterDecorators": [
        {
          "name": "_newManager",
          "description": "New manager address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMethodologist(address)",
      "name": "setMethodologist",
      "description": "METHODOLOGIST ONLY: Update the methodologist address.",
      "parameterDecorators": [
        {
          "name": "_newMethodologist",
          "description": "New methodologist address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOperator(address)",
      "name": "setOperator",
      "description": "OPERATOR ONLY: Update the operator address.",
      "parameterDecorators": [
        {
          "name": "_newOperator",
          "description": "New operator address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setToken()",
      "name": "setToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}