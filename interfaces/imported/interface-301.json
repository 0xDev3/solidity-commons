{"schema":"../schema.json","tags":[],"name":"RegistryLogic","description":"enabling Zero Knowledge API Keys as described in: https://blog.leverj.io/zero-knowledge-api-keys-43280cc93647. although Registry enable account-based apps needing log-less logins, no app is required to use it. the Registry app consists of the RegistryLogic & RegistryData contracts. api-key registrations are held within RegistryData for an easier upgrade path.","eventDecorators":[{"signature":"Off()","name":"Off","description":"","parameterDecorators":[]},{"signature":"Registered(address,address)","name":"Registered","description":"","parameterDecorators":[{"name":"apiKey","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Retired()","name":"Retired","description":"","parameterDecorators":[]}],"functionDecorators":[{"signature":"credit(address,address,uint256)","name":"credit","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":true},{"signature":"currentLogic()","name":"currentLogic","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"address the address of currently active (latest) version of me (the app contract).","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"data()","name":"data","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"debit(address,bytes)","name":"debit","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"gluon()","name":"gluon","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"id()","name":"id","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"isOn()","name":"isOn","description":"app state is active, i.e: current & active.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"old()","name":"old","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"register(address)","name":"register","description":"register an api-key on behalf of the sender. irreversible operation; the apiKey->sender association cannot be broken or overwritten (but further apiKey->sender associations can be provided).","parameterDecorators":[{"name":"apiKey","description":"the account to be used to stand-in for the registering sender.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setUpgradeOperator(address)","name":"setUpgradeOperator","description":"","parameterDecorators":[{"name":"upgradeOperator_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"state()","name":"state","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"switchOff()","name":"switchOff","description":"halt the app. this action is irreversible. (the only option at this point is have a proposal that will get to approval, then activated.) should be called by an app-owner when the app has been compromised. Note the constraint that all apps but Registry & Stake must be halted first!.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"translate(address)","name":"translate","description":"retrieve the stand-in-for account.","parameterDecorators":[{"name":"apiKey","description":"the account to be used to stand-in for the registering sender.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"upgrade()","name":"upgrade","description":"upgrade the app to a new version; the approved proposal. by the end of this call the approved proposal would be the current and active version of the app.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeOperator()","name":"upgradeOperator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}