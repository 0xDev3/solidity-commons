{
  "schema": "../schema.json",
  "tags": [],
  "name": "Election",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "addCandidate(address,string)",
      "name": "addCandidate",
      "description": "this function adds a new candidate. this function adds a candidate, _canAddress will be the candidate address and _name will be the candidate's name.",
      "parameterDecorators": [
        {
          "name": "_canAddress",
          "description": "candidate address.",
          "recommendedTypes": []
        },
        {
          "name": "_name",
          "description": "name of candidate.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "announceWinner()",
      "name": "announceWinner",
      "description": "this function announces the winner. this function announces the winner's address, compares the vote count for all the candidates.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOf()",
      "name": "balanceOf",
      "description": "this function returns the balance of the contract. this function returns the balance of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "candidateAddresses(uint256)",
      "name": "candidateAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "candidates(address)",
      "name": "candidates",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "registered",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "voteCount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "electionName()",
      "name": "electionName",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "endVote()",
      "name": "endVote",
      "description": "this function indicates the start of the voting process. this function sets the state to Voting.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getOwnerBalance()",
      "name": "getOwnerBalance",
      "description": "this function returns the balance of the owner. this function returns the balance of the owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalCandidates()",
      "name": "getTotalCandidates",
      "description": "this function returns the total number of candidates. this function returns the length of the candidateAddress array.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "payFee()",
      "name": "payFee",
      "description": "this function registers a new candidate. this function registers a candidate, msg.sender will be candidate and msg.value should be 1 eth.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registerVoter(address)",
      "name": "registerVoter",
      "description": "this function registers a new voter. this function registers a voter, _voterAddress will be voter's address and voters[registered] is the flag.",
      "parameterDecorators": [
        {
          "name": "_voterAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startVote()",
      "name": "startVote",
      "description": "this function indicates the start of the election. this function sets the state to Created.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "state()",
      "name": "state",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalVotes()",
      "name": "totalVotes",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vote(address)",
      "name": "vote",
      "description": "this function casts vote. this function casts vote, requires the voter to not have already voted, requires that the candidate's status is set to registered and requires that the owner cannot vote. Specifies the address the voter voted for, and sets the flag to indicate that the voter has now voted. It increments the candidate's vote count and the total vote count.",
      "parameterDecorators": [
        {
          "name": "_canAddress",
          "description": "candidate address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "voters(address)",
      "name": "voters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "voted",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "registered",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "vote",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawRegistrationFunds()",
      "name": "withdrawRegistrationFunds",
      "description": "this function withdraws the funds. this function transfers the funds from the contract to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}