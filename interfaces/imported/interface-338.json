{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "compound"
  ],
  "name": "Avatar",
  "description": "An Avatar contract deployed per account. The contract holds cTokens and directly interacts with Compound finance.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "approve(address,address,uint256)",
      "name": "approve",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "spender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "borrow(address,uint256,address)",
      "name": "borrow",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "borrowAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "userOrDelegatee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "borrowBalanceCurrent(address)",
      "name": "borrowBalanceCurrent",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calcAmountToLiquidate(address,uint256)",
      "name": "calcAmountToLiquidate",
      "description": "function is non-view but no-harm as CToken.borrowBalanceCurrent() only updates accured interest. Off-chain function to calculate `amtToDeductFromTopup` and `amtToRepayOnCompound`.",
      "parameterDecorators": [
        {
          "name": "debtCToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "underlyingAmtToLiquidate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amtToDeductFromTopup",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amtToRepayOnCompound",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "canLiquidate()",
      "name": "canLiquidate",
      "description": "Returns the status if this Avatar's debt can be liquidated.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "canUntop()",
      "name": "canUntop",
      "description": "Checks if this Avatar can untop the amount.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimComp()",
      "name": "claimComp",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimComp(address[],bool,bool)",
      "name": "claimComp",
      "description": "",
      "parameterDecorators": [
        {
          "name": "bTokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "borrowers",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "suppliers",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimComp(address[])",
      "name": "claimComp",
      "description": "",
      "parameterDecorators": [
        {
          "name": "bTokens",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "collectCToken(address,address,uint256)",
      "name": "collectCToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cTokenAmt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyCall(address,bytes)",
      "name": "emergencyCall",
      "description": "",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enterMarket(address)",
      "name": "enterMarket",
      "description": "",
      "parameterDecorators": [
        {
          "name": "bToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enterMarkets(address[])",
      "name": "enterMarkets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "bTokens",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exitMarket(address)",
      "name": "exitMarket",
      "description": "",
      "parameterDecorators": [
        {
          "name": "bToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAccountLiquidity()",
      "name": "getAccountLiquidity",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "err",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidity",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "shortFall",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAccountLiquidity(address)",
      "name": "getAccountLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "oracle",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "err",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidity",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "shortFall",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMaxLiquidationAmount(address)",
      "name": "getMaxLiquidationAmount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "debtCToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address,address,address)",
      "name": "initialize",
      "description": "Initialize the contract variables.",
      "parameterDecorators": [
        {
          "name": "_registry",
          "description": "Registry contract address.",
          "recommendedTypes": []
        },
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isPartiallyLiquidated()",
      "name": "isPartiallyLiquidated",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isToppedUp()",
      "name": "isToppedUp",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "liquidateBorrow(uint256,uint256,address)",
      "name": "liquidateBorrow",
      "description": "",
      "parameterDecorators": [
        {
          "name": "underlyingAmtToLiquidateDebt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amtToDeductFromTopup",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cTokenColl",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "liquidationCToken()",
      "name": "liquidationCToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mint()",
      "name": "mint",
      "description": "onlyBToken can call this function, as `super.mint()` is protected with `onlyBToken` modifier. Mint cETH using ETH and enter market on Compound.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "mint(address,uint256)",
      "name": "mint",
      "description": "onlyBToken can call this function, as `super.mint()` is protected with `onlyBToken` modifier. Mint cToken for ERC20 and enter market on Compound.",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "mintAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pool()",
      "name": "pool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "quit()",
      "name": "quit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "quitB()",
      "name": "quitB",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeem(address,uint256,address)",
      "name": "redeem",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "redeemTokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "userOrDelegatee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeemUnderlying(address,uint256,address)",
      "name": "redeemUnderlying",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "redeemAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "userOrDelegatee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registry()",
      "name": "registry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "remainingLiquidationAmount()",
      "name": "remainingLiquidationAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "repayBorrow()",
      "name": "repayBorrow",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "repayBorrow(address,uint256)",
      "name": "repayBorrow",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "repayAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "splitAmountToLiquidate(uint256,uint256)",
      "name": "splitAmountToLiquidate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "underlyingAmtToLiquidate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "maxLiquidationAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amtToDeductFromTopup",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amtToRepayOnCompound",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "toppedUpAmount()",
      "name": "toppedUpAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "toppedUpCToken()",
      "name": "toppedUpCToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "topup(address,uint256)",
      "name": "topup",
      "description": "Only Pool contract allowed to call the topup. Topup the borrowed position of this Avatar by repaying borrows from the pool.",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "CToken address to use to RepayBorrows.",
          "recommendedTypes": []
        },
        {
          "name": "topupAmount",
          "description": "Amount of tokens to Topup.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "topup()",
      "name": "topup",
      "description": "Topup this avatar by repaying borrowings with ETH.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transfer(address,address,uint256)",
      "name": "transfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "dst",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferCOMP()",
      "name": "transferCOMP",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferFrom(address,address,address,uint256)",
      "name": "transferFrom",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "src",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "dst",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "untop(uint256)",
      "name": "untop",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}