{"schema":"../schema.json","tags":[],"name":"OneToN","description":"","eventDecorators":[{"signature":"Claimed(address,address,uint256,uint256)","name":"Claimed","description":"Event emitted when a supply is withdrawn. Emitted when token is purchased by `to` in `token` for `price`.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":false},{"name":"receiver","description":"","recommendedTypes":[],"indexed":true},{"name":"expiration_block","description":"","recommendedTypes":[],"indexed":false},{"name":"transferred","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"bulkClaim(address[],address[],uint256[],uint256[],address,bytes)","name":"bulkClaim","description":"Submit multiple IOUs to claim the owed amount. This is the same as calling `claim` multiple times, except for the reduced gas cost.","parameterDecorators":[{"name":"senders","description":"Addresses from which the amounts are transferred.","recommendedTypes":[]},{"name":"receivers","description":"Addresses to which the amounts are transferred.","recommendedTypes":[]},{"name":"amounts","description":"Owed amounts of tokens.","recommendedTypes":[]},{"name":"expiration_blocks","description":"Tokens can only be claimed before this time.","recommendedTypes":[]},{"name":"one_to_n_address","description":"Address of this contract.","recommendedTypes":[]},{"name":"signatures","description":"Sender's signatures concatenated into a single bytes array.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Amount of transferred tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"chain_id()","name":"chain_id","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"claim(address,address,uint256,uint256,address,bytes)","name":"claim","description":"Submit an IOU to claim the owed amount. If the deposit is smaller than the claim, the remaining deposit is claimed. If no tokens are claimed, `claim` may be retried, later.","parameterDecorators":[{"name":"sender","description":"Address from which the amount is transferred.","recommendedTypes":[]},{"name":"receiver","description":"Address to which the amount is transferred.","recommendedTypes":[]},{"name":"amount","description":"Owed amount of tokens.","recommendedTypes":[]},{"name":"expiration_block","description":"Tokens can only be claimed before this time.","recommendedTypes":[]},{"name":"one_to_n_address","description":"Address of this contract.","recommendedTypes":[]},{"name":"signature","description":"Sender's signature over keccak256(sender, receiver, amount, expiration_block).","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Amount of transferred tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"contractExists(address)","name":"contractExists","description":"Check if a contract exists.","parameterDecorators":[{"name":"contract_address","description":"The address to check whether a contract is deployed or not.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if a contract exists, false otherwise.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit_contract()","name":"deposit_contract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"service_registry_contract()","name":"service_registry_contract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"settled_sessions(bytes32)","name":"settled_sessions","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}