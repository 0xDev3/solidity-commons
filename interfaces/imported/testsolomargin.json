{"schema":"../schema.json","tags":[],"name":"TestSoloMargin","description":"","eventDecorators":[{"signature":"LogOperatorSet(address,address,bool)","name":"LogOperatorSet","description":"Event for token purchase logging.","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"operator","description":"","recommendedTypes":[],"indexed":false},{"name":"trusted","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event for token purchase logging.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"ownerSetSpreadPremium(uint256,tuple(uint256))","name":"ownerSetSpreadPremium","description":"Set a premium on the liquidation spread for a market. This makes it so that any liquidations that include this market have a higher spread than the global default.","parameterDecorators":[{"name":"marketId","description":"","recommendedTypes":[]},{"name":"spreadPremium","description":"","recommendedTypes":[],"parameters":[{"name":"value","description":"","type":"uint256"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getIsGlobalOperator(address)","name":"getIsGlobalOperator","description":"Return true if a particular address is approved as a global operator. Such an address can act on any account as if it were the operator's own.","parameterDecorators":[{"name":"operator","description":"The address to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketTokenAddress(uint256)","name":"getMarketTokenAddress","description":"Get the ERC20 token address for a market.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ownerSetInterestSetter(uint256,address)","name":"ownerSetInterestSetter","description":"Set the interest-setter for a market.","parameterDecorators":[{"name":"marketId","description":"","recommendedTypes":[]},{"name":"interestSetter","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAccountValues(tuple(address,uint256))","name":"getAccountValues","description":"Get the total supplied and total borrowed value of an account.","parameterDecorators":[{"name":"account","description":"The account to query.","recommendedTypes":[],"parameters":[{"name":"owner","description":"","type":"address"},{"name":"number","description":"","type":"uint256"}]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketPriceOracle(uint256)","name":"getMarketPriceOracle","description":"Get the price oracle address for a market.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketInterestSetter(uint256)","name":"getMarketInterestSetter","description":"Get the interest-setter address for a market.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketSpreadPremium(uint256)","name":"getMarketSpreadPremium","description":"Get the spread premium for a market. A spread premium makes it so that any liquidations that include the market have a higher spread than the global default.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getNumMarkets()","name":"getNumMarkets","description":"Get the total number of markets.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"ownerWithdrawUnsupportedTokens(address,address)","name":"ownerWithdrawUnsupportedTokens","description":"Withdraw an ERC20 token for which there is no associated market.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]},{"name":"recipient","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"ownerSetMinBorrowedValue(tuple(uint256))","name":"ownerSetMinBorrowedValue","description":"Set the global minimum-borrow value which is the minimum value of any new borrow on Solo.","parameterDecorators":[{"name":"minBorrowedValue","description":"","recommendedTypes":[],"parameters":[{"name":"value","description":"","type":"uint256"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"ownerSetLiquidationSpread(tuple(uint256))","name":"ownerSetLiquidationSpread","description":"Set the global liquidation spread. This is the spread between oracle prices that incentivizes the liquidation of risky positions.","parameterDecorators":[{"name":"spread","description":"","recommendedTypes":[],"parameters":[{"name":"value","description":"","type":"uint256"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"ownerSetEarningsRate(tuple(uint256))","name":"ownerSetEarningsRate","description":"Set the global earnings-rate variable that determines what percentage of the interest paid by borrowers gets passed-on to suppliers.","parameterDecorators":[{"name":"earningsRate","description":"","recommendedTypes":[],"parameters":[{"name":"value","description":"","type":"uint256"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getIsLocalOperator(address,address)","name":"getIsLocalOperator","description":"Return true if a particular address is approved as an operator for an owner's accounts. Approved operators can act on the accounts of the owner as if it were the operator's own.","parameterDecorators":[{"name":"owner","description":"The owner of the accounts.","recommendedTypes":[]},{"name":"operator","description":"The possible operator.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getAccountPar(tuple(address,uint256),uint256)","name":"getAccountPar","description":"Get the principal value for a particular account and market.","parameterDecorators":[{"name":"account","description":"The account to query.","recommendedTypes":[],"parameters":[{"name":"owner","description":"","type":"address"},{"name":"number","description":"","type":"uint256"}]},{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"ownerSetMarginPremium(uint256,tuple(uint256))","name":"ownerSetMarginPremium","description":"Set a premium on the minimum margin-ratio for a market. This makes it so that any positions that include this market require a higher collateralization to avoid being liquidated.","parameterDecorators":[{"name":"marketId","description":"","recommendedTypes":[]},{"name":"marginPremium","description":"","recommendedTypes":[],"parameters":[{"name":"value","description":"","type":"uint256"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getMarginRatio()","name":"getMarginRatio","description":"Get the global minimum margin-ratio that every position must maintain to prevent being liquidated.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketCurrentIndex(uint256)","name":"getMarketCurrentIndex","description":"Get the interest index for a market if it were to be updated right now.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketIsClosing(uint256)","name":"getMarketIsClosing","description":"Return true if a particular market is in closing mode. Additional borrows cannot be taken from a market that is closing.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getRiskParams()","name":"getRiskParams","description":"Get all risk parameters in a single struct.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getAccountBalances(tuple(address,uint256))","name":"getAccountBalances","description":"Get an account's summary for each market.","parameterDecorators":[{"name":"account","description":"The account to query.","recommendedTypes":[],"parameters":[{"name":"owner","description":"","type":"address"},{"name":"number","description":"","type":"uint256"}]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"tuple[]"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore. Allows the current owner to relinquish control of the contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getMinBorrowedValue()","name":"getMinBorrowedValue","description":"Get the global minimum-borrow value which is the minimum value of any new borrow on Solo.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"setAccountStatus(tuple(address,uint256),uint8)","name":"setAccountStatus","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"parameters":[{"name":"owner","description":"","type":"address"},{"name":"number","description":"","type":"uint256"}]},{"name":"status","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setOperators(tuple(address,bool)[])","name":"setOperators","description":"Approves/disapproves any number of operators. An operator is an external address that has the same permissions to manipulate an account as the owner of the account. Operators are simply addresses and therefore may either be externally-owned Ethereum accounts OR smart contracts. * Operators are also able to act as AutoTrader contracts on behalf of the account owner if the operator is a smart contract and implements the IAutoTrader interface.","parameterDecorators":[{"name":"args","description":"A list of OperatorArgs which have an address and a boolean. The boolean value denotes whether to approve (true) or revoke approval (false) for that address.","recommendedTypes":[],"parameters":[{"name":"operator","description":"","type":"address"},{"name":"trusted","description":"","type":"bool"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getMarketPrice(uint256)","name":"getMarketPrice","description":"Get the price of the token for a market.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"ownerWithdrawExcessTokens(uint256,address)","name":"ownerWithdrawExcessTokens","description":"Withdraw an ERC20 token for which there is an associated market. Only excess tokens can be withdrawn. The number of excess tokens is calculated by taking the current number of tokens held in Solo, adding the number of tokens owed to Solo by borrowers, and subtracting the number of tokens owed to suppliers by Solo.","parameterDecorators":[{"name":"marketId","description":"","recommendedTypes":[]},{"name":"recipient","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"ownerAddMarket(address,address,address,tuple(uint256),tuple(uint256))","name":"ownerAddMarket","description":"Add a new market to Solo. Must be for a previously-unsupported ERC20 token.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]},{"name":"priceOracle","description":"","recommendedTypes":[]},{"name":"interestSetter","description":"","recommendedTypes":[]},{"name":"marginPremium","description":"","recommendedTypes":[],"parameters":[{"name":"value","description":"","type":"uint256"}]},{"name":"spreadPremium","description":"","recommendedTypes":[],"parameters":[{"name":"value","description":"","type":"uint256"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"operate(tuple(address,uint256)[],tuple(uint8,uint256,tuple,uint256,uint256,address,uint256,bytes)[])","name":"operate","description":"","parameterDecorators":[{"name":"accounts","description":"","recommendedTypes":[],"parameters":[{"name":"owner","description":"","type":"address"},{"name":"number","description":"","type":"uint256"}]},{"name":"actions","description":"","recommendedTypes":[],"parameters":[{"name":"actionType","description":"","type":"uint8"},{"name":"accountId","description":"","type":"uint256"},{"name":"amount","description":"","type":"tuple"},{"name":"primaryMarketId","description":"","type":"uint256"},{"name":"secondaryMarketId","description":"","type":"uint256"},{"name":"otherAddress","description":"","type":"address"},{"name":"otherAccountId","description":"","type":"uint256"},{"name":"data","description":"","type":"bytes"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMarketIndex(uint256,tuple(uint96,uint96,uint32))","name":"setMarketIndex","description":"","parameterDecorators":[{"name":"market","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[],"parameters":[{"name":"borrow","description":"","type":"uint96"},{"name":"supply","description":"","type":"uint96"},{"name":"lastUpdate","description":"","type":"uint32"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getMarketWithInfo(uint256)","name":"getMarketWithInfo","description":"Get comprehensive information about a particular market.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"ownerSetMarginRatio(tuple(uint256))","name":"ownerSetMarginRatio","description":"Set the global minimum margin-ratio that every position must maintain to prevent being liquidated.","parameterDecorators":[{"name":"ratio","description":"","recommendedTypes":[],"parameters":[{"name":"value","description":"","type":"uint256"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getLiquidationSpread()","name":"getLiquidationSpread","description":"Get the global liquidation spread. This is the spread between oracle prices that incentivizes the liquidation of risky positions.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getAccountWei(tuple(address,uint256),uint256)","name":"getAccountWei","description":"Get the token balance for a particular account and market.","parameterDecorators":[{"name":"account","description":"The account to query.","recommendedTypes":[],"parameters":[{"name":"owner","description":"","type":"address"},{"name":"number","description":"","type":"uint256"}]},{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketTotalPar(uint256)","name":"getMarketTotalPar","description":"Get the total principal amounts (borrowed and supplied) for a market.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getLiquidationSpreadForPair(uint256,uint256)","name":"getLiquidationSpreadForPair","description":"Get the adjusted liquidation spread for some market pair. This is equal to the global liquidation spread multiplied by (1 + spreadPremium) for each of the two markets.","parameterDecorators":[{"name":"heldMarketId","description":"The market for which the account has collateral.","recommendedTypes":[]},{"name":"owedMarketId","description":"The market for which the account has borrowed tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getNumExcessTokens(uint256)","name":"getNumExcessTokens","description":"Get the number of excess tokens for a market. The number of excess tokens is calculated by taking the current number of tokens held in Solo, adding the number of tokens owed to Solo by borrowers, and subtracting the number of tokens owed to suppliers by Solo.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"setAccountBalance(tuple(address,uint256),uint256,tuple(bool,uint128))","name":"setAccountBalance","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"parameters":[{"name":"owner","description":"","type":"address"},{"name":"number","description":"","type":"uint256"}]},{"name":"market","description":"","recommendedTypes":[]},{"name":"newPar","description":"","recommendedTypes":[],"parameters":[{"name":"sign","description":"","type":"bool"},{"name":"value","description":"","type":"uint128"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getMarketCachedIndex(uint256)","name":"getMarketCachedIndex","description":"Get the most recently cached interest index for a market.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getAccountStatus(tuple(address,uint256))","name":"getAccountStatus","description":"Get the status of an account (Normal, Liquidating, or Vaporizing).","parameterDecorators":[{"name":"account","description":"The account to query.","recommendedTypes":[],"parameters":[{"name":"owner","description":"","type":"address"},{"name":"number","description":"","type":"uint256"}]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"getEarningsRate()","name":"getEarningsRate","description":"Get the global earnings-rate variable that determines what percentage of the interest paid by borrowers gets passed-on to suppliers.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"ownerSetPriceOracle(uint256,address)","name":"ownerSetPriceOracle","description":"Set the price oracle for a market.","parameterDecorators":[{"name":"marketId","description":"","recommendedTypes":[]},{"name":"priceOracle","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getRiskLimits()","name":"getRiskLimits","description":"Get all risk parameter limits in a single struct. These are the maximum limits at which the risk parameters can be set by the admin of Solo.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarket(uint256)","name":"getMarket","description":"Get basic information about a particular market.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"ownerSetIsClosing(uint256,bool)","name":"ownerSetIsClosing","description":"Set (or unset) the status of a market to \"closing\". The borrowedValue of a market cannot increase while its status is \"closing\".","parameterDecorators":[{"name":"marketId","description":"","recommendedTypes":[]},{"name":"isClosing","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"ownerSetGlobalOperator(address,bool)","name":"ownerSetGlobalOperator","description":"Approve (or disapprove) an address that is permissioned to be an operator for all accounts in Solo. Intended only to approve smart-contracts.","parameterDecorators":[{"name":"operator","description":"","recommendedTypes":[]},{"name":"approved","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Allows the current owner to transfer control of the contract to a newOwner.","parameterDecorators":[{"name":"newOwner","description":"The address to transfer ownership to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAdjustedAccountValues(tuple(address,uint256))","name":"getAdjustedAccountValues","description":"Get the total supplied and total borrowed values of an account adjusted by the marginPremium of each market. Supplied values are divided by (1 + marginPremium) for each market and borrowed values are multiplied by (1 + marginPremium) for each market. Comparing these adjusted values gives the margin-ratio of the account which will be compared to the global margin-ratio when determining if the account can be liquidated.","parameterDecorators":[{"name":"account","description":"The account to query.","recommendedTypes":[],"parameters":[{"name":"owner","description":"","type":"address"},{"name":"number","description":"","type":"uint256"}]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketMarginPremium(uint256)","name":"getMarketMarginPremium","description":"Get the margin premium for a market. A margin premium makes it so that any positions that include the market require a higher collateralization to avoid being liquidated.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketInterestRate(uint256)","name":"getMarketInterestRate","description":"Get the current borrower interest rate for a market.","parameterDecorators":[{"name":"marketId","description":"The market to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true}]}