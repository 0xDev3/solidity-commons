{"schema":"../schema.json","tags":[],"name":"BrightIdRegister","description":"","eventDecorators":[{"signature":"Register(address)","name":"Register","description":"Emitted when a new Vault is deployed. Fired in updateTokenRegistry().","parameterDecorators":[{"name":"tokenRegistry","description":"new TokenRegistry contract address.","recommendedTypes":[],"indexed":false}]},{"signature":"ScriptResult(address,bytes,bytes,bytes)","name":"ScriptResult","description":"Emitted when a new Vault is deployed. Fired in updateTokenRegistry().","parameterDecorators":[{"name":"executor","description":"","recommendedTypes":[],"indexed":true},{"name":"script","description":"","recommendedTypes":[],"indexed":false},{"name":"input","description":"","recommendedTypes":[],"indexed":false},{"name":"returnData","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RecoverToVault(address,address,uint256)","name":"RecoverToVault","description":"Emitted when a new Vault is deployed. Fired in updateTokenRegistry().","parameterDecorators":[{"name":"vault","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"Query if a contract implements a certain interface.","parameterDecorators":[{"name":"_interfaceId","description":"The interface identifier being queried, as specified in ERC-165.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"register(address[],uint256[],uint8[],bytes32[],bytes32[],address,bytes)","name":"register","description":"Register the sender as a unique individual with a BrightId verification and assign the first address they registered with as their unique ID.","parameterDecorators":[{"name":"_addrs","description":"The history of addresses, or contextIds, used by this user to register with BrightID for the _brightIdContext.","recommendedTypes":[]},{"name":"_timestamps","description":"The time the verification was created for each verifier by a BrightId node.","recommendedTypes":[]},{"name":"_v","description":"Part of the BrightId nodes signature for each verifier verifying the users uniqueness.","recommendedTypes":[]},{"name":"_r","description":"Part of the BrightId nodes signature for each verifier verifying the users uniqueness.","recommendedTypes":[]},{"name":"_s","description":"Part of the BrightId nodes signature for each verifier verifying the users uniqueness.","recommendedTypes":[]},{"name":"_registerAndCall","description":"Contract to call after registration, set to 0x0 to register without forwarding data.","recommendedTypes":[]},{"name":"_functionCallData","description":"Function data to call on the contract address after registration.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"hasInitialized()","name":"hasInitialized","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"userRegistrations(address)","name":"userRegistrations","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"uniqueUserId","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"registerTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"addressVoid","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"requiredVerifications()","name":"requiredVerifications","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getEVMScriptExecutor(bytes)","name":"getEVMScriptExecutor","description":"","parameterDecorators":[{"name":"_script","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRecoveryVault()","name":"getRecoveryVault","description":"Get the recovery vault for the app.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setVerificationTimestampVariance(uint256)","name":"setVerificationTimestampVariance","description":"Set the verification timestamp variance to `_verificationTimestampVariance`.","parameterDecorators":[{"name":"_verificationTimestampVariance","description":"Acceptable period of time between fetching a BrightId verification and registering it with the BrightIdRegister.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"brightIdContext()","name":"brightIdContext","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"UPDATE_SETTINGS_ROLE()","name":"UPDATE_SETTINGS_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"hasUniqueUserId(address)","name":"hasUniqueUserId","description":"Return whether an address has a unique id assigned/was previously verified.","parameterDecorators":[{"name":"_brightIdUser","description":"The BrightId user's address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"brightIdVerifiers(uint256)","name":"brightIdVerifiers","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"MAX_BRIGHTID_VERIFIERS()","name":"MAX_BRIGHTID_VERIFIERS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setRegistrationPeriod(uint256)","name":"setRegistrationPeriod","description":"Set the registration period to `_registrationPeriod`.","parameterDecorators":[{"name":"_registrationPeriod","description":"Length of time after a registration before registration is required again.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"registrationPeriod()","name":"registrationPeriod","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getBrightIdVerifiers()","name":"getBrightIdVerifiers","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"allowRecoverability(address)","name":"allowRecoverability","description":"By default deriving from AragonApp makes it recoverable.","parameterDecorators":[{"name":"token","description":"Token address that would be recovered.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"appId()","name":"appId","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getInitializationBlock()","name":"getInitializationBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferToVault(address)","name":"transferToVault","description":"Send funds to recovery Vault. This contract should never receive funds, but in case it does, this function allows one to recover them.","parameterDecorators":[{"name":"_token","description":"Token balance to be sent to recovery vault.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"canPerform(address,bytes32,uint256[])","name":"canPerform","description":"Check whether an action can be performed by a sender for a particular role on this app.","parameterDecorators":[{"name":"_sender","description":"Sender of the call.","recommendedTypes":[]},{"name":"_role","description":"Role on this app.","recommendedTypes":[]},{"name":"_params","description":"Permission params for the role.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getEVMScriptRegistry()","name":"getEVMScriptRegistry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isVerified(address)","name":"isVerified","description":"Return whether or not the BrightId user is verified.","parameterDecorators":[{"name":"_brightIdUser","description":"The BrightId user's address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"uniqueUserId(address)","name":"uniqueUserId","description":"Return a users unique ID, which is the first address they registered with. Addresses that have been used as contextId's within this context that were not registered with the BrightIdRegister will not have a unique user id set and this function will revert.","parameterDecorators":[{"name":"_brightIdUser","description":"The BrightId user's address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"kernel()","name":"kernel","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isPetrified()","name":"isPetrified","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"setBrightIdVerifiers(address[],uint256)","name":"setBrightIdVerifiers","description":"Set the BrightId verifier addresses to `_brightIdVerifiers` and required number of verifiers to `_requiredVerifications`. Should never use address(0) as a brightIdVerifier as this will allow all verifications.","parameterDecorators":[{"name":"_brightIdVerifiers","description":"Addresses used to verify signed BrightId verifications.","recommendedTypes":[]},{"name":"_requiredVerifications","description":"Number of positive verifications required to register a user.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"verificationTimestampVariance()","name":"verificationTimestampVariance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"MIN_BRIGHTID_VERIFIERS()","name":"MIN_BRIGHTID_VERIFIERS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(bytes32,address[],uint256,uint256,uint256)","name":"initialize","description":"","parameterDecorators":[{"name":"_brightIdContext","description":"BrightId context used for verifying users.","recommendedTypes":[]},{"name":"_brightIdVerifiers","description":"Addresses used to verify signed BrightId verifications.","recommendedTypes":[]},{"name":"_requiredVerifications","description":"Number of positive verifications required to register a user.","recommendedTypes":[]},{"name":"_registrationPeriod","description":"Length of time after a registration before registration is required again.","recommendedTypes":[]},{"name":"_verificationTimestampVariance","description":"Acceptable period of time between creating a BrightId verification and registering it with the BrightIdRegister.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}