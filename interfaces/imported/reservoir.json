{"schema":"../schema.json","tags":[],"name":"Reservoir","description":"","eventDecorators":[{"signature":"Configured(uint256,uint256,uint256)","name":"Configured","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"rate","description":"","recommendedTypes":[],"indexed":false},{"name":"cap","description":"","recommendedTypes":[],"indexed":false},{"name":"txLimit","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Deposited(address,uint256,bytes32)","name":"Deposited","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"id","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LotteryAccepted(address)","name":"LotteryAccepted","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TermsAccepted(address)","name":"TermsAccepted","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UpgradeEnabled()","name":"UpgradeEnabled","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[]},{"signature":"Upgraded(address,uint256)","name":"Upgraded","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Voted(address,uint256,bool,bool,bool)","name":"Voted","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"insurance","description":"","recommendedTypes":[],"indexed":false},{"name":"elklabs","description":"","recommendedTypes":[],"indexed":false},{"name":"vesting","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdrawn(address,uint256,bytes32)","name":"Withdrawn","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"id","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"CONFIG_ROLE()","name":"CONFIG_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"OPERATOR_ROLE()","name":"OPERATOR_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"available()","name":"available","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"cap()","name":"cap","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit(address,uint256,bytes32)","name":"deposit","description":"","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]},{"name":"_id","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deposited(bytes32)","name":"deposited","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"elklabsVotes()","name":"elklabsVotes","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"enableUpgrade()","name":"enableUpgrade","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"fromToken()","name":"fromToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMember(bytes32,uint256)","name":"getRoleMember","description":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMemberCount(bytes32)","name":"getRoleMemberCount","description":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"insuranceVotes()","name":"insuranceVotes","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lotteryMin()","name":"lotteryMin","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rate()","name":"rate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"setConfig(uint256,uint256,uint256)","name":"setConfig","description":"","parameterDecorators":[{"name":"_rate","description":"","recommendedTypes":[]},{"name":"_cap","description":"","recommendedTypes":[]},{"name":"_txLimit","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"toToken()","name":"toToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenAddress()","name":"tokenAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"txLimit()","name":"txLimit","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"upgrade(uint256,bool,bool,bool,bool,bool)","name":"upgrade","description":"Performs the upgrade of a specified amount of ELK tokens and records the corresponding governance votes: - Setting _insurance to true indicates that you accept the creation of an exploit insurance fund - Setting _elklabs to true indicates that you accept the funding terms for ElkLabs - Settting _vesting to true indicates that you agree to start the vesting clock for developers Setting _lottery to true registers your wallet for the upgrade lottery provided that the upgraded amount is sufficient. All votes on all chains will be weighted by upgrade amount. Acceptance is based on a simple majority. For the purposes of this vote, the amount of ELK tokens in circulation is 7.6 million (9/4/2022, 00:00 UTC). Motions will be carried if they obtain at least 3.8 million + 1 votes. Note: Your vote is irreversible once the function call succeeds. Important: by calling this function with _acceptTerms set to true, you are accepting Elk.Finance's Terms and Conditions as well as the Privacy Policy without reserve. If you choose not to accept, you can keep your current ELK tokens or sell them on the market. A copy of these documents can be found at: - https://elk.finance/terms-of-use - https://elk.finance/privacy-policy.","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]},{"name":"_insurance","description":"","recommendedTypes":[]},{"name":"_elklabs","description":"","recommendedTypes":[]},{"name":"_vesting","description":"","recommendedTypes":[]},{"name":"_lottery","description":"","recommendedTypes":[]},{"name":"_acceptTerms","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeEnabled()","name":"upgradeEnabled","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"vestingVotes()","name":"vestingVotes","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(address,uint256,bytes32)","name":"withdraw","description":"","parameterDecorators":[{"name":"_to","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]},{"name":"_id","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawn(bytes32)","name":"withdrawn","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}