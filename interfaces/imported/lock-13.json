{"schema":"../schema.json","tags":["locking"],"name":"Lock","description":"This contract will hold user locked funds which will be unlocked after lock-up period ends.","eventDecorators":[{"signature":"AirdropAdded(address,address,uint256,uint256,uint256,uint256)","name":"AirdropAdded","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"baseToken","description":"","recommendedTypes":[],"indexed":true},{"name":"destToken","description":"","recommendedTypes":[],"indexed":true},{"name":"index","description":"","recommendedTypes":[],"indexed":false},{"name":"airdropDate","description":"","recommendedTypes":[],"indexed":false},{"name":"numerator","description":"","recommendedTypes":[],"indexed":false},{"name":"denominator","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AirdropUpdated(address,address,uint256,uint256,uint256,uint256)","name":"AirdropUpdated","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"baseToken","description":"","recommendedTypes":[],"indexed":true},{"name":"destToken","description":"","recommendedTypes":[],"indexed":true},{"name":"index","description":"","recommendedTypes":[],"indexed":false},{"name":"airdropDate","description":"","recommendedTypes":[],"indexed":false},{"name":"numerator","description":"","recommendedTypes":[],"indexed":false},{"name":"denominator","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AssetClaimed(uint256,address,address,uint256)","name":"AssetClaimed","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AssetLocked(address,address,address,uint256,uint256,uint256,uint256,uint256,uint8,uint256)","name":"AssetLocked","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"","recommendedTypes":[],"indexed":true},{"name":"id","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"startDate","description":"","recommendedTypes":[],"indexed":false},{"name":"endDate","description":"","recommendedTypes":[],"indexed":false},{"name":"periods","description":"","recommendedTypes":[],"indexed":false},{"name":"feeMode","description":"","recommendedTypes":[],"indexed":false},{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyUnlock(address,bool)","name":"EmergencyUnlock","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"lock","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EthFeeUpdated(uint256)","name":"EthFeeUpdated","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LockClosed(uint256,address,address)","name":"LockClosed","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"LockTokenFeeUpdated(uint256)","name":"LockTokenFeeUpdated","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LockTokenUpdated(address)","name":"LockTokenUpdated","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"lockTokenAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused()","name":"Paused","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[]},{"signature":"TokenFeeUpdated(uint256)","name":"TokenFeeUpdated","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokensAirdropped(address,uint256)","name":"TokensAirdropped","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"destToken","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused()","name":"Unpaused","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[]},{"signature":"WalletChanged(address)","name":"WalletChanged","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"wallet","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"bulkLock(address,uint256[],uint256[],address[],uint256[],uint8)","name":"bulkLock","description":"Allows user to lock asset. In case of ERC-20 token the user will first have to approve the contract to spend on his/her behalf.","parameterDecorators":[{"name":"tokenAddress","description":"Address of the token to be locked.","recommendedTypes":[]},{"name":"amounts","description":"List of amount of tokens to lock.","recommendedTypes":[]},{"name":"durations","description":"List of duration for which tokens to be locked. In seconds.","recommendedTypes":[]},{"name":"beneficiaries","description":"List of addresses of the beneficiaries.","recommendedTypes":[]},{"name":"periods","description":"List of number of release periods.","recommendedTypes":[]},{"name":"lockFee","description":"Asset in which fee is being paid.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claim(uint256)","name":"claim","description":"Allows beneficiary of locked asset to claim asset after lock-up period ends.","parameterDecorators":[{"name":"id","description":"Id of the locked asset.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimable(uint256)","name":"claimable","description":"Returns whether given asset can be claimed or not.","parameterDecorators":[{"name":"id","description":"id of an asset.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getAirdrop(address,uint256)","name":"getAirdrop","description":"Returns specific airdrop for a base token.","parameterDecorators":[{"name":"token","description":"Base token address.","recommendedTypes":[]},{"name":"index","description":"Index at which this airdrop is in array.","recommendedTypes":[]}],"returnDecorators":[{"name":"destToken","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"numerator","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"denominator","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"date","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getAirdrops(address)","name":"getAirdrops","description":"Returns airdrop info for a given token.","parameterDecorators":[{"name":"token","description":"Token address.","recommendedTypes":[]}],"returnDecorators":[{"name":"destTokens","description":"","recommendedTypes":[],"solidityType":"address[]"},{"name":"numerators","description":"","recommendedTypes":[],"solidityType":"uint256[]"},{"name":"denominators","description":"","recommendedTypes":[],"solidityType":"uint256[]"},{"name":"dates","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getAllLockedAssets()","name":"getAllLockedAssets","description":"Returns all locked assets.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getAssetIds(address)","name":"getAssetIds","description":"Returns all asset ids for a user.","parameterDecorators":[{"name":"user","description":"Address of the user.","recommendedTypes":[]}],"returnDecorators":[{"name":"ids","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getEthFee()","name":"getEthFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getLockToken()","name":"getLockToken","description":"Returns lock token address.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getLockTokenFee()","name":"getLockTokenFee","description":"Returns fee per lock in lock token.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getLockedAsset(uint256)","name":"getLockedAsset","description":"Returns information about a locked asset.","parameterDecorators":[{"name":"id","description":"Asset id.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenFee()","name":"getTokenFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getWallet()","name":"getWallet","description":"returns the fee receiver wallet address.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"lock(address,uint256,uint256,address,uint256,uint8)","name":"lock","description":"Allows user to lock asset. In case of ERC-20 token the user will first have to approve the contract to spend on his/her behalf.","parameterDecorators":[{"name":"tokenAddress","description":"Address of the token to be locked.","recommendedTypes":[]},{"name":"amount","description":"Amount of tokens to lock.","recommendedTypes":[]},{"name":"duration","description":"Duration for which tokens to be locked. In seconds.","recommendedTypes":[]},{"name":"beneficiary","description":"Address of the beneficiary.","recommendedTypes":[]},{"name":"periods","description":"Number of release periods.","recommendedTypes":[]},{"name":"lockFee","description":"Asset in which fee is being paid.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"Called by an admin to pause, triggers stopped state.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAirdrop(address,address,uint256,uint256,uint256)","name":"setAirdrop","description":"Allows admin to set airdrop token for a given base token.","parameterDecorators":[{"name":"baseToken","description":"Address of the base token.","recommendedTypes":[]},{"name":"destToken","description":"Address of the airdropped token.","recommendedTypes":[]},{"name":"numerator","description":"Numerator to calculate ratio.","recommendedTypes":[]},{"name":"denominator","description":"Denominator to calculate ratio.","recommendedTypes":[]},{"name":"date","description":"Date at which airdrop happened or will happen.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setWallet(address)","name":"setWallet","description":"Allows admin to set fee receiver wallet.","parameterDecorators":[{"name":"wallet","description":"New wallet address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpause()","name":"unpause","description":"Called by an admin to unpause, returns to normal state.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateAirdrop(address,uint256,uint256,uint256,uint256)","name":"updateAirdrop","description":"Allows admin to update airdrop at given index.","parameterDecorators":[{"name":"baseToken","description":"Base token address for which airdrop has to be updated.","recommendedTypes":[]},{"name":"numerator","description":"New numerator.","recommendedTypes":[]},{"name":"denominator","description":"New denominator.","recommendedTypes":[]},{"name":"date","description":"New airdrop date.","recommendedTypes":[]},{"name":"index","description":"Index at which this airdrop resides for the basetoken.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateEmergencyUnlock(address,bool)","name":"updateEmergencyUnlock","description":"Update emergency unlock status for token.","parameterDecorators":[{"name":"token","description":"Address of the token being updated.","recommendedTypes":[]},{"name":"status","description":"Sets to either true or false.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateFeeInEth(uint256)","name":"updateFeeInEth","description":"Update fee in ETH.","parameterDecorators":[{"name":"feeInEth","description":"Fee per lock in ETH.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateFeeInToken(uint256)","name":"updateFeeInToken","description":"Update fee in tokenBeing locked.","parameterDecorators":[{"name":"feeInToken","description":"Fee per lock in token being locked.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateLockToken(address)","name":"updateLockToken","description":"Update lock token address.","parameterDecorators":[{"name":"lockTokenAddress","description":"New lock token address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateLockTokenFee(uint256)","name":"updateLockTokenFee","description":"Update fee in lock token.","parameterDecorators":[{"name":"lockTokenFee","description":"Fee per lock in lock token.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}