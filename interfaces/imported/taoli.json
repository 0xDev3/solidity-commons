{
  "schema": "../schema.json",
  "tags": [],
  "name": "Taoli",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "CalculateTest(uint16,int256)",
      "name": "CalculateTest",
      "description": "",
      "parameterDecorators": [
        {
          "name": "currencyId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amountToSettleAsset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "CallTest(uint16)",
      "name": "CallTest",
      "description": "Returns a single market.",
      "parameterDecorators": [
        {
          "name": "currencyId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERC20Transfer(address,address,uint256)",
      "name": "ERC20Transfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ERC20TransferFrom(address,address,uint256)",
      "name": "ERC20TransferFrom",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ETHTransfer()",
      "name": "ETHTransfer",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "RateTestCallTest(uint16)",
      "name": "RateTestCallTest",
      "description": "",
      "parameterDecorators": [
        {
          "name": "currencyId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "abiTest()",
      "name": "abiTest",
      "description": "Returns a single market.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculatfcashByassestCash(int256,tuple(bytes32,uint256,int256,int256,int256,uint256,uint256,uint256),tuple(int256,int256))",
      "name": "calculatfcashByassestCash",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amountToSettleAsset",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "market",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "storageSlot",
              "description": "",
              "type": "bytes32"
            },
            {
              "name": "maturity",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "totalfCash",
              "description": "",
              "type": "int256"
            },
            {
              "name": "totalAssetCash",
              "description": "",
              "type": "int256"
            },
            {
              "name": "totalLiquidity",
              "description": "",
              "type": "int256"
            },
            {
              "name": "lastImpliedRate",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "oracleRate",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "previousTradeTime",
              "description": "",
              "type": "uint256"
            }
          ]
        },
        {
          "name": "assetRate",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "rate",
              "description": "",
              "type": "int256"
            },
            {
              "name": "underlyingDecimals",
              "description": "",
              "type": "int256"
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeOwner(address)",
      "name": "changeOwner",
      "description": "Change owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "address of new owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executeBatchBalanceAndTradeAction(tuple(uint8,uint16,uint256,uint256,bool,bool,bytes32[])[])",
      "name": "executeBatchBalanceAndTradeAction",
      "description": "",
      "parameterDecorators": [
        {
          "name": "actions",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "actionType",
              "description": "",
              "type": "uint8"
            },
            {
              "name": "currencyId",
              "description": "",
              "type": "uint16"
            },
            {
              "name": "depositActionAmount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "withdrawAmountInternalPrecision",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "withdrawEntireCashBalance",
              "description": "",
              "type": "bool"
            },
            {
              "name": "redeemToUnderlying",
              "description": "",
              "type": "bool"
            },
            {
              "name": "trades",
              "description": "",
              "type": "bytes32[]"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getExchangeRateFromImpliedRate(uint256,uint256)",
      "name": "getExchangeRateFromImpliedRate",
      "description": "Converts an implied rate to an exchange rate given a time to maturity. The formula is E = e^rt.",
      "parameterDecorators": [
        {
          "name": "impliedRate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "timeToMaturity",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMarketNoRevert(uint16,uint256,uint256)",
      "name": "getMarketNoRevert",
      "description": "",
      "parameterDecorators": [
        {
          "name": "currencyId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "maturity",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "settlementDate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "market",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOwner()",
      "name": "getOwner",
      "description": "Return owner address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address of owner.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getThreeMatyrityOrSettlementDate(uint256)",
      "name": "getThreeMatyrityOrSettlementDate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "blockTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "notional()",
      "name": "notional",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "settleAccount(int256,int256,tuple(int256,int256))",
      "name": "settleAccount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "notional",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cashBalanac",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "settlementAssetRate",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "rate",
              "description": "",
              "type": "int256"
            },
            {
              "name": "underlyingDecimals",
              "description": "",
              "type": "int256"
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "settleCurrency(uint16,tuple(address,int256,int256,int256,int256)[],uint256)",
      "name": "settleCurrency",
      "description": "",
      "parameterDecorators": [
        {
          "name": "currencyId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "accountList",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "account",
              "description": "",
              "type": "address"
            },
            {
              "name": "cashAssestBalance",
              "description": "",
              "type": "int256"
            },
            {
              "name": "fcash",
              "description": "",
              "type": "int256"
            },
            {
              "name": "nextAssesCash",
              "description": "",
              "type": "int256"
            },
            {
              "name": "nextFcash",
              "description": "",
              "type": "int256"
            }
          ]
        },
        {
          "name": "maturity",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}