{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "RewardVault",
  "description": "",
  "eventDecorators": [
    {
      "signature": "EmergencyWithdrawlCooldown(address,uint256)",
      "name": "EmergencyWithdrawlCooldown",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_vaultAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_timestampWithdrawable",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EmergencyWithdrawlExecuted(address,address,uint256,address,uint256)",
      "name": "EmergencyWithdrawlExecuted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_vaultAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_reserve",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_destination",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "EMERGENCY_COOLDOWN_PERIOD()",
      "name": "EMERGENCY_COOLDOWN_PERIOD",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "EMERGENCY_WITHDRAW_WINDOW_PERIOD()",
      "name": "EMERGENCY_WITHDRAW_WINDOW_PERIOD",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "activateEmergencyCooldown()",
      "name": "activateEmergencyCooldown",
      "description": "This function will activate the cool-down period for emergency withdrawal. Access Control: Only Owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "coolDownStart()",
      "name": "coolDownStart",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "emergencyWithdraw(address,address,uint256)",
      "name": "emergencyWithdraw",
      "description": "This function will allow admin owner to withdraw in case of emergency. The admin owner is a multi-Signature address.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "- The token to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "- The payee's address.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "- The amount to pay. Access Control: Only Owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardManager()",
      "name": "rewardManager",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setPaused(bool)",
      "name": "setPaused",
      "description": "This function will set emergency Pause.",
      "parameterDecorators": [
        {
          "name": "_pause",
          "description": "- Set Pause, Unpause. Access Control: Only Owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardManager(address)",
      "name": "setRewardManager",
      "description": "This function will set the Reward Manager.",
      "parameterDecorators": [
        {
          "name": "_rewardManager",
          "description": "- The reward manager to set. Access Control: Owner Only.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(address,address,uint256)",
      "name": "withdraw",
      "description": "This function will allow the Reward Manager to withdraw a token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "- The token to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "- The payee's address.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "- The amount to pay. Access Control: Reward Manager Only.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}