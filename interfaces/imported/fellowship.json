{
  "schema": "../schema.json",
  "tags": [],
  "name": "Fellowship",
  "description": "Fellowship. This contract holds the selected few chosen as part of the Fellowship*.",
  "eventDecorators": [
    {
      "signature": "NewWalker(address)",
      "name": "NewWalker",
      "description": "Event will be emitted every time a new ERC20 MinimalProxy is created.",
      "parameterDecorators": [
        {
          "name": "newERC20Address",
          "description": "is an address of the newly created ERC20 token MinimalProxy.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewWalker1(address)",
      "name": "NewWalker1",
      "description": "Event will be emitted every time a new ERC20 MinimalProxy is created.",
      "parameterDecorators": [
        {
          "name": "newERC20Address",
          "description": "is an address of the newly created ERC20 token MinimalProxy.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewWalkerInformation(address,bytes32,bytes)",
      "name": "NewWalkerInformation",
      "description": "Event will be emitted every time a new ERC20 MinimalProxy is created.",
      "parameterDecorators": [
        {
          "name": "walker",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "input",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "output",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PaymentDeposited(address,uint256)",
      "name": "PaymentDeposited",
      "description": "Event will be emitted every time a new ERC20 MinimalProxy is created.",
      "parameterDecorators": [
        {
          "name": "payee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardsPaid(uint256)",
      "name": "RewardsPaid",
      "description": "Event will be emitted every time a new ERC20 MinimalProxy is created.",
      "parameterDecorators": [
        {
          "name": "newERC20Address",
          "description": "is an address of the newly created ERC20 token MinimalProxy.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StakeWithdrawalRequestStarted(address)",
      "name": "StakeWithdrawalRequestStarted",
      "description": "Event will be emitted every time a new ERC20 MinimalProxy is created.",
      "parameterDecorators": [
        {
          "name": "newERC20Address",
          "description": "is an address of the newly created ERC20 token MinimalProxy.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StakeWithdrawn(address)",
      "name": "StakeWithdrawn",
      "description": "Event will be emitted every time a new ERC20 MinimalProxy is created.",
      "parameterDecorators": [
        {
          "name": "newERC20Address",
          "description": "is an address of the newly created ERC20 token MinimalProxy.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WalkerBanished(address)",
      "name": "WalkerBanished",
      "description": "Event will be emitted every time a new ERC20 MinimalProxy is created.",
      "parameterDecorators": [
        {
          "name": "newERC20Address",
          "description": "is an address of the newly created ERC20 token MinimalProxy.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "banishWalker(address)",
      "name": "banishWalker",
      "description": "Function to banish a walker.",
      "parameterDecorators": [
        {
          "name": "_oldWalker",
          "description": "address of walker to be banished (removed from Fellowship)*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "checkReward()",
      "name": "checkReward",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "depositPayment(uint256)",
      "name": "depositPayment",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositStake(uint256)",
      "name": "depositStake",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fellowship(uint256)",
      "name": "fellowship",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFellowshipSize()",
      "name": "getFellowshipSize",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWalkerDetails(address)",
      "name": "getWalkerDetails",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_walker",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param5",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWalkerInformation(address,bytes32)",
      "name": "getWalkerInformation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_walker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_input",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_output",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isWalker(address)",
      "name": "isWalker",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_a",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_i",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastPayDate()",
      "name": "lastPayDate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "newRivendale(address)",
      "name": "newRivendale",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newRivendale",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "newWalker(address,string)",
      "name": "newWalker",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_walker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_name",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "payReward()",
      "name": "payReward",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "payments(address)",
      "name": "payments",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "recieveReward()",
      "name": "recieveReward",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "requestStakingWithdraw()",
      "name": "requestStakingWithdraw",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardPool()",
      "name": "rewardPool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rivendale()",
      "name": "rivendale",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setStakeAmount(uint256)",
      "name": "setStakeAmount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWalkerInformation(bytes32,bytes)",
      "name": "setWalkerInformation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_input",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_output",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "slashWalker(address,uint256,bool)",
      "name": "slashWalker",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_walker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_banish",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeAmount()",
      "name": "stakeAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tellor()",
      "name": "tellor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "walkers(address)",
      "name": "walkers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "date",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "fellowshipIndex",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardBalance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawStake()",
      "name": "withdrawStake",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}