{"schema":"../schema.json","tags":["curve finance"],"name":"ECDSA","description":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. * These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","eventDecorators":[],"functionDecorators":[{"signature":"recover(bytes32,bytes)","name":"recover","description":"Returns the address that signed a hashed message (`hash`) with `signature`. This address can then be used for verification purposes. * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures: this function rejects them by requiring the `s` value to be in the lower half order, and the `v` value to be either 27 or 28. * IMPORTANT: `hash` _must_ be the result of a hash operation for the verification to be secure: it is possible to craft signatures that recover to arbitrary addresses for non-hashed data. A safe way to ensure this is by receiving a hash of the original message (which may otherwise be too long), and then calling {toEthSignedMessageHash} on it.","parameterDecorators":[{"name":"hash","description":"","recommendedTypes":[]},{"name":"signature","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"signer","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"r","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"s","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"v","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"toEthSignedMessageHash(bytes32)","name":"toEthSignedMessageHash","description":"Returns an Ethereum Signed Message, created from a `hash`. This replicates the behavior of the https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`] JSON-RPC method. * See {recover}.","parameterDecorators":[{"name":"hash","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true}]}