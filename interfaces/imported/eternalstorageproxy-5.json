{"schema":"../schema.json","tags":[],"name":"EternalStorageProxyForStormMultisender","description":"EternalStorageProxy.","eventDecorators":[{"signature":"ProxyOwnershipTransferred(address,address)","name":"ProxyOwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":false},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Upgraded(string,address)","name":"Upgraded","description":"","parameterDecorators":[{"name":"version","description":"","recommendedTypes":[],"indexed":false},{"name":"implementation","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"proxyOwner()","name":"proxyOwner","description":"Tells the address of the proxy owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"version()","name":"version","description":"Tells the version name of the current implementation.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"upgradeTo(string,address)","name":"upgradeTo","description":"Allows the upgradeability owner to upgrade the current version of the proxy.","parameterDecorators":[{"name":"version","description":"representing the version name of the new implementation to be set.","recommendedTypes":[]},{"name":"implementation","description":"representing the address of the new implementation to be set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"implementation()","name":"implementation","description":"Tells the address of the current implementation.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"upgradeabilityOwner()","name":"upgradeabilityOwner","description":"Tells the address of the owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"upgradeToAndCall(string,address,bytes)","name":"upgradeToAndCall","description":"Allows the upgradeability owner to upgrade the current version of the proxy and call the new implementation to initialize whatever is needed through a low level call.","parameterDecorators":[{"name":"version","description":"representing the version name of the new implementation to be set.","recommendedTypes":[]},{"name":"implementation","description":"representing the address of the new implementation to be set.","recommendedTypes":[]},{"name":"data","description":"represents the msg.data to bet sent in the low level call. This parameter may include the function signature of the implementation to be called with the needed payload.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferProxyOwnership(address)","name":"transferProxyOwnership","description":"Allows the current owner to transfer control of the contract to a newOwner.","parameterDecorators":[{"name":"newOwner","description":"The address to transfer ownership to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}