{"schema":"../schema.json","tags":["tokens"],"name":"FourArt","description":"FourArt Token.","eventDecorators":[{"signature":"Burn(address,uint256)","name":"Burn","description":"","parameterDecorators":[{"name":"burner","description":"","recommendedTypes":[],"indexed":true},{"name":"value","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Approval(address,address,uint256)","name":"Approval","description":"","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"spender","description":"","recommendedTypes":[],"indexed":true},{"name":"value","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Transfer(address,address,uint256)","name":"Transfer","description":"","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"value","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DelegatedTransfer(address,address,address,uint256,uint256)","name":"DelegatedTransfer","description":"","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"delegate","description":"","recommendedTypes":[],"indexed":true},{"name":"value","description":"","recommendedTypes":[],"indexed":false},{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"name()","name":"name","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"approve(address,uint256)","name":"approve","description":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729.","parameterDecorators":[{"name":"_spender","description":"The address which will spend the funds.","recommendedTypes":[]},{"name":"_value","description":"The amount of tokens to be spent.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"addTokenToTotalSupply(uint256)","name":"addTokenToTotalSupply","description":"Add tokens to total supply by only owner.","parameterDecorators":[{"name":"_value","description":"number of token(s).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalSupply()","name":"totalSupply","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferFrom(address,address,uint256)","name":"transferFrom","description":"Transfer from allowed address to other address.","parameterDecorators":[{"name":"_from","description":"from address.","recommendedTypes":[]},{"name":"_to","description":"to address.","recommendedTypes":[]},{"name":"_value","description":"number of token(s).","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"balances(address)","name":"balances","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"decimals()","name":"decimals","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"burn(uint256)","name":"burn","description":"Burn token(s) by only owner.","parameterDecorators":[{"name":"_value","description":"number of token(s).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"decreaseApproval(address,uint256)","name":"decreaseApproval","description":"","parameterDecorators":[{"name":"_spender","description":"","recommendedTypes":[]},{"name":"_subtractedValue","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"success","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"balanceOf(address)","name":"balanceOf","description":"Gets the balance of the specified address.","parameterDecorators":[{"name":"_owner","description":"The address to query the the balance of.","recommendedTypes":[]}],"returnDecorators":[{"name":"balance","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"symbol()","name":"symbol","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"transferTokens(address,uint256)","name":"transferTokens","description":"Transfer tokens to other address.","parameterDecorators":[{"name":"_to","description":"to address.","recommendedTypes":[]},{"name":"_tokens","description":"number of token(s).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"increaseApproval(address,uint256)","name":"increaseApproval","description":"approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol.","parameterDecorators":[{"name":"_spender","description":"","recommendedTypes":[]},{"name":"_addedValue","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"success","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"allowance(address,address)","name":"allowance","description":"Function to check the amount of tokens that an owner allowed to a spender.","parameterDecorators":[{"name":"_owner","description":"address The address which owns the funds.","recommendedTypes":[]},{"name":"_spender","description":"address The address which will spend the funds.","recommendedTypes":[]}],"returnDecorators":[{"name":"remaining","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Allows the current owner to transfer control of the contract to a newOwner.","parameterDecorators":[{"name":"newOwner","description":"The address to transfer ownership to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}