{
  "schema": "../schema.json",
  "tags": [],
  "name": "Controller",
  "description": "Controller. Contract that controls the Gamma Protocol and the interaction of all sub contracts.",
  "eventDecorators": [
    {
      "signature": "AccountOperatorUpdated(address,address,bool)",
      "name": "AccountOperatorUpdated",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "accountOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "isSet",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CallExecuted(address,address,bytes)",
      "name": "CallExecuted",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CallRestricted(bool)",
      "name": "CallRestricted",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "isRestricted",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CollateralAssetDeposited(address,address,address,uint256,uint256)",
      "name": "CollateralAssetDeposited",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "accountOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "vaultId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CollateralAssetWithdrawed(address,address,address,uint256,uint256)",
      "name": "CollateralAssetWithdrawed",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "AccountOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "vaultId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FullPauserUpdated(address,address)",
      "name": "FullPauserUpdated",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "oldFullPauser",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newFullPauser",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "LongOtokenDeposited(address,address,address,uint256,uint256)",
      "name": "LongOtokenDeposited",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "otoken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "accountOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "vaultId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LongOtokenWithdrawed(address,address,address,uint256,uint256)",
      "name": "LongOtokenWithdrawed",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "otoken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "AccountOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "vaultId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PartialPauserUpdated(address,address)",
      "name": "PartialPauserUpdated",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "oldPartialPauser",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newPartialPauser",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Redeem(address,address,address,address,uint256,uint256)",
      "name": "Redeem",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "otoken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "redeemer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "collateralAsset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "otokenBurned",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "payout",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ShortOtokenBurned(address,address,address,uint256,uint256)",
      "name": "ShortOtokenBurned",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "otoken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "AccountOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "vaultId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ShortOtokenMinted(address,address,address,uint256,uint256)",
      "name": "ShortOtokenMinted",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "otoken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "AccountOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "vaultId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SystemFullyPaused(bool)",
      "name": "SystemFullyPaused",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "isPaused",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SystemPartiallyPaused(bool)",
      "name": "SystemPartiallyPaused",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "isPaused",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VaultOpened(address,uint256)",
      "name": "VaultOpened",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "accountOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "vaultId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VaultSettled(address,address,address,uint256,uint256)",
      "name": "VaultSettled",
      "description": "An event emitted when a vote has been cast on a proposal. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "AccountOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "otoken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "vaultId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "payout",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addressbook()",
      "name": "addressbook",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculator()",
      "name": "calculator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "callRestricted()",
      "name": "callRestricted",
      "description": "True if a call action can only be executed to a whitelisted callee.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fullPauser()",
      "name": "fullPauser",
      "description": "address that has permission to fully pause the system, where all system functionality is paused.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAccountVaultCounter(address)",
      "name": "getAccountVaultCounter",
      "description": "get the number of vaults for a specified account owner.",
      "parameterDecorators": [
        {
          "name": "_accountOwner",
          "description": "account owner address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "number of vaults.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getConfiguration()",
      "name": "getConfiguration",
      "description": "returns the current controller configuration.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "whitelist, the address of the whitelist module.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "_1",
          "description": "oracle, the address of the oracle module.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "_2",
          "description": "calculator, the address of the calculator module.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "_3",
          "description": "pool, the address of the pool module.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPayout(address,uint256)",
      "name": "getPayout",
      "description": "get an oToken's payout/cash value after expiry, in the collateral asset.",
      "parameterDecorators": [
        {
          "name": "_otoken",
          "description": "oToken address.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of the oToken to calculate the payout for, always represented in 1e8.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "amount of collateral to pay out.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProceed(address,uint256)",
      "name": "getProceed",
      "description": "return a vault's proceeds pre or post expiry, the amount of collateral that can be removed from a vault.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "account owner of the vault.",
          "recommendedTypes": []
        },
        {
          "name": "_vaultId",
          "description": "vaultId to return balances for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "amount of collateral that can be taken out.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getVault(address,uint256)",
      "name": "getVault",
      "description": "return a specific vault.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "account owner.",
          "recommendedTypes": []
        },
        {
          "name": "_vaultId",
          "description": "vault id of vault to return.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Vault struct that corresponds to the _vaultId of _owner.",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasExpired(address)",
      "name": "hasExpired",
      "description": "check if an oToken has expired.",
      "parameterDecorators": [
        {
          "name": "_otoken",
          "description": "oToken address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "True if the otoken has expired, False if not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address)",
      "name": "initialize",
      "description": "initalize the deployed contract.",
      "parameterDecorators": [
        {
          "name": "_addressBook",
          "description": "addressbook module.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "account owner address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isOperator(address,address)",
      "name": "isOperator",
      "description": "check if a specific address is an operator for an owner account.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "account owner address.",
          "recommendedTypes": []
        },
        {
          "name": "_operator",
          "description": "account operator address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "True if the _operator is an approved operator for the _owner account.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSettlementAllowed(address)",
      "name": "isSettlementAllowed",
      "description": "return if an expired oToken contract’s settlement price has been finalized.",
      "parameterDecorators": [
        {
          "name": "_otoken",
          "description": "address of the oToken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "True if the oToken has expired AND all oracle prices at the expiry timestamp have been finalized, False if not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "operate(tuple(uint8,address,address,address,uint256,uint256,uint256,bytes)[])",
      "name": "operate",
      "description": "execute a number of actions on specific vaults. can only be called when the system is not fully paused.",
      "parameterDecorators": [
        {
          "name": "_actions",
          "description": "array of actions arguments.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "actionType",
              "description": "",
              "type": "uint8"
            },
            {
              "name": "owner",
              "description": "",
              "type": "address"
            },
            {
              "name": "secondAddress",
              "description": "",
              "type": "address"
            },
            {
              "name": "asset",
              "description": "",
              "type": "address"
            },
            {
              "name": "vaultId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "amount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "index",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "data",
              "description": "",
              "type": "bytes"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "oracle()",
      "name": "oracle",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "partialPauser()",
      "name": "partialPauser",
      "description": "address that has permission to partially pause the system, where system functionality is paused except redeem and settleVault.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pool()",
      "name": "pool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "refreshConfiguration()",
      "name": "refreshConfiguration",
      "description": "updates the configuration of the controller. can only be called by the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCallRestriction(bool)",
      "name": "setCallRestriction",
      "description": "allows the owner to toggle the restriction on whitelisted call actions and only allow whitelisted call addresses or allow any arbitrary call addresses. can only be called by the owner.",
      "parameterDecorators": [
        {
          "name": "_isRestricted",
          "description": "new call restriction state.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFullPauser(address)",
      "name": "setFullPauser",
      "description": "allows the owner to set the fullPauser address. can only be called by the owner.",
      "parameterDecorators": [
        {
          "name": "_fullPauser",
          "description": "new fullPauser address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOperator(address,bool)",
      "name": "setOperator",
      "description": "allows a user to give or revoke privileges to an operator which can act on their behalf on their vaults. can only be updated by the vault owner.",
      "parameterDecorators": [
        {
          "name": "_operator",
          "description": "operator that the sender wants to give privileges to or revoke them from.",
          "recommendedTypes": []
        },
        {
          "name": "_isOperator",
          "description": "new boolean value that expresses if the sender is giving or revoking privileges for _operator.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPartialPauser(address)",
      "name": "setPartialPauser",
      "description": "allows the owner to set the partialPauser address. can only be called by the owner.",
      "parameterDecorators": [
        {
          "name": "_partialPauser",
          "description": "new partialPauser address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSystemFullyPaused(bool)",
      "name": "setSystemFullyPaused",
      "description": "allows the fullPauser to toggle the systemFullyPaused variable and fully pause or fully unpause the system. can only be called by the fullPauser.",
      "parameterDecorators": [
        {
          "name": "_fullyPaused",
          "description": "new boolean value to set systemFullyPaused to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSystemPartiallyPaused(bool)",
      "name": "setSystemPartiallyPaused",
      "description": "allows the partialPauser to toggle the systemPartiallyPaused variable and partially pause or partially unpause the system. can only be called by the partialPauser.",
      "parameterDecorators": [
        {
          "name": "_partiallyPaused",
          "description": "new boolean value to set systemPartiallyPaused to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "systemFullyPaused()",
      "name": "systemFullyPaused",
      "description": "True if all system functionality is paused.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "systemPartiallyPaused()",
      "name": "systemPartiallyPaused",
      "description": "True if all system functionality is paused other than redeem and settle vault.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "whitelist()",
      "name": "whitelist",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}