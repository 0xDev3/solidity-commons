{
  "schema": "../schema.json",
  "tags": [],
  "name": "RelayParser",
  "description": "RelayParser.",
  "eventDecorators": [
    {
      "signature": "AttachValue(address,bytes16,string,bytes,bytes32,bytes,bytes,bytes,uint256)",
      "name": "AttachValue",
      "description": "Event emitted when the data is parsed and forwarded to the oracle router via `#attachValue`.",
      "parameterDecorators": [
        {
          "name": "nebula",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "uuid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "chain",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "emiter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "topic0",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetIsEVM(string,bool)",
      "name": "SetIsEVM",
      "description": "TODO.",
      "parameterDecorators": [
        {
          "name": "chain",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newBool",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetNebula(address,address)",
      "name": "SetNebula",
      "description": "Event emitted when the nebula changes via `#setNebula`.",
      "parameterDecorators": [
        {
          "name": "nebulaOld",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "nebulaNew",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SetOwner(address,address)",
      "name": "SetOwner",
      "description": "Event emitted when the owner changes via `#setOwner`.",
      "parameterDecorators": [
        {
          "name": "ownerOld",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "ownerNew",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SetRouter(address,address)",
      "name": "SetRouter",
      "description": "Event emitted when the router changes via `#setRouter`.",
      "parameterDecorators": [
        {
          "name": "routerOld",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "routerNew",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "attachValue(bytes)",
      "name": "attachValue",
      "description": "Parses data from oracles, forwards data to the oracle router.",
      "parameterDecorators": [
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bytesToBytes16(bytes,uint256)",
      "name": "bytesToBytes16",
      "description": "Parses bytes16 from bytes.",
      "parameterDecorators": [
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "offset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bytesToBytes32(bytes,uint256)",
      "name": "bytesToBytes32",
      "description": "Parses bytes32 from bytes.",
      "parameterDecorators": [
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "offset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deserializeAddress(bytes,uint256)",
      "name": "deserializeAddress",
      "description": "Parses an evm address from bytes.",
      "parameterDecorators": [
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "startPos",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deserializeUint(bytes,uint256,uint256)",
      "name": "deserializeUint",
      "description": "Parses a uint value from bytes.",
      "parameterDecorators": [
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "startPos",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "len",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "equal(string,string)",
      "name": "equal",
      "description": "Compares two strings for equality.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if strings are equal, false otherwise.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isEVM(string)",
      "name": "isEVM",
      "description": "TODO.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nebula()",
      "name": "nebula",
      "description": "User that can send oracle data.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "User that can grant access permissions and perform privileged actions.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "router()",
      "name": "router",
      "description": "Address of the contract that routes parsed data to balance keepers.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setIsEVM(string,bool)",
      "name": "setIsEVM",
      "description": "TODO.",
      "parameterDecorators": [
        {
          "name": "chain",
          "description": "TODO.",
          "recommendedTypes": []
        },
        {
          "name": "newBool",
          "description": "TODO.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setNebula(address)",
      "name": "setNebula",
      "description": "Sets address of the user that can send oracle data to `_nebula`. Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "_nebula",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOwner(address)",
      "name": "setOwner",
      "description": "Transfers ownership of the contract to a new account (`_owner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRouter(address)",
      "name": "setRouter",
      "description": "Sets address of the oracle router to `_router`.",
      "parameterDecorators": [
        {
          "name": "_router",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uuidIsProcessed(bytes16)",
      "name": "uuidIsProcessed",
      "description": "Look up if the data uuid has already been processed.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}