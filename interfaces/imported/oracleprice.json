{
  "schema": "../schema.json",
  "tags": [
    "oracles"
  ],
  "name": "OraclePrice",
  "description": "",
  "eventDecorators": [
    {
      "signature": "LogReferenceRateDataUsed(uint256,uint256,address,int256,int256)",
      "name": "LogReferenceRateDataUsed",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "performUpkeepCycle",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "timestampSec",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "oldPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogTargetPriceUpdated(uint256,uint256,int256,uint256,uint256)",
      "name": "LogTargetPriceUpdated",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "performUpkeepCycle",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "timestampSec",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "averageMovement",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "oldReferenceRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newReferenceRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addOracle(address,bool,bytes32)",
      "name": "addOracle",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_oracle",
          "description": "new oracle address to add in structure.",
          "recommendedTypes": []
        },
        {
          "name": "_isActive",
          "description": "true if oracle is active otherwise inactive.",
          "recommendedTypes": []
        },
        {
          "name": "_symbolHash",
          "description": "symbolHash of crypto currency.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "averageLog()",
      "name": "averageLog",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "averageMovement",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "referenceRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkUpkeep(bytes)",
      "name": "checkUpkeep",
      "description": "checks if the contract requires work to be done.",
      "parameterDecorators": [
        {
          "name": "checkData",
          "description": "data passed to the contract when checking for upkeep.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "upkeepNeeded",
          "description": "boolean to indicate whether the keeper should call performUpkeep or not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "performData",
          "description": "bytes that the keeper should call performUpkeep with, if upkeep is needed.",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "counter()",
      "name": "counter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOracleInfoCount()",
      "name": "getOracleInfoCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOraclePriceInUsd(uint256)",
      "name": "getOraclePriceInUsd",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_oracleId",
          "description": "index number of oracle address. Fetching updated price of perticular oracles from chainlink.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "interval()",
      "name": "interval",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastTimeStamp()",
      "name": "lastTimeStamp",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "oracleInfo(uint256)",
      "name": "oracleInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "isActive",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "symbolHash",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "lastPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "performUpkeep(bytes)",
      "name": "performUpkeep",
      "description": "Performs work on the contract. Executed by the keepers, via the registry.",
      "parameterDecorators": [
        {
          "name": "performData",
          "description": "is the data which was passed back from the checkData simulation.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "policyContract()",
      "name": "policyContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "priceLog(address)",
      "name": "priceLog",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "lastUpdatedPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateOracle(uint256,address,bool,bytes32)",
      "name": "updateOracle",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "index number of oracle address.",
          "recommendedTypes": []
        },
        {
          "name": "_oracle",
          "description": "updated oracle address.",
          "recommendedTypes": []
        },
        {
          "name": "_isActive",
          "description": "true if oracle is active otherwise inactive.",
          "recommendedTypes": []
        },
        {
          "name": "_symbolHash",
          "description": "symbolHash of crypto currency.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePolicy(address)",
      "name": "updatePolicy",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_policy",
          "description": "new policy address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}