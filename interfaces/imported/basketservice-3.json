{"schema":"../schema.json","tags":["celo network"],"name":"BasketService","description":"Implementation of the basket service smart contract. The {BaskeService} smart contract receives cryptocurrencies and in exchange sends Nylon. The value of a Nylon is determined by the value of the cryptocurrencies held by this smart contract. It inherits from the ERC20 and Ownable interfaces of the openzeppelin contracts collection. Additionally, the Nylon is embed in the contract. Ownable means that someone \"owns\" the Nylon. This may be a person or an other smart contract. NOTE: For now, the basket service will only hold Celo.","eventDecorators":[{"signature":"BalanceIncreased()","name":"BalanceIncreased","description":"Emitted when RFQ gets filled. The {BalanceIncrease} event is emitted once the Nylon supply is increased.","parameterDecorators":[]},{"signature":"NylonTransferred(address,uint256)","name":"NylonTransferred","description":"Emitted when RFQ gets filled. The {NylonTransferred} event is emitted once Nylon are sent.","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when RFQ gets filled.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferNylon(uint256,address)","name":"transferNylon","description":"Nylon can be transferred by x-amount. Requirements: - 'address' of the new owner, e.G. address of the basket service. {transferNylon} is only callable by the the contract owner. NOTE: To ensure that this function cannot be called by a person, the ownership should be transferred to the address of an other contract. See {ExchangeService}.","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]},{"name":"_to","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}