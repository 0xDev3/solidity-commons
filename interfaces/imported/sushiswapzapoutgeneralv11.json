{"schema":"../schema.json","tags":["swaps"],"name":"Sushiswap_ZapOut_General_V1_1","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"event emitted when a user has unstaked a token.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"ZapOut(address,address,uint256,uint256)","name":"ZapOut","description":"This function is used to zapout of given Sushiswap pair in ETH/ERC20 Tokens.","parameterDecorators":[{"name":"_ToTokenContractAddress","description":"The ERC20 token to zapout in (address(0x00) if ether).","recommendedTypes":[]},{"name":"_FromSushiPoolAddress","description":"The sushiswap pair address to zapout from.","recommendedTypes":[]},{"name":"_IncomingLP","description":"The quantity of LP to remove.","recommendedTypes":[]},{"name":"_minTokensRec","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"ZapOut2PairToken(address,uint256)","name":"ZapOut2PairToken","description":"This function is used to zapout of given SushiSwap pair in the bounded tokens.","parameterDecorators":[{"name":"_FromSushiPoolAddress","description":"The sushiSwap pair address to zapout.","recommendedTypes":[]},{"name":"_IncomingLP","description":"The quantity of LP to remove.","recommendedTypes":[]}],"returnDecorators":[{"name":"amountA","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"amountB","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"ZapOut2PairTokenWithPermit(address,uint256,uint256,uint256,uint8,bytes32,bytes32)","name":"ZapOut2PairTokenWithPermit","description":"","parameterDecorators":[{"name":"_FromSushiPoolAddress","description":"","recommendedTypes":[]},{"name":"_IncomingLP","description":"","recommendedTypes":[]},{"name":"_approvalAmount","description":"","recommendedTypes":[]},{"name":"_deadline","description":"","recommendedTypes":[]},{"name":"v","description":"","recommendedTypes":[]},{"name":"r","description":"","recommendedTypes":[]},{"name":"s","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amountA","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"amountB","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"ZapOutWithPermit(address,address,uint256,uint256,uint256,uint256,uint8,bytes32,bytes32)","name":"ZapOutWithPermit","description":"","parameterDecorators":[{"name":"_ToTokenContractAddress","description":"","recommendedTypes":[]},{"name":"_FromSushiPoolAddress","description":"","recommendedTypes":[]},{"name":"_IncomingLP","description":"","recommendedTypes":[]},{"name":"_minTokensRec","description":"","recommendedTypes":[]},{"name":"_approvalAmount","description":"","recommendedTypes":[]},{"name":"_deadline","description":"","recommendedTypes":[]},{"name":"v","description":"","recommendedTypes":[]},{"name":"r","description":"","recommendedTypes":[]},{"name":"s","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"goodwill()","name":"goodwill","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"inCaseTokengetsStuck(address)","name":"inCaseTokengetsStuck","description":"","parameterDecorators":[{"name":"_TokenAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"set_new_goodwill(uint16)","name":"set_new_goodwill","description":"","parameterDecorators":[{"name":"_new_goodwill","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stopped()","name":"stopped","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"toggleContractActive()","name":"toggleContractActive","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdraw()","name":"withdraw","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}