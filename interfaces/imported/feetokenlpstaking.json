{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "FeeTokenLpStaking",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event emitted when liquidity was provided.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of liquidity (priced in liquidityToken) that was provided.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "The address that provided the liquidity.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "REWARDS_CLAIMED(address,uint256)",
      "name": "REWARDS_CLAIMED",
      "description": "Event emitted when liquidity was provided.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of liquidity (priced in liquidityToken) that was provided.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "The address that provided the liquidity.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "REWARDS_PER_BLOCK(uint256,uint256)",
      "name": "REWARDS_PER_BLOCK",
      "description": "Event emitted when liquidity was provided.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of liquidity (priced in liquidityToken) that was provided.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "to",
          "description": "The address that provided the liquidity.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "REWARDS_POOL(address,uint256)",
      "name": "REWARDS_POOL",
      "description": "Event emitted when liquidity was provided.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of liquidity (priced in liquidityToken) that was provided.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "The amount of liquidity (priced in liquidityToken) that was provided.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "STAKE(address,uint256)",
      "name": "STAKE",
      "description": "Event emitted when liquidity was provided.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of liquidity (priced in liquidityToken) that was provided.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "The amount of liquidity (priced in liquidityToken) that was provided.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "UNSTAKE(address,uint256)",
      "name": "UNSTAKE",
      "description": "Event emitted when liquidity was provided.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of liquidity (priced in liquidityToken) that was provided.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "The amount of liquidity (priced in liquidityToken) that was provided.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "FeeToken()",
      "name": "FeeToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "FeeTokenLpPair()",
      "name": "FeeTokenLpPair",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimRewards()",
      "name": "claimRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deposit(uint256)",
      "name": "deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyUnStake()",
      "name": "emergencyUnStake",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingRewards(address)",
      "name": "pendingRewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_rewardsAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardsPerBlock()",
      "name": "rewardsPerBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardsPool()",
      "name": "rewardsPool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stake(uint256)",
      "name": "stake",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakes(address)",
      "name": "stakes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardsBlockNumber",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalClaimedRewards",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalStakedAmount()",
      "name": "totalStakedAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstake()",
      "name": "unstake",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateRewardsPerBlock(uint256)",
      "name": "updateRewardsPerBlock",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_rewardsPerBlock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}