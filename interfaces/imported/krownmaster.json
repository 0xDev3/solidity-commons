{"schema":"../schema.json","tags":[],"name":"KrownMaster","description":"","eventDecorators":[{"signature":"Claim(address,uint256,uint256)","name":"Claim","description":"Event emitted when a user withdraws their original funds + rewards from the rewards manager.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Deposit(address,uint256,uint256)","name":"Deposit","description":"Event emitted when a user withdraws their original funds + rewards from the rewards manager.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyWithdraw(address,uint256,uint256)","name":"EmergencyWithdraw","description":"Event emitted when a user withdraws their original funds + rewards from the rewards manager.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event emitted when a user withdraws their original funds + rewards from the rewards manager.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"Event emitted when a user withdraws their original funds + rewards from the rewards manager.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"Event emitted when a user withdraws their original funds + rewards from the rewards manager.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdraw(address,uint256,uint256)","name":"Withdraw","description":"Event emitted when a user withdraws their original funds + rewards from the rewards manager.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"changeFee(uint256,uint16)","name":"changeFee","description":"changes the fee to enter the pool _pid: is the id of the pool that you want to apply this changes _fee: is the new fee of the pool.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_fee","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeLastBlock(uint256)","name":"changeLastBlock","description":"function used to change the last block that will create reward for all the pools _lastBlock: the new number of the last block.","parameterDecorators":[{"name":"_lastBlock","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changePoolKrwReward(uint256,uint256)","name":"changePoolKrwReward","description":"changes the krw rewards per block _pid: is the id of the pool that you want to apply this changes _krwPerBlock: is the new reward per block.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_krwPerBlock","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeVault(uint256,address,bool)","name":"changeVault","description":"Changes the vault address _pid: the id of the pool that needs to change the vault address _vault: the new vault address _isVaultContract: variable that checks if the vault is a smart contract or an EOA and updates the vault pools accordingly.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_vault","description":"","recommendedTypes":[]},{"name":"_isVaultContract","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claim(uint256)","name":"claim","description":"function used to withdraw the rewards earned _pid: is the id of the pool that you want to use.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"createPool(address,string,uint16,address,uint256,bool)","name":"createPool","description":"Add a new lp to the pool. Can only be called by the owner. Can only be called by the current owner. _lpToken: the liquidity pool token that you want to use in the farm _krwPerBlock: the number of krw that you want to mint per block in this specific farm _symbol: symbol of the lpToken _fee: fee applied to the pool _vault: the address of the vault isVaultContract: false if the address of vault is an EOA, true if the vault is a smart contract NOTE: mint is actually the wrong word for this case, because all the krw are pre-minted and will be just transfered when people claim their rewards.","parameterDecorators":[{"name":"_lpToken","description":"","recommendedTypes":[]},{"name":"_symbol","description":"","recommendedTypes":[]},{"name":"_fee","description":"","recommendedTypes":[]},{"name":"_vault","description":"","recommendedTypes":[]},{"name":"_krwPerBlock","description":"","recommendedTypes":[]},{"name":"isVaultContract","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deposit(uint256,uint256)","name":"deposit","description":"used to deposit the lpToken _pid: is the id of the pool that you want to use _amount: is the amount of tokens that you want to deposit.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyWithdraw(uint256)","name":"emergencyWithdraw","description":"used to withdraw the lpToken without caring about rewards, EMERGENCY ONLY _pid: is the id of the pool that you want to use.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getDeposit(uint256,address)","name":"getDeposit","description":"Used to get the deposited amount in a pool.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getFee(uint256)","name":"getFee","description":"used to get the fee of a pool.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getKrwPerBlock(uint256)","name":"getKrwPerBlock","description":"used to get the krw per block.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getPending(uint256,address)","name":"getPending","description":"used to get the pending amount in a pool.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalSupply(uint256)","name":"getTotalSupply","description":"used to get the totalSupply in a pool.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"krw()","name":"krw","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"lastBlock()","name":"lastBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"massUpdatePools()","name":"massUpdatePools","description":"Update reward variables for all pools. Be careful of gas spending!.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"used to pause the pools being able to deposit new lpToken.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"pausePool(uint256)","name":"pausePool","description":"used to pause a single pool from being able to deposit new lpToken.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"pausedPool(uint256)","name":"pausedPool","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"pausedUpdatePools()","name":"pausedUpdatePools","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"poolInfo(uint256)","name":"poolInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"lpToken","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"symbol","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"fee","description":"","recommendedTypes":[],"solidityType":"uint16"},{"name":"vault","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"isVaultContract","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"totalSupply","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"krwPerBlock","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastRewardBlock","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewardsPerShare","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolLength()","name":"poolLength","description":"returns the current number of pools.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tokenAlreadyInPool(address)","name":"tokenAlreadyInPool","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpause()","name":"unpause","description":"used to unpause the pools being able to deposit new lpToken.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpausePool(uint256)","name":"unpausePool","description":"used to unpause a single pool.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updatePool(uint256)","name":"updatePool","description":"function used to update the rewards of every investor _pid: is the id of the pool that you want to use.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userInfo(uint256,address)","name":"userInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewardMinus","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256,uint256)","name":"withdraw","description":"used to withdraw the lpToken _pid: is the id of the pool that you want to use _amount: is the amount of tokens that you want to deposit.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawAll(uint256)","name":"withdrawAll","description":"used to withdraw all the lpToken _pid: is the id of the pool that you use.","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}