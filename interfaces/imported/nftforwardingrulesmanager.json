{"schema":"../schema.json","tags":["nft"],"name":"NFTForwardingRulesManager","description":"NFTForwardingRulesManager. NFT Omnibrdge module for managing destination AMB lanes permissions.","eventDecorators":[{"signature":"ForwardingRuleUpdated(address,address,address,int256)","name":"ForwardingRuleUpdated","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"sender","description":"","recommendedTypes":[],"indexed":false},{"name":"receiver","description":"","recommendedTypes":[],"indexed":false},{"name":"lane","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"destinationLane(address,address,address)","name":"destinationLane","description":"Tells the destination lane for a particular bridge operation by checking several wildcard forwarding rules.","parameterDecorators":[{"name":"_token","description":"address of the token contract on the foreign side of the bridge.","recommendedTypes":[]},{"name":"_sender","description":"address of the tokens sender on the home side of the bridge.","recommendedTypes":[]},{"name":"_receiver","description":"address of the tokens receiver on the foreign side of the bridge.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"destination lane identifier, where the message should be forwarded to. 1 - oracle-driven-lane should be used. 0 - default behaviour should be applied. -1 - manual lane should be used.","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"forwardingRule(address,address,address)","name":"forwardingRule","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"getModuleInterfacesVersion()","name":"getModuleInterfacesVersion","description":"Tells the module interface version that this contract supports.","parameterDecorators":[],"returnDecorators":[{"name":"major","description":"value of the version.","recommendedTypes":[],"solidityType":"uint64"},{"name":"minor","description":"value of the version.","recommendedTypes":[],"solidityType":"uint64"},{"name":"patch","description":"value of the version.","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address)","name":"initialize","description":"Initializes this module contract. Intended to be called only once through the proxy pattern.","parameterDecorators":[{"name":"_mediator","description":"address of the Omnibridge contract working with this module.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"mediator()","name":"mediator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setRuleForReceiverOfAnyTokenToPBO(address,bool)","name":"setRuleForReceiverOfAnyTokenToPBO","description":"Updates the forwarding rule for the specific receiver. Only owner can call this method.","parameterDecorators":[{"name":"_receiver","description":"address of the tokens receiver on the foreign side.","recommendedTypes":[]},{"name":"_enable","description":"true, if all bridge operations to a given receiver should be forwarded to the oracle-driven lane.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRuleForReceiverOfAnyTokenToPBU(address,bool)","name":"setRuleForReceiverOfAnyTokenToPBU","description":"Updates the forwarding rule for the specific receiver. Only owner can call this method.","parameterDecorators":[{"name":"_receiver","description":"address of the tokens receiver on the foreign side.","recommendedTypes":[]},{"name":"_enable","description":"true, if all bridge operations to a given receiver should be forwarded to the manual lane.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRuleForSenderOfAnyTokenToPBO(address,bool)","name":"setRuleForSenderOfAnyTokenToPBO","description":"Updates the forwarding rule for the specific sender. Only owner can call this method.","parameterDecorators":[{"name":"_sender","description":"address of the tokens sender on the home side.","recommendedTypes":[]},{"name":"_enable","description":"true, if all bridge operations from a given sender should be forwarded to the oracle-driven lane.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRuleForSenderOfAnyTokenToPBU(address,bool)","name":"setRuleForSenderOfAnyTokenToPBU","description":"Updates the forwarding rule for the specific sender. Only owner can call this method.","parameterDecorators":[{"name":"_sender","description":"address of the tokens sender on the home side.","recommendedTypes":[]},{"name":"_enable","description":"true, if all bridge operations from a given sender should be forwarded to the manual lane.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRuleForTokenAndReceiverToPBO(address,address,bool)","name":"setRuleForTokenAndReceiverToPBO","description":"Allows a particular address to receive bridged tokens from the oracle-driven lane for a particular token. Only owner can call this method.","parameterDecorators":[{"name":"_token","description":"address of the token contract on the foreign side.","recommendedTypes":[]},{"name":"_receiver","description":"address of the tokens receiver on the foreign side of the bridge.","recommendedTypes":[]},{"name":"_enable","description":"true, if bridge operations for a given token and receiver should be forwarded to the oracle-driven lane.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRuleForTokenAndSenderToPBO(address,address,bool)","name":"setRuleForTokenAndSenderToPBO","description":"Allows a particular address to send bridge requests to the oracle-driven lane for a particular token. Only owner can call this method.","parameterDecorators":[{"name":"_token","description":"address of the token contract on the foreign side.","recommendedTypes":[]},{"name":"_sender","description":"address of the tokens sender on the home side of the bridge.","recommendedTypes":[]},{"name":"_enable","description":"true, if bridge operations for a given token and sender should be forwarded to the oracle-driven lane.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRuleForTokenToPBO(address,bool)","name":"setRuleForTokenToPBO","description":"Updates the forwarding rule for bridging specific token. Only owner can call this method.","parameterDecorators":[{"name":"_token","description":"address of the token contract on the foreign side.","recommendedTypes":[]},{"name":"_enable","description":"true, if bridge operations for a given token should be forwarded to the oracle-driven lane.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}