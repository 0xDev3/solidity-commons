{
  "schema": "../schema.json",
  "tags": [],
  "name": "ArkenDexV2",
  "description": "",
  "eventDecorators": [
    {
      "signature": "DODOApproveUpdated(address)",
      "name": "DODOApproveUpdated",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "newDODOApproveAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FeeWalletUpdated(address)",
      "name": "FeeWalletUpdated",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "newFeeWallet",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Swapped(address,address,uint256,uint256)",
      "name": "Swapped",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WETHDfynUpdated(address)",
      "name": "WETHDfynUpdated",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "newWETHDfyn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WETHUpdated(address)",
      "name": "WETHUpdated",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "newWETH",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "_DEADLINE_()",
      "name": "_DEADLINE_",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_DODO_APPROVE_ADDR_()",
      "name": "_DODO_APPROVE_ADDR_",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_ETH_()",
      "name": "_ETH_",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_FEE_WALLET_ADDR_()",
      "name": "_FEE_WALLET_ADDR_",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_WETH_()",
      "name": "_WETH_",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_WETH_DFYN_()",
      "name": "_WETH_DFYN_",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,address,address,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_ownerAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_feeWalletAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_wrappedEther",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_wrappedEtherDfyn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_dodoApproveAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multiTrade(tuple(address,address,tuple[],uint256,uint256,address))",
      "name": "multiTrade",
      "description": "",
      "parameterDecorators": [
        {
          "name": "desc",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcToken",
              "description": "",
              "type": "address"
            },
            {
              "name": "dstToken",
              "description": "",
              "type": "address"
            },
            {
              "name": "routes",
              "description": "",
              "type": "tuple[]"
            },
            {
              "name": "amountIn",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "amountOutMin",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "to",
              "description": "",
              "type": "address"
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "returnAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "testTransfer(tuple(address,address,tuple[],uint256,uint256,address))",
      "name": "testTransfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "desc",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcToken",
              "description": "",
              "type": "address"
            },
            {
              "name": "dstToken",
              "description": "",
              "type": "address"
            },
            {
              "name": "routes",
              "description": "",
              "type": "tuple[]"
            },
            {
              "name": "amountIn",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "amountOutMin",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "to",
              "description": "",
              "type": "address"
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "returnAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateDODOApproveAddress(address)",
      "name": "updateDODOApproveAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_dodoApproveAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateFeeWallet(address)",
      "name": "updateFeeWallet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_feeWallet",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateWETH(address)",
      "name": "updateWETH",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_weth",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateWETHDfyn(address)",
      "name": "updateWETHDfyn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_weth_dfyn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}