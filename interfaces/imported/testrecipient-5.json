{
  "schema": "../schema.json",
  "tags": [],
  "name": "TestRecipient",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Reverting(string)",
      "name": "Reverting",
      "description": "Emitted after the address of fallback oracle is updated.",
      "parameterDecorators": [
        {
          "name": "fallbackOracle",
          "description": "The address of the fallback oracle.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SampleRecipientEmitted(string,address,address,address,uint256,uint256,uint256)",
      "name": "SampleRecipientEmitted",
      "description": "Emitted after the address of fallback oracle is updated.",
      "parameterDecorators": [
        {
          "name": "message",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "realSender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "msgSender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "origin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "msgValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "gasLeft",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "checkNoReturnValues(bool)",
      "name": "checkNoReturnValues",
      "description": "",
      "parameterDecorators": [
        {
          "name": "doRevert",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkReturnValues(uint256,bool)",
      "name": "checkReturnValues",
      "description": "",
      "parameterDecorators": [
        {
          "name": "len",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "doRevert",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dontEmitMessage(string)",
      "name": "dontEmitMessage",
      "description": "",
      "parameterDecorators": [
        {
          "name": "message",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emitMessage(string)",
      "name": "emitMessage",
      "description": "",
      "parameterDecorators": [
        {
          "name": "message",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emitMessageNoParams()",
      "name": "emitMessageNoParams",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isTrustedForwarder(address)",
      "name": "isTrustedForwarder",
      "description": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.",
      "parameterDecorators": [
        {
          "name": "forwarder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paymaster()",
      "name": "paymaster",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setWithdrawDuringRelayedCall(address)",
      "name": "setWithdrawDuringRelayedCall",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_paymaster",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "testRevert()",
      "name": "testRevert",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "trustedForwarder()",
      "name": "trustedForwarder",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "versionRecipient()",
      "name": "versionRecipient",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawAllBalance()",
      "name": "withdrawAllBalance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}