{
  "schema": "../schema.json",
  "tags": [
    "oracles"
  ],
  "name": "ProxyOracle",
  "description": "",
  "eventDecorators": [
    {
      "signature": "SetOracle(address,tuple)",
      "name": "SetOracle",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "info",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetWhitelist(address,bool)",
      "name": "SetWhitelist",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ok",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptGovernor()",
      "name": "acceptGovernor",
      "description": "Accept to become the new governor. Must be called by the pending governor.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "asETHBorrow(address,uint256)",
      "name": "asETHBorrow",
      "description": "Return the value of the given input as ETH for borrow purpose.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "asETHCollateral(address,uint256,uint256)",
      "name": "asETHCollateral",
      "description": "Return the value of the given input as ETH for collateral purpose.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "convertForLiquidation(address,address,uint256,uint256)",
      "name": "convertForLiquidation",
      "description": "Return the amount of token out as liquidation reward for liquidating token in.",
      "parameterDecorators": [
        {
          "name": "tokenIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenOutId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amountIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governor()",
      "name": "governor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize()",
      "name": "initialize",
      "description": "Initialize the bank smart contract, using msg.sender as the first governor.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "oracles(address)",
      "name": "oracles",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "source",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "borrowFactor",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        },
        {
          "name": "collateralFactor",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        },
        {
          "name": "liqIncentive",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingGovernor()",
      "name": "pendingGovernor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setOracles(address[],tuple(address,uint16,uint16,uint16)[])",
      "name": "setOracles",
      "description": "Set oracle information for the given list of token addresses.",
      "parameterDecorators": [
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "info",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "source",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "borrowFactor",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralFactor",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liqIncentive",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPendingGovernor(address)",
      "name": "setPendingGovernor",
      "description": "Set the pending governor, which will be the governor once accepted.",
      "parameterDecorators": [
        {
          "name": "_pendingGovernor",
          "description": "The address to become the pending governor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWhitelistERC1155(address[],bool)",
      "name": "setWhitelistERC1155",
      "description": "Set whitelist status for the given list of token addresses.",
      "parameterDecorators": [
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ok",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "support(address,uint256)",
      "name": "support",
      "description": "Return whether the oracle supports evaluating collateral value of the given token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "whitelistERC1155(address)",
      "name": "whitelistERC1155",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}