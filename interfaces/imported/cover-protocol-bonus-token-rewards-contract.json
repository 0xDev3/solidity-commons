{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "BonusRewards",
  "description": "Cover Protocol Bonus Token Rewards contract. ETH is not allowed to be an bonus token, use wETH insteadWe support multiple bonus tokens for each pool. However, each pool will have 1 bonus token normally, may have 2 in rare cases.",
  "eventDecorators": [
    {
      "signature": "Deposit(address,address,uint256)",
      "name": "Deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lpToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Withdraw(address,address,uint256)",
      "name": "Withdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lpToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addBonus(address,address,uint48,uint256,uint256)",
      "name": "addBonus",
      "description": "called by authorizers only.",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusTokenAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startTime",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_weeklyRewards",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_transferAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addPoolsAndAllowBonus(address[],address[],address[])",
      "name": "addPoolsAndAllowBonus",
      "description": "add pools and authorizers to add bonus tokens for pools, combine two calls into one. Only reason we add pools is when bonus tokens will be added.",
      "parameterDecorators": [
        {
          "name": "_lpTokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusTokenAddrs",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_authorizers",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimRewardsForPools(address[])",
      "name": "claimRewardsForPools",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpTokens",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "collectDust(address,address,uint256)",
      "name": "collectDust",
      "description": "collect bonus token dust to treasury.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_poolBonusId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deposit(address,uint256)",
      "name": "deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyWithdraw(address[])",
      "name": "emergencyWithdraw",
      "description": "withdraw all without rewards.",
      "parameterDecorators": [
        {
          "name": "_lpTokens",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "extendBonus(address,uint256,address,uint256)",
      "name": "extendBonus",
      "description": "extend the current bonus program, the program has to be active (endTime is in the future).",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_poolBonusId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusTokenAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_transferAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAuthorizers(address,address)",
      "name": "getAuthorizers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusTokenAddr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPool(address)",
      "name": "getPool",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "bonuses",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple[]"
            },
            {
              "name": "lastUpdatedAt",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPoolList()",
      "name": "getPoolList",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getResponders()",
      "name": "getResponders",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUser(address,address)",
      "name": "getUser",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "rewardsWriteoffs",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256[]"
            }
          ],
          "solidityType": "tuple"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setPaused(bool)",
      "name": "setPaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_paused",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setResponders(address[])",
      "name": "setResponders",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_responders",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateBonus(address,address,uint256,uint48)",
      "name": "updateBonus",
      "description": "called by authorizers only, update weeklyRewards (if not ended), or update startTime (only if rewards not started, 0 is ignored).",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusTokenAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_weeklyRewards",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "viewRewards(address,address)",
      "name": "viewRewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(address,uint256)",
      "name": "withdraw",
      "description": "withdraw up to all user deposited.",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}