{"schema":"../schema.json","tags":[],"name":"UserRegistry","description":"","eventDecorators":[{"signature":"BlockAccount(address)","name":"BlockAccount","description":"event for funds received.","parameterDecorators":[{"name":"depositor","description":"who deposited value.","recommendedTypes":[],"indexed":true}]},{"signature":"DisableRedeemAddress(address)","name":"DisableRedeemAddress","description":"event for funds received.","parameterDecorators":[{"name":"depositor","description":"who deposited value.","recommendedTypes":[],"indexed":true}]},{"signature":"EnableRedeemAddress(address)","name":"EnableRedeemAddress","description":"event for funds received.","parameterDecorators":[{"name":"depositor","description":"who deposited value.","recommendedTypes":[],"indexed":true}]},{"signature":"MaxBurnBound(uint256)","name":"MaxBurnBound","description":"event for funds received.","parameterDecorators":[{"name":"depositor","description":"who deposited value.","recommendedTypes":[],"indexed":false}]},{"signature":"MinBurnBound(uint256)","name":"MinBurnBound","description":"event for funds received.","parameterDecorators":[{"name":"depositor","description":"who deposited value.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"event for funds received.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RegisterNewUser(address,address)","name":"RegisterNewUser","description":"event for funds received.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"redeemAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SetAttribute(address,bytes32,uint256,address)","name":"SetAttribute","description":"event for funds received.","parameterDecorators":[{"name":"who","description":"","recommendedTypes":[],"indexed":true},{"name":"attribute","description":"","recommendedTypes":[],"indexed":false},{"name":"value","description":"","recommendedTypes":[],"indexed":false},{"name":"updatedBy","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UnblockAccount(address)","name":"UnblockAccount","description":"event for funds received.","parameterDecorators":[{"name":"depositor","description":"who deposited value.","recommendedTypes":[],"indexed":true}]},{"signature":"UserKycUnverified(address)","name":"UserKycUnverified","description":"event for funds received.","parameterDecorators":[{"name":"depositor","description":"who deposited value.","recommendedTypes":[],"indexed":true}]},{"signature":"UserKycVerified(address)","name":"UserKycVerified","description":"event for funds received.","parameterDecorators":[{"name":"depositor","description":"who deposited value.","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"CAN_BURN()","name":"CAN_BURN","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"IS_BLOCKLISTED()","name":"IS_BLOCKLISTED","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"KYC_AML_VERIFIED()","name":"KYC_AML_VERIFIED","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"REDEEM_ADDRESS_USER()","name":"REDEEM_ADDRESS_USER","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"REDEMPTION_ADDRESS_COUNT()","name":"REDEMPTION_ADDRESS_COUNT","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"USER_REDEEM_ADDRESS()","name":"USER_REDEEM_ADDRESS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"attributes(address,bytes32)","name":"attributes","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"value","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"updatedBy","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"timestamp","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"blockAccount(address)","name":"blockAccount","description":"Registers `_account` as blocked. Emits a {BlockAccount} event. Requirements: - `_account` should not be already blocked.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["BlockAccount(address)"],"readOnly":false},{"signature":"canBurn(address,uint256)","name":"canBurn","description":"Throws if any of `_from` is not enabled to burn or `_amount` lower than minBurnBound.","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":true},{"signature":"canMint(address)","name":"canMint","description":"Throws if any of `_to` is not KYC verified or blocklisted.","parameterDecorators":[{"name":"_to","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":true},{"signature":"canTransfer(address,address)","name":"canTransfer","description":"Throws if any of `_from` or `_to` is blocklisted.","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[]},{"name":"_to","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":true},{"signature":"canTransferFrom(address,address,address)","name":"canTransferFrom","description":"Throws if any of `_spender`, `_from` or `_to` is blocklisted.","parameterDecorators":[{"name":"_spender","description":"","recommendedTypes":[]},{"name":"_from","description":"","recommendedTypes":[]},{"name":"_to","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":true},{"signature":"canWipe(address)","name":"canWipe","description":"Throws if any of `_account` is not blocked.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":true},{"signature":"claimEther(address)","name":"claimEther","description":"send all eth balance in the contract to another address.","parameterDecorators":[{"name":"_to","description":"address to send eth balance to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimToken(address,address)","name":"claimToken","description":"send all token balance of an arbitrary erc20 token in the contract to another address.","parameterDecorators":[{"name":"token","description":"token to reclaim.","recommendedTypes":[]},{"name":"_to","description":"address to send eth balance to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"disableRedeemAddress(address)","name":"disableRedeemAddress","description":"Disables `_account` redeem address to burn. Emits a {DisableRedeemAddress} event. Requirements: - `_account` should be a registered as user.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["DisableRedeemAddress(address)"],"readOnly":false},{"signature":"enableRedeemAddress(address)","name":"enableRedeemAddress","description":"Enables `_account` redeem address to burn. Emits a {EnableUserRedeemAddress} event. Requirements: - `_account` should be a registered as user. - `_account` should be KYC verified.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAttribute(address,bytes32)","name":"getAttribute","description":"","parameterDecorators":[{"name":"_who","description":"","recommendedTypes":[]},{"name":"_attribute","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"data","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getAttributeValue(address,bytes32)","name":"getAttributeValue","description":"","parameterDecorators":[{"name":"_who","description":"","recommendedTypes":[]},{"name":"_attribute","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getRedeemAddress(address)","name":"getRedeemAddress","description":"Gets redeem address associated to a given `_account`.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getUser(address)","name":"getUser","description":"Gets user's data. Requirements: - the caller should be the owner.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"user","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserById(string)","name":"getUserById","description":"Gets user by its id. Requirements: - the caller should be the owner.","parameterDecorators":[{"name":"_id","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"user","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserByRedeemAddress(address)","name":"getUserByRedeemAddress","description":"Gets user's account associated to a given `_redeemAddress`.","parameterDecorators":[{"name":"_redeemAddress","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"hasAttribute(address,bytes32)","name":"hasAttribute","description":"","parameterDecorators":[{"name":"_who","description":"","recommendedTypes":[]},{"name":"_attribute","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isRedeem(address,address)","name":"isRedeem","description":"Determines if it is redeeming.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"_recipient","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isRedeemFrom(address,address,address)","name":"isRedeemFrom","description":"Determines if it is redeeming from.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"_recipient","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"maxBurnBound()","name":"maxBurnBound","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"minBurnBound()","name":"minBurnBound","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"registerNewUser(address,string)","name":"registerNewUser","description":"Adds a new user in the registry. Sets {REDEEM_ADDRESS_USER} attribute for redeemAddress as `_account`. Sets {USER_REDEEM_ADDRESS} attribute for `_account` as redeemAddress. Emits a {RegisterNewUser} event. Requirements: - `_account` should not be a registered as user. - number of redeem address should not be greater than max availables.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]},{"name":"_id","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RegisterNewUser(address,address)"],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAttribute(address,bytes32,uint256)","name":"setAttribute","description":"","parameterDecorators":[{"name":"_who","description":"","recommendedTypes":[]},{"name":"_attribute","description":"","recommendedTypes":[]},{"name":"_value","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMaxBurnBound(uint256)","name":"setMaxBurnBound","description":"","parameterDecorators":[{"name":"_maxBurnBound","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMinBurnBound(uint256)","name":"setMinBurnBound","description":"","parameterDecorators":[{"name":"_minBurnBound","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setToken(address)","name":"setToken","description":"","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setUserId(address,string)","name":"setUserId","description":"Sets user id. Requirements: - the caller should be the owner. - `_account` should be a registered as user. - `_id` should not be taken.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]},{"name":"_id","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unblockAccount(address)","name":"unblockAccount","description":"Registers `_account` as un-blocked. Emits a {UnblockAccount} event. Requirements: - `_account` should be blocked.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["UnblockAccount(address)"],"readOnly":false},{"signature":"unverifyKycDisableRedeem(address)","name":"unverifyKycDisableRedeem","description":"Sets user as KYC un-verified. Disables `_account` redeem address to burn. Emits a {UserKycVerified} event. Emits a {v} event. Requirements: - `_account` should be a registered as user.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["UserKycVerified(address)"],"readOnly":false},{"signature":"userKycUnverified(address)","name":"userKycUnverified","description":"Sets user as KYC un-verified. Emits a {UserKycVerified} event. Requirements: - `_account` should be a registered as user.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["UserKycVerified(address)"],"readOnly":false},{"signature":"userKycVerified(address)","name":"userKycVerified","description":"Sets user as KYC verified. Emits a {UserKycVerified} event. Requirements: - `_account` should be a registered as user.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["UserKycVerified(address)"],"readOnly":false},{"signature":"verifyKycEnableRedeem(address)","name":"verifyKycEnableRedeem","description":"Sets user as KYC verified. Enables `_account` redeem address to burn. Emits a {UserKycVerified} event. Emits a {EnableUserRedeemAddress} event. Requirements: - `_account` should be a registered as user.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["UserKycVerified(address)"],"readOnly":false}]}