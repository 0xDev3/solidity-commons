{"schema":"../schema.json","tags":[],"name":"BankFrickCompliance","description":"","eventDecorators":[{"signature":"AgentAdded(address)","name":"AgentAdded","description":"","parameterDecorators":[{"name":"_agent","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"AgentRemoved(address)","name":"AgentRemoved","description":"","parameterDecorators":[{"name":"_agent","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TokenAgentAdded(address)","name":"TokenAgentAdded","description":"","parameterDecorators":[{"name":"_agentAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokenAgentRemoved(address)","name":"TokenAgentRemoved","description":"","parameterDecorators":[{"name":"_agentAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokenBound(address)","name":"TokenBound","description":"","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokenUnbound(address)","name":"TokenUnbound","description":"","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UnWhitelistedCountry(uint16)","name":"UnWhitelistedCountry","description":"","parameterDecorators":[{"name":"_country","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WhitelistedCountry(uint16)","name":"WhitelistedCountry","description":"","parameterDecorators":[{"name":"_country","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addAgent(address)","name":"addAgent","description":"","parameterDecorators":[{"name":"_agent","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addTokenAgent(address)","name":"addTokenAgent","description":"See {ICompliance-addTokenAgent}.","parameterDecorators":[{"name":"_agentAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"batchBlacklistCountries(uint16[])","name":"batchBlacklistCountries","description":"Removes countries from the whitelist. Identities from those countries will be unwhitelisted.","parameterDecorators":[{"name":"_countries","description":"Countries to be unwhitelisted, should be expressed by following numeric ISO 3166-1 standard Only the owner of the Compliance smart contract can call this function emits an `UnwhitelistedCountry` event.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"batchWhitelistCountries(uint16[])","name":"batchWhitelistCountries","description":"Adds countries to the whitelist in batch. Identities from those countries will be whitelisted & authorized to manipulate Tokens linked to this Compliance.","parameterDecorators":[{"name":"_countries","description":"Countries to be whitelisted, should be expressed by following numeric ISO 3166-1 standard Only the owner of the Compliance smart contract can call this function emits an `WhitelistedCountry` event.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bindToken(address)","name":"bindToken","description":"See {ICompliance-bindToken}.","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"canTransfer(address,address,uint256)","name":"canTransfer","description":"See {ICompliance-canTransfer}.","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[]},{"name":"_to","description":"","recommendedTypes":[]},{"name":"_value","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"created(address,uint256)","name":"created","description":"See {ICompliance-created}.","parameterDecorators":[{"name":"_to","description":"","recommendedTypes":[]},{"name":"_value","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"destroyed(address,uint256)","name":"destroyed","description":"See {ICompliance-destroyed}.","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[]},{"name":"_value","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isAgent(address)","name":"isAgent","description":"","parameterDecorators":[{"name":"_agent","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isCountryWhitelisted(uint16)","name":"isCountryWhitelisted","description":"Returns true if country is whitelisted.","parameterDecorators":[{"name":"_country","description":", numeric ISO 3166-1 standard of the country to be checked.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isTokenAgent(address)","name":"isTokenAgent","description":"See {ICompliance-isTokenAgent}.","parameterDecorators":[{"name":"_agentAddress","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isTokenBound(address)","name":"isTokenBound","description":"See {ICompliance-isTokenBound}.","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeAgent(address)","name":"removeAgent","description":"","parameterDecorators":[{"name":"_agent","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeTokenAgent(address)","name":"removeTokenAgent","description":"See {ICompliance-isTokenAgent}.","parameterDecorators":[{"name":"_agentAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnershipOnComplianceContract(address)","name":"transferOwnershipOnComplianceContract","description":"See {ICompliance-transferOwnershipOnComplianceContract}.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferred(address,address,uint256)","name":"transferred","description":"See {ICompliance-transferred}.","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[]},{"name":"_to","description":"","recommendedTypes":[]},{"name":"_value","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unWhitelistCountry(uint16)","name":"unWhitelistCountry","description":"unwhitelist country. Identities from those countries will be unwhitelisted & forbidden to manipulate Tokens linked to this Compliance.","parameterDecorators":[{"name":"_country","description":"Country to be unwhitelisted, should be expressed by following numeric ISO 3166-1 standard Only the owner of the Compliance smart contract can call this function emits an `UnwhitelistedCountry` event.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unbindToken(address)","name":"unbindToken","description":"See {ICompliance-unbindToken}.","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"whitelistCountry(uint16)","name":"whitelistCountry","description":"whitelist country. Identities from those countries will be whitelisted & authorised to manipulate Tokens linked to this Compliance.","parameterDecorators":[{"name":"_country","description":"Country to be whitelisted, should be expressed by following numeric ISO 3166-1 standard Only the owner of the Compliance smart contract can call this function emits an `WhitelistedCountry` event.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}