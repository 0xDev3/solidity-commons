{
  "schema": "../schema.json",
  "tags": [],
  "name": "LiftoffSettings",
  "description": "",
  "eventDecorators": [
    {
      "signature": "LogEthXLockBP(uint256)",
      "name": "LogEthXLockBP",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "ethXLockBP",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogInsurancePeriod(uint256)",
      "name": "LogInsurancePeriod",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "insurancePeriod",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogLidPoolManager(address)",
      "name": "LogLidPoolManager",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "lidPoolManager",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogLidTreasury(address)",
      "name": "LogLidTreasury",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "lidTreasury",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogLiftoffEngine(address)",
      "name": "LogLiftoffEngine",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "liftoffEngine",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogLiftoffInsurance(address)",
      "name": "LogLiftoffInsurance",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "liftoffInsurance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogLiftoffLauncher(address)",
      "name": "LogLiftoffLauncher",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "liftoffLauncher",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogTokenUserBP(uint256)",
      "name": "LogTokenUserBP",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "tokenUserBP",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogUniswapRouter(address)",
      "name": "LogUniswapRouter",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "uniswapRouter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogXEth(address)",
      "name": "LogXEth",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "xEth",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogXLocker(address)",
      "name": "LogXLocker",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "xLocker",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogXethBP(uint256,uint256,uint256,uint256,uint256)",
      "name": "LogXethBP",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "baseFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ethBuyBP",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "projectDevBP",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "mainFeeBP",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "lidPoolBP",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "getBaseFeeBP()",
      "name": "getBaseFeeBP",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEthBuyBP()",
      "name": "getEthBuyBP",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEthXLockBP()",
      "name": "getEthXLockBP",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInsurancePeriod()",
      "name": "getInsurancePeriod",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLidPoolBP()",
      "name": "getLidPoolBP",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLidPoolManager()",
      "name": "getLidPoolManager",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLidTreasury()",
      "name": "getLidTreasury",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLiftoffEngine()",
      "name": "getLiftoffEngine",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLiftoffInsurance()",
      "name": "getLiftoffInsurance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLiftoffRegistration()",
      "name": "getLiftoffRegistration",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMainFeeBP()",
      "name": "getMainFeeBP",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProjectDevBP()",
      "name": "getProjectDevBP",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenUserBP()",
      "name": "getTokenUserBP",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUniswapRouter()",
      "name": "getUniswapRouter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getXEth()",
      "name": "getXEth",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getXLocker()",
      "name": "getXLocker",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize()",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAllAddresses(address,address,address,address,address,address,address,address)",
      "name": "setAllAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_liftoffInsurance",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_liftoffRegistration",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_liftoffEngine",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_xEth",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_xLocker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_uniswapRouter",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lidTreasury",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lidPoolManager",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAllUints(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      "name": "setAllUints",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_ethXLockBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenUserBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_insurancePeriod",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_baseFeeBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_ethBuyBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_projectDevBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_mainFeeBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lidPoolBP",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setEthXLockBP(uint256)",
      "name": "setEthXLockBP",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_val",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setInsurancePeriod(uint256)",
      "name": "setInsurancePeriod",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_val",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLidPoolManager(address)",
      "name": "setLidPoolManager",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_val",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLidTreasury(address)",
      "name": "setLidTreasury",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_val",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLiftoffEngine(address)",
      "name": "setLiftoffEngine",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_val",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLiftoffInsurance(address)",
      "name": "setLiftoffInsurance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_val",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLiftoffRegistration(address)",
      "name": "setLiftoffRegistration",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_val",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTokenUserBP(uint256)",
      "name": "setTokenUserBP",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_val",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setUniswapRouter(address)",
      "name": "setUniswapRouter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_val",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setXEth(address)",
      "name": "setXEth",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_val",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setXLocker(address)",
      "name": "setXLocker",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_val",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setXethBP(uint256,uint256,uint256,uint256,uint256)",
      "name": "setXethBP",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_baseFeeBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_ethBuyBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_projectDevBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_mainFeeBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lidPoolBP",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}