{
  "schema": "../schema.json",
  "tags": [
    "oracles",
    "compound"
  ],
  "name": "OpenOraclePriceData",
  "description": "The Open Oracle Price Data Contract. Values stored in this contract should represent a USD price with 6 decimals precision.",
  "eventDecorators": [
    {
      "signature": "NotWritten(uint64,uint256,uint256)",
      "name": "NotWritten",
      "description": "When rewards are claimed by nodes.",
      "parameterDecorators": [
        {
          "name": "priorTimestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "messageTimestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "blockTimestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Write(address,string,uint64,uint64)",
      "name": "Write",
      "description": "When rewards are claimed by nodes.",
      "parameterDecorators": [
        {
          "name": "source",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "key",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "get(address,string)",
      "name": "get",
      "description": "Read a single key from an authenticated source.",
      "parameterDecorators": [
        {
          "name": "source",
          "description": "The verifiable author of the data.",
          "recommendedTypes": []
        },
        {
          "name": "key",
          "description": "The selector for the value to return.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPrice(address,string)",
      "name": "getPrice",
      "description": "Read only the value for a single key from an authenticated source.",
      "parameterDecorators": [
        {
          "name": "source",
          "description": "The verifiable author of the data.",
          "recommendedTypes": []
        },
        {
          "name": "key",
          "description": "The selector for the value to return.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The price value (defaults to 0).",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "put(bytes,bytes)",
      "name": "put",
      "description": "Write a bunch of signed datum to the authenticated storage mapping.",
      "parameterDecorators": [
        {
          "name": "message",
          "description": "The payload containing the timestamp, and (key, value) pairs.",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "The cryptographic signature of the message payload, authorizing the source to write.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The keys that were written.",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "source(bytes,bytes)",
      "name": "source",
      "description": "Recovers the source address which signed a message. Comparing to a claimed address would add nothing, as the caller could simply perform the recover and claim that address.",
      "parameterDecorators": [
        {
          "name": "message",
          "description": "The data that was presumably signed.",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "The fingerprint of the data + private key.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The source address which signed the message, presumably.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}