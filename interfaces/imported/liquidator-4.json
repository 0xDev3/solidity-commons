{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "swaps"
  ],
  "name": "Liquidator",
  "description": "Liquidator. VERSION: 1.0 DATE: 2020-10-13. The Liquidator allows rewards to be swapped for another token and returned to a calling contract.",
  "eventDecorators": [
    {
      "signature": "Liquidated(address,address,uint256,address)",
      "name": "Liquidated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sellToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "mUSD",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "mUSDAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "buyToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidationEnded(address)",
      "name": "LiquidationEnded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "integration",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "LiquidationModified(address)",
      "name": "LiquidationModified",
      "description": "",
      "parameterDecorators": [
        {
          "name": "integration",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "createLiquidation(address,address,address,int128,address[],uint256,uint256)",
      "name": "createLiquidation",
      "description": "Create a liquidation.",
      "parameterDecorators": [
        {
          "name": "_integration",
          "description": "The integration contract address from which to receive sellToken.",
          "recommendedTypes": []
        },
        {
          "name": "_sellToken",
          "description": "Token harvested from the integration contract.",
          "recommendedTypes": []
        },
        {
          "name": "_bAsset",
          "description": "The asset to buy on Uniswap.",
          "recommendedTypes": []
        },
        {
          "name": "_curvePosition",
          "description": "Position of the bAsset in Curves MetaPool.",
          "recommendedTypes": []
        },
        {
          "name": "_uniswapPath",
          "description": "The Uniswap path as an array of addresses e.g. [COMP, WETH, DAI].",
          "recommendedTypes": []
        },
        {
          "name": "_trancheAmount",
          "description": "The amount of bAsset units to buy in each weekly tranche.",
          "recommendedTypes": []
        },
        {
          "name": "_minReturn",
          "description": "Minimum exact amount of bAsset to get for each (whole) sellToken unit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "curve()",
      "name": "curve",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deleteLiquidation(address)",
      "name": "deleteLiquidation",
      "description": "Delete a liquidation.",
      "parameterDecorators": [
        {
          "name": "_integration",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address,address,address,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_nexus",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_uniswap",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_curve",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_mUSD",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "liquidations(address)",
      "name": "liquidations",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "sellToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "bAsset",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "curvePosition",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int128"
        },
        {
          "name": "lastTriggered",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "trancheAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mUSD()",
      "name": "mUSD",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minReturn(address)",
      "name": "minReturn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nexus()",
      "name": "nexus",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "triggerLiquidation(address)",
      "name": "triggerLiquidation",
      "description": "Triggers a liquidation, flow (once per week): - Sells $COMP for $USDC (or other) on Uniswap (up to trancheAmount) - Sell USDC for mUSD on Curve - Send to SavingsManager.",
      "parameterDecorators": [
        {
          "name": "_integration",
          "description": "Integration for which to trigger liquidation.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uniswap()",
      "name": "uniswap",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateBasset(address,address,int128,address[],uint256,uint256)",
      "name": "updateBasset",
      "description": "Update a liquidation.",
      "parameterDecorators": [
        {
          "name": "_integration",
          "description": "The integration contract in question.",
          "recommendedTypes": []
        },
        {
          "name": "_bAsset",
          "description": "New asset to buy on Uniswap.",
          "recommendedTypes": []
        },
        {
          "name": "_curvePosition",
          "description": "Position of the bAsset in Curves MetaPool.",
          "recommendedTypes": []
        },
        {
          "name": "_uniswapPath",
          "description": "The Uniswap path as an array of addresses e.g. [COMP, WETH, DAI].",
          "recommendedTypes": []
        },
        {
          "name": "_trancheAmount",
          "description": "The amount of bAsset units to buy in each weekly tranche.",
          "recommendedTypes": []
        },
        {
          "name": "_minReturn",
          "description": "Minimum exact amount of bAsset to get for each (whole) sellToken unit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}