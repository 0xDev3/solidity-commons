{
  "schema": "../schema.json",
  "tags": [
    "liquidity"
  ],
  "name": "LiquidityPoolV2",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Borrowed(address,address,uint256,uint256)",
      "name": "Borrowed",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_borrower",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposited(address,address,uint256,uint256)",
      "name": "Deposited",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_depositor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_mintAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EtherReceived(address,uint256)",
      "name": "EtherReceived",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OperatorAdded(address)",
      "name": "OperatorAdded",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OperatorRemoved(address)",
      "name": "OperatorRemoved",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PauserAdded(address)",
      "name": "PauserAdded",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PauserRemoved(address)",
      "name": "PauserRemoved",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdrew(address,address,address,uint256,uint256)",
      "name": "Withdrew",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_reciever",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_withdrawer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_burnAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ETHEREUM()",
      "name": "ETHEREUM",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "FEE_BASE()",
      "name": "FEE_BASE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "VERSION()",
      "name": "VERSION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addOperator(address)",
      "name": "addOperator",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addPauser(address)",
      "name": "addPauser",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "blacklistRecoverableToken(address)",
      "name": "blacklistRecoverableToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "borrow(address,uint256,bytes)",
      "name": "borrow",
      "description": "borrow assets from this LP, and return them within the same transaction.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The address of the token contract.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "The amont of token.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "The implementation specific data for the Borrower.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "borrowableBalance(address)",
      "name": "borrowableBalance",
      "description": "Calculate the given token's outstanding balance of this contract.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The address of the token contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(address,uint256)",
      "name": "deposit",
      "description": "Deposit funds to the Keeper Protocol.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The address of the token contract.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "The value of deposit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositFeeInBips()",
      "name": "depositFeeInBips",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(string,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_VERSION",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_borrower",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize()",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "Initializes the contract in unpaused state. Assigns the Pauser role to the deployer.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isOperator(address)",
      "name": "isOperator",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPauser(address)",
      "name": "isPauser",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "kToken(address)",
      "name": "kToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "kTokens(address)",
      "name": "kTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "migrate(address)",
      "name": "migrate",
      "description": "Migrate funds to the new liquidity provider.",
      "parameterDecorators": [
        {
          "name": "_newLP",
          "description": "The address of the new LiquidityPool contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "operators(uint256)",
      "name": "operators",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "Called by a pauser to pause, triggers stopped state.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolFeeInBips()",
      "name": "poolFeeInBips",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "recoverTokens(address)",
      "name": "recoverTokens",
      "description": "Allow the owner of the contract to recover funds accidentally sent to the contract. To withdraw ETH, the token should be set to `0x0`.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "register(address)",
      "name": "register",
      "description": "register a token on this Keeper.",
      "parameterDecorators": [
        {
          "name": "_kToken",
          "description": "The keeper ERC20 token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registeredKTokens(address)",
      "name": "registeredKTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registeredTokens(uint256)",
      "name": "registeredTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOperator()",
      "name": "renounceOperator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renouncePauser()",
      "name": "renouncePauser",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "underlyingBalance(address,address)",
      "name": "underlyingBalance",
      "description": "Calculate the given owner's outstanding balance for the given token on this contract.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The address of the token contract.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "The address of the token contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "Called by a pauser to unpause, returns to normal state.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateDepositFee(uint256)",
      "name": "updateDepositFee",
      "description": "updates the deposit fee. fee is in bips so it should satisfy [0 <= fee <= FEE_BASE].",
      "parameterDecorators": [
        {
          "name": "_depositFeeInBips",
          "description": "The new deposit fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateFeePool(address)",
      "name": "updateFeePool",
      "description": "updates the fee pool.",
      "parameterDecorators": [
        {
          "name": "_newFeePool",
          "description": "The new fee pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePoolFee(uint256)",
      "name": "updatePoolFee",
      "description": "updates the pool fee. fee is in bips so it should satisfy [0 <= fee <= FEE_BASE].",
      "parameterDecorators": [
        {
          "name": "_poolFeeInBips",
          "description": "The new pool fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(address,address,uint256)",
      "name": "withdraw",
      "description": "Withdraw funds from the Compound Protocol.",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "The address of the amount receiver.",
          "recommendedTypes": []
        },
        {
          "name": "_kToken",
          "description": "The address of the kToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "_kTokenAmount",
          "description": "The value of the kToken amount to be burned.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}