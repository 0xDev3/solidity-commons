{
  "schema": "../schema.json",
  "tags": [
    "dao"
  ],
  "name": "Baal",
  "description": "Baal. Maximalized minimalist guild contract inspired by Moloch DAO framework.",
  "eventDecorators": [
    {
      "signature": "ProcessProposal(uint256,bool)",
      "name": "ProcessProposal",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "proposal",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "passed",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Ragequit(address,address,uint256)",
      "name": "Ragequit",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "memberAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sharesToBurn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SubmitProposal(address[],uint256[],uint256,uint256,uint8,bytes[],bytes32)",
      "name": "SubmitProposal",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "votingLength",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "proposal",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "flag",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "details",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SubmitVote(address,uint256,uint256,uint8)",
      "name": "SubmitVote",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SummonComplete(address[],address[],address[],uint96[],uint256,uint256,string,string)",
      "name": "SummonComplete",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "guildTokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "minions",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "summoners",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "votes",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "minVotingPeriod",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "maxVotingPeriod",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "symbol",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Transfer(address,address,uint256)",
      "name": "Transfer",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "balanceOf(address)",
      "name": "balanceOf",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "decimals()",
      "name": "decimals",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getGuildTokens()",
      "name": "getGuildTokens",
      "description": "Returns array list of approved guild tokens for Baal {ragequit}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMemberList()",
      "name": "getMemberList",
      "description": "Returns array list of Baal {members}.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "membership",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProposalFlags(uint256)",
      "name": "getProposalFlags",
      "description": "Returns flags for proposal type & status.",
      "parameterDecorators": [
        {
          "name": "proposal",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "flags",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool[4]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProposalVote(address,uint256)",
      "name": "getProposalVote",
      "description": "Returns vote cast by `account` on `proposal` #.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "proposal",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "voted",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "guildAction(address,uint256,bool)",
      "name": "guildAction",
      "description": "Execute membership action to mint or burn votes against whitelisted `minions` in consideration of `msg.sender` & given `amount`.",
      "parameterDecorators": [
        {
          "name": "minion",
          "description": "Whitelisted contract to trigger action.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Number to submit in action - e.g., votes to mint for tribute or to burn in asset claim.",
          "recommendedTypes": []
        },
        {
          "name": "mint",
          "description": "Confirm whether action involves vote request - if `false`, perform burn.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "reaction",
          "description": "Output number for vote mint or burn based on minion logic.",
          "recommendedTypes": [],
          "solidityType": "uint96"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "maxVotingPeriod()",
      "name": "maxVotingPeriod",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "members(address)",
      "name": "members",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "exists",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "highestIndexYesVote",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minVotingPeriod()",
      "name": "minVotingPeriod",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minions(address)",
      "name": "minions",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "participation(address)",
      "name": "participation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "processActionProposal(uint256)",
      "name": "processActionProposal",
      "description": "Process 'action' proposal (0) & execute low-level call(s) - proposal must be counted, unprocessed & in voting period.",
      "parameterDecorators": [
        {
          "name": "proposal",
          "description": "Number of proposal in {proposals} array to process for execution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "passed",
          "description": "results Array of return data from low-level calls.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "results",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "processMemberProposal(uint256)",
      "name": "processMemberProposal",
      "description": "Process 'membership' proposal (2) - proposal must be counted, unprocessed & in voting period.",
      "parameterDecorators": [
        {
          "name": "proposal",
          "description": "Number of proposal in {proposals} array to process for execution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "passed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "processPeriodProposal(uint256)",
      "name": "processPeriodProposal",
      "description": "Process 'period' proposal (2) - proposal must be counted, unprocessed & in voting period.",
      "parameterDecorators": [
        {
          "name": "proposal",
          "description": "Number of proposal in {proposals} array to process for execution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "passed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "processWhitelistProposal(uint256)",
      "name": "processWhitelistProposal",
      "description": "Process 'whitelist' proposal (3) - proposal must be counted, unprocessed & in voting period.",
      "parameterDecorators": [
        {
          "name": "proposal",
          "description": "Number of proposal in {proposals} array to process for execution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "passed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proposalCount()",
      "name": "proposalCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposals(uint256)",
      "name": "proposals",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "yesVotes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint96"
        },
        {
          "name": "noVotes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint96"
        },
        {
          "name": "votingEnds",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "details",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ragequit(address,uint96)",
      "name": "ragequit",
      "description": "Process member burn of votes and/or loot.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "votes",
          "description": "Baal membership weight to burn for transfer of 'fair share' of {guildTokens}.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "submitProposal(address[],uint256[],uint256,uint8,bytes[],bytes32)",
      "name": "submitProposal",
      "description": "Submit proposal to Baal `members` for approval within voting period - proposer must be registered member.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "Account that receives low-level call `data` & ETH `value` - if `membership` flag (2), the account that will receive `value` votes - if `removal` (3), the account that will lose `value` votes.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "ETH sent from Baal to execute approved proposal low-level call.",
          "recommendedTypes": []
        },
        {
          "name": "votingLength",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flag",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Raw data sent to `target` account for low-level call.",
          "recommendedTypes": []
        },
        {
          "name": "details",
          "description": "Context for proposal.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "proposal",
          "description": "Id for proposal from count.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "submitVote(uint256,uint8)",
      "name": "submitVote",
      "description": "Submit vote - proposal must exist & voting period must not have ended - non-member can signal.",
      "parameterDecorators": [
        {
          "name": "proposal",
          "description": "Number of proposal in `proposals` mapping to cast vote on.",
          "recommendedTypes": []
        },
        {
          "name": "uintVote",
          "description": "If '1', member will cast `yesVotes` onto proposal - if '2', `noVotes` will be counted - '0' is abstention & default value.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "symbol()",
      "name": "symbol",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}