{"schema":"../schema.json","tags":[],"name":"SmartTradeUniV3","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SwapInfo(int256,int256)","name":"SwapInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[],"indexed":false},{"name":"param1","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"masterSwap(address,bool,int256,uint160,uint256,int256,int256,int256,int256)","name":"masterSwap","description":"","parameterDecorators":[{"name":"poolAddress","description":"","recommendedTypes":[]},{"name":"zeroForOne","description":"","recommendedTypes":[]},{"name":"amountIn","description":"","recommendedTypes":[]},{"name":"sqrtPriceLimitX96","description":"","recommendedTypes":[]},{"name":"blockHeightRequired","description":"","recommendedTypes":[]},{"name":"priceToken0Usd","description":"","recommendedTypes":[]},{"name":"priceToken1Usd","description":"","recommendedTypes":[]},{"name":"ethPriceUsd","description":"","recommendedTypes":[]},{"name":"minPrUsd","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount0","description":"","recommendedTypes":[],"solidityType":"int256"},{"name":"amount1","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"uniswapV3SwapCallback(int256,int256,bytes)","name":"uniswapV3SwapCallback","description":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap. In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","parameterDecorators":[{"name":"amount0Delta","description":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","recommendedTypes":[]},{"name":"amount1Delta","description":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","recommendedTypes":[]},{"name":"data","description":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpause()","name":"unpause","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}