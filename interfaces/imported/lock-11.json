{
  "schema": "../schema.json",
  "tags": [
    "locking"
  ],
  "name": "Lock",
  "description": "This contract will hold user locked funds which will be unlocked after lock-up period ends.",
  "eventDecorators": [
    {
      "signature": "AirdropAdded(address,address,uint256,uint256,uint256,uint256)",
      "name": "AirdropAdded",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "baseToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "destToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "airdropDate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "numerator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "denominator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AirdropUpdated(address,address,uint256,uint256,uint256,uint256)",
      "name": "AirdropUpdated",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "baseToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "destToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "airdropDate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "numerator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "denominator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AmountAdded(address,uint256,uint256)",
      "name": "AmountAdded",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AssetClaimed(uint256,address,address)",
      "name": "AssetClaimed",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AssetLocked(address,address,address,uint256,uint256,uint256,uint256)",
      "name": "AssetLocked",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endDate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BsovTokenFeeUpdated(uint256)",
      "name": "BsovTokenFeeUpdated",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BsovTokenUpdated(address)",
      "name": "BsovTokenUpdated",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "bsovTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NonBsovTokenFeeUpdated(uint256)",
      "name": "NonBsovTokenFeeUpdated",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused()",
      "name": "Paused",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": []
    },
    {
      "signature": "TokenActivated(address)",
      "name": "TokenActivated",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TokenAdded(address)",
      "name": "TokenAdded",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TokenDecimalUpdated(address,uint256)",
      "name": "TokenDecimalUpdated",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "decimal",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenIconUpdated(address,string)",
      "name": "TokenIconUpdated",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "thumbnailUrl",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenInactivated(address)",
      "name": "TokenInactivated",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TokenUpdated(address,uint256,bool)",
      "name": "TokenUpdated",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "minAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "emergencyUnlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokensAirdropped(address,uint256)",
      "name": "TokensAirdropped",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "destToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused()",
      "name": "Unpaused",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": []
    },
    {
      "signature": "WalletChanged(address)",
      "name": "WalletChanged",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "wallet",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "activateToken(address)",
      "name": "activateToken",
      "description": "Allows admin to activate any existing token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of the token to be activated.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addAmount(uint256,uint256)",
      "name": "addAmount",
      "description": "Allows anyone to add more tokens in the existing lock.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "id of the locked asset.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount to be added.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addToken(address,uint256)",
      "name": "addToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "decimals",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addTokenAdmin(address,uint256,string,uint256,string)",
      "name": "addTokenAdmin",
      "description": "Allows admin to add new token to the list.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of the token.",
          "recommendedTypes": []
        },
        {
          "name": "minAmount",
          "description": "Minimum amount of tokens to lock for this token.",
          "recommendedTypes": []
        },
        {
          "name": "name",
          "description": "Name of the token.",
          "recommendedTypes": []
        },
        {
          "name": "decimals",
          "description": "Token decimals.",
          "recommendedTypes": []
        },
        {
          "name": "thumbnailUrl",
          "description": "imgur url of the token icon.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bulkLock(address,uint256[],uint256[],address[],uint256[],uint256,uint256)",
      "name": "bulkLock",
      "description": "Allows user to lock asset. In case of ERC-20 token the user will first have to approve the contract to spend on his/her behalf.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "Address of the token to be locked.",
          "recommendedTypes": []
        },
        {
          "name": "amounts",
          "description": "List of amount of tokens to lock.",
          "recommendedTypes": []
        },
        {
          "name": "durations",
          "description": "List of duration for which tokens to be locked. In seconds.",
          "recommendedTypes": []
        },
        {
          "name": "beneficiaries",
          "description": "List of addresses of the beneficiaries.",
          "recommendedTypes": []
        },
        {
          "name": "amountThresholds",
          "description": "List of threshold amounts which is when locked in a single lock will make that lock claimable.",
          "recommendedTypes": []
        },
        {
          "name": "claimMode",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "claimPercentage",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claim(uint256)",
      "name": "claim",
      "description": "Allows beneficiary of locked asset to claim asset after lock-up period ends.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "Id of the locked asset.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimable(uint256)",
      "name": "claimable",
      "description": "Returns whether given asset can be claimed or not.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "id of an asset.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getActiveTokens()",
      "name": "getActiveTokens",
      "description": "Returns list of active tokens.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getActiveTokensCount()",
      "name": "getActiveTokensCount",
      "description": "Returns total token count.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAirdrop(address,uint256)",
      "name": "getAirdrop",
      "description": "Returns specific airdrop for a base token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Base token address.",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "Index at which this airdrop is in array.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "destToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "numerator",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "denominator",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "date",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAirdrops(address)",
      "name": "getAirdrops",
      "description": "Returns airdrop info for a given token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "destTokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "numerators",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "denominators",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "dates",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAssetIds(address)",
      "name": "getAssetIds",
      "description": "Returns all asset ids for a user.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "Address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "ids",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBsovToken()",
      "name": "getBsovToken",
      "description": "Returns lock token address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBsovTokenFee()",
      "name": "getBsovTokenFee",
      "description": "Returns fee per lock in bsov token of BSOV tokens.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLockedAsset(uint256)",
      "name": "getLockedAsset",
      "description": "Returns information about a locked asset.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "Asset id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "releaseDate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastLocked",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "amountThreshold",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "decimal",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "thumbnailUrl",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "claimed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "claimMode",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "claimPercentage",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getNonBsovTokenFee()",
      "name": "getNonBsovTokenFee",
      "description": "Returns fee per lock in bsov token of NON-BSOV tokens.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenCount()",
      "name": "getTokenCount",
      "description": "Returns total token count.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenInfo(address)",
      "name": "getTokenInfo",
      "description": "Returns information about specific tokentokenAddress Address of the token.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "minAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "emergencyUnlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "decimal",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "thumbnailUrl",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "locked",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokens(uint256,uint256)",
      "name": "getTokens",
      "description": "Returns list of supported tokens This will be a paginated method which will only send 15 tokens in one request This is done to prevent infinite loops and overflow of gas limits.",
      "parameterDecorators": [
        {
          "name": "start",
          "description": "start index for pagination.",
          "recommendedTypes": []
        },
        {
          "name": "length",
          "description": "Amount of tokens to fetch.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenAddresses",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "minAmounts",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "emergencyUnlocks",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool[]"
        },
        {
          "name": "statuses",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8[]"
        },
        {
          "name": "names",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string[]"
        },
        {
          "name": "thumbnailUrls",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string[]"
        },
        {
          "name": "decimals",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "totalLocked",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWallet()",
      "name": "getWallet",
      "description": "returns the fee receiver wallet address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "inactivateToken(address)",
      "name": "inactivateToken",
      "description": "Allows admin to inactivate token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of the token to be inactivated.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isActive(address)",
      "name": "isActive",
      "description": "Returns whether provided token is active or not.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "Address of the token to be checked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lock(address,uint256,uint256,address,uint256,uint256,uint256)",
      "name": "lock",
      "description": "Allows user to lock asset. In case of ERC-20 token the user will first have to approve the contract to spend on his/her behalf.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "Address of the token to be locked.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of tokens to lock.",
          "recommendedTypes": []
        },
        {
          "name": "endDate",
          "description": "Duration for which tokens to be locked. In seconds. the expiry date.",
          "recommendedTypes": []
        },
        {
          "name": "beneficiary",
          "description": "Address of the beneficiary.",
          "recommendedTypes": []
        },
        {
          "name": "amountThreshold",
          "description": "Threshold amount which is when locked in a single lock will make that lock claimable.",
          "recommendedTypes": []
        },
        {
          "name": "claimMode",
          "description": "the user choosen release mode (weekly = 2, monthly = 1, none = 0).",
          "recommendedTypes": []
        },
        {
          "name": "claimPercentage",
          "description": "the percentage of the amount to release tokens in.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "Called by an admin to pause, triggers stopped state.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAirdrop(address,address,uint256,uint256,uint256)",
      "name": "setAirdrop",
      "description": "Allows admin to set airdrop token for a given base token.",
      "parameterDecorators": [
        {
          "name": "baseToken",
          "description": "Address of the base token.",
          "recommendedTypes": []
        },
        {
          "name": "destToken",
          "description": "Address of the airdropped token.",
          "recommendedTypes": []
        },
        {
          "name": "numerator",
          "description": "Numerator to calculate ratio.",
          "recommendedTypes": []
        },
        {
          "name": "denominator",
          "description": "Denominator to calculate ratio.",
          "recommendedTypes": []
        },
        {
          "name": "date",
          "description": "Date at which airdrop happened or will happen.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWallet(address)",
      "name": "setWallet",
      "description": "Allows admin to set fee receiver wallet.",
      "parameterDecorators": [
        {
          "name": "wallet",
          "description": "New wallet address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "Called by an admin to unpause, returns to normal state.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateAirdrop(address,uint256,uint256,uint256,uint256)",
      "name": "updateAirdrop",
      "description": "Allows admin to update airdrop at given index.",
      "parameterDecorators": [
        {
          "name": "baseToken",
          "description": "Base token address for which airdrop has to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "numerator",
          "description": "New numerator.",
          "recommendedTypes": []
        },
        {
          "name": "denominator",
          "description": "New denominator.",
          "recommendedTypes": []
        },
        {
          "name": "date",
          "description": "New airdrop date.",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "Index at which this airdrop resides for the basetoken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateBsovTokenFee(uint256)",
      "name": "updateBsovTokenFee",
      "description": "Update fee in bsov token.",
      "parameterDecorators": [
        {
          "name": "bsovTokenFee",
          "description": "Fee per lock in lock token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateLockToken(address)",
      "name": "updateLockToken",
      "description": "Update bsov token address.",
      "parameterDecorators": [
        {
          "name": "bsovTokenAddress",
          "description": "New bsov token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateNonBsovTokenFee(uint256)",
      "name": "updateNonBsovTokenFee",
      "description": "Update fee in bsov token.",
      "parameterDecorators": [
        {
          "name": "nonBsovTokenFee",
          "description": "Fee per lock in bsov token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateToken(address,uint256,bool)",
      "name": "updateToken",
      "description": "Allows admin to update token info.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "Address of the token to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "minAmount",
          "description": "Min amount of tokens required to lock.",
          "recommendedTypes": []
        },
        {
          "name": "emergencyUnlock",
          "description": "If token is in emergency unlock state.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateTokenDecimals(address,uint256)",
      "name": "updateTokenDecimals",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "decimals",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateTokenIcon(address,string)",
      "name": "updateTokenIcon",
      "description": "Allows admin to update token Icon.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "Address of the token to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "thumbnailUrl",
          "description": "New thumnail image url.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}