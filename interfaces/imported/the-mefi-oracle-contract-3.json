{"schema":"../schema.json","tags":["oracles"],"name":"MeFiOracle","description":"The MeFi Oracle contract. Node operators can deploy this contract to fulfill requests sent to them.","eventDecorators":[{"signature":"CancelOracleRequest(bytes32)","name":"CancelOracleRequest","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"requestId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ChainlinkCancelled(bytes32)","name":"ChainlinkCancelled","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ChainlinkFulfilled(bytes32)","name":"ChainlinkFulfilled","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ChainlinkRequested(bytes32)","name":"ChainlinkRequested","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OracleRequest(bytes32,address,bytes32,uint256,address,bytes4,uint256,uint256,bytes)","name":"OracleRequest","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"specId","description":"","recommendedTypes":[],"indexed":true},{"name":"requester","description":"","recommendedTypes":[],"indexed":false},{"name":"requestId","description":"","recommendedTypes":[],"indexed":false},{"name":"payment","description":"","recommendedTypes":[],"indexed":false},{"name":"callbackAddr","description":"","recommendedTypes":[],"indexed":false},{"name":"callbackFunctionId","description":"","recommendedTypes":[],"indexed":false},{"name":"cancelExpiration","description":"","recommendedTypes":[],"indexed":false},{"name":"dataVersion","description":"","recommendedTypes":[],"indexed":false},{"name":"data","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"EXPIRY_TIME()","name":"EXPIRY_TIME","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"cancelOracleRequest(bytes32,uint256,bytes4,uint256)","name":"cancelOracleRequest","description":"Allows requesters to cancel requests sent to this oracle contract. Will transfer the LINK sent for the request back to the requester's address. Given params must hash to a commitment stored on the contract in order for the request to be valid Emits CancelOracleRequest event.","parameterDecorators":[{"name":"_requestId","description":"The request ID.","recommendedTypes":[]},{"name":"_payment","description":"The amount of payment given (specified in wei).","recommendedTypes":[]},{"name":"_callbackFunc","description":"The requester's specified callback address.","recommendedTypes":[]},{"name":"_expiration","description":"The time of the expiration for the request.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"consumerAddr()","name":"consumerAddr","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"exportedData()","name":"exportedData","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"forwardRequest(bytes32,string,uint256)","name":"forwardRequest","description":"Initial request.","parameterDecorators":[{"name":"_jobId","description":"","recommendedTypes":[]},{"name":"_symbol","description":"","recommendedTypes":[]},{"name":"_fee","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"fulfillStockPrice(bytes32,bytes32)","name":"fulfillStockPrice","description":"Callback function.","parameterDecorators":[{"name":"_requestId","description":"","recommendedTypes":[]},{"name":"_data","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getMeFiToken()","name":"getMeFiToken","description":"Returns the address of the MDT. This is the public implementation for chainlinkTokenAddress, which is an internal method of the ChainlinkClient contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"onTokenTransfer(address,uint256,bytes)","name":"onTokenTransfer","description":"Called when MDT is sent to the contract via `transferAndCall`. The data payload's first 2 words will be overwritten by the `_sender` and `_amount` values to ensure correctness. Calls oracleRequest.","parameterDecorators":[{"name":"_sender","description":"Address of the sender.","recommendedTypes":[]},{"name":"_amount","description":"Amount of MDT sent (specified in wei).","recommendedTypes":[]},{"name":"_data","description":"Payload of the transaction.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)","name":"oracleRequest","description":"Creates the Chainlink request. Stores the hash of the params as the on-chain commitment for the request. Emits OracleRequest event for the Chainlink node to detect.","parameterDecorators":[{"name":"_sender","description":"The sender of the request.","recommendedTypes":[]},{"name":"_payment","description":"The amount of payment given (specified in wei).","recommendedTypes":[]},{"name":"_specId","description":"The Job Specification ID.","recommendedTypes":[]},{"name":"_callbackAddress","description":"The callback address for the response.","recommendedTypes":[]},{"name":"_callbackFunctionId","description":"The callback function ID for the response.","recommendedTypes":[]},{"name":"_nonce","description":"The nonce sent by the requester.","recommendedTypes":[]},{"name":"_dataVersion","description":"The specified data version.","recommendedTypes":[]},{"name":"_data","description":"The CBOR payload of the request.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdraw(address,uint256)","name":"withdraw","description":"Allows the node operator to withdraw earned LINK to a given address. The owner of the contract can be another wallet and does not have to be a Chainlink node.","parameterDecorators":[{"name":"_recipient","description":"The address to send the LINK token to.","recommendedTypes":[]},{"name":"_amount","description":"The amount to send (specified in wei).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawable()","name":"withdrawable","description":"Displays the amount of LINK that is available for the node operator to withdraw. We use `ONE_FOR_CONSISTENT_GAS_COST` in place of 0 in storage.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The amount of withdrawable LINK on the contract.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}