{
  "schema": "../schema.json",
  "tags": [],
  "name": "SocialNetwork",
  "description": "This contract is a relatively simple implementation that enables the storage of user profile data and connections between users on-chain in encrypted form. While simple, the functionality it enables is powerful as we know get a fully decentralized and publicly accessible graph database. Importantly, users will actually interact with this contract using the off-chain SDK component which will enable the encryption and decryption of profile and connection data giving users control of their network.",
  "eventDecorators": [
    {
      "signature": "ConnectionAdded(address,address)",
      "name": "ConnectionAdded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "connection",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ProfileUpdated(address,string,string)",
      "name": "ProfileUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "bio",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addConnection(string)",
      "name": "addConnection",
      "description": "Add a new connection to the message senders network. It's important to note that the _address parameters should both be encrypted using the message senders public key.",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "connections(address,uint256)",
      "name": "connections",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getConnections(address)",
      "name": "getConnections",
      "description": "Get the encrypted adjacency list of all of a user's connections. This data can be decrypted off chain with the user's private key, enabling the user to control exactly who can view their connections.",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProfile(address)",
      "name": "getProfile",
      "description": "Get the encrypted data for the profile of a user. This data can be decrypted off chain with the user's private key, enabling the user to control exactly who can view their profile.",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "name",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "bio",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "profiles(address)",
      "name": "profiles",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "bio",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeConnection(string)",
      "name": "removeConnection",
      "description": "Remove a connection from the message senders network. It's important to note that the _address parameters should both be encrypted using the message senders public key.",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setProfile(string,string)",
      "name": "setProfile",
      "description": "Updates the profile of the given user with new encrypted data. It's important to note that the _name and _bio parameters should both be encrypted using the message senders public key.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bio",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}