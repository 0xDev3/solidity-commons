{
  "schema": "../schema.json",
  "tags": [],
  "name": "MarketFactory",
  "description": "Factory for Markets*.",
  "eventDecorators": [
    {
      "signature": "CreateMarket(uint256)",
      "name": "CreateMarket",
      "description": "New market created.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "Index of the current market in `markets` list.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "createZeroInterestMarket(address,address,address,address,uint256,uint256,uint256)",
      "name": "createZeroInterestMarket",
      "description": "Create new ZeroInterestMarket owned by this contract's owner.",
      "parameterDecorators": [
        {
          "name": "_treasury",
          "description": "the account that receives fees.",
          "recommendedTypes": []
        },
        {
          "name": "_collateralToken",
          "description": "ERC-20 to be deposited as collateral.",
          "recommendedTypes": []
        },
        {
          "name": "_debtToken",
          "description": "ERC-20 to be withdrawn as debt.",
          "recommendedTypes": []
        },
        {
          "name": "_oracle",
          "description": "Oracle from which to fetch updated collateral/debt token price.",
          "recommendedTypes": []
        },
        {
          "name": "_maxLoanToValue",
          "description": "Maximum ratio of debt to collateral.",
          "recommendedTypes": []
        },
        {
          "name": "_borrowRate",
          "description": "Rate to calculate flat borrow fee.",
          "recommendedTypes": []
        },
        {
          "name": "_liquidationPenalty",
          "description": "Rate to calculate liquidation penalty.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "markets(uint256)",
      "name": "markets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "numMarkets()",
      "name": "numMarkets",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}