{
  "schema": "../schema.json",
  "tags": [],
  "name": "dTradeState",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AssociatedContractUpdated(address)",
      "name": "AssociatedContractUpdated",
      "description": "Emitted when a new Vault is deployed. Fired in updateTokenRegistry().",
      "parameterDecorators": [
        {
          "name": "tokenRegistry",
          "description": "new TokenRegistry contract address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnerChanged(address,address)",
      "name": "OwnerChanged",
      "description": "Emitted when a new Vault is deployed. Fired in updateTokenRegistry().",
      "parameterDecorators": [
        {
          "name": "oldOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnerNominated(address)",
      "name": "OwnerNominated",
      "description": "Emitted when a new Vault is deployed. Fired in updateTokenRegistry().",
      "parameterDecorators": [
        {
          "name": "tokenRegistry",
          "description": "new TokenRegistry contract address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptOwnership()",
      "name": "acceptOwnership",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addIssuedSynthsByERC(address,bytes32,uint256,uint256)",
      "name": "addIssuedSynthsByERC",
      "description": "Updates issued synths data for an address. Only the associated contract may call this.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address to update the data for.",
          "recommendedTypes": []
        },
        {
          "name": "tokenName",
          "description": "The token staked and debt is given to.",
          "recommendedTypes": []
        },
        {
          "name": "newDebtOwnership",
          "description": "The new debt ownership for this address.",
          "recommendedTypes": []
        },
        {
          "name": "tokenStaked",
          "description": "The amount of token staked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "appendDebtLedgerValue(uint256)",
      "name": "appendDebtLedgerValue",
      "description": "Append a value to the debt ledger. Only the associated contract may call this.",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "The new value to be added to the debt ledger.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "associatedContract()",
      "name": "associatedContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "clearIssuanceData(address)",
      "name": "clearIssuanceData",
      "description": "Clear issuance data for an address. Only the associated contract may call this.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address to clear the data for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "debtLedger(uint256)",
      "name": "debtLedger",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "debtLedgerLength()",
      "name": "debtLedgerLength",
      "description": "Retrieve the length of the debt ledger array.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "decrementTotalIssuerCount()",
      "name": "decrementTotalIssuerCount",
      "description": "Decrement the total issuer count. Only the associated contract may call this.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTokenIssuanceState(address,bytes32)",
      "name": "getTokenIssuanceState",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenName",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasIssued(address)",
      "name": "hasIssued",
      "description": "Query whether an account has issued and has an outstanding debt balance.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address to query for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "incrementTotalIssuerCount()",
      "name": "incrementTotalIssuerCount",
      "description": "Increment the total issuer count. Only the associated contract may call this.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "issuanceData(address)",
      "name": "issuanceData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "initialDebtOwnership",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "debtEntryIndex",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "issuedSynthsByERC(address,bytes32)",
      "name": "issuedSynthsByERC",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "issuedSynths",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tokenStaked",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastDebtLedgerEntry()",
      "name": "lastDebtLedgerEntry",
      "description": "Retrieve the most recent entry from the debt ledger.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nominateNewOwner(address)",
      "name": "nominateNewOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "nominatedOwner()",
      "name": "nominatedOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setAssociatedContract(address)",
      "name": "setAssociatedContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_associatedContract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCurrentIssuanceData(address,uint256)",
      "name": "setCurrentIssuanceData",
      "description": "Set issuance data for an address. Only the associated contract may call this.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address to set the data for.",
          "recommendedTypes": []
        },
        {
          "name": "initialDebtOwnership",
          "description": "The initial debt ownership for this address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setupExpiryTime()",
      "name": "setupExpiryTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "subIssuedSynthsByERC(address,bytes32,uint256,uint256)",
      "name": "subIssuedSynthsByERC",
      "description": "Updates issued synths data for an address. Only the associated contract may call this.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address to update the data for.",
          "recommendedTypes": []
        },
        {
          "name": "tokenName",
          "description": "The token staked and debt is given to.",
          "recommendedTypes": []
        },
        {
          "name": "newDebtOwnership",
          "description": "The new debt ownership for this address.",
          "recommendedTypes": []
        },
        {
          "name": "tokenStaked",
          "description": "The amount of token staked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalIssuerCount()",
      "name": "totalIssuerCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}