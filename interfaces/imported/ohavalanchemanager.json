{
  "schema": "../schema.json",
  "tags": [],
  "name": "OhAvalancheManager",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AccrueRevenue(address,address,uint256,uint256,uint256)",
      "name": "AccrueRevenue",
      "description": "Emitted when a Bank realizes profit via liquidation.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "strategy",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "profitAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "buybackAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "managementAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Buyback(address,uint256,uint256)",
      "name": "Buyback",
      "description": "Emitted when a buyback is performed with an amount of from tokens.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "buybackAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Finance(address,address)",
      "name": "Finance",
      "description": "Emitted when a Bank's capital is invested in a single Strategy.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "strategy",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "FinanceAll(address)",
      "name": "FinanceAll",
      "description": "Emitted when a Bank's capital is invested in all Strategies.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Rebalance(address)",
      "name": "Rebalance",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "FEE_DENOMINATOR()",
      "name": "FEE_DENOMINATOR",
      "description": "Denominator for calculating protocol fees.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_BUYBACK_FEE()",
      "name": "MAX_BUYBACK_FEE",
      "description": "Maximum buyback fee, 50%.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_MANAGEMENT_FEE()",
      "name": "MAX_MANAGEMENT_FEE",
      "description": "Maximum management fee, 10%.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MIN_BUYBACK_FEE()",
      "name": "MIN_BUYBACK_FEE",
      "description": "Minimum buyback fee, 10%.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MIN_MANAGEMENT_FEE()",
      "name": "MIN_MANAGEMENT_FEE",
      "description": "Minimum management fee, 0%.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "accrueRevenue(address,address,uint256)",
      "name": "accrueRevenue",
      "description": "Accrue revenue from a Strategy. Only callable by approved Strategies.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "The address of the Bank which uses the Strategy.",
          "recommendedTypes": []
        },
        {
          "name": "underlying",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "The total amount of profit received from liquidation.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "banks(uint256)",
      "name": "banks",
      "description": "Get the Bank.",
      "parameterDecorators": [
        {
          "name": "i",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "burn()",
      "name": "burn",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "burner()",
      "name": "burner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyback(address)",
      "name": "buyback",
      "description": "Perform a token buyback with accrued revenue. Burns all proceeds.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "The address of the token to liquidate for Oh! Tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buybackFee()",
      "name": "buybackFee",
      "description": "The amount of profits reserved for protocol buybacks, base 1000.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "exit(address,address)",
      "name": "exit",
      "description": "Exit a given strategy for a given bank.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "The bank that will be used to exit the strategy.",
          "recommendedTypes": []
        },
        {
          "name": "strategy",
          "description": "The strategy to be exited.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exitAll(address)",
      "name": "exitAll",
      "description": "Exit from all strategies for a given bank.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "The bank that will be used to exit the strategy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "finance(address)",
      "name": "finance",
      "description": "Finance the next Strategy in the Bank queue with all available underlying. Only allow this function to be called on approved Banks.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "The address of the Bank to finance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "financeAll(address)",
      "name": "financeAll",
      "description": "Evenly finance underlying to all strategies. Deposit queue not needed here as all Strategies are equally invested inOnly allow this function to be called on approved Banks.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "The address of the Bank to finance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "governance()",
      "name": "governance",
      "description": "Get the Governance address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The current Governance address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "liquidators(address,address)",
      "name": "liquidators",
      "description": "The mapping of `from` token to `to` token to liquidator contract.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "managementFee()",
      "name": "managementFee",
      "description": "The amount of profits reserved for fund management, base 1000.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "manager()",
      "name": "manager",
      "description": "Get the Manager address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The current Manager address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rebalance(address)",
      "name": "rebalance",
      "description": "Rebalance Bank exposure by withdrawing all, then evenly distributing underlying to all strategies.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "The bank to rebalance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registry()",
      "name": "registry",
      "description": "Get the Registry address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The current Registry address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setBank(address,bool)",
      "name": "setBank",
      "description": "Adds or removes a Bank for investment. Only Governance can call this function.",
      "parameterDecorators": [
        {
          "name": "_bank",
          "description": "the bank to be approved/unapproved.",
          "recommendedTypes": []
        },
        {
          "name": "_approved",
          "description": "the approval status of the bank.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBurner(address)",
      "name": "setBurner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_burner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBuybackFee(uint256)",
      "name": "setBuybackFee",
      "description": "Sets the protocol buyback percentage (Profit Share). Only Governance; base 1000, 1% = 10.",
      "parameterDecorators": [
        {
          "name": "_buybackFee",
          "description": "The new buyback fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLiquidator(address,address,address)",
      "name": "setLiquidator",
      "description": "Sets the Liquidator contract for a given token. Only Governance can call this function.",
      "parameterDecorators": [
        {
          "name": "_liquidator",
          "description": "the liquidator contract.",
          "recommendedTypes": []
        },
        {
          "name": "_from",
          "description": "the token we have to liquidate.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "the token we want to receive.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setManagementFee(uint256)",
      "name": "setManagementFee",
      "description": "Sets the protocol management fee percentage. Only Governance; base 1000, 1% = 10.",
      "parameterDecorators": [
        {
          "name": "_managementFee",
          "description": "The new management fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRegistry(address)",
      "name": "setRegistry",
      "description": "Set the Registry for the contract. Only callable by Governance. Requires sender to be Governance of the new Registry to avoid bricking.Ideally should not be used.",
      "parameterDecorators": [
        {
          "name": "registry_",
          "description": "The new registry.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setStrategy(address,address,bool)",
      "name": "setStrategy",
      "description": "Adds or removes a Strategy for a given Bank. Only Governance can call this function.",
      "parameterDecorators": [
        {
          "name": "_bank",
          "description": "the bank which uses the strategy.",
          "recommendedTypes": []
        },
        {
          "name": "_strategy",
          "description": "the strategy to be approved/unapproved.",
          "recommendedTypes": []
        },
        {
          "name": "_approved",
          "description": "the approval status of the Strategy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWhitelisted(address,bool)",
      "name": "setWhitelisted",
      "description": "Whitelists strategy for Bank use/management. Only Governance can call this function.",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "the strategy contract.",
          "recommendedTypes": []
        },
        {
          "name": "_whitelisted",
          "description": "the whitelisted status of the strategy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWithdrawIndex(uint256)",
      "name": "setWithdrawIndex",
      "description": "Set the withdrawal index.",
      "parameterDecorators": [
        {
          "name": "i",
          "description": "The index value.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "strategies(address,uint256)",
      "name": "strategies",
      "description": "Get the Strategy at a given index for a given Bank.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "The address of the Bank that contains the Strategy.",
          "recommendedTypes": []
        },
        {
          "name": "i",
          "description": "The Bank queue index to check.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "The address of the Oh! Finance Token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalBanks()",
      "name": "totalBanks",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalStrategies(address)",
      "name": "totalStrategies",
      "description": "Get total number of strategies for a given bank.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "The Bank we are checking.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of active strategies.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "whitelisted(address)",
      "name": "whitelisted",
      "description": "The mapping of contracts that are whitelisted for Bank use/management.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawIndex(address)",
      "name": "withdrawIndex",
      "description": "Get the index of the Strategy to withdraw from for a given Bank.",
      "parameterDecorators": [
        {
          "name": "bank",
          "description": "The Bank to check the next Strategy for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The index of the Strategy.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}