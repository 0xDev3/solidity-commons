{"schema":"../schema.json","tags":[],"name":"dgdfgdfg","description":"","eventDecorators":[{"signature":"Claim(address,uint256,uint256)","name":"Claim","description":"","parameterDecorators":[{"name":"access","description":"TRUE if the Watcher was given permissions, FALSE if permissions were removed.","recommendedTypes":[],"indexed":true},{"name":"domain","description":"the remote domain of the Home contract for the Replica.","recommendedTypes":[],"indexed":true},{"name":"watcher","description":"the address of the Watcher.","recommendedTypes":[],"indexed":false}]},{"signature":"ClaimInsteadOfUser(address,address,uint256,uint256)","name":"ClaimInsteadOfUser","description":"","parameterDecorators":[{"name":"caller","description":"","recommendedTypes":[],"indexed":true},{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Deposit(address,uint256,uint256)","name":"Deposit","description":"All events that uses in public transactions.","parameterDecorators":[{"name":"access","description":"TRUE if the Watcher was given permissions, FALSE if permissions were removed.","recommendedTypes":[],"indexed":true},{"name":"domain","description":"the remote domain of the Home contract for the Replica.","recommendedTypes":[],"indexed":true},{"name":"watcher","description":"the address of the Watcher.","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyWithdraw(address,uint256,uint256)","name":"EmergencyWithdraw","description":"","parameterDecorators":[{"name":"access","description":"TRUE if the Watcher was given permissions, FALSE if permissions were removed.","recommendedTypes":[],"indexed":true},{"name":"domain","description":"the remote domain of the Home contract for the Replica.","recommendedTypes":[],"indexed":true},{"name":"watcher","description":"the address of the Watcher.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Withdraw(address,uint256,uint256)","name":"Withdraw","description":"","parameterDecorators":[{"name":"access","description":"TRUE if the Watcher was given permissions, FALSE if permissions were removed.","recommendedTypes":[],"indexed":true},{"name":"domain","description":"the remote domain of the Home contract for the Replica.","recommendedTypes":[],"indexed":true},{"name":"watcher","description":"the address of the Watcher.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"Epochs(uint256)","name":"Epochs","description":"HashMap of epoch starting from zero.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"startTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"startBlock","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"endTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"endBlock","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"eth","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"add(address)","name":"add","description":"add new lp-pool to staking (can be called from deployer).","parameterDecorators":[{"name":"_lpToken","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"calcReward(uint256,address)","name":"calcReward","description":"Calculate Possible Reward for all epochs. Used by app and users methods.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[]},{"name":"user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"claim(uint256)","name":"claim","description":"Method that calculate user reward and withdraw it Calculate reward by missed epochs and withdraw eth.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimDevCommission()","name":"claimDevCommission","description":"Withdraw eth (devs commissions received in claimInsteadOfUser).","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimInsteadOfUser(uint256,address,uint256,uint256)","name":"claimInsteadOfUser","description":"Can claim eth instead of user. This function will be used when person a lot of epochs as a result his commission is to high. This method send reward of user with but with minus commission that deployers pays instead of him. This method can helps to save a lot of eth.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[]},{"name":"userAddress","description":"","recommendedTypes":[]},{"name":"commission","description":"","recommendedTypes":[]},{"name":"reward","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"currentEpoch()","name":"currentEpoch","description":"Number of currentEpoch.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit(uint256,uint256)","name":"deposit","description":"Method that used by user to deposit tokens. Check for reward if user deposited before than calculate and send them reward than transfer lp-tokens to contract and start staking.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"devCommission()","name":"devCommission","description":"Developer commission in case of using claim instead of user.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"emergencyWithdraw(uint256)","name":"emergencyWithdraw","description":"Emergency withdraw use only in case of emergency. Nullify all rewards and withdraw lp-tokens.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"endEpoch(uint256)","name":"endEpoch","description":"Close current epoch and start new Epoch.","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"poolLength()","name":"poolLength","description":"Return length of pools list.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pools(uint256)","name":"pools","description":"List of supported lp pools for staking.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"totalSupplyLp","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lpToken","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userInfo(uint256,address)","name":"userInfo","description":"HashMap of users that take part in staking.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"totalDeposited","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastEpoch","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256,uint256)","name":"withdraw","description":"Method that used by user to withdraw tokens. Check for reward if user deposited before than calculate and send them reward than transfer lp-tokens to user.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawEther(uint256)","name":"withdrawEther","description":"Emergency only. Withdraw eth from contract when something went wrong or for migration to new contract.","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"zeroAddress()","name":"zeroAddress","description":"Public constants helpers.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}