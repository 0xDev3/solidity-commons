{
  "schema": "../schema.json",
  "tags": [],
  "name": "TellorProxy",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "addTip(uint256,uint256)",
      "name": "addTip",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tip",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositStake()",
      "name": "depositStake",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getSlotProgress()",
      "name": "getSlotProgress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "payment(address,uint256)",
      "name": "payment",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "requestStakingWithdraw()",
      "name": "requestStakingWithdraw",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "submitMiningSolution(string,uint256[5],uint256[5],uint256)",
      "name": "submitMiningSolution",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_nonce",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_requestId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_pass",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vote(uint256,bool)",
      "name": "vote",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_disputeId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_supportsDispute",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawStake()",
      "name": "withdrawStake",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}