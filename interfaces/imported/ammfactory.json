{
  "schema": "../schema.json",
  "tags": [],
  "name": "AmmFactory",
  "description": "AmmFactory. Factory contract responsible for AMM creation.",
  "eventDecorators": [
    {
      "signature": "AmmCreated(address)",
      "name": "AmmCreated",
      "description": "Emitted when a new AMM is created and initialized.",
      "parameterDecorators": [
        {
          "name": "amm",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AmmImplementationUpdated(address)",
      "name": "AmmImplementationUpdated",
      "description": "Emitted when the owner updates the amm implementation address.",
      "parameterDecorators": [
        {
          "name": "newAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CodeAddressUpdated(address)",
      "name": "CodeAddressUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TokenImplementationUpdated(address)",
      "name": "TokenImplementationUpdated",
      "description": "Emitted when the owner updates the token implementation address.",
      "parameterDecorators": [
        {
          "name": "newAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ammImplementation()",
      "name": "ammImplementation",
      "description": "Implementation address for the AMM contract - can be upgraded by owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "amms(bytes32)",
      "name": "amms",
      "description": "Mapping of keccak256(abi.encode(address(_underlyingToken), address(_priceToken), address(collateralToken))) bytes32 keys to AMM (Automated Market Maker) addresses.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createAmm(address,address,address,address,address,uint16)",
      "name": "createAmm",
      "description": "Deploy and initializes an AMM.",
      "parameterDecorators": [
        {
          "name": "_everestPriceOracle",
          "description": "the PriceOracle contract to use for fetching series and settlement prices.",
          "recommendedTypes": []
        },
        {
          "name": "_ammDataProvider",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_underlyingToken",
          "description": "The token whose price movements determine the AMM's Series' moneyness.",
          "recommendedTypes": []
        },
        {
          "name": "_priceToken",
          "description": "The token whose units are used for all prices.",
          "recommendedTypes": []
        },
        {
          "name": "_collateralToken",
          "description": "The token used for this AMM's Series' collateral.",
          "recommendedTypes": []
        },
        {
          "name": "_tradeFeeBasisPoints",
          "description": "The fees to charge on option token trades.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getLogicAddress()",
      "name": "getLogicAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "logicAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,address)",
      "name": "initialize",
      "description": "Setup the state variables for an AmmFactory.",
      "parameterDecorators": [
        {
          "name": "_ammImplementation",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenImplementation",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_seriesController",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proxiableUUID()",
      "name": "proxiableUUID",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "seriesController()",
      "name": "seriesController",
      "description": "Address of the SeriesController associated with this AmmFactory.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenImplementation()",
      "name": "tokenImplementation",
      "description": "Implementation address for token contracts - can be upgraded by owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateAmmImplementation(address)",
      "name": "updateAmmImplementation",
      "description": "The owner can update the AMM implementation address that will be used for future AMMs.",
      "parameterDecorators": [
        {
          "name": "newAmmImplementation",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateImplementation(address)",
      "name": "updateImplementation",
      "description": "update the logic contract for this proxy contract. only the admin address may call this function.",
      "parameterDecorators": [
        {
          "name": "_newImplementation",
          "description": "the address of the new AmmFactory implementation.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateTokenImplementation(address)",
      "name": "updateTokenImplementation",
      "description": "The owner can update the token implementation address that will be used for future AMMs.",
      "parameterDecorators": [
        {
          "name": "newTokenImplementation",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}