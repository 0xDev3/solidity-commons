{
  "schema": "../schema.json",
  "tags": [],
  "name": "TxPermission",
  "description": "The protection logic is declared in the `allowedTxTypes` function.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "certifierContract()",
      "name": "certifierContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "BLOCK_GAS_LIMIT_REDUCED()",
      "name": "BLOCK_GAS_LIMIT_REDUCED",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "allowedSenders()",
      "name": "allowedSenders",
      "description": "(see https://openethereum.github.io/wiki/Permissioning.html#how-it-works-1).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isInitialized()",
      "name": "isInitialized",
      "description": "Returns a boolean flag indicating if the `initialize` function has been called.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "contractNameHash()",
      "name": "contractNameHash",
      "description": "Returns the contract name hash needed for node's engine.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAllowedSender(address)",
      "name": "removeAllowedSender",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "The removed address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "contractName()",
      "name": "contractName",
      "description": "Returns the contract's name recognizable by node's engine.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "blockGasLimit()",
      "name": "blockGasLimit",
      "description": "staking epoch: the block gas limit is temporarily reduced for the latest block of the epoch.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address[],address,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_allowed",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_certifier",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_validatorSet",
          "description": "The address of the `ValidatorSetAuRa` contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "contractVersion()",
      "name": "contractVersion",
      "description": "Returns the contract's version number needed for node's engine.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "allowedTxTypes(address,address,uint256,uint256,bytes)",
      "name": "allowedTxTypes",
      "description": "`_sender` without calling this contract again.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_gasPrice",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "typesMask",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "cache",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addAllowedSender(address)",
      "name": "addAllowedSender",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "The address for which transactions of any type must be allowed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "BLOCK_GAS_LIMIT()",
      "name": "BLOCK_GAS_LIMIT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "validatorSetContract()",
      "name": "validatorSetContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSenderAllowed(address)",
      "name": "isSenderAllowed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}