{
  "schema": "../schema.json",
  "tags": [],
  "name": "InstaPool",
  "description": "",
  "eventDecorators": [
    {
      "signature": "LogDeposit(address,address,uint256,uint256)",
      "name": "LogDeposit",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogEnterMarket(address[],address[])",
      "name": "LogEnterMarket",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ctoken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogExitMarket(address,address)",
      "name": "LogExitMarket",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "ctoken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "LogPoolBorrow(address,address[],uint256[])",
      "name": "LogPoolBorrow",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tknAddr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogPoolPayback(address,address[])",
      "name": "LogPoolPayback",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tknAddr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogWithdraw(address,address,uint256,uint256)",
      "name": "LogWithdraw",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogWithdrawMaster(address,address,uint256)",
      "name": "LogWithdrawMaster",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "accessLiquidity(address[],uint256[])",
      "name": "accessLiquidity",
      "description": "borrow tokens and use them on DSA.",
      "parameterDecorators": [
        {
          "name": "tokens",
          "description": "Array of tokens.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).",
          "recommendedTypes": []
        },
        {
          "name": "amounts",
          "description": "Array of tokens amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "borrowedToken(address)",
      "name": "borrowedToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkOldPool()",
      "name": "checkOldPool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(address,uint256)",
      "name": "deposit",
      "description": "Deposit Liquidity.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "token address.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).",
          "recommendedTypes": []
        },
        {
          "name": "amt",
          "description": "token amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_amt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enterMarket(address[])",
      "name": "enterMarket",
      "description": "Enter compound market to enable borrowing.",
      "parameterDecorators": [
        {
          "name": "cTknAddrs",
          "description": "Array Ctoken addresses.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exitMarket(address)",
      "name": "exitMarket",
      "description": "Exit compound market to disable borrowing.",
      "parameterDecorators": [
        {
          "name": "cTkn",
          "description": "Ctoken address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isOk()",
      "name": "isOk",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "ok",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isTknAllowed(address)",
      "name": "isTknAllowed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "liquidityBalance(address,address)",
      "name": "liquidityBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "returnLiquidity(address[])",
      "name": "returnLiquidity",
      "description": "Payback borrowed tokens.",
      "parameterDecorators": [
        {
          "name": "tokens",
          "description": "Array of tokens.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "spell(address,bytes)",
      "name": "spell",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_target",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "switchOldPoolCheck()",
      "name": "switchOldPoolCheck",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tknToCTkn(address)",
      "name": "tknToCTkn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokensAllowed(uint256)",
      "name": "tokensAllowed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(address,uint256)",
      "name": "withdraw",
      "description": "Withdraw Liquidity.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "token address.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).",
          "recommendedTypes": []
        },
        {
          "name": "amt",
          "description": "token amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_amt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawMaster(address,uint256)",
      "name": "withdrawMaster",
      "description": "Withdraw Liquidity.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "token address.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).",
          "recommendedTypes": []
        },
        {
          "name": "amt",
          "description": "token amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}