{
  "schema": "../schema.json",
  "tags": [
    "staking"
  ],
  "name": "StakeDepositContractProxy",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdminChanged(address,address)",
      "name": "AdminChanged",
      "description": "A processed deposit event.",
      "parameterDecorators": [
        {
          "name": "previousAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Upgraded(address)",
      "name": "Upgraded",
      "description": "A processed deposit event.",
      "parameterDecorators": [
        {
          "name": "implementation",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "admin()",
      "name": "admin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "res",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimTokens(address,address)",
      "name": "claimTokens",
      "description": "Allows to transfer any locked token from this contract. Only owner can call this method.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "address of the token, if it is not provided (0x00..00), native coins will be transferred.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "address that will receive the locked tokens on this contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "implementation()",
      "name": "implementation",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "res",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setAdmin(address)",
      "name": "setAdmin",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_admin",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeTo(address)",
      "name": "upgradeTo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_implementation",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}