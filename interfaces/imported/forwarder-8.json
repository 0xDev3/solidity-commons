{
  "schema": "../schema.json",
  "tags": [],
  "name": "Forwarder",
  "description": "",
  "eventDecorators": [
    {
      "signature": "DomainRegistered(bytes32,bytes)",
      "name": "DomainRegistered",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "domainSeparator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "domainValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RequestTypeRegistered(bytes32,string)",
      "name": "RequestTypeRegistered",
      "description": "The governor sets token whitelist for an ERC1155 token.",
      "parameterDecorators": [
        {
          "name": "typeHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "typeStr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "EIP712_DOMAIN_TYPE()",
      "name": "EIP712_DOMAIN_TYPE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "GENERIC_PARAMS()",
      "name": "GENERIC_PARAMS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_getEncoded(tuple(address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes)",
      "name": "_getEncoded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "req",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "from",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "to",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "value",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "gas",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "nonce",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "data",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "validUntil",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "requestTypeHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "suffixData",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "domains(bytes32)",
      "name": "domains",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "execute(tuple(address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
      "name": "execute",
      "description": "",
      "parameterDecorators": [
        {
          "name": "req",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "from",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "to",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "value",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "gas",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "nonce",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "data",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "validUntil",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "domainSeparator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "requestTypeHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "suffixData",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sig",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "ret",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getNonce(address)",
      "name": "getNonce",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registerDomainSeparator(string,string)",
      "name": "registerDomainSeparator",
      "description": "Register a new domain separator. The domain separator must have the following fields: name,version,chainId, verifyingContract. the chainId is the current network's chainId, and the verifyingContract is this forwarder. This method is given the domain name and version to create and register the domain separator value.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "the domain's display name.",
          "recommendedTypes": []
        },
        {
          "name": "version",
          "description": "the domain/protocol version.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registerRequestType(string,string)",
      "name": "registerRequestType",
      "description": "Register a new Request typehash.",
      "parameterDecorators": [
        {
          "name": "typeName",
          "description": "- the name of the request type.",
          "recommendedTypes": []
        },
        {
          "name": "typeSuffix",
          "description": "- any extra data after the generic params. (must add at least one param. The generic ForwardRequest type is always registered by the constructor).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "typeHashes(bytes32)",
      "name": "typeHashes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "verify(tuple(address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)",
      "name": "verify",
      "description": "",
      "parameterDecorators": [
        {
          "name": "req",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "from",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "to",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "value",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "gas",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "nonce",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "data",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "validUntil",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "domainSeparator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "requestTypeHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "suffixData",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sig",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}