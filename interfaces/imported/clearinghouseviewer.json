{
  "schema": "../schema.json",
  "tags": [],
  "name": "ClearingHouseViewer",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "clearingHouse()",
      "name": "clearingHouse",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMarginRatio(address,address)",
      "name": "getMarginRatio",
      "description": "get personal margin ratio.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        },
        {
          "name": "_trader",
          "description": "trader address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "personal margin ratio in 18 digits.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "int256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPersonalBalanceWithFundingPayment(address,address)",
      "name": "getPersonalBalanceWithFundingPayment",
      "description": "get personal balance with funding payment.",
      "parameterDecorators": [
        {
          "name": "_quoteToken",
          "description": "ERC20 token address.",
          "recommendedTypes": []
        },
        {
          "name": "_trader",
          "description": "trader address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "margin",
          "description": "personal balance with funding payment in 18 digits.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPersonalPositionWithFundingPayment(address,address)",
      "name": "getPersonalPositionWithFundingPayment",
      "description": "get personal position with funding payment.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        },
        {
          "name": "_trader",
          "description": "trader address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "position",
          "description": "ClearingHouse.Position struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "size",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple"
            },
            {
              "name": "margin",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple"
            },
            {
              "name": "openNotional",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple"
            },
            {
              "name": "lastUpdatedCumulativePremiumFraction",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple"
            },
            {
              "name": "liquidityHistoryIndex",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "blockNumber",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUnrealizedPnl(address,address,uint8)",
      "name": "getUnrealizedPnl",
      "description": "get unrealized PnL.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        },
        {
          "name": "_trader",
          "description": "trader address.",
          "recommendedTypes": []
        },
        {
          "name": "_pnlCalcOption",
          "description": "ClearingHouse.PnlCalcOption, can be SPOT_PRICE or TWAP.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "unrealized PnL in 18 digits.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "int256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPositionNeedToBeMigrated(address,address)",
      "name": "isPositionNeedToBeMigrated",
      "description": "verify if trader's position needs to be migrated.",
      "parameterDecorators": [
        {
          "name": "_amm",
          "description": "IAmm address.",
          "recommendedTypes": []
        },
        {
          "name": "_trader",
          "description": "trader address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if trader's position is not at the latest Amm curve, otherwise is false.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}