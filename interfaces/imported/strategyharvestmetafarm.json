{
  "schema": "../schema.json",
  "tags": [
    "vesting",
    "strategies"
  ],
  "name": "StrategyHarvestMetaFarm",
  "description": "",
  "eventDecorators": [
    {
      "signature": "FarmHarvest(uint256,uint256,uint256,uint256,uint256,uint256)",
      "name": "FarmHarvest",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "totalFarmHarvested",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "farmToRewards",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "governancePerformanceFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "strategistPerformanceFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Harvest(uint256,uint256)",
      "name": "Harvest",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "harvested",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetController(address)",
      "name": "SetController",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "controller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetGovernance(address)",
      "name": "SetGovernance",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetPerformanceFeeGovernance(uint256)",
      "name": "SetPerformanceFeeGovernance",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "performanceFeeGovernance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetPerformanceFeeStrategist(uint256)",
      "name": "SetPerformanceFeeStrategist",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "performanceFeeStrategist",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetStrategist(address)",
      "name": "SetStrategist",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "strategist",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetWithdrawalFee(uint256)",
      "name": "SetWithdrawalFee",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "withdrawalFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TempTransfer(address,uint256,uint256)",
      "name": "TempTransfer",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fTokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "want",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Tend(uint256)",
      "name": "Tend",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "farmTended",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdraw(uint256)",
      "name": "Withdraw",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawAll(uint256)",
      "name": "WithdrawAll",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawOther(address,uint256)",
      "name": "WithdrawOther",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawState(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      "name": "WithdrawState",
      "description": "An event thats emitted when a delegate account's vote balance changes. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "toWithdraw",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "wrappedToWithdraw",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "preWant",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "wrappedInFarm",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "wrappedInVault",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "wrappedWithdrawnFromFarm",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "wrappedWithdrawn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "postWant",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "withdrawn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "MAX_BPS()",
      "name": "MAX_BPS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_FEE()",
      "name": "MAX_FEE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "__BaseStrategy_init(address,address,address,address,address)",
      "name": "__BaseStrategy_init",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_governance",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_strategist",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_controller",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_keeper",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_guardian",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "badgerTree()",
      "name": "badgerTree",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOf()",
      "name": "balanceOf",
      "description": "Get the total balance of want realized in the strategy, whether idle or active in Strategy positions.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOfPool()",
      "name": "balanceOfPool",
      "description": "Realizable balance of our shares TODO: If this is wrong, it will overvalue our shares (we will get LESS for each share we redeem) This means the user will lose out.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOfWant()",
      "name": "balanceOfWant",
      "description": "Get the balance of want held idle in the Strategy.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "controller()",
      "name": "controller",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit()",
      "name": "deposit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositHelper()",
      "name": "depositHelper",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "farm()",
      "name": "farm",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "farmPerformanceFeeGovernance()",
      "name": "farmPerformanceFeeGovernance",
      "description": "FARM performance fees take a cut of outgoing farm.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "farmPerformanceFeeStrategist()",
      "name": "farmPerformanceFeeStrategist",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fullTransferTemp()",
      "name": "fullTransferTemp",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getName()",
      "name": "getName",
      "description": "===== View Functions =====.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProtectedTokens()",
      "name": "getProtectedTokens",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governance()",
      "name": "governance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "guardian()",
      "name": "guardian",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "harvest()",
      "name": "harvest",
      "description": "Harvest from strategy mechanics, realizing increase in underlying positionFor this strategy, harvest rewards are sent to rewards tree for distribution rather than converted to underlyingAny APY calculation must consider expected results from harvesting.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "harvestVault()",
      "name": "harvestVault",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,address,address,address,address[5],uint256[3])",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_governance",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_strategist",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_controller",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_keeper",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_guardian",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_wantConfig",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_feeConfig",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isTendable()",
      "name": "isTendable",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "keeper()",
      "name": "keeper",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastHarvested()",
      "name": "lastHarvested",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "metaFarm()",
      "name": "metaFarm",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "===== Permissioned Actions: Authoized Contract Pausers =====.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "performanceFeeGovernance()",
      "name": "performanceFeeGovernance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "performanceFeeStrategist()",
      "name": "performanceFeeStrategist",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setController(address)",
      "name": "setController",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_controller",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFarmPerformanceFeeGovernance(uint256)",
      "name": "setFarmPerformanceFeeGovernance",
      "description": "===== Permissioned Actions: Governance =====.",
      "parameterDecorators": [
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFarmPerformanceFeeStrategist(uint256)",
      "name": "setFarmPerformanceFeeStrategist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGovernance(address)",
      "name": "setGovernance",
      "description": "Change governance addressCan only be changed by governance itself.",
      "parameterDecorators": [
        {
          "name": "_governance",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGuardian(address)",
      "name": "setGuardian",
      "description": "===== Permissioned Actions: Governance =====.",
      "parameterDecorators": [
        {
          "name": "_guardian",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setKeeper(address)",
      "name": "setKeeper",
      "description": "Change keeper addressCan only be changed by governance itself.",
      "parameterDecorators": [
        {
          "name": "_keeper",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPerformanceFeeGovernance(uint256)",
      "name": "setPerformanceFeeGovernance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_performanceFeeGovernance",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPerformanceFeeStrategist(uint256)",
      "name": "setPerformanceFeeStrategist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_performanceFeeStrategist",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setStrategist(address)",
      "name": "setStrategist",
      "description": "Change strategist addressCan only be changed by governance itself.",
      "parameterDecorators": [
        {
          "name": "_strategist",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWithdrawalFee(uint256)",
      "name": "setWithdrawalFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_withdrawalFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWithdrawalMaxDeviationThreshold(uint256)",
      "name": "setWithdrawalMaxDeviationThreshold",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_threshold",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "strategist()",
      "name": "strategist",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tend()",
      "name": "tend",
      "description": "'Recycle' FARM gained from staking into profit sharing pool for increased APYAny excess FARM sitting in the Strategy will be staked as well.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "testTransferTemp()",
      "name": "testTransferTemp",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uniswap()",
      "name": "uniswap",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vaultFarm()",
      "name": "vaultFarm",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "want()",
      "name": "want",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "weth()",
      "name": "weth",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "Controller-only function to Withdraw partial funds, normally used with a vault withdrawal.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawAll()",
      "name": "withdrawAll",
      "description": "Withdraw all funds, normally used when migrating strategies.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawOther(address)",
      "name": "withdrawOther",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawalFee()",
      "name": "withdrawalFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawalMaxDeviationThreshold()",
      "name": "withdrawalMaxDeviationThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}