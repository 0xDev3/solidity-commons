{"schema":"../schema.json","tags":["vaults"],"name":"SVScVault","description":"","eventDecorators":[{"signature":"AdminTokenRecovery(address,uint256)","name":"AdminTokenRecovery","description":"Emitted when the Updater is slashed (should be paired with ImproperUpdater or DoubleUpdate event).","parameterDecorators":[{"name":"reporter","description":"The address of the entity that reported the updater misbehavior.","recommendedTypes":[],"indexed":false},{"name":"updater","description":"The address of the updater.","recommendedTypes":[],"indexed":false}]},{"signature":"Deposit(address,uint256)","name":"Deposit","description":"Emitted when the Updater is slashed (should be paired with ImproperUpdater or DoubleUpdate event).","parameterDecorators":[{"name":"reporter","description":"The address of the entity that reported the updater misbehavior.","recommendedTypes":[],"indexed":true},{"name":"updater","description":"The address of the updater.","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyWithdraw(address,uint256)","name":"EmergencyWithdraw","description":"Emitted when the Updater is slashed (should be paired with ImproperUpdater or DoubleUpdate event).","parameterDecorators":[{"name":"reporter","description":"The address of the entity that reported the updater misbehavior.","recommendedTypes":[],"indexed":true},{"name":"updater","description":"The address of the updater.","recommendedTypes":[],"indexed":false}]},{"signature":"NewPoolLimit(uint256)","name":"NewPoolLimit","description":"Emitted when the Updater is slashed (should be paired with ImproperUpdater or DoubleUpdate event).","parameterDecorators":[{"name":"poolLimitPerUser","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewRewardPerBlock(uint256)","name":"NewRewardPerBlock","description":"Emitted when the Updater is slashed (should be paired with ImproperUpdater or DoubleUpdate event).","parameterDecorators":[{"name":"rewardPerBlock","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewStartAndEndBlocks(uint256,uint256)","name":"NewStartAndEndBlocks","description":"Emitted when the Updater is slashed (should be paired with ImproperUpdater or DoubleUpdate event).","parameterDecorators":[{"name":"reporter","description":"The address of the entity that reported the updater misbehavior.","recommendedTypes":[],"indexed":false},{"name":"updater","description":"The address of the updater.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when the Updater is slashed (should be paired with ImproperUpdater or DoubleUpdate event).","parameterDecorators":[{"name":"reporter","description":"The address of the entity that reported the updater misbehavior.","recommendedTypes":[],"indexed":true},{"name":"updater","description":"The address of the updater.","recommendedTypes":[],"indexed":true}]},{"signature":"RewardsStop(uint256)","name":"RewardsStop","description":"Emitted when the Updater is slashed (should be paired with ImproperUpdater or DoubleUpdate event).","parameterDecorators":[{"name":"blockNumber","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdraw(address,uint256)","name":"Withdraw","description":"Emitted when the Updater is slashed (should be paired with ImproperUpdater or DoubleUpdate event).","parameterDecorators":[{"name":"reporter","description":"The address of the entity that reported the updater misbehavior.","recommendedTypes":[],"indexed":true},{"name":"updater","description":"The address of the updater.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"PRECISION_FACTOR()","name":"PRECISION_FACTOR","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"SMART_CHEF_FACTORY()","name":"SMART_CHEF_FACTORY","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"accTokenPerShare()","name":"accTokenPerShare","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"approveCompound(uint256)","name":"approveCompound","description":"","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bonusEndBlock()","name":"bonusEndBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"cToken()","name":"cToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"compound()","name":"compound","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit(uint256)","name":"deposit","description":"","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyRewardWithdraw(uint256)","name":"emergencyRewardWithdraw","description":"","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyWithdraw()","name":"emergencyWithdraw","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"hasUserLimit()","name":"hasUserLimit","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address,uint256,uint256,uint256,uint256,address,address)","name":"initialize","description":"","parameterDecorators":[{"name":"_stakedToken","description":"","recommendedTypes":[]},{"name":"_rewardToken","description":"","recommendedTypes":[]},{"name":"_compound","description":"","recommendedTypes":[]},{"name":"_rewardPerBlock","description":"","recommendedTypes":[]},{"name":"_startBlock","description":"","recommendedTypes":[]},{"name":"_bonusEndBlock","description":"","recommendedTypes":[]},{"name":"_poolLimitPerUser","description":"","recommendedTypes":[]},{"name":"_treasury","description":"","recommendedTypes":[]},{"name":"_admin","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isInitialized()","name":"isInitialized","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"lastRewardBlock()","name":"lastRewardBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingReward(address)","name":"pendingReward","description":"","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolLimitPerUser()","name":"poolLimitPerUser","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pushReward()","name":"pushReward","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"recoverWrongTokens(address,uint256)","name":"recoverWrongTokens","description":"It allows the admin to recover wrong tokens sent to the contract. This function is only callable by admin.","parameterDecorators":[{"name":"_tokenAddress","description":": the address of the token to withdraw.","recommendedTypes":[]},{"name":"_tokenAmount","description":": the number of tokens to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardPerBlock()","name":"rewardPerBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardToken()","name":"rewardToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"stakedToken()","name":"stakedToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"startBlock()","name":"startBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"stopReward()","name":"stopReward","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalSupply()","name":"totalSupply","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"treasury()","name":"treasury","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"updatePoolLimitPerUser(bool,uint256)","name":"updatePoolLimitPerUser","description":"","parameterDecorators":[{"name":"_hasUserLimit","description":"","recommendedTypes":[]},{"name":"_poolLimitPerUser","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateRewardPerBlock(uint256)","name":"updateRewardPerBlock","description":"","parameterDecorators":[{"name":"_rewardPerBlock","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateStartAndEndBlocks(uint256,uint256)","name":"updateStartAndEndBlocks","description":"It allows the admin to update start and end blocks. This function is only callable by owner.","parameterDecorators":[{"name":"_startBlock","description":": the new start block.","recommendedTypes":[]},{"name":"_bonusEndBlock","description":": the new end block.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateTreasury(address)","name":"updateTreasury","description":"","parameterDecorators":[{"name":"_treasury","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userInfo(address)","name":"userInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewardDebt","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256)","name":"withdraw","description":"","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}