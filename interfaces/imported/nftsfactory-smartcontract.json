{
  "schema": "../schema.json",
  "tags": [
    "nft"
  ],
  "name": "NFTsFactoryV2",
  "description": "NFTsFactory smartcontract. is CloneFactory. Templates are OPEN_NFTS contractsImplementations are ERC721 contracts (including OPEN_NFTS clones)Factory can clone OPEN_NFTs templates to implementationsFactory can also add ERC721 contracts to implementations.",
  "eventDecorators": [
    {
      "signature": "ImplementationNew(address,address,uint256)",
      "name": "ImplementationNew",
      "description": "New Implementation Event.",
      "parameterDecorators": [
        {
          "name": "implementation",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "creator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TemplateSet(string,address)",
      "name": "TemplateSet",
      "description": "Set Template Event.",
      "parameterDecorators": [
        {
          "name": "templateName",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "template",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "balancesOf(address)",
      "name": "balancesOf",
      "description": "balancesOf address for each implementations.",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "address of account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "nftData",
          "description": "Array of nftData balances.",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "clone(string,string,string,bool[])",
      "name": "clone",
      "description": "clone template.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "name of Clone collection.",
          "recommendedTypes": []
        },
        {
          "name": "symbol",
          "description": "symbol of Clone collection.",
          "recommendedTypes": []
        },
        {
          "name": "templateName",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "options",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "clone_",
          "description": "Address of Clone collection.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "implementations(uint256)",
      "name": "implementations",
      "description": "Implementations addresses.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "implementationsAdd(address[])",
      "name": "implementationsAdd",
      "description": "Add Implementations, public onlyOwner.",
      "parameterDecorators": [
        {
          "name": "implementationsToAdd",
          "description": ": new implementations addresses.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "implementationsCount()",
      "name": "implementationsCount",
      "description": "Implementations count.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "count : number of implementations.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "templateSet(string,address)",
      "name": "templateSet",
      "description": "Set Template, overrides generic CloneFactory.",
      "parameterDecorators": [
        {
          "name": "templateName",
          "description": "Name of the template.",
          "recommendedTypes": []
        },
        {
          "name": "template",
          "description": "Address of the template.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "templates(string)",
      "name": "templates",
      "description": "Named Templates.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}