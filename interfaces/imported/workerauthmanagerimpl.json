{
  "schema": "../schema.json",
  "tags": [],
  "name": "WorkerAuthManagerImpl",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Authorization(address,address,address)",
      "name": "Authorization",
      "description": "A DApp has been authorized by a user for a worker.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Deauthorization(address,address,address)",
      "name": "Deauthorization",
      "description": "A DApp has been deauthorized by a user for a worker.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "authorize(address,address)",
      "name": "authorize",
      "description": "Gives worker permission to act on a DApp.",
      "parameterDecorators": [
        {
          "name": "_workerAddress",
          "description": "address of the worker node to given permission.",
          "recommendedTypes": []
        },
        {
          "name": "_dappAddress",
          "description": "address of the dapp that permission will be given to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deauthorize(address,address)",
      "name": "deauthorize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_workerAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_dappAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getOwner(address)",
      "name": "getOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_workerAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAuthorized(address,address)",
      "name": "isAuthorized",
      "description": "Returns is the dapp is authorized to be called by that worker.",
      "parameterDecorators": [
        {
          "name": "_workerAddress",
          "description": "address of the worker.",
          "recommendedTypes": []
        },
        {
          "name": "_dappAddress",
          "description": "address of the DApp.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}