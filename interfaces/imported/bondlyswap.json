{
  "schema": "../schema.json",
  "tags": [
    "swaps"
  ],
  "name": "BondlySwap",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AddedNewToken(address)",
      "name": "AddedNewToken",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "DepositedNFT(uint256,address,uint256,address)",
      "name": "DepositedNFT",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "tokenType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NFTClosed(uint256,address)",
      "name": "NFTClosed",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "listId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "closer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NFTSold(uint256,address)",
      "name": "NFTSold",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "listId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NewNFTListed(uint256,uint256,address,uint256,address)",
      "name": "NewNFTListed",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "listId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "lister",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RefundedNFT(uint256,address,uint256,address)",
      "name": "RefundedNFT",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "tokenType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "_addNewToken(address)",
      "name": "_addNewToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "contractAddr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "_batchAddNewToken(address[])",
      "name": "_batchAddNewToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "contractAddrs",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "_depositNFTs(uint256,address,uint256)",
      "name": "_depositNFTs",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenType",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "contractAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "_sendNFTs(uint8,address,uint256,address)",
      "name": "_sendNFTs",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenType",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "contractAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "_setPenlatyFee(uint256)",
      "name": "_setPenlatyFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "_setPlatformFee(uint256)",
      "name": "_setPlatformFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "blacklist(address)",
      "name": "blacklist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyNFT(uint256)",
      "name": "buyNFT",
      "description": "",
      "parameterDecorators": [
        {
          "name": "listId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "closeList(uint256)",
      "name": "closeList",
      "description": "",
      "parameterDecorators": [
        {
          "name": "listId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createFixedSwap(uint256[],address[],uint256[],uint256,uint256,bool,address[])",
      "name": "createFixedSwap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "arrTokenTypes",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "arrContractAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "arrTokenIds",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "swapType",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "isPrivate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "bidders",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getDesiredTokens(uint256)",
      "name": "getDesiredTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "listId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8[]"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "listIndex()",
      "name": "listIndex",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "refundNFT(uint256)",
      "name": "refundNFT",
      "description": "",
      "parameterDecorators": [
        {
          "name": "listId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportTokens(address)",
      "name": "supportTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "whitelist(address)",
      "name": "whitelist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}