{
  "schema": "../schema.json",
  "tags": [
    "oracles"
  ],
  "name": "OracleManagerFixedEpoch",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "EPOCH_LENGTH()",
      "name": "EPOCH_LENGTH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MINIMUM_EXECUTION_WAIT_THRESHOLD()",
      "name": "MINIMUM_EXECUTION_WAIT_THRESHOLD",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "chainlinkOracle()",
      "name": "chainlinkOracle",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCompleteOracleInfoForSystemStateUpdate(uint32,uint80,uint32)",
      "name": "getCompleteOracleInfoForSystemStateUpdate",
      "description": "Returns complete oracle information for executing historical epoch(s).",
      "parameterDecorators": [
        {
          "name": "_latestExecutedEpochIndex",
          "description": "the most recent epoch index in which a price update has been executed.",
          "recommendedTypes": []
        },
        {
          "name": "_previousExecutionPriceOracleIdentifier",
          "description": "the \"roundId\" used to reference the most recently executed oracle price on chainlink.",
          "recommendedTypes": []
        },
        {
          "name": "_previousEpochEndTimestamp",
          "description": "end timestamp of the previous epoch.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "currentEpochTimestamp",
          "description": "start timestamp of the current epoch.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "numberOfEpochsSinceLastEpoch",
          "description": "number of epochs between current timestamp and lastEpochEndTimestamp.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "previousPrice",
          "description": "price that was used for execution of previous epoch.",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "_missedEpochPriceUpdates",
          "description": "list of epoch execution information.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "oracleUpdateIndex",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint80"
            },
            {
              "name": "oraclePrice",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "int256"
            },
            {
              "name": "timestampPriceUpdated",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "associatedEpochIndex",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "epochHasNoAvailablePrice",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentEpochIndex()",
      "name": "getCurrentEpochIndex",
      "description": "Returns index of the current epoch based on block.timestamp. Called by internal functions to get current epoch index.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "getCurrentEpochIndex the current epoch index.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentEpochStartTimestampAndNumberOfEpochsSinceLastEpoch(uint32)",
      "name": "getCurrentEpochStartTimestampAndNumberOfEpochsSinceLastEpoch",
      "description": "Returns start timestamp of current epoch and number of epochs between current timestamp and lastEpochEndTimestamp.",
      "parameterDecorators": [
        {
          "name": "lastEpochEndTimestamp",
          "description": "end timestamp of the last epoch.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "currentEpochTimestamp",
          "description": "start timestamp of the current epoch.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "numberOfEpochsSinceLastEpoch",
          "description": "number of epochs between current timestamp and lastEpochEndTimestamp.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEpochEndTimestamp()",
      "name": "getEpochEndTimestamp",
      "description": "Returns end timestamp of current epoch.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "getEpochEndTimestamp end timestamp of the current epoch.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEpochStartTimestamp()",
      "name": "getEpochStartTimestamp",
      "description": "Returns start timestamp of current epoch.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "getEpochStartTimestamp start timestamp of the current epoch.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMissedEpochPriceUpdates(uint32,uint80,uint256)",
      "name": "getMissedEpochPriceUpdates",
      "description": "returns an array of info on each epoch price update that was missed. This function gets executed in a system update on the market contract.",
      "parameterDecorators": [
        {
          "name": "_latestExecutedEpochIndex",
          "description": "the most recent epoch index in which a price update has been executed.",
          "recommendedTypes": []
        },
        {
          "name": "_previousOracleUpdateIndex",
          "description": "the \"roundId\" used to reference the most recently executed oracle price on chainlink.",
          "recommendedTypes": []
        },
        {
          "name": "_numberOfUpdatesToTryFetch",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "oracleUpdateIndex",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint80"
            },
            {
              "name": "oraclePrice",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "int256"
            },
            {
              "name": "timestampPriceUpdated",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "associatedEpochIndex",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "epochHasNoAvailablePrice",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOracleInfoForSystemStateUpdate(uint32,uint80,uint32,uint256)",
      "name": "getOracleInfoForSystemStateUpdate",
      "description": "Returns oracle information for executing historical epoch(s).",
      "parameterDecorators": [
        {
          "name": "_latestExecutedEpochIndex",
          "description": "the most recent epoch index in which a price update has been executed.",
          "recommendedTypes": []
        },
        {
          "name": "_previousExecutionPriceOracleIdentifier",
          "description": "the \"roundId\" used to reference the most recently executed oracle price on chainlink.",
          "recommendedTypes": []
        },
        {
          "name": "_previousEpochEndTimestamp",
          "description": "end timestamp of the previous epoch.",
          "recommendedTypes": []
        },
        {
          "name": "_numberOfUpdatesToTryFetch",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "currentEpochTimestamp",
          "description": "start timestamp of the current epoch.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "numberOfEpochsSinceLastEpoch",
          "description": "number of epochs between current timestamp and lastEpochEndTimestamp.",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "previousPrice",
          "description": "price that was used for execution of previous epoch.",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "_missedEpochPriceUpdates",
          "description": "list of epoch execution information.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "oracleUpdateIndex",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint80"
            },
            {
              "name": "oraclePrice",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "int256"
            },
            {
              "name": "timestampPriceUpdated",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "associatedEpochIndex",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            },
            {
              "name": "epochHasNoAvailablePrice",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "inMewt()",
      "name": "inMewt",
      "description": "Checks whether current timestamp is inside MEWT (excluding the boundary).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "inMewt boolean to indicate whether still in MEWT or not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialEpochStartTimestamp()",
      "name": "initialEpochStartTimestamp",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestRoundData()",
      "name": "latestRoundData",
      "description": "Returns the latest round data from chainlink Oracle.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "roundId",
          "description": "ID of latest round.",
          "recommendedTypes": [],
          "solidityType": "uint80"
        },
        {
          "name": "answer",
          "description": "price of latest round.",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "startedAt",
          "description": "start round of latest round.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "updatedAt",
          "description": "update round of latest round.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "answeredInRound",
          "description": "round at which latest round was answered at.",
          "recommendedTypes": [],
          "solidityType": "uint80"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestRoundID()",
      "name": "latestRoundID",
      "description": "Returns the latest round ID from chainlink Oracle.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "latestRoundId",
          "description": "ID of latest round.",
          "recommendedTypes": [],
          "solidityType": "uint80"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "oracleDecimals()",
      "name": "oracleDecimals",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "priceAtIndex(uint80)",
      "name": "priceAtIndex",
      "description": "Returns the price of particular oracle update index.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "specific oracle update index.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "price",
          "description": "price of the specified oracle update index.",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "shouldUpdatePrice(uint32)",
      "name": "shouldUpdatePrice",
      "description": "",
      "parameterDecorators": [
        {
          "name": "epochTimestamp",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updatePriceNoIndex()",
      "name": "updatePriceNoIndex",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "newPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "oracleUpdateTimestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "currentEpochStartTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "newOracleUpdateIndex",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint80"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}