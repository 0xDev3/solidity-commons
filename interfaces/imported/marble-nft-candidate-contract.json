{
  "schema": "../schema.json",
  "tags": [
    "nft"
  ],
  "name": "MarbleNFTCandidate",
  "description": "Marble NFT Candidate Contract.",
  "eventDecorators": [
    {
      "signature": "Withdraw(uint256)",
      "name": "Withdraw",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Pause()",
      "name": "Pause",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": []
    },
    {
      "signature": "Unpause()",
      "name": "Unpause",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": []
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "removeCandidate(string)",
      "name": "removeCandidate",
      "description": "Removes URI from candidate list.",
      "parameterDecorators": [
        {
          "name": "_uri",
          "description": "URI to be removed from candidate list.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "Function to check which interfaces are suported by this contract.",
      "parameterDecorators": [
        {
          "name": "_interfaceID",
          "description": "Id of the interface.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "adminList(uint256)",
      "name": "adminList",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uriHashToCandidates(uint256)",
      "name": "uriHashToCandidates",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "mintingPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "uri",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "created",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAdmin(address)",
      "name": "removeAdmin",
      "description": "Removes special rights for provided address.",
      "parameterDecorators": [
        {
          "name": "adminAddress",
          "description": "- address of current admin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isAdmin(address)",
      "name": "isAdmin",
      "description": "Returns true, if provided address has special privilages, otherwise false.",
      "parameterDecorators": [
        {
          "name": "adminAddress",
          "description": "- address to check.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "isIndeed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUriHash(string)",
      "name": "getUriHash",
      "description": "Transforms URI to hash.",
      "parameterDecorators": [
        {
          "name": "_uri",
          "description": "URI to be transformed to hash.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "hash",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "called by the owner to unpause, returns to normal state.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "minimalMintingPrice()",
      "name": "minimalMintingPrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimOwnership()",
      "name": "claimOwnership",
      "description": "Allows the current pending owner to claim the ownership of the contract. It emits OwnershipTransferred event and resets pending owner to 0.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isCandidate(string)",
      "name": "isCandidate",
      "description": "Returns true if URI is already a candidate. Otherwise false.",
      "parameterDecorators": [
        {
          "name": "_uri",
          "description": "URI to check.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "isIndeed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createCandidate(string)",
      "name": "createCandidate",
      "description": "Creates Marble NFT Candidate. This candidate will go through our processing. If it's suitable, then Marble NFT is created.",
      "parameterDecorators": [
        {
          "name": "_uri",
          "description": "URI of resource you want to transform to Marble NFT.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawBalance()",
      "name": "withdrawBalance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addAdmin(address)",
      "name": "addAdmin",
      "description": "Grants special rights for address holder.",
      "parameterDecorators": [
        {
          "name": "adminAddress",
          "description": "- address of future admin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "called by the owner to pause, triggers stopped state.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uriHashIndex(uint256)",
      "name": "uriHashIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCandidatesCount()",
      "name": "getCandidatesCount",
      "description": "Returns total count of candidates.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "count",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setMinimalPrice(uint256)",
      "name": "setMinimalPrice",
      "description": "Sets minimal price for creating Marble NFT Candidate.",
      "parameterDecorators": [
        {
          "name": "_minimalMintingPrice",
          "description": "Minimal price asked from creator of Marble NFT candidate.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pendingOwner()",
      "name": "pendingOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "adminsMap(address)",
      "name": "adminsMap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCandidate(string)",
      "name": "getCandidate",
      "description": "Returns Candidate model by URI.",
      "parameterDecorators": [
        {
          "name": "_uri",
          "description": "URI representing candidate.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "mintingPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "uri",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "created",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to give new owner ability to claim the ownership of the contract. This differs from the Owner's function in that it allows setting pedingOwner address to 0x0, which effectively cancels an active claim.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "The address which can claim ownership of the contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}