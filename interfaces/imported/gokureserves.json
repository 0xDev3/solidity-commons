{"schema":"../schema.json","tags":[],"name":"GOKUReserves","description":"","eventDecorators":[{"signature":"NewGov(address,address)","name":"NewGov","description":"Event `voter` the address that will cast votes weighted by the number of tokens staked for `voter` `staker` the address staking for `voter` - tokens are transferred from & returned to `staker` `proxy` is the Staking Proxy contract that is approved by `staker` to perform the token transfer `amount` is the value of tokens to be staked*.","parameterDecorators":[{"name":"oldGov","description":"","recommendedTypes":[],"indexed":false},{"name":"newGov","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPendingGov(address,address)","name":"NewPendingGov","description":"Event `voter` the address that will cast votes weighted by the number of tokens staked for `voter` `staker` the address staking for `voter` - tokens are transferred from & returned to `staker` `proxy` is the Staking Proxy contract that is approved by `staker` to perform the token transfer `amount` is the value of tokens to be staked*.","parameterDecorators":[{"name":"oldPendingGov","description":"","recommendedTypes":[],"indexed":false},{"name":"newPendingGov","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewRebaser(address,address)","name":"NewRebaser","description":"Event `voter` the address that will cast votes weighted by the number of tokens staked for `voter` `staker` the address staking for `voter` - tokens are transferred from & returned to `staker` `proxy` is the Staking Proxy contract that is approved by `staker` to perform the token transfer `amount` is the value of tokens to be staked*.","parameterDecorators":[{"name":"oldRebaser","description":"","recommendedTypes":[],"indexed":false},{"name":"newRebaser","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"_acceptGov()","name":"_acceptGov","description":"lets msg.sender accept governance.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setPendingGov(address)","name":"_setPendingGov","description":"sets the pendingGov.","parameterDecorators":[{"name":"pendingGov_","description":"The address of the rebaser contract to use for authentication.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setRebaser(address)","name":"_setRebaser","description":"","parameterDecorators":[{"name":"rebaser_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"gokuAddress()","name":"gokuAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"gov()","name":"gov","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"migrateReserves(address,address[])","name":"migrateReserves","description":"Moves all tokens to a new reserve contract.","parameterDecorators":[{"name":"newReserve","description":"","recommendedTypes":[]},{"name":"tokens","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"pendingGov()","name":"pendingGov","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rebaser()","name":"rebaser","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"reserveToken()","name":"reserveToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"reserves()","name":"reserves","description":"Gets the current amount of reserves token held by this contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}