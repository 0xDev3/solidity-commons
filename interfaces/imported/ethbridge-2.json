{"schema":"../schema.json","tags":["tokens","bridges","swaps","locking","binance"],"name":"ETHBridge","description":"ETH side of Drife Bridge smart contracts setup to move DRF tokens across Ethereum and other EVM compatible chains like Binance Smart Chain. - Min swap value: 10 DRF (configurable) - Max swap value: Balance amount available - Swap fee: 0.1% (configurable) - Finality: (~75 sec.) - ETH: 7 blocks - BSC: 15 blocks - Reference implementation: https://github.com/anyswap/mBTC/blob/master/contracts/ProxySwapAsset.sol.","eventDecorators":[{"signature":"FeeUpdate(uint256,uint256,uint8)","name":"FeeUpdate","description":"An event emitted when staked tokens are withdrawn. Event emitted upon changing fee params in the contract.","parameterDecorators":[{"name":"oldFeeParam","description":"The fee param before tx.","recommendedTypes":[],"indexed":false},{"name":"newFeeParam","description":"The new value of the fee param to be updated.","recommendedTypes":[],"indexed":false},{"name":"feeType","description":"The fee param to be updated.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"An event emitted when staked tokens are withdrawn.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SwappedIn(bytes32,address,uint256,uint256)","name":"SwappedIn","description":"An event emitted when staked tokens are withdrawn. Event emitted upon the swap in call.","parameterDecorators":[{"name":"txHash","description":"Transaction hash on BSC where the swap has beed initiated.","recommendedTypes":[],"indexed":true},{"name":"swapInAddress","description":"The ETH address to which the tokens are swapped.","recommendedTypes":[],"indexed":true},{"name":"amountSent","description":"The amount of tokens to be released on ETH.","recommendedTypes":[],"indexed":false},{"name":"fee","description":"The amount of tokens deducted as fee for carrying out the swap.","recommendedTypes":[],"indexed":false}]},{"signature":"SwappedOut(address,address,uint256)","name":"SwappedOut","description":"An event emitted when staked tokens are withdrawn. Event emitted upon the swap out call.","parameterDecorators":[{"name":"swapOutAddress","description":"The ETH address of the swap out initiator.","recommendedTypes":[],"indexed":true},{"name":"swapInAddress","description":"The BSC address to which the tokens are swapped.","recommendedTypes":[],"indexed":true},{"name":"amount","description":"The amount of tokens getting locked and swapped from ETH.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"SwapIn(bytes32,address,uint256)","name":"SwapIn","description":"Initiate a token transfer from BSC to ETH.","parameterDecorators":[{"name":"txHash","description":"Transaction hash on BSC where the swap has been initiated.","recommendedTypes":[]},{"name":"to","description":"The address on ETH to which the tokens are swapped.","recommendedTypes":[]},{"name":"amount","description":"The amount of tokens swapped.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"SwapOut(uint256,address)","name":"SwapOut","description":"Initiate a token transfer from ETH to BSC.","parameterDecorators":[{"name":"amount","description":"The amount of tokens getting locked and swapped from ETH.","recommendedTypes":[]},{"name":"swapInAddress","description":"The address on BSC to which the tokens are swapped.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"accumulatedFee()","name":"accumulatedFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"feeRate()","name":"feeRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"maxFee()","name":"maxFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"minFee()","name":"minFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"minSwapAmount()","name":"minSwapAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tokenETH()","name":"tokenETH","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateFeeRate(uint256)","name":"updateFeeRate","description":"Update the fee rate on the current chain. Only callable by the owner.","parameterDecorators":[{"name":"newFeeRate","description":"uint - the new fee rate that applies to the current side of the bridge.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateMaxFee(uint256)","name":"updateMaxFee","description":"Update the max fee on the current chain. Only callable by the owner.","parameterDecorators":[{"name":"newMaxFee","description":"uint - the new max fee that applies to the current side bridge.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateMinFee(uint256)","name":"updateMinFee","description":"Update the min fee on the current chain. Only callable by the owner.","parameterDecorators":[{"name":"newMinFee","description":"uint - the new max fee that applies to the current side bridge.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawAccumulatedFee(address)","name":"withdrawAccumulatedFee","description":"Withdraw liquidity from the bridge contract to an address. Only callable by the owner.","parameterDecorators":[{"name":"to","description":"The address to which the tokens are swapped.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawLiquidity(address,uint256)","name":"withdrawLiquidity","description":"Withdraw liquidity from the bridge contract to an address. Only callable by the owner.","parameterDecorators":[{"name":"to","description":"The address to which the tokens are swapped.","recommendedTypes":[]},{"name":"amount","description":"The amount of tokens to be released.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}