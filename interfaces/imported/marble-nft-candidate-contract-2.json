{"schema":"../schema.json","tags":["nft"],"name":"MarbleNFTCandidate","description":"Marble NFT Candidate Contract. Contracts allows public audiance to create Marble NFT candidates. All our candidates for NFT goes through our services to figure out if they are suitable for Marble NFT. once their are picked our other contract will create NFT with same owner as candite and plcae it to minting auction. In minitng auction everyone can buy created NFT until duration ends. If duration is over, and noone has bought NFT, then creator of candidate can take Marble NFT from minting auction to his collection.","eventDecorators":[{"signature":"CandidateCreated(uint256,address,uint256,address,string,uint256)","name":"CandidateCreated","description":"Event emited whenever a new candidate is created.","parameterDecorators":[{"name":"index","description":"Index of the candidate.","recommendedTypes":[],"indexed":false},{"name":"owner","description":"Owner of the new candidate.","recommendedTypes":[],"indexed":false},{"name":"mintingPrice","description":"Price for which the candidate was bought (can be number of tokens or chain's main currency).","recommendedTypes":[],"indexed":false},{"name":"paidInToken","description":"Address of the erc20 token used to buy this candidate or zero address if if was bought using chain's main currency.","recommendedTypes":[],"indexed":false},{"name":"uri","description":"Uri of the candidate.","recommendedTypes":[],"indexed":false},{"name":"createdTimestamp","description":"Timestamp when the candidate was created.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Pause()","name":"Pause","description":"","parameterDecorators":[]},{"signature":"TokensWithdrawal(address,uint256)","name":"TokensWithdrawal","description":"Event emitted when tokens of given amount are withdrawn from the contract (by owner).","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpause()","name":"Unpause","description":"","parameterDecorators":[]},{"signature":"Withdraw(uint256)","name":"Withdraw","description":"Emits when owner take ETH out of contract.","parameterDecorators":[{"name":"balance","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addAdmin(address)","name":"addAdmin","description":"Grants special rights for address holder. Adds the address to the list of admins.","parameterDecorators":[{"name":"adminAddress","description":"Address of future admin.","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"Admin's number.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"adminList(uint256)","name":"adminList","description":"List of admins.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"adminsMap(address)","name":"adminsMap","description":"Maps admin address to the admin's number.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"createCandidate(string)","name":"createCandidate","description":"Creates Marble NFT Candidate. This candidate will go through our processing. If it's suitable, then Marble NFT is created. It is paid in the chain's currency.","parameterDecorators":[{"name":"_uri","description":"URI of resource you want to transform to Marble NFT.","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"Index of the newly created candidate.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"createCandidateForUser(string,address)","name":"createCandidateForUser","description":"Creates Marble NFT Candidate for given user (cahrging the sender). This candidate will go through our processing. If it's suitable, then Marble NFT is created. It is paid in the chain's currency.","parameterDecorators":[{"name":"_uri","description":"URI of resource you want to transform to Marble NFT.","recommendedTypes":[]},{"name":"_owner","description":"Address of the user who will own the candidate.","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"Index of the newly created candidate.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"createCandidateWithERC20(string,address)","name":"createCandidateWithERC20","description":"Creates Marble NFT Candidate. This candidate will go through our processing. If it's suitable, then Marble NFT is created. It is paid by the given erc20 token.","parameterDecorators":[{"name":"_uri","description":"URI of resource you want to transform to Marble NFT.","recommendedTypes":[]},{"name":"_erc20","description":"Token in which the creation will be paid.","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"Index of the newly created candidate.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"createCandidateWithERC20ForUser(string,address,address)","name":"createCandidateWithERC20ForUser","description":"Creates Marble NFT Candidate for given user (cahrging the user). This candidate will go through our processing. If it's suitable, then Marble NFT is created. It is paid by the given erc20 token.","parameterDecorators":[{"name":"_uri","description":"URI of resource you want to transform to Marble NFT.","recommendedTypes":[]},{"name":"_erc20","description":"Token in which the creation will be paid.","recommendedTypes":[]},{"name":"_owner","description":"Address of the user who will own the candidate.","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"Index of the newly created candidate.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"erc20Bank()","name":"erc20Bank","description":"Address of the bank contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getCandidate(string)","name":"getCandidate","description":"Returns Candidate model by URI.","parameterDecorators":[{"name":"_uri","description":"URI representing candidate.","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"Index of the candidate.","recommendedTypes":[],"solidityType":"uint256"},{"name":"owner","description":"Onwer of the candidate.","recommendedTypes":[],"solidityType":"address"},{"name":"mintingPrice","description":"Price used to buy the candidate (either number of tokens or chain's currency).","recommendedTypes":[],"solidityType":"uint256"},{"name":"uri","description":"Candidate's URI.","recommendedTypes":[],"solidityType":"string"},{"name":"created","description":"Date of the candidate creation.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCandidatesCount()","name":"getCandidatesCount","description":"Returns total count of candidates.","parameterDecorators":[],"returnDecorators":[{"name":"count","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUriHash(string)","name":"getUriHash","description":"Transforms URI to hash.","parameterDecorators":[{"name":"_uri","description":"URI to be transformed to hash.","recommendedTypes":[]}],"returnDecorators":[{"name":"hash","description":"The hash.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"isAdmin(address)","name":"isAdmin","description":"Checks whether the given address is admin.","parameterDecorators":[{"name":"adminAddress","description":"Address to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"isIndeed","description":"True, if provided address has special privilages, otherwise false.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isCandidate(string)","name":"isCandidate","description":"Checks, whether a candidate with the given uri exists already.","parameterDecorators":[{"name":"_uri","description":"URI to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"isIndeed","description":"True if URI is already a candidate, false otherwise.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"marbleMetatransactionsContract()","name":"marbleMetatransactionsContract","description":"Marble metatransactions contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"minimalMintingPrice()","name":"minimalMintingPrice","description":"Minimal price for creating candidate.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"minimalMintingPriceInToken(address)","name":"minimalMintingPriceInToken","description":"Minimal prices for creating candidate in erc20 token.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"Called by the owner to pause, triggers stopped state.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Specifies whether the contract is paused at the moment.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"removeAdmin(address)","name":"removeAdmin","description":"Removes special rights for provided address. Removes the address from the list of admins.","parameterDecorators":[{"name":"adminAddress","description":"Address of current admin.","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"Number of the removed admin.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"removeCandidate(string)","name":"removeCandidate","description":"Removes URI from candidate list. Can be execute only by admin.","parameterDecorators":[{"name":"_uri","description":"URI to be removed from candidate list.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBankContract(address)","name":"setBankContract","description":"Sets the bank contract used to execute payments with erc20 tokens.","parameterDecorators":[{"name":"bank","description":"The contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMetatransactionsContract(address)","name":"setMetatransactionsContract","description":"Sets the metatransactions contract. Can be called only by admin.","parameterDecorators":[{"name":"_marbleMetatransactionsContract","description":"the contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMinimalMintingPriceInToken(address,uint256)","name":"setMinimalMintingPriceInToken","description":"Sets minimal price in given token for minting. Set 0 to disallow paying with this token.","parameterDecorators":[{"name":"token","description":"Address of the token.","recommendedTypes":[]},{"name":"price","description":"Price of the minting in the given token.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMinimalPrice(uint256)","name":"setMinimalPrice","description":"Sets minimal price for creating Marble NFT Candidate.","parameterDecorators":[{"name":"_minimalMintingPrice","description":"Minimal price asked from creator of Marble NFT candidate.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpause()","name":"unpause","description":"Called by the owner to unpause, returns to normal state.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"uriHashIndex(uint256)","name":"uriHashIndex","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"uriHashToCandidates(uint256)","name":"uriHashToCandidates","description":"Index of candidate in candidates is unique candidate id.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"owner","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"mintingPrice","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"paidInToken","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"uri","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"created","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawBalance()","name":"withdrawBalance","description":"Remove all Ether from the contract, and transfer it to account of owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawTokens(address)","name":"withdrawTokens","description":"Withdraws all tokens of the given type. Transfer all tokens of the given type to the owner of this contract.","parameterDecorators":[{"name":"token","description":"Address of the token.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}