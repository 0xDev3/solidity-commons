{"schema":"../schema.json","tags":["strategies"],"name":"Strategy","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"addProtocol(address)","name":"addProtocol","description":"","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"convertRewards()","name":"convertRewards","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"exit()","name":"exit","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getCronAddress()","name":"getCronAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getPoolAddress()","name":"getPoolAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getPoolTokenAmount()","name":"getPoolTokenAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getProtocolsList()","name":"getProtocolsList","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getToken()","name":"getToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"harvest()","name":"harvest","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"invest()","name":"invest","description":"The Invest function of the strategy Will always start with BUSD in strategy.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeAllProtocols()","name":"removeAllProtocols","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeProtocol(uint256)","name":"removeProtocol","description":"","parameterDecorators":[{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCronAddress(address)","name":"setCronAddress","description":"Set cron address to which strategy is going to be linked.","parameterDecorators":[{"name":"_cronAddress","description":"cron Address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPoolAddress(address)","name":"setPoolAddress","description":"Set Pool address to which strategy is going to be linked.","parameterDecorators":[{"name":"_newPool","description":"Pool Address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"switchProtocol(uint256,address)","name":"switchProtocol","description":"","parameterDecorators":[{"name":"index","description":"","recommendedTypes":[]},{"name":"_address","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalRewards()","name":"totalRewards","description":"return total rewards from Protocols.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalValue()","name":"totalValue","description":"return total value of invested amount in BUSD.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferAllLpTokens(address,uint256)","name":"transferAllLpTokens","description":"","parameterDecorators":[{"name":"add","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferAnyWhere(address,address)","name":"transferAnyWhere","description":"","parameterDecorators":[{"name":"_tokenAddress","description":"","recommendedTypes":[]},{"name":"_recepient","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferLpTokens(uint256,address,uint256)","name":"transferLpTokens","description":"","parameterDecorators":[{"name":"index","description":"","recommendedTypes":[]},{"name":"add","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferPool(address)","name":"transferPool","description":"These function will transfer all token back to Pool contract.","parameterDecorators":[{"name":"_tokenAddress","description":"BEP-20 token address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdraw(uint256)","name":"withdraw","description":"The Withdraw function of the strategy.","parameterDecorators":[{"name":"share","description":"The amount to withdraw Always ends with returning BUSD to pool.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawPrediction(uint256)","name":"withdrawPrediction","description":"The Withdraw function of the strategy.","parameterDecorators":[{"name":"share","description":"The amount to withdraw Always ends with returning BUSD to pool.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}