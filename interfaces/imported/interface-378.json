{"schema":"../schema.json","tags":["tokens"],"name":"EToken2","description":"EToken2. * The official Ambisafe assets platform powering all kinds of tokens. EToken2 uses EventsHistory contract to keep events, so that in case it needs to be redeployed at some point, all the events keep appearing at the same place. * Every asset is meant to be used through a proxy contract. Only one proxy contract have access rights for a particular asset. * Features: assets issuance, transfers, allowances, supply adjustments, lost wallet access recovery. cosignature check, ICAP. * Note: all the non constant functions return false instead of throwing in case if state change didn't happen yet.","eventDecorators":[],"functionDecorators":[{"signature":"owner(bytes32)","name":"owner","description":"Returns asset owner address.","parameterDecorators":[{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"setupEventsHistory(address)","name":"setupEventsHistory","description":"Sets EventsHstory contract address. * Can be set only once, and only by contract owner.","parameterDecorators":[{"name":"_eventsHistory","description":"EventsHistory contract address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"isEnabled(bytes32)","name":"isEnabled","description":"","parameterDecorators":[{"name":"_switch","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"issueAsset(bytes32,uint256,string,string,uint8,bool)","name":"issueAsset","description":"Issues new asset token on the platform. * Tokens issued with this call go straight to contract owner. Each symbol can be issued only once, and only by contract owner. * _isReissuable is included in checkEnabledSwitch because it should be explicitly allowed before issuing new asset.","parameterDecorators":[{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]},{"name":"_value","description":"amount of tokens to issue immediately.","recommendedTypes":[]},{"name":"_name","description":"name of the asset.","recommendedTypes":[]},{"name":"_description","description":"description for the asset.","recommendedTypes":[]},{"name":"_baseUnit","description":"number of decimals.","recommendedTypes":[]},{"name":"_isReissuable","description":"dynamic or fixed supply.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"getHolderId(address)","name":"getHolderId","description":"Returns holder id for the specified address.","parameterDecorators":[{"name":"_holder","description":"holder address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"changeAsset(bytes32,string,string,uint8)","name":"changeAsset","description":"","parameterDecorators":[{"name":"_symbol","description":"","recommendedTypes":[]},{"name":"_name","description":"","recommendedTypes":[]},{"name":"_description","description":"","recommendedTypes":[]},{"name":"_baseUnit","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"proxyApprove(address,uint256,bytes32,address)","name":"proxyApprove","description":"Sets asset spending allowance for a specified spender. * Can only be called by asset proxy.","parameterDecorators":[{"name":"_spender","description":"holder address to set allowance to.","recommendedTypes":[]},{"name":"_value","description":"amount to allow.","recommendedTypes":[]},{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]},{"name":"_sender","description":"approve initiator address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"proxyTransferFromWithReference(address,address,uint256,bytes32,string,address)","name":"proxyTransferFromWithReference","description":"Prforms allowance transfer of asset balance between holders wallets. * Can only be called by asset proxy.","parameterDecorators":[{"name":"_from","description":"holder address to take from.","recommendedTypes":[]},{"name":"_to","description":"holder address to give to.","recommendedTypes":[]},{"name":"_value","description":"amount to transfer.","recommendedTypes":[]},{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]},{"name":"_reference","description":"transfer comment to be included in a Transfer event.","recommendedTypes":[]},{"name":"_sender","description":"allowance transfer initiator address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"allowance(address,address,bytes32)","name":"allowance","description":"Returns asset allowance from one holder to another.","parameterDecorators":[{"name":"_from","description":"holder that allowed spending.","recommendedTypes":[]},{"name":"_spender","description":"holder that is allowed to spend.","recommendedTypes":[]},{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"holders(uint256)","name":"holders","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"addr","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"cosigner","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"isCreated(bytes32)","name":"isCreated","description":"Check asset existance.","parameterDecorators":[{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"isLocked(bytes32)","name":"isLocked","description":"","parameterDecorators":[{"name":"_symbol","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"trust(address)","name":"trust","description":"Trust an address to perform recovery procedure for the caller.","parameterDecorators":[{"name":"_to","description":"trustee.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"enableSwitch(bytes32)","name":"enableSwitch","description":"","parameterDecorators":[{"name":"_switch","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"balanceOf(address,bytes32)","name":"balanceOf","description":"Returns asset balance for current address of a particular holder.","parameterDecorators":[{"name":"_holder","description":"holder address.","recommendedTypes":[]},{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"setProxy(address,bytes32)","name":"setProxy","description":"Sets Proxy contract address for a particular asset. * Can be set only once for each asset, and only by contract owner.","parameterDecorators":[{"name":"_address","description":"Proxy contract address.","recommendedTypes":[]},{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"recover(address,address)","name":"recover","description":"Perform recovery procedure. * This function logic is actually more of an grantAccess(uint _holderId, address _to). It grants another address access to recovery subject wallets. Can only be called by trustee of recovery subject. If cosigning is enabled, should have atleast 2 confirmations. Deprecated. Backward compatibility.","parameterDecorators":[{"name":"_from","description":"holder address to recover from.","recommendedTypes":[]},{"name":"_to","description":"address to grant access to.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"isTrusted(address,address)","name":"isTrusted","description":"Check if specified holder trusts an address with recovery procedure.","parameterDecorators":[{"name":"_from","description":"truster.","recommendedTypes":[]},{"name":"_to","description":"trustee.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"name(bytes32)","name":"name","description":"Returns asset name.","parameterDecorators":[{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":false},{"signature":"proxies(bytes32)","name":"proxies","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"holdersCount()","name":"holdersCount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"setupRegistryICAP(address)","name":"setupRegistryICAP","description":"Sets RegistryICAP contract address. * Can be set only once, and only by contract owner.","parameterDecorators":[{"name":"_registryICAP","description":"RegistryICAP contract address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setupAmbi2(address)","name":"setupAmbi2","description":"","parameterDecorators":[{"name":"_ambi2","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setCosignerAddress(address)","name":"setCosignerAddress","description":"","parameterDecorators":[{"name":"_cosigner","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"isCosignerSet(uint256)","name":"isCosignerSet","description":"","parameterDecorators":[{"name":"_holderId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"assets(bytes32)","name":"assets","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"owner","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"totalSupply","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"name","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"description","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"isReissuable","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"baseUnit","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"isLocked","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"registryICAP()","name":"registryICAP","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"proxyTransferFromToICAPWithReference(address,bytes32,uint256,string,address)","name":"proxyTransferFromToICAPWithReference","description":"","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[]},{"name":"_icap","description":"","recommendedTypes":[]},{"name":"_value","description":"","recommendedTypes":[]},{"name":"_reference","description":"","recommendedTypes":[]},{"name":"_sender","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"totalSupply(bytes32)","name":"totalSupply","description":"Returns asset total supply.","parameterDecorators":[{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"description(bytes32)","name":"description","description":"Returns asset description.","parameterDecorators":[{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":false},{"signature":"isReissuable(bytes32)","name":"isReissuable","description":"Returns asset reissuability.","parameterDecorators":[{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"grantAccess(address,address)","name":"grantAccess","description":"Perform recovery procedure. * This function logic is actually more of an grantAccess(uint _holderId, address _to). It grants another address access to subject holder wallets. Can only be called if pre-confirmed by atleast 2 cosign oracles.","parameterDecorators":[{"name":"_from","description":"holder address to recover from.","recommendedTypes":[]},{"name":"_to","description":"address to grant access to.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"revokeAsset(bytes32,uint256)","name":"revokeAsset","description":"Destroys specified amount of senders asset tokens.","parameterDecorators":[{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]},{"name":"_value","description":"amount of tokens to destroy.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"lockAsset(bytes32)","name":"lockAsset","description":"","parameterDecorators":[{"name":"_symbol","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"baseUnit(bytes32)","name":"baseUnit","description":"Returns asset decimals.","parameterDecorators":[{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":false},{"signature":"reissueAsset(bytes32,uint256)","name":"reissueAsset","description":"Issues additional asset tokens if the asset have dynamic supply. * Tokens issued with this call go straight to asset owner. Can only be called by asset owner.","parameterDecorators":[{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]},{"name":"_value","description":"amount of additional tokens to issue.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"isOwner(address,bytes32)","name":"isOwner","description":"Check if specified address has asset owner rights.","parameterDecorators":[{"name":"_owner","description":"address to check.","recommendedTypes":[]},{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"eventsHistory()","name":"eventsHistory","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"distrust(address)","name":"distrust","description":"Revoke trust to perform recovery procedure from an address.","parameterDecorators":[{"name":"_to","description":"trustee.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"changeOwnership(bytes32,address)","name":"changeOwnership","description":"Passes asset ownership to specified address. * Only ownership is changed, balances are not touched. Can only be called by asset owner.","parameterDecorators":[{"name":"_symbol","description":"asset symbol.","recommendedTypes":[]},{"name":"_newOwner","description":"address to become a new owner.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false}]}