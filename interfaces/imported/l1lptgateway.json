{"schema":"../schema.json","tags":["tokens","arbitrum"],"name":"L1LPTGateway","description":"L1LPTGateway. the contract can be paused by the admin which will prevent any outbound transfers but pausing the contract does not affect inbound transfers (tokens coming from L2). Manages inbound and outbound transfers of LPT between L1 and Arbitrum Rollup.","eventDecorators":[{"signature":"DepositInitiated(address,address,address,uint256,uint256)","name":"DepositInitiated","description":"","parameterDecorators":[{"name":"_l1Token","description":"","recommendedTypes":[],"indexed":false},{"name":"_from","description":"","recommendedTypes":[],"indexed":true},{"name":"_to","description":"","recommendedTypes":[],"indexed":true},{"name":"_sequenceNumber","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"L2CounterpartUpdate(address)","name":"L2CounterpartUpdate","description":"","parameterDecorators":[{"name":"_l2Counterpart","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MinterUpdate(address)","name":"MinterUpdate","description":"","parameterDecorators":[{"name":"_minter","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Paused(address)","name":"Paused","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TxToL2(address,address,uint256,bytes)","name":"TxToL2","description":"","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"seqNum","description":"","recommendedTypes":[],"indexed":true},{"name":"data","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WithdrawalFinalized(address,address,address,uint256,uint256)","name":"WithdrawalFinalized","description":"","parameterDecorators":[{"name":"_l1Token","description":"","recommendedTypes":[],"indexed":false},{"name":"_from","description":"","recommendedTypes":[],"indexed":true},{"name":"_to","description":"","recommendedTypes":[],"indexed":true},{"name":"_exitNum","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateL2TokenAddress(address)","name":"calculateL2TokenAddress","description":"returns address of L2 version of LPT.","parameterDecorators":[{"name":"l1Token","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"counterpartGateway()","name":"counterpartGateway","description":"returns address of L2 LPT Gateway.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"finalizeInboundTransfer(address,address,address,uint256,bytes)","name":"finalizeInboundTransfer","description":"Receives withdrawn token amount from L2 The equivalent tokens are released from the Escrow contract and sent to the destination In case the escrow doesn't have enough balance, new tokens are minted. can only accept txs coming directly from L2 LPT Gateway.","parameterDecorators":[{"name":"l1Token","description":"L1 Address of LPT.","recommendedTypes":[]},{"name":"from","description":"Address of the sender.","recommendedTypes":[]},{"name":"to","description":"Recepient address on L1.","recommendedTypes":[]},{"name":"amount","description":"Amount of tokens transferred.","recommendedTypes":[]},{"name":"data","description":"Contains exitNum which is always set to 0.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getOutboundCalldata(address,address,address,uint256,bytes)","name":"getOutboundCalldata","description":"Creates calldata required to create a retryable ticket. encodes the target function with its params which will be called on L2 when the retryable ticket is redeemed.","parameterDecorators":[{"name":"l1Token","description":"","recommendedTypes":[]},{"name":"from","description":"","recommendedTypes":[]},{"name":"to","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"outboundCalldata","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"inbox()","name":"inbox","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"l1LPTEscrow()","name":"l1LPTEscrow","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"l1Lpt()","name":"l1Lpt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"l1Router()","name":"l1Router","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"l2Counterpart()","name":"l2Counterpart","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"l2Lpt()","name":"l2Lpt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"minter()","name":"minter","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"outboundTransfer(address,address,uint256,uint256,uint256,bytes)","name":"outboundTransfer","description":"Creates and sends a retryable ticket to migrate LPT to L2 using arbitrum Inbox. The tokens are sent to the Escrow contract for safekeeping until they are withdrawn The ticket must be redeemed on L2 to receive tokens at the specified address. maxGas and gasPriceBid must be set using arbitrum's Inbox.estimateRetryableTicket method.","parameterDecorators":[{"name":"_l1Token","description":"L1 Address of LPT.","recommendedTypes":[]},{"name":"_to","description":"Recepient address on L2.","recommendedTypes":[]},{"name":"_amount","description":"Amount of tokens to tranfer.","recommendedTypes":[]},{"name":"_maxGas","description":"Gas limit for L2 execution of the ticket.","recommendedTypes":[]},{"name":"_gasPriceBid","description":"Price per gas on L2.","recommendedTypes":[]},{"name":"_data","description":"Encoded maxSubmission cost and sender address along with additional calldata.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"seqNum Sequence number of the retryable ticket created by Inbox.","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"pause()","name":"pause","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"setCounterpart(address)","name":"setCounterpart","description":"Sets address of companion L2LPTGateway. Only address with the admin role is allowed to change the value of l2Counterpart.","parameterDecorators":[{"name":"_l2Counterpart","description":"L2 Address of the counterpart.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMinter(address)","name":"setMinter","description":"Sets address of Minter. Only address with the admin role is allowed to change the value of minter.","parameterDecorators":[{"name":"_minter","description":"L1 Address of minter.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"unpause()","name":"unpause","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}