{
  "schema": "../schema.json",
  "tags": [],
  "name": "Lemniscate",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Transfer(address,address,uint256)",
      "name": "Transfer",
      "description": "Event emitted when a supported token is removed. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "onReinvestment(address,uint256,uint256)",
      "name": "onReinvestment",
      "description": "Event emitted when a supported token is removed. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "customerAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "wrappedBTCReinvested",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokensMinted",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "onTokenPurchase(address,uint256,uint256,address,bool)",
      "name": "onTokenPurchase",
      "description": "Event emitted when a supported token is removed. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "customerAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "incomingWrappedBTC",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokensMinted",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "referredBy",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "isReinvest",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "onTokenSell(address,uint256,uint256)",
      "name": "onTokenSell",
      "description": "Event emitted when a supported token is removed. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "customerAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokensBurned",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "wrappedBTCEarned",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "onWithdraw(address,uint256)",
      "name": "onWithdraw",
      "description": "Event emitted when a supported token is removed. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "customerAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "wrappedBTCWithdrawn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "balanceOf(address)",
      "name": "balanceOf",
      "description": "Retrieve the token balance of any single address.",
      "parameterDecorators": [
        {
          "name": "_customerAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buy(address,uint256)",
      "name": "buy",
      "description": "Converts all incoming wrappedBTC to tokens for the caller, and passes down the referral addy (if any).",
      "parameterDecorators": [
        {
          "name": "_referredBy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyPrice()",
      "name": "buyPrice",
      "description": "Return the sell price of 1 individual token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateTokensReceived(uint256)",
      "name": "calculateTokensReceived",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_wrappedBTCToSpend",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateWrappedBTCReceived(uint256)",
      "name": "calculateWrappedBTCReceived",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_tokensToSell",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "decimals()",
      "name": "decimals",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dividendsOf(address)",
      "name": "dividendsOf",
      "description": "Retrieve the dividend balance of any single address.",
      "parameterDecorators": [
        {
          "name": "_customerAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "exit()",
      "name": "exit",
      "description": "Alias of sell() and withdraw().",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "myDividends(bool)",
      "name": "myDividends",
      "description": "Retrieve the dividends owned by the caller.",
      "parameterDecorators": [
        {
          "name": "_includeReferralBonus",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "myTokens()",
      "name": "myTokens",
      "description": "Retrieve the tokens owned by the caller.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onlyAmbassadors()",
      "name": "onlyAmbassadors",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reinvest()",
      "name": "reinvest",
      "description": "Converts all of caller's dividends to tokens.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sell(uint256)",
      "name": "sell",
      "description": "Liquifies tokens to wrappedBTC.",
      "parameterDecorators": [
        {
          "name": "_amountOfTokens",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sellPrice()",
      "name": "sellPrice",
      "description": "Return the buy price of 1 individual token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakingRequirement()",
      "name": "stakingRequirement",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "symbol()",
      "name": "symbol",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalEthereumBalance()",
      "name": "totalEthereumBalance",
      "description": "Method to view the current WrappedBTC stored in the contract Example: totalEthereumBalance().",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSupply()",
      "name": "totalSupply",
      "description": "Retrieve the total token supply.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transfer(address,uint256)",
      "name": "transfer",
      "description": "Transfer tokens from the caller to a new holder. Remember, there's a 10% fee here as well.",
      "parameterDecorators": [
        {
          "name": "_toAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amountOfTokens",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw()",
      "name": "withdraw",
      "description": "Withdraws all of the callers earnings.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}