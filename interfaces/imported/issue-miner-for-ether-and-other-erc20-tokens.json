{"schema":"../schema.json","tags":["tokens"],"name":"MinerIssuance","description":"Issue Miner for Ether and other ERC20 tokens.","eventDecorators":[{"signature":"Issued(address,address,uint256,uint256)","name":"Issued","description":"","parameterDecorators":[{"name":"recipient","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"amountIn","description":"","recommendedTypes":[],"indexed":false},{"name":"amountOut","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"calculateETHPerMiner()","name":"calculateETHPerMiner","description":"Calculates the price of a single Miner token in Ether. The amount will be returned in Wei, x ether * 10^18 (18 dp).","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"uint256 The price off a single Miner token in Ether.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateETHToMiner(uint256)","name":"calculateETHToMiner","description":"Calculate how much miner will be received for `amount` ETH. The amount of Ether must be in Wei, x ether * 10^18 (18 dp).","parameterDecorators":[{"name":"amount","description":"uint256 The amount of Ether to swap.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint256 The amount of Miner tokens received for the specified Ether amount.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateMinerToETH(uint256)","name":"calculateMinerToETH","description":"","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"changePair(address)","name":"changePair","description":"Sets the USD to Miner pair address.","parameterDecorators":[{"name":"pairAddress","description":"address The USD Miner pair address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changePriceFeedOracle(address)","name":"changePriceFeedOracle","description":"Changes the Price Feed contract. This will be a valid Chainlink contract. A list of contracts is available at https://docs.chain.link/docs/ethereum-addresses/.","parameterDecorators":[{"name":"priceFeedOracleAddress","description":"address The Price Feed contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeReserve(address)","name":"changeReserve","description":"Sets the Reserve contract.","parameterDecorators":[{"name":"reserveAddress","description":"address The Reserve contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"issueExactMinerForETH(uint256,uint256)","name":"issueExactMinerForETH","description":"Issue exactly `exactMinerOut` Miner for no more than `maxETHIn` ETH. Any additional ether will be refunded back to the user.","parameterDecorators":[{"name":"exactMinerOut","description":"uint256 The exact amount of Miner token to receive. Reverts if the minimum is not met.","recommendedTypes":[]},{"name":"deadline","description":"uint256 A timestamp indicating how long the swap will stay active. Reverts if expired.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint256 The amount of Miner token swapped.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"issueExactMinerForTokens(address[],uint256,uint256,uint256)","name":"issueExactMinerForTokens","description":"Issue exactly `exactMinerOut` Miner for no more than `maxAmountIn` of the selected token. dev Emits a SwappedTokenToMiner event if successful.","parameterDecorators":[{"name":"path","description":"address[] The optimal path to take when swapping a token for ETH. Must be a valid ERC20-compatible token and the final token must be WETH.","recommendedTypes":[]},{"name":"maxAmountIn","description":"uint256 The maximum amount of tokens to swap for Miner. Reverts if the minimum is not met.","recommendedTypes":[]},{"name":"exactMinerOut","description":"uint256 The exact amount of Miner token to receive.","recommendedTypes":[]},{"name":"deadline","description":"uint256 A timestamp indicating how long the swap will stay active. Reverts if expired.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint256 The amount of Miner token swapped.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"issueMinerForExactETH(uint256,uint256)","name":"issueMinerForExactETH","description":"Issue at least `minMinerOut` Miner for an exact amount of ETH.","parameterDecorators":[{"name":"minMinerOut","description":"uint256 The minimum amount of Miner token to receive. Reverts if the minimum is not met.","recommendedTypes":[]},{"name":"deadline","description":"uint256 A timestamp indicating how long the swap will stay active. Reverts if expired.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint256 The amount of Miner token swapped.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"issueMinerForExactTokens(address[],uint256,uint256,uint256)","name":"issueMinerForExactTokens","description":"Issue at least `minMinerOut` Miner for exactly `amount` of `token` tokens. dev Emits a SwappedTokenToMiner event if successful.","parameterDecorators":[{"name":"path","description":"address[] The optimal path to take when swapping a token for ETH. Must be a valid ERC20-compatible token and the final token must be WETH.","recommendedTypes":[]},{"name":"amount","description":"uint256 The amount of token to swap for Miner.","recommendedTypes":[]},{"name":"minMinerOut","description":"uint256 The minimum amount of Miner token to receive. Reverts if the minimum is not met.","recommendedTypes":[]},{"name":"deadline","description":"uint256 A timestamp indicating how long the swap will stay active. Reverts if expired.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint256 The amount of Miner token swapped.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pair()","name":"pair","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"payments(address)","name":"payments","description":"Returns the payments owed to an address.","parameterDecorators":[{"name":"dest","description":"The creditor's address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"priceFeedOracle()","name":"priceFeedOracle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"reserve()","name":"reserve","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"uniswapRouter()","name":"uniswapRouter","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawPayments(address)","name":"withdrawPayments","description":"Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.","parameterDecorators":[{"name":"payee","description":"Whose payments will be withdrawn.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}