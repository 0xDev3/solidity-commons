{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "swaps",
    "airdrops",
    "locking",
    "uniswap",
    "compound"
  ],
  "name": "TokenGeyser",
  "description": "Token Geyser.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Staked(address,uint256,uint256,bytes)",
      "name": "Staked",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "total",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokensClaimed(address,uint256)",
      "name": "TokensClaimed",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokensLocked(uint256,uint256,uint256)",
      "name": "TokensLocked",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokensUnlocked(uint256,uint256)",
      "name": "TokensUnlocked",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "total",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unstaked(address,uint256,uint256,bytes)",
      "name": "Unstaked",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "total",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "_warpNFT()",
      "name": "_warpNFT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bonusDecimals()",
      "name": "bonusDecimals",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bonusPeriodSec()",
      "name": "bonusPeriodSec",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "extraAmounts(address)",
      "name": "extraAmounts",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDistributionToken()",
      "name": "getDistributionToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEarnings(address)",
      "name": "getEarnings",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getNftBoost(address,uint256,int256)",
      "name": "getNftBoost",
      "description": "Retrieves the boost you get for a specific NFT.",
      "parameterDecorators": [
        {
          "name": "beneficiary",
          "description": "The address who receives the bonus.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "The amount for which the bonus is calculated.",
          "recommendedTypes": []
        },
        {
          "name": "nftId",
          "description": "The NFT identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStakingToken()",
      "name": "getStakingToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "geyserManager()",
      "name": "geyserManager",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lockTokens(uint256,uint256)",
      "name": "lockTokens",
      "description": "This funcion allows the contract owner to add more locked distribution tokens, along with the associated \"unlock schedule\". These locked tokens immediately begin unlocking linearly over the duraction of durationSec timeframe.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Number of distribution tokens to lock. These are transferred from the caller.",
          "recommendedTypes": []
        },
        {
          "name": "durationSec",
          "description": "Length of time to linear unlock the tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "originalAmounts(address)",
      "name": "originalAmounts",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rescueFundsFromStakingPool(address,address,uint256)",
      "name": "rescueFundsFromStakingPool",
      "description": "Lets the owner rescue funds air-dropped to the staking pool.",
      "parameterDecorators": [
        {
          "name": "tokenToRescue",
          "description": "Address of the token to be rescued.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address to which the rescued funds are to be sent.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of tokens to be rescued.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Transfer success.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rescueRewards(address)",
      "name": "rescueRewards",
      "description": "Rescue rewards.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stake(address,uint256,bytes,int256)",
      "name": "stake",
      "description": "Transfers amount of deposit tokens from the user.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Number of deposit tokens to stake.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Not used.",
          "recommendedTypes": []
        },
        {
          "name": "nftId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeFor(address,address,uint256,bytes,int256)",
      "name": "stakeFor",
      "description": "Transfers amount of deposit tokens from the caller on behalf of user.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "User address who gains credit for this stake operation.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Number of deposit tokens to stake.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Not used.",
          "recommendedTypes": []
        },
        {
          "name": "nftId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startBonus()",
      "name": "startBonus",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "supportsHistory()",
      "name": "supportsHistory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "Note that this application has a staking token as well as a distribution token, which may be different. This function is required by EIP-900.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The deposit token used for staking.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalExtra()",
      "name": "totalExtra",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalLocked()",
      "name": "totalLocked",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalLockedShares()",
      "name": "totalLockedShares",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalStaked()",
      "name": "totalStaked",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalStakedFor(address)",
      "name": "totalStakedFor",
      "description": "",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "The user to look up staking information for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The number of staking tokens deposited for addr.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalStakingShares()",
      "name": "totalStakingShares",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalUnlocked()",
      "name": "totalUnlocked",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unlockScheduleCount()",
      "name": "unlockScheduleCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unlockSchedules(uint256)",
      "name": "unlockSchedules",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "initialLockedShares",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "unlockedShares",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastUnlockTimestampSec",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endAtSec",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "durationSec",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unlockTokens()",
      "name": "unlockTokens",
      "description": "Moves distribution tokens from the locked pool to the unlocked pool, according to the previously defined unlock schedules. Publicly callable.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Number of newly unlocked distribution tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstake(address,uint256,bytes)",
      "name": "unstake",
      "description": "Unstakes a certain amount of previously deposited tokens. User also receives their alotted number of distribution tokens.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Number of deposit tokens to unstake / withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Not used.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeQuery(address,uint256)",
      "name": "unstakeQuery",
      "description": "",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Number of deposit tokens to unstake / withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The total number of distribution tokens that would be rewarded.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateAccounting(address)",
      "name": "updateAccounting",
      "description": "A globally callable function to update the accounting state of the system. Global state and state for the caller are updated.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "[0] balance of the locked pool.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_1",
          "description": "[1] balance of the unlocked pool.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_2",
          "description": "[2] caller's staking share seconds.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_3",
          "description": "[3] global staking share seconds.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_4",
          "description": "[4] Rewards caller has accumulated, optimistically assumes max time-bonus.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_5",
          "description": "[5] block timestamp.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}