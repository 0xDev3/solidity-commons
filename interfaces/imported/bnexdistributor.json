{
  "schema": "../schema.json",
  "tags": [],
  "name": "BnEXDistributor",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AirdropAdded(uint256,address,bytes32)",
      "name": "AirdropAdded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_airdrop",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_merkleRoot",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Claimed(uint256,uint256,address,uint256)",
      "name": "Claimed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_airdrop",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addAirdrop(address,bytes32)",
      "name": "addAirdrop",
      "description": "@param _token The token address.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_merkleRoot",
          "description": "The merkleroot.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "airdropInfo(uint256)",
      "name": "airdropInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "merkleRoot",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "airdropLength()",
      "name": "airdropLength",
      "description": "Get airdrop length.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claim(uint256,uint256,address,uint256,bytes32[])",
      "name": "claim",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_airdrop",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_merkleProof",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isClaimed(uint256,uint256)",
      "name": "isClaimed",
      "description": "@param _airdrop The airdrop id.",
      "parameterDecorators": [
        {
          "name": "_airdrop",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_index",
          "description": "merkletree index.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "recoverERC20(address)",
      "name": "recoverERC20",
      "description": "Minter can claim any tokens that transfered to this contract address.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "The token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}