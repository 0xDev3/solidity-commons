{
  "schema": "../schema.json",
  "tags": [],
  "name": "SchemeRegistrar",
  "description": "A registrar for Schemes for organizations. The SchemeRegistrar is used for registering and unregistering schemes at organizations.",
  "eventDecorators": [
    {
      "signature": "NewSchemeProposal(address,bytes32,address,address,bytes32,bytes4,string)",
      "name": "NewSchemeProposal",
      "description": "Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_intVoteInterface",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_scheme",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_parametersHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_permissions",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_descriptionHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalDeleted(address,bytes32)",
      "name": "ProposalDeleted",
      "description": "Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ProposalExecuted(address,bytes32,int256)",
      "name": "ProposalExecuted",
      "description": "Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_param",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RemoveSchemeProposal(address,bytes32,address,address,string)",
      "name": "RemoveSchemeProposal",
      "description": "Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_intVoteInterface",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_scheme",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_descriptionHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "balanceOfStakingToken(address,bytes32)",
      "name": "balanceOfStakingToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "burnReputation(uint256,address,bytes32)",
      "name": "burnReputation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executeProposal(bytes32,int256)",
      "name": "executeProposal",
      "description": "execution of proposals, can only be called by the voting machine in which the vote is held.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_param",
          "description": "a parameter of the voting result, 1 yes and 2 is no.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getParametersHash(bytes32,bytes32,address)",
      "name": "getParametersHash",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_voteRegisterParams",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_voteRemoveParams",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_intVote",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalReputationSupply(bytes32)",
      "name": "getTotalReputationSupply",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mintReputation(uint256,address,bytes32)",
      "name": "mintReputation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "organizationsProposals(address,bytes32)",
      "name": "organizationsProposals",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "scheme",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "addScheme",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "parametersHash",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "permissions",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "parameters(bytes32)",
      "name": "parameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "voteRegisterParams",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "voteRemoveParams",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "intVote",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalsInfo(address,bytes32)",
      "name": "proposalsInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "avatar",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposeScheme(address,address,bytes32,bytes4,string)",
      "name": "proposeScheme",
      "description": "create a proposal to register a schemeNB: not only proposes the vote, but also votes for it.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "the address of the organization the scheme will be registered for.",
          "recommendedTypes": []
        },
        {
          "name": "_scheme",
          "description": "the address of the scheme to be registered.",
          "recommendedTypes": []
        },
        {
          "name": "_parametersHash",
          "description": "a hash of the configuration of the _scheme.",
          "recommendedTypes": []
        },
        {
          "name": "_permissions",
          "description": "the permission of the scheme to be registered.",
          "recommendedTypes": []
        },
        {
          "name": "_descriptionHash",
          "description": "proposal's description hash.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proposeToRemoveScheme(address,address,string)",
      "name": "proposeToRemoveScheme",
      "description": "propose to remove a scheme for a controller.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "the address of the controller from which we want to remove a scheme.",
          "recommendedTypes": []
        },
        {
          "name": "_scheme",
          "description": "the address of the scheme we want to remove.",
          "recommendedTypes": []
        },
        {
          "name": "_descriptionHash",
          "description": "proposal description hash NB: not only registers the proposal, but also votes for it.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reputationOf(address,bytes32)",
      "name": "reputationOf",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setParameters(bytes32,bytes32,address)",
      "name": "setParameters",
      "description": "hash the parameters, save them if necessary, and return the hash value.",
      "parameterDecorators": [
        {
          "name": "_voteRegisterParams",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_voteRemoveParams",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_intVote",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakingTokenTransfer(address,address,uint256,bytes32)",
      "name": "stakingTokenTransfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}