{
  "schema": "../schema.json",
  "tags": [],
  "name": "SB32Offer",
  "description": "SB32Offer.",
  "eventDecorators": [
    {
      "signature": "OnInvest(address,uint256)",
      "name": "OnInvest",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_investor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "MIN_TOTAL_TOKEN_SOLD()",
      "name": "MIN_TOTAL_TOKEN_SOLD",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "OWNER()",
      "name": "OWNER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "TOKEN_BASE_RATE()",
      "name": "TOKEN_BASE_RATE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "TOTAL_TOKENS()",
      "name": "TOTAL_TOKENS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cashoutIssuerBRLT()",
      "name": "cashoutIssuerBRLT",
      "description": "Faz o cashout de todos os BRLTs que estão nesta oferta para o issuer, se a oferta já tiver sucesso. Cashouts BRLTs paid to the offer to the issuer.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cashoutTokens(address)",
      "name": "cashoutTokens",
      "description": "If possible, cashouts tokens for the specified _investor.",
      "parameterDecorators": [
        {
          "name": "_investor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "finishOffer()",
      "name": "finishOffer",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getFinishDate()",
      "name": "getFinishDate",
      "description": "If the sale is finished, returns the date it finished at.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFinished()",
      "name": "getFinished",
      "description": "Returns true if the sale has finished operations and can no longer sell.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInitialized()",
      "name": "getInitialized",
      "description": "Returns true if the sale is initialized and ready for operation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInputToken()",
      "name": "getInputToken",
      "description": "Retorna o endereço do token de input (BRLT). Returns the address of the input token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRate()",
      "name": "getRate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "rate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSuccess()",
      "name": "getSuccess",
      "description": "Returns true if the sale has reached a successful state (should be unreversible).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getToken()",
      "name": "getToken",
      "description": "Retorna o endereço do token sendo vendido. Returns the address of the token being sold.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalBought(address)",
      "name": "getTotalBought",
      "description": "Returns the total amount of tokens bought by the specified _investor.",
      "parameterDecorators": [
        {
          "name": "_investor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "nTotalBought",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalBoughtDate(address,uint256)",
      "name": "getTotalBoughtDate",
      "description": "Retorna quanto o investidor comprou até a data especificada. Returns the total amount of tokens the specified investor has bought from this contract, up to the specified date.",
      "parameterDecorators": [
        {
          "name": "_investor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_date",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalCashedOut(address)",
      "name": "getTotalCashedOut",
      "description": "Returns the total amount of tokens cashed out by the specified _investor.",
      "parameterDecorators": [
        {
          "name": "_investor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "nTotalCashedOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalCashedOutDate(address,uint256)",
      "name": "getTotalCashedOutDate",
      "description": "Retorna quanto o investidor sacou até a data especificada. Returns the total amount of tokens the specified investor has cashed out from this contract, up to the specified date.",
      "parameterDecorators": [
        {
          "name": "_investor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_date",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalCollected()",
      "name": "getTotalCollected",
      "description": "Retorna quanto total do token de input (BRLT) foi coletado. Returns the total amount of tokens invested.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalSold()",
      "name": "getTotalSold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "totalSold",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize()",
      "name": "initialize",
      "description": "Prepares the sale for operation.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "invest(address,uint256)",
      "name": "invest",
      "description": "Declare an investment for an address.",
      "parameterDecorators": [
        {
          "name": "_investor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}