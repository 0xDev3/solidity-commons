{"schema":"../schema.json","tags":["tokens"],"name":"tokenHandler","description":"Bifi's tokenHandler logic contract for ERC20 tokens.","eventDecorators":[{"signature":"Borrow(address,uint256,uint256)","name":"Borrow","description":"Emitted when token is changed.","parameterDecorators":[{"name":"borrower","description":"","recommendedTypes":[],"indexed":false},{"name":"borrowAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"handlerID","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"CircuitBreaked(bool,uint256,uint256)","name":"CircuitBreaked","description":"Emitted when token is changed.","parameterDecorators":[{"name":"breaked","description":"","recommendedTypes":[],"indexed":false},{"name":"blockNumber","description":"","recommendedTypes":[],"indexed":false},{"name":"handlerID","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Deposit(address,uint256,uint256)","name":"Deposit","description":"Emitted when token is changed.","parameterDecorators":[{"name":"depositor","description":"","recommendedTypes":[],"indexed":false},{"name":"depositAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"handlerID","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketIn(address)","name":"MarketIn","description":"Emitted when token is changed.","parameterDecorators":[{"name":"userAddr","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when token is changed.","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":false},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Repay(address,uint256,uint256)","name":"Repay","description":"Emitted when token is changed.","parameterDecorators":[{"name":"repayer","description":"","recommendedTypes":[],"indexed":false},{"name":"repayAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"handlerID","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ReserveDeposit(uint256,uint256)","name":"ReserveDeposit","description":"Emitted when token is changed.","parameterDecorators":[{"name":"reserveDepositAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"handlerID","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ReserveWithdraw(uint256,uint256)","name":"ReserveWithdraw","description":"Emitted when token is changed.","parameterDecorators":[{"name":"reserveWithdrawAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"handlerID","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdraw(address,uint256,uint256)","name":"Withdraw","description":"Emitted when token is changed.","parameterDecorators":[{"name":"redeemer","description":"","recommendedTypes":[],"indexed":false},{"name":"redeemAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"handlerID","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"applyInterest(address)","name":"applyInterest","description":"Update (apply) interest entry point (external).","parameterDecorators":[{"name":"userAddr","description":"The user address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"borrow(uint256,bool)","name":"borrow","description":"Borrow action.","parameterDecorators":[{"name":"unifiedTokenAmount","description":"The borrow amount.","recommendedTypes":[]},{"name":"flag","description":"Flag for the full calcuation mode.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"checkFirstAction()","name":"checkFirstAction","description":"Check first action of user in the This Block (external).","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"true for first action.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"deposit(uint256,bool)","name":"deposit","description":"Deposit action.","parameterDecorators":[{"name":"unifiedTokenAmount","description":"The deposit amount.","recommendedTypes":[]},{"name":"flag","description":"Flag for the full calcuation mode.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"getBorrowTotalAmount()","name":"getBorrowTotalAmount","description":"Get the amount of handler's total borrow.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the amount of handler's total borrow.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getDepositTotalAmount()","name":"getDepositTotalAmount","description":"Get the amount of handler's total deposit.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the amount of handler's total deposit.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getERC20Addr()","name":"getERC20Addr","description":"Get the address of the token that the handler is dealing with (coinHandler don't deal with tokens in coin handlers).","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address of the token.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getErc20Addr()","name":"getErc20Addr","description":"Get the address of the underlying ERC-20 token.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address of the underlying ERC-20 token.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getHandlerDataStorageAddr()","name":"getHandlerDataStorageAddr","description":"Get the address of handler's dataStroage.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the address of handler's dataStroage.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getInterestModelAddr()","name":"getInterestModelAddr","description":"Get the address of the interestModel contract.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address of the interestModel contract.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getLimitOfAction()","name":"getLimitOfAction","description":"Get the outgoing limit of tokens.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The outgoing limit of tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketManagerAddr()","name":"getMarketManagerAddr","description":"Get the address of the marketManager contract.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address of the marketManager contract.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getOwner()","name":"getOwner","description":"Get the address of owner.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the address of owner.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getSIRandBIR()","name":"getSIRandBIR","description":"Get the rate of SIR and BIR.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getSiHandlerDataStorage()","name":"getSiHandlerDataStorage","description":"Get the address of the siHandlerDataStorage contract.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address of the siHandlerDataStorage contract.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenDecimals()","name":"getTokenDecimals","description":"Get the decimal of token.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenHandlerBorrowLimit()","name":"getTokenHandlerBorrowLimit","description":"Get the borrow limit of the handler through a specific handlerID.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The borrow limit.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenHandlerLimit()","name":"getTokenHandlerLimit","description":"Get borrowLimit and marginCallLimit.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenHandlerMarginCallLimit()","name":"getTokenHandlerMarginCallLimit","description":"Get the liquidation limit of handler through a specific handlerID.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The liquidation limit.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenName()","name":"getTokenName","description":"Get the token name.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the token name.","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"getUnderlyingTokenDecimal()","name":"getUnderlyingTokenDecimal","description":"Get the decimal of the underlying token.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the decimal of the underlying token.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUnifiedTokenDecimal()","name":"getUnifiedTokenDecimal","description":"Get the unifiedPoint of token's decimal (for fixed decimal number).","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the unifiedPoint of token's decimal.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserAmount(address)","name":"getUserAmount","description":"Get the amount of deposit and borrow of the user.","parameterDecorators":[{"name":"userAddr","description":"The address of user (depositAmount, borrowAmount).","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserAmountWithInterest(address)","name":"getUserAmountWithInterest","description":"Get the amount of deposit and borrow of user including interest.","parameterDecorators":[{"name":"userAddr","description":"The user address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserIntraBorrowAmount(address)","name":"getUserIntraBorrowAmount","description":"Get the amount of user's borrow.","parameterDecorators":[{"name":"userAddr","description":"The address of user.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the amount of user's borrow.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserIntraDepositAmount(address)","name":"getUserIntraDepositAmount","description":"Get the amount of user's deposit.","parameterDecorators":[{"name":"userAddr","description":"The address of user.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the amount of user's deposit.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserMaxBorrowAmount(address)","name":"getUserMaxBorrowAmount","description":"Get the maximum amount that user can borrow.","parameterDecorators":[{"name":"userAddr","description":"The address of user.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the maximum amount that user can borrow.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserMaxRepayAmount(address)","name":"getUserMaxRepayAmount","description":"Get the maximum amount that users can repay.","parameterDecorators":[{"name":"userAddr","description":"The address of user.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the maximum amount that users can repay.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserMaxWithdrawAmount(address)","name":"getUserMaxWithdrawAmount","description":"Get the maximum amount that users can withdraw.","parameterDecorators":[{"name":"userAddr","description":"The address of user.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the maximum amount that users can withdraw.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"ownershipTransfer(address)","name":"ownershipTransfer","description":"Change the owner of the handler.","parameterDecorators":[{"name":"newOwner","description":"the address of the owner to be replaced.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"partialLiquidationUser(address,uint256,address,uint256)","name":"partialLiquidationUser","description":"liquidate delinquentBorrower's partial(or can total) asset.","parameterDecorators":[{"name":"delinquentBorrower","description":"The user addresss of liquidation target.","recommendedTypes":[]},{"name":"liquidateAmount","description":"The amount of liquidator request.","recommendedTypes":[]},{"name":"liquidator","description":"The address of a user executing liquidate.","recommendedTypes":[]},{"name":"rewardHandlerID","description":"The handler id of delinquentBorrower's collateral for receive.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"partialLiquidationUserReward(address,uint256,address)","name":"partialLiquidationUserReward","description":"liquidator receive delinquentBorrower's collateral after liquidate delinquentBorrower's asset.","parameterDecorators":[{"name":"delinquentBorrower","description":"The user addresss of liquidation target.","recommendedTypes":[]},{"name":"liquidationAmountWithReward","description":"The amount of liquidator receiving delinquentBorrower's collateral.","recommendedTypes":[]},{"name":"liquidator","description":"The address of a user executing liquidate.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"The amount of token transfered(in storage).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"repay(uint256,bool)","name":"repay","description":"Repay action.","parameterDecorators":[{"name":"unifiedTokenAmount","description":"The repay amount.","recommendedTypes":[]},{"name":"flag","description":"Flag for the full calcuation mode.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"reserveDeposit(uint256)","name":"reserveDeposit","description":"Deposit assets to the reserve of the handler.","parameterDecorators":[{"name":"unifiedTokenAmount","description":"The amount of token to deposit.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"reserveWithdraw(uint256)","name":"reserveWithdraw","description":"Withdraw assets from the reserve of the handler.","parameterDecorators":[{"name":"unifiedTokenAmount","description":"The amount of token to withdraw.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setCircuitBreakWithOwner(bool)","name":"setCircuitBreakWithOwner","description":"Set circuitBreak to freeze all of handlers by owner.","parameterDecorators":[{"name":"_emergency","description":"Boolean state of the circuit break.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setCircuitBreaker(bool)","name":"setCircuitBreaker","description":"Set circuitBreak which freeze all of handlers by marketManager.","parameterDecorators":[{"name":"_emergency","description":"Boolean state of the circuit break.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setErc20(address,string)","name":"setErc20","description":"Set the address and name of the underlying ERC-20 token.","parameterDecorators":[{"name":"erc20Addr","description":"The address of ERC-20 token.","recommendedTypes":[]},{"name":"name","description":"The name of ERC-20 token.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setHandlerDataStorage(address)","name":"setHandlerDataStorage","description":"Set the address of the marketDataStorage contract.","parameterDecorators":[{"name":"marketDataStorageAddr","description":"The address of the marketDataStorage contract.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setInterestModel(address)","name":"setInterestModel","description":"Set the address of the interestModel contract.","parameterDecorators":[{"name":"interestModelAddr","description":"The address of the interestModel contract.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setMarketManager(address)","name":"setMarketManager","description":"Set the address of the marketManager contract.","parameterDecorators":[{"name":"marketManagerAddr","description":"The address of the marketManager contract.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setSiHandlerDataStorage(address)","name":"setSiHandlerDataStorage","description":"Set the address of the siHandlerDataStorage contract.","parameterDecorators":[{"name":"SIHandlerDataStorageAddr","description":"The address of the siHandlerDataStorage contract.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setTokenHandlerBorrowLimit(uint256)","name":"setTokenHandlerBorrowLimit","description":"Set the borrow limit of the handler through a specific handlerID.","parameterDecorators":[{"name":"borrowLimit","description":"The borrow limit.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setTokenHandlerMarginCallLimit(uint256)","name":"setTokenHandlerMarginCallLimit","description":"Set the liquidation limit of the handler through a specific handlerID.","parameterDecorators":[{"name":"marginCallLimit","description":"The liquidation limit.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setUnderlyingTokenDecimal(uint256)","name":"setUnderlyingTokenDecimal","description":"Set the decimal of token.","parameterDecorators":[{"name":"_underlyingTokenDecimal","description":"the decimal of token.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setUnifiedTokenDecimal(uint256)","name":"setUnifiedTokenDecimal","description":"Set the unifiedPoint of token's decimal.","parameterDecorators":[{"name":"_unifiedTokenDecimal","description":"the unifiedPoint of token's decimal.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"withdraw(uint256,bool)","name":"withdraw","description":"Withdraw action.","parameterDecorators":[{"name":"unifiedTokenAmount","description":"The withdraw amount.","recommendedTypes":[]},{"name":"flag","description":"Flag for the full calcuation mode.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true (TODO: validate results).","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false}]}