{
  "schema": "../schema.json",
  "tags": [],
  "name": "Cover_ZapIn_General_V1",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Events.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Zapin(address,address,uint256,uint256,uint256,uint256)",
      "name": "Zapin",
      "description": "Events.",
      "parameterDecorators": [
        {
          "name": "toWhomToIssue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "protocolCovered",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "claimRec",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "noClaimRec",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "claimBPTRec",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "noClaimBPTRec",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BalancerFactory()",
      "name": "BalancerFactory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ZapIn(address,address,address,address,uint256,address,address,bytes)",
      "name": "ZapIn",
      "description": "This function is used to mint cover for a supported protocol and add the cover/no-cover to balancer pools.",
      "parameterDecorators": [
        {
          "name": "_fromTokenAddress",
          "description": "The token used for investment (address(0x00) if ether).",
          "recommendedTypes": []
        },
        {
          "name": "_protocolAddress",
          "description": "The address of protocol to acquire cover for.",
          "recommendedTypes": []
        },
        {
          "name": "_claimBalancerAddress",
          "description": "The balancer pool address for cover.",
          "recommendedTypes": []
        },
        {
          "name": "_noClaimBalancerAddress",
          "description": "The balancer pool address for no-cover.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "The amount of ERC to invest, use any arbitrary value if ether.",
          "recommendedTypes": []
        },
        {
          "name": "_allowanceTarget",
          "description": "Spender for the swap.",
          "recommendedTypes": []
        },
        {
          "name": "_swapTarget",
          "description": "Excecution target for the swap.",
          "recommendedTypes": []
        },
        {
          "name": "swapData",
          "description": "DEX quote data.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "claimRec",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "noClaimRec",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "claimBpt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "noClaimBpt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "_owner()",
      "name": "_owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collateralAddress()",
      "name": "collateralAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "coverFactory()",
      "name": "coverFactory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "goodwill()",
      "name": "goodwill",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "inCaseTokengetsStuck(address)",
      "name": "inCaseTokengetsStuck",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "set_new_goodwill(uint16)",
      "name": "set_new_goodwill",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_new_goodwill",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stopped()",
      "name": "stopped",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "toggleContractActive()",
      "name": "toggleContractActive",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw()",
      "name": "withdraw",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}