{"schema":"../schema.json","tags":[],"name":"SmartAlpha","description":"SMART Alpha. This contract implements the main logic of the system.","eventDecorators":[{"signature":"EpochEnd(uint256,uint256,uint256)","name":"EpochEnd","description":"Logs an epoch end.","parameterDecorators":[{"name":"epochId","description":"","recommendedTypes":[],"indexed":false},{"name":"juniorProfits","description":"","recommendedTypes":[],"indexed":false},{"name":"seniorProfits","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"FeesTransfer(address,address,uint256)","name":"FeesTransfer","description":"Logs a transfer of fees.","parameterDecorators":[{"name":"caller","description":"","recommendedTypes":[],"indexed":false},{"name":"destination","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]},{"signature":"JuniorJoinEntryQueue(address,uint256,uint256,uint256)","name":"JuniorJoinEntryQueue","description":"Logs a deposit of a junior.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":false},{"name":"purchaser","description":"who paid for the tokens.","recommendedTypes":[],"indexed":false},{"name":"value","description":"weis paid for purchase.","recommendedTypes":[],"indexed":false}]},{"signature":"JuniorJoinExitQueue(address,uint256,uint256,uint256)","name":"JuniorJoinExitQueue","description":"Logs an exit (1st step) of a junior.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":false},{"name":"purchaser","description":"who paid for the tokens.","recommendedTypes":[],"indexed":false},{"name":"value","description":"weis paid for purchase.","recommendedTypes":[],"indexed":false}]},{"signature":"JuniorRedeemTokens(address,uint256,uint256)","name":"JuniorRedeemTokens","description":"Logs a redeem (2nd step of deposit) of a junior.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"epochId","description":"","recommendedTypes":[],"indexed":false},{"name":"tokensOut","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"JuniorRedeemUnderlying(address,uint256,uint256)","name":"JuniorRedeemUnderlying","description":"Logs an exit (2nd step) of a junior.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"epochId","description":"","recommendedTypes":[],"indexed":false},{"name":"underlyingOut","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PauseSystem()","name":"PauseSystem","description":"Logs a system pause.","parameterDecorators":[]},{"signature":"ResumeSystem()","name":"ResumeSystem","description":"logs a system resume.","parameterDecorators":[]},{"signature":"SeniorJoinEntryQueue(address,uint256,uint256,uint256)","name":"SeniorJoinEntryQueue","description":"Logs a deposit of a senior.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":false},{"name":"purchaser","description":"who paid for the tokens.","recommendedTypes":[],"indexed":false},{"name":"value","description":"weis paid for purchase.","recommendedTypes":[],"indexed":false}]},{"signature":"SeniorJoinExitQueue(address,uint256,uint256,uint256)","name":"SeniorJoinExitQueue","description":"Logs an exit (1st step) of a senior.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":false},{"name":"purchaser","description":"who paid for the tokens.","recommendedTypes":[],"indexed":false},{"name":"value","description":"weis paid for purchase.","recommendedTypes":[],"indexed":false}]},{"signature":"SeniorRedeemTokens(address,uint256,uint256)","name":"SeniorRedeemTokens","description":"Logs a redeem (2nd step of deposit) of a senior.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"epochId","description":"","recommendedTypes":[],"indexed":false},{"name":"tokensOut","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SeniorRedeemUnderlying(address,uint256,uint256)","name":"SeniorRedeemUnderlying","description":"Logs an exit (2nd step) of a senior.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"epochId","description":"","recommendedTypes":[],"indexed":false},{"name":"underlyingOut","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetAccountingModel(address,address)","name":"SetAccountingModel","description":"Logs a change of accounting model contract.","parameterDecorators":[{"name":"oldModel","description":"","recommendedTypes":[],"indexed":false},{"name":"newModel","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetFeesOwner(address,address)","name":"SetFeesOwner","description":"Logs a change of fees owner.","parameterDecorators":[{"name":"oldOwner","description":"","recommendedTypes":[],"indexed":false},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetFeesPercentage(uint256,uint256)","name":"SetFeesPercentage","description":"Logs a change of fees percentage.","parameterDecorators":[{"name":"oldPercentage","description":"","recommendedTypes":[],"indexed":false},{"name":"newPercentage","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetPriceOracle(address,address)","name":"SetPriceOracle","description":"logs a change of price oracle.","parameterDecorators":[{"name":"oldOracle","description":"","recommendedTypes":[],"indexed":false},{"name":"newOracle","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetSeniorRateModel(address,address)","name":"SetSeniorRateModel","description":"Logs a change of senior rate model contract.","parameterDecorators":[{"name":"oldModel","description":"","recommendedTypes":[],"indexed":false},{"name":"newModel","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TransferDAO(address,address)","name":"TransferDAO","description":"Logs a transfer of dao power to a new address.","parameterDecorators":[{"name":"oldDAO","description":"","recommendedTypes":[],"indexed":false},{"name":"newDAO","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TransferGuardian(address,address)","name":"TransferGuardian","description":"Logs a transfer of Guardian power to a new address.","parameterDecorators":[{"name":"oldGuardian","description":"","recommendedTypes":[],"indexed":false},{"name":"newGuardian","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"MAX_FEES_PERCENTAGE()","name":"MAX_FEES_PERCENTAGE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"accountingModel()","name":"accountingModel","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"advanceEpoch()","name":"advanceEpoch","description":"Advance/finalize an epoch. Epochs are automatically advanced/finalized if there are user interactions with the contract.If there are no interactions for one or multiple epochs, they will be skipped and the materializing ofprofits and losses will only happen as if only one epoch passed. We call this \"elastic epochs\".This function may also be called voluntarily by any party (including bots).","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"dao()","name":"dao","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"depositJunior(uint256)","name":"depositJunior","description":"Signal the entry into the pool as a junior. If the user already has a position in the queue, they can increase the amount by calling this function againIf a user is in the queue, they cannot exit it.","parameterDecorators":[{"name":"amount","description":"The amount of underlying the user wants to increase his queue position with.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"depositSenior(uint256)","name":"depositSenior","description":"Signal the entry into the pool as a senior. If the user already has a position in the queue, they can increase the amount by calling this function againIf a user is in the queue, they cannot exit it.","parameterDecorators":[{"name":"amount","description":"The amount of underlying the user wants to increase his queue position with.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"epoch()","name":"epoch","description":"epoch accounting.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"epoch1Start()","name":"epoch1Start","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"epochBalance()","name":"epochBalance","description":"Calculate the epoch balance.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"epoch balance.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"epochDownsideProtectionRate()","name":"epochDownsideProtectionRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"epochDuration()","name":"epochDuration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"epochEntryPrice()","name":"epochEntryPrice","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"epochJuniorLiquidity()","name":"epochJuniorLiquidity","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"epochSeniorLiquidity()","name":"epochSeniorLiquidity","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"epochUpsideExposureRate()","name":"epochUpsideExposureRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"estimateCurrentJuniorLiquidity()","name":"estimateCurrentJuniorLiquidity","description":"Return the junior liquidity taking into account the current, unrealized, profits and losses.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The estimated junior liquidity.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"estimateCurrentJuniorTokenPrice()","name":"estimateCurrentJuniorTokenPrice","description":"Return the current junior token price taking into account the current, unrealized, profits and losses.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The estimated junior token price.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"estimateCurrentSeniorLiquidity()","name":"estimateCurrentSeniorLiquidity","description":"Return the senior liquidity taking into account the current, unrealized, profits and losses.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The estimated senior liquidity.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"estimateCurrentSeniorTokenPrice()","name":"estimateCurrentSeniorTokenPrice","description":"Return the current senior token price taking into account the current, unrealized, profits and losses.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The estimated senior token price.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"exitJunior(uint256)","name":"exitJunior","description":"Signal the intention to leave the pool as a junior. User will join the exit queue and his junior tokens will be transferred back to the pool.Their tokens will be burned when the epoch is finalized and the underlying due will be set aside.Users can increase their queue amount but can't exit the queue.","parameterDecorators":[{"name":"amountJuniorTokens","description":"The amount of tokens the user wants to exit with.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"exitSenior(uint256)","name":"exitSenior","description":"Signal the intention to leave the pool as a senior. User will join the exit queue and his senior tokens will be transferred back to the pool.Their tokens will be burned when the epoch is finalized and the underlying due will be set aside.Users can increase their queue amount but can't exit the queue.","parameterDecorators":[{"name":"amountSeniorTokens","description":"The amount of tokens the user wants to exit with.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"feesAccrued()","name":"feesAccrued","description":"Calculate the total fees accrued. We consider fees any amount of underlying that is not accounted for in the epoch balance & queues.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"feesOwner()","name":"feesOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"feesPercentage()","name":"feesPercentage","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCurrentEpoch()","name":"getCurrentEpoch","description":"Calculates the current epoch based on the start of the first epoch and the epoch duration.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The id of the current epoch.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCurrentJuniorProfits()","name":"getCurrentJuniorProfits","description":"Calculates the junior profits based on current pool conditions. It always returns 0 if the price went down.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The amount, in pool tokens, that is considered profit for the juniors.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCurrentSeniorProfits()","name":"getCurrentSeniorProfits","description":"Calculates the junior losses (in other words, senior profits) based on the current pool conditions. It always returns 0 if the price went up.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The amount, in pool tokens, that is considered loss for the juniors.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getEpochJuniorTokenPrice()","name":"getEpochJuniorTokenPrice","description":"Return the price of the junior token for the current epoch. If there's no supply, it returns 1 (scaled by scaleFactor).It does not take into account the current profits and losses.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The price of a junior token in pool tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getEpochSeniorTokenPrice()","name":"getEpochSeniorTokenPrice","description":"Return the price of the senior token for the current epoch. If there's no supply, it returns 1 (scaled by scaleFactor).It does not take into account the current profits and losses.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The price of a senior token in pool tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"guardian()","name":"guardian","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"history_epochJuniorTokenPrice(uint256)","name":"history_epochJuniorTokenPrice","description":"history management.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"history_epochSeniorTokenPrice(uint256)","name":"history_epochSeniorTokenPrice","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address,address,address,address,uint256,uint256)","name":"initialize","description":"Initialize the SmartAlpha system. Junior and Senior tokens must be owner by this contract or the function will revert.","parameterDecorators":[{"name":"poolTokenAddr","description":"Address of the pool token.","recommendedTypes":[]},{"name":"oracleAddr","description":"Address of the price oracle for the pool token.","recommendedTypes":[]},{"name":"seniorRateModelAddr","description":"Address of the senior rate model (used to calculate upside exposure and downside protection rates).","recommendedTypes":[]},{"name":"accountingModelAddr","description":"Address of the accounting model (used to determine the junior or senior losses for an epoch).","recommendedTypes":[]},{"name":"juniorTokenAddr","description":"Address of the junior token (ERC20).","recommendedTypes":[]},{"name":"seniorTokenAddr","description":"Address of the senior token (ERC20).","recommendedTypes":[]},{"name":"_epoch1Start","description":"Timestamp at which the first epoch begins.","recommendedTypes":[]},{"name":"_epochDuration","description":"Duration of the epoch in seconds.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialized()","name":"initialized","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"juniorEntryQueue(address)","name":"juniorEntryQueue","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"epoch","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"juniorExitQueue(address)","name":"juniorExitQueue","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"epoch","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"juniorToken()","name":"juniorToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pauseSystem()","name":"pauseSystem","description":"Pause the deposits into the system. Callable by DAO or Guardian. It will block any junior & senior deposits until resumed.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"poolToken()","name":"poolToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"priceOracle()","name":"priceOracle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"queuedJuniorTokensBurn()","name":"queuedJuniorTokensBurn","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"queuedJuniorsUnderlyingIn()","name":"queuedJuniorsUnderlyingIn","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"queuedJuniorsUnderlyingOut()","name":"queuedJuniorsUnderlyingOut","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"queuedSeniorTokensBurn()","name":"queuedSeniorTokensBurn","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"queuedSeniorsUnderlyingIn()","name":"queuedSeniorsUnderlyingIn","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"queuedSeniorsUnderlyingOut()","name":"queuedSeniorsUnderlyingOut","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"redeemJuniorTokens()","name":"redeemJuniorTokens","description":"Redeem the junior tokens generated for a user that participated in the queue at a specific epoch. User will receive an amount of junior tokens corresponding to his underlying balance converted at the price the epoch was finalizedThis only works for past epochs and will revert if called for current or future epochs.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"redeemJuniorUnderlying()","name":"redeemJuniorUnderlying","description":"Redeem the underlying for an exited epoch. Only works if the user signaled the intention to exit the pool by entering the queue for that epoch.Can only be called for a previous epoch and will revert for current and future epochs.At this point, the junior tokens were burned by the contract and the underlying was set aside.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"redeemSeniorTokens()","name":"redeemSeniorTokens","description":"Redeem the senior tokens generated for a user that participated in the queue at a specific epoch. User will receive an amount of senior tokens corresponding to his underlying balance converted at the price the epoch was finalizedThis only works for past epochs and will revert if called for current or future epochs.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"redeemSeniorUnderlying()","name":"redeemSeniorUnderlying","description":"Redeem the underlying for an exited epoch. Only works if the user signaled the intention to exit the pool by entering the queue for that epoch.Can only be called for a previous epoch and will revert for current and future epochs.At this point, the senior tokens were burned by the contract and the underlying was set aside.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"resumeSystem()","name":"resumeSystem","description":"Resume the deposits into the system. Callable by DAO or Guardian. It will resume deposits.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"scaleFactor()","name":"scaleFactor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"seniorEntryQueue(address)","name":"seniorEntryQueue","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"epoch","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"seniorExitQueue(address)","name":"seniorExitQueue","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"epoch","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"seniorRateModel()","name":"seniorRateModel","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"seniorToken()","name":"seniorToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setAccountingModel(address)","name":"setAccountingModel","description":"Change the accounting model contract. Only callable by DAO. The address of the new contract must have code.","parameterDecorators":[{"name":"newModel","description":"The address of the new model.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setFeesOwner(address)","name":"setFeesOwner","description":"Change the owner of the fees. Only callable by DAO. The new owner must not be 0 address.","parameterDecorators":[{"name":"newOwner","description":"The address to which fees will be transferred.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setFeesPercentage(uint256)","name":"setFeesPercentage","description":"Change the percentage of the fees applied. Only callable by DAO. If the percentage is greater than 0, it must also have a fees owner.","parameterDecorators":[{"name":"percentage","description":"The percentage of profits to be taken as fee.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPriceOracle(address)","name":"setPriceOracle","description":"Change the price oracle. Only callable by DAO. The address of the new price oracle must have contract code.","parameterDecorators":[{"name":"newPriceOracle","description":"The address of the new price oracle contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setSeniorRateModel(address)","name":"setSeniorRateModel","description":"Change the senior rate model contract. Only callable by DAO. The address of the new contract must have code.","parameterDecorators":[{"name":"newModel","description":"The address of the new model.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferDAO(address)","name":"transferDAO","description":"Transfer the DAO to a new address. Only callable by the current DAO. The new dao cannot be address(0) or the same dao.","parameterDecorators":[{"name":"newDAO","description":"The address of the new dao.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferFees()","name":"transferFees","description":"Transfer the accrued fees to the fees owner. Anyone can call but fees are transferred to fees owner. Reverts if no fees accrued.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferGuardian(address)","name":"transferGuardian","description":"Transfer the Guardian to a new address. Callable by the current DAO or the current Guardian. The new Guardian cannot be address(0) or the same as before.","parameterDecorators":[{"name":"newGuardian","description":"The address of the new Guardian.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"underlyingInQueues()","name":"underlyingInQueues","description":"Return the total amount of underlying in the queues.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"amount of underlying in the queues.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}