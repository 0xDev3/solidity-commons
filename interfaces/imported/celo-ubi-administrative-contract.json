{
  "schema": "../schema.json",
  "tags": [
    "celo network"
  ],
  "name": "UBIController",
  "description": "Celo UBI administrative contract. Administrative and orchestrator contract for the Celo UBI program.",
  "eventDecorators": [
    {
      "signature": "DisbursementUpdated(uint256)",
      "name": "DisbursementUpdated",
      "description": "Triggered when the disbursement amount is changed.",
      "parameterDecorators": [
        {
          "name": "_disbursementWei",
          "description": "New value of wei to disburse to beneficiaries.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "FactoryUpdated(address,address)",
      "name": "FactoryUpdated",
      "description": "Triggered when the UBI Beneficiary Factory is updated.",
      "parameterDecorators": [
        {
          "name": "_oldFactoryAddress",
          "description": "Old factory address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_newFactoryAddress",
          "description": "New factory address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NewUser(bytes32,address)",
      "name": "NewUser",
      "description": "Triggered when a new user has been created.",
      "parameterDecorators": [
        {
          "name": "_userId",
          "description": "Hashed bytes32 of the userId.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_ubiAddress",
          "description": "Celo address of the UBI Beneficiary.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "authBalanceOfUBIBeneficiary(bytes32)",
      "name": "authBalanceOfUBIBeneficiary",
      "description": "Retrieves the authorized balance of a UBI beneficiary.",
      "parameterDecorators": [
        {
          "name": "_userId",
          "description": "user identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint256 authorized balance.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "authorize(bytes32,string,uint256)",
      "name": "authorize",
      "description": "Authorizes an amount for a UBI beneficiary.",
      "parameterDecorators": [
        {
          "name": "_userId",
          "description": "User identifier.",
          "recommendedTypes": []
        },
        {
          "name": "_txId",
          "description": "Raw transaction ID for this event.",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "Amount to authorize.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceOfUBIBeneficiary(bytes32)",
      "name": "balanceOfUBIBeneficiary",
      "description": "Retrieves the available balance of a UBI beneficiary.",
      "parameterDecorators": [
        {
          "name": "_userId",
          "description": "user identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint256 available balance.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "beneficiaryAddress(bytes32)",
      "name": "beneficiaryAddress",
      "description": "retrieve contract address for a UBI Beneficiary.",
      "parameterDecorators": [
        {
          "name": "_userId",
          "description": "user identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address of user's contract.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cUBIAuthToken()",
      "name": "cUBIAuthToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cUSDToken()",
      "name": "cUSDToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deauthorize(bytes32,string)",
      "name": "deauthorize",
      "description": "Deauthorizes an amount for a UBI beneficiary.",
      "parameterDecorators": [
        {
          "name": "_userId",
          "description": "User identifier.",
          "recommendedTypes": []
        },
        {
          "name": "_txId",
          "description": "Raw transaction ID for this event.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "disbursementWei()",
      "name": "disbursementWei",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBeneficiaryAddressAtIndex(uint256)",
      "name": "getBeneficiaryAddressAtIndex",
      "description": "Get beneficiary address at index. Used for iterating the complete list of beneficiaries.",
      "parameterDecorators": [
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBeneficiaryCount()",
      "name": "getBeneficiaryCount",
      "description": "Get count of beneficiaries.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "newUbiBeneficiary(string)",
      "name": "newUbiBeneficiary",
      "description": "create a new user and assign them a wallet contract.",
      "parameterDecorators": [
        {
          "name": "_userId",
          "description": "user identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "Triggers stopped state. Requirements: The contract must not be paused.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reconcile()",
      "name": "reconcile",
      "description": "Reconciles cUSD built up in reconciliation account and sends to pre-configured custodian.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reconciliationAccount()",
      "name": "reconciliationAccount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCustodian(address)",
      "name": "setCustodian",
      "description": "Update the custodian address.",
      "parameterDecorators": [
        {
          "name": "_custodian",
          "description": "new custodian address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDemurrageParameters(uint256,uint256,uint256,uint256)",
      "name": "setDemurrageParameters",
      "description": "Update demurrage parameters. Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "_blocksInEpoch",
          "description": "Number of blocks in an epoch for this network.",
          "recommendedTypes": []
        },
        {
          "name": "_demurrageFreeEpochs",
          "description": "Number of epochs which are free of demurrage.",
          "recommendedTypes": []
        },
        {
          "name": "_demurrageNumerator",
          "description": "Numerator for demurrage ratio.",
          "recommendedTypes": []
        },
        {
          "name": "_demurrageDenominator",
          "description": "Denominator for demurrage ratio.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDisbursementWei(uint256)",
      "name": "setDisbursementWei",
      "description": "Set amount of wei to disburse to new beneficiaries.",
      "parameterDecorators": [
        {
          "name": "_newDisbursementWei",
          "description": "disbursement amount in wei.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setUBIBeneficiaryFactory(address)",
      "name": "setUBIBeneficiaryFactory",
      "description": "Public update to a new UBI Beneficiary Factory.",
      "parameterDecorators": [
        {
          "name": "_newFactoryAddress",
          "description": "new factory address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "settle(bytes32,string,uint256)",
      "name": "settle",
      "description": "Settles an amount for a UBI Beneficiary and transfers to the Reconciliation account.",
      "parameterDecorators": [
        {
          "name": "_userId",
          "description": "User identifier.",
          "recommendedTypes": []
        },
        {
          "name": "_txId",
          "description": "Raw transaction ID for this event.",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "Amount to settle.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner. In this override, we iterate all the existing UBIBeneficiary contracts and change their owner before changing the owner of the core contract.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "new owner of this contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ubiFactory()",
      "name": "ubiFactory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "Returns to normal state. Requirements: The contract must be paused.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateBeneficiaryImplementation(address)",
      "name": "updateBeneficiaryImplementation",
      "description": "Update implementation address for beneficiaries.",
      "parameterDecorators": [
        {
          "name": "_newLogic",
          "description": "New implementation logic for beneficiary proxies.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateReconciliationImplementation(address)",
      "name": "updateReconciliationImplementation",
      "description": "Update implementation address for reconciliationAccount.",
      "parameterDecorators": [
        {
          "name": "_newLogic",
          "description": "New implementation logic for reconciliationAccount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawToCustodian()",
      "name": "withdrawToCustodian",
      "description": "Emergency withdrawal of all remaining cUSD to the custodian account. The contract must be pausedSends cUSD to current custodian from the current reconciliation account.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawToOwner()",
      "name": "withdrawToOwner",
      "description": "Emergency withdrawal of all remaining cUSD to the owner account. The contract must be pausedSends cUSD to current owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}