{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "escrows"
  ],
  "name": "RewardsEscrow",
  "description": "A holder of tokens to be distributed via a Geyser. Used in cases when a staking asset address is not known at the time of staking geyser creation. Owner must be trusted to set the correct staking asset and distribute the tokens to the geyser.",
  "eventDecorators": [
    {
      "signature": "Approve(address)",
      "name": "Approve",
      "description": "deprecated, backward compatibility, use `ConverterAnchorRemoved`.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Call(address,uint256,bytes)",
      "name": "Call",
      "description": "deprecated, backward compatibility, use `ConverterAnchorRemoved`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "deprecated, backward compatibility, use `ConverterAnchorRemoved`.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RevokeApproval(address)",
      "name": "RevokeApproval",
      "description": "deprecated, backward compatibility, use `ConverterAnchorRemoved`.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "approveRecipient(address)",
      "name": "approveRecipient",
      "description": "===== Permissioned Functions: Owner =====.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "call(address,uint256,bytes)",
      "name": "call",
      "description": "Allows the timelock to call arbitrary contracts, as long as it does not reduce it's locked token balance. Initialization check is implicitly provided by `voteExists()` as new votes can only be created via `newVote(),` which requires initialization.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "Contract address to call.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "ETH value to send, if any.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Encoded data to send.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize()",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isApproved(address)",
      "name": "isApproved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeRecipient(address)",
      "name": "revokeRecipient",
      "description": "",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "signalTokenLock(address,address,uint256,uint256,uint256)",
      "name": "signalTokenLock",
      "description": "",
      "parameterDecorators": [
        {
          "name": "geyser",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "durationSec",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transfer(address,address,uint256)",
      "name": "transfer",
      "description": "Send tokens to a distribution pool.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}