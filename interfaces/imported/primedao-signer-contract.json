{"schema":"../schema.json","tags":["dao","gnosis"],"name":"SignerV2","description":"PrimeDAO Signer Contract. Enables signing approved function signature transaction before sending it to Gnosis Safe.","eventDecorators":[{"signature":"SignatureCreated(bytes,bytes32)","name":"SignatureCreated","description":"This event is emitted when a token swap is executed.","parameterDecorators":[{"name":"signature","description":"","recommendedTypes":[],"indexed":false},{"name":"hash","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"allowedTransactions(address,bytes4)","name":"allowedTransactions","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"approveNewTransaction(address,bytes4)","name":"approveNewTransaction","description":"add new contracts and functions.","parameterDecorators":[{"name":"_contract","description":"contract address.","recommendedTypes":[]},{"name":"_functionSignature","description":"function signature for the contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"approvedSignatures(bytes32)","name":"approvedSignatures","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"generateSignature(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)","name":"generateSignature","description":"Signature generator.","parameterDecorators":[{"name":"_to","description":"receiver address.","recommendedTypes":[]},{"name":"_value","description":"value in wei.","recommendedTypes":[]},{"name":"_data","description":"encoded transaction data.","recommendedTypes":[]},{"name":"_operation","description":"type of operation call.","recommendedTypes":[]},{"name":"_safeTxGas","description":"safe transaction gas for gnosis safe.","recommendedTypes":[]},{"name":"_baseGas","description":"base gas for gnosis safe.","recommendedTypes":[]},{"name":"_gasPrice","description":"gas price for gnosis safe transaction.","recommendedTypes":[]},{"name":"_gasToken","description":"token which gas needs to paid for gnosis safe transaction.","recommendedTypes":[]},{"name":"_refundReceiver","description":"address account to receive refund for remaining gas.","recommendedTypes":[]},{"name":"_nonce","description":"gnosis safe contract nonce.","recommendedTypes":[]}],"returnDecorators":[{"name":"signature","description":"","recommendedTypes":[],"solidityType":"bytes"},{"name":"hash","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"isValidSignature(bytes,bytes)","name":"isValidSignature","description":"Validate signature using EIP1271.","parameterDecorators":[{"name":"_data","description":"Encoded transaction hash supplied to verify signature.","recommendedTypes":[]},{"name":"_signature","description":"Signature that needs to be verified.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":true},{"signature":"removeAllowedTransaction(address,bytes4)","name":"removeAllowedTransaction","description":"add new contracts and functions.","parameterDecorators":[{"name":"_contract","description":"contract address.","recommendedTypes":[]},{"name":"_functionSignature","description":"function signature for the contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"safe()","name":"safe","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setSafe(address)","name":"setSafe","description":"set new safe.","parameterDecorators":[{"name":"_safe","description":"safe address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}