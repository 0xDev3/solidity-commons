{
  "schema": "../schema.json",
  "tags": [],
  "name": "Depot",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CacheUpdated(bytes32,address)",
      "name": "CacheUpdated",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "destination",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ClearedDeposit(address,address,uint256,uint256,uint256)",
      "name": "ClearedDeposit",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "fromAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fromETHAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "toAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "depositIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Exchange(string,uint256,string,uint256)",
      "name": "Exchange",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "fromCurrency",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fromAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "toCurrency",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "toAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FundsWalletUpdated(address)",
      "name": "FundsWalletUpdated",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "newFundsWallet",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MaxEthPurchaseUpdated(uint256)",
      "name": "MaxEthPurchaseUpdated",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MinimumDepositAmountUpdated(uint256)",
      "name": "MinimumDepositAmountUpdated",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NonPayableContract(address,uint256)",
      "name": "NonPayableContract",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnerChanged(address,address)",
      "name": "OwnerChanged",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "oldOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnerNominated(address)",
      "name": "OwnerNominated",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PauseChanged(bool)",
      "name": "PauseChanged",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "isPaused",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SynthDeposit(address,uint256,uint256)",
      "name": "SynthDeposit",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "depositIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SynthDepositNotAccepted(address,uint256,uint256)",
      "name": "SynthDepositNotAccepted",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "minimum",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SynthDepositRemoved(address,uint256,uint256)",
      "name": "SynthDepositRemoved",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "depositIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SynthWithdrawal(address,uint256)",
      "name": "SynthWithdrawal",
      "description": "The event emitted when the stored price is updated.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptOwnership()",
      "name": "acceptOwnership",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositEndIndex()",
      "name": "depositEndIndex",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "depositStartIndex()",
      "name": "depositStartIndex",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "depositSynths(uint256)",
      "name": "depositSynths",
      "description": "depositSynths: Allows users to deposit synths via the approve / transferFrom workflow.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of sUSD you wish to deposit (must have been approved first).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deposits(uint256)",
      "name": "deposits",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "exchangeEtherForSNX()",
      "name": "exchangeEtherForSNX",
      "description": "Exchange ETH to SNX.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exchangeEtherForSNXAtRate(uint256,uint256)",
      "name": "exchangeEtherForSNXAtRate",
      "description": "Exchange ETH to SNX while insisting on a particular set of rates. This allows a user to exchange while protecting against frontrunning by the contract owner on the exchange rates.",
      "parameterDecorators": [
        {
          "name": "guaranteedEtherRate",
          "description": "The ether exchange rate which must be honored or the call will revert.",
          "recommendedTypes": []
        },
        {
          "name": "guaranteedSynthetixRate",
          "description": "The synthetix exchange rate which must be honored or the call will revert.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exchangeEtherForSynths()",
      "name": "exchangeEtherForSynths",
      "description": "Exchange ETH to sUSD.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exchangeEtherForSynthsAtRate(uint256)",
      "name": "exchangeEtherForSynthsAtRate",
      "description": "Exchange ETH to sUSD while insisting on a particular rate. This allows a user to exchange while protecting against frontrunning by the contract owner on the exchange rate.",
      "parameterDecorators": [
        {
          "name": "guaranteedRate",
          "description": "The exchange rate (ether price) which must be honored or the call will revert.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exchangeSynthsForSNX(uint256)",
      "name": "exchangeSynthsForSNX",
      "description": "Exchange sUSD for SNX.",
      "parameterDecorators": [
        {
          "name": "synthAmount",
          "description": "The amount of synths the user wishes to exchange.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exchangeSynthsForSNXAtRate(uint256,uint256)",
      "name": "exchangeSynthsForSNXAtRate",
      "description": "Exchange sUSD for SNX while insisting on a particular rate. This allows a user to exchange while protecting against frontrunning by the contract owner on the exchange rate.",
      "parameterDecorators": [
        {
          "name": "synthAmount",
          "description": "The amount of synths the user wishes to exchange.",
          "recommendedTypes": []
        },
        {
          "name": "guaranteedRate",
          "description": "A rate (synthetix price) the caller wishes to insist upon.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fundsWallet()",
      "name": "fundsWallet",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isResolverCached()",
      "name": "isResolverCached",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastPauseTime()",
      "name": "lastPauseTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxEthPurchase()",
      "name": "maxEthPurchase",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minimumDepositAmount()",
      "name": "minimumDepositAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nominateNewOwner(address)",
      "name": "nominateNewOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "nominatedOwner()",
      "name": "nominatedOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rebuildCache()",
      "name": "rebuildCache",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "resolver()",
      "name": "resolver",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "resolverAddressesRequired()",
      "name": "resolverAddressesRequired",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "addresses",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setFundsWallet(address)",
      "name": "setFundsWallet",
      "description": "Set the funds wallet where ETH raised is held.",
      "parameterDecorators": [
        {
          "name": "_fundsWallet",
          "description": "The new address to forward ETH and Synths to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaxEthPurchase(uint256)",
      "name": "setMaxEthPurchase",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_maxEthPurchase",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMinimumDepositAmount(uint256)",
      "name": "setMinimumDepositAmount",
      "description": "Set the minimum deposit amount required to depoist sUSD into the FIFO queue.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "The new new minimum number of sUSD required to deposit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPaused(bool)",
      "name": "setPaused",
      "description": "Change the paused state of the contract. Only the contract owner may call this.",
      "parameterDecorators": [
        {
          "name": "_paused",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "smallDeposits(address)",
      "name": "smallDeposits",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "synthetixReceivedForEther(uint256)",
      "name": "synthetixReceivedForEther",
      "description": "Calculate how many SNX you will receive if you transfer an amount of ether.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of ether (in wei) you want to ask about.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "synthetixReceivedForSynths(uint256)",
      "name": "synthetixReceivedForSynths",
      "description": "Calculate how many SNX you will receive if you transfer an amount of synths.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of synths (in 18 decimal places) you want to ask about.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "synthsReceivedForEther(uint256)",
      "name": "synthsReceivedForEther",
      "description": "Calculate how many synths you will receive if you transfer an amount of ether.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of ether (in wei) you want to ask about.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSellableDeposits()",
      "name": "totalSellableDeposits",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawMyDepositedSynths()",
      "name": "withdrawMyDepositedSynths",
      "description": "Allows a user to withdraw all of their previously deposited synths from this contract if needed. Developer note: We could keep an index of address to deposits to make this operation more efficient but then all the other operations on the queue become less efficient. It's expected that this function will be very rarely used, so placing the inefficiency here is intentional. The usual use case does not involve a withdrawal.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawSynthetix(uint256)",
      "name": "withdrawSynthetix",
      "description": "Allows the owner to withdraw SNX from this contract if needed.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of SNX to attempt to withdraw (in 18 decimal places).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}