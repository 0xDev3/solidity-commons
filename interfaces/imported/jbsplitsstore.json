{
  "schema": "../schema.json",
  "tags": [],
  "name": "JBSplitsStore",
  "description": "Stores splits for each project.",
  "eventDecorators": [
    {
      "signature": "SetSplit(uint256,uint256,uint256,tuple,address)",
      "name": "SetSplit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "domain",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "group",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "split",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "directory()",
      "name": "directory",
      "description": "The directory of terminals and controllers for projects.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "operatorStore()",
      "name": "operatorStore",
      "description": "A contract storing operator assignments.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "projects()",
      "name": "projects",
      "description": "The Projects contract which mints ERC-721's that represent project ownership and transfers.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "set(uint256,uint256,uint256,tuple(bool,uint256,uint256,address,uint256,address)[])",
      "name": "set",
      "description": "Sets a project's splits. Only the owner or operator of a project, or the current controller contract of the project, can set its splits.The new splits must include any currently set splits that are locked.",
      "parameterDecorators": [
        {
          "name": "_projectId",
          "description": "The ID of the project for which splits are being added.",
          "recommendedTypes": []
        },
        {
          "name": "_domain",
          "description": "An identifier within which the splits should be considered active.",
          "recommendedTypes": []
        },
        {
          "name": "_group",
          "description": "An identifier between of splits being set. All splits within this _group must add up to within 100%.",
          "recommendedTypes": []
        },
        {
          "name": "_splits",
          "description": "The splits to set.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "preferClaimed",
              "description": "",
              "type": "bool"
            },
            {
              "name": "percent",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "projectId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "beneficiary",
              "description": "",
              "type": "address"
            },
            {
              "name": "lockedUntil",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "allocator",
              "description": "",
              "type": "address"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "splitsOf(uint256,uint256,uint256)",
      "name": "splitsOf",
      "description": "Get all splits for the specified project ID, within the specified domain, for the specified group.",
      "parameterDecorators": [
        {
          "name": "_projectId",
          "description": "The ID of the project to get splits for.",
          "recommendedTypes": []
        },
        {
          "name": "_domain",
          "description": "An identifier within which the returned splits should be considered active.",
          "recommendedTypes": []
        },
        {
          "name": "_group",
          "description": "The identifying group of the splits.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "An array of all splits for the project.",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}