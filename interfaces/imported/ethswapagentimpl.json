{
  "schema": "../schema.json",
  "tags": [
    "swaps"
  ],
  "name": "ETHSwapAgentImpl",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Token transfer event.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SwapFilled(address,bytes32,address,uint256)",
      "name": "SwapFilled",
      "description": "Token transfer event.",
      "parameterDecorators": [
        {
          "name": "erc20Addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "bscTxHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "is Number of token transfers.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SwapPairRegister(address,address,string,string,uint8)",
      "name": "SwapPairRegister",
      "description": "Token transfer event.",
      "parameterDecorators": [
        {
          "name": "sponsor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "erc20Addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "symbol",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "decimals",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SwapStarted(address,address,uint256,uint256)",
      "name": "SwapStarted",
      "description": "Token transfer event.",
      "parameterDecorators": [
        {
          "name": "erc20Addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fromAddr",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "is Number of token transfers.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "feeAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "fillBSC2ETHSwap(bytes32,address,address,uint256)",
      "name": "fillBSC2ETHSwap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "bscTxHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "erc20Addr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "filledBSCTx(bytes32)",
      "name": "filledBSCTx",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registerSwapPairToBSC(address)",
      "name": "registerSwapPairToBSC",
      "description": "",
      "parameterDecorators": [
        {
          "name": "erc20Addr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registeredERC20(address)",
      "name": "registeredERC20",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSwapFee(uint256)",
      "name": "setSwapFee",
      "description": "Returns set minimum swap fee from ERC20 to BEP20.",
      "parameterDecorators": [
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapETH2BSC(address,uint256)",
      "name": "swapETH2BSC",
      "description": "",
      "parameterDecorators": [
        {
          "name": "erc20Addr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapFee()",
      "name": "swapFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}