{
  "schema": "../schema.json",
  "tags": [],
  "name": "Guesser",
  "description": "",
  "eventDecorators": [
    {
      "signature": "LockInGuess(bool,uint8)",
      "name": "LockInGuess",
      "description": "Event for token purchase logging. Emitted that client terminates the service if the hash(s1) is wrong. Or cloud terminates the service if client does not confirms hash(s1) in time.",
      "parameterDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "number",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NumberGenerated(uint8)",
      "name": "NumberGenerated",
      "description": "Event for token purchase logging. Emitted that client terminates the service if the hash(s1) is wrong. Or cloud terminates the service if client does not confirms hash(s1) in time.",
      "parameterDecorators": [
        {
          "name": "number",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Receive(uint256)",
      "name": "Receive",
      "description": "Event for token purchase logging. Emitted that client terminates the service if the hash(s1) is wrong. Or cloud terminates the service if client does not confirms hash(s1) in time.",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Settled(bool)",
      "name": "Settled",
      "description": "Event for token purchase logging. Emitted that client terminates the service if the hash(s1) is wrong. Or cloud terminates the service if client does not confirms hash(s1) in time.",
      "parameterDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "lockInGuess()",
      "name": "lockInGuess",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "settle()",
      "name": "settle",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "settlementBlockNumber()",
      "name": "settlementBlockNumber",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}