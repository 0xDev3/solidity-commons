{
  "schema": "../schema.json",
  "tags": [
    "flash loans",
    "loans"
  ],
  "name": "MCDSaverFlashLoan",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "AUTOMATIC_SERVICE_FEE()",
      "name": "AUTOMATIC_SERVICE_FEE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "BOT_REGISTRY_ADDRESS()",
      "name": "BOT_REGISTRY_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DAI_ADDRESS()",
      "name": "DAI_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DAI_JOIN_ADDRESS()",
      "name": "DAI_JOIN_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DISCOUNT_ADDRESS()",
      "name": "DISCOUNT_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_DEST_AMOUNT_MISSING()",
      "name": "ERR_DEST_AMOUNT_MISSING",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_NOT_ZEROX_EXCHANGE()",
      "name": "ERR_NOT_ZEROX_EXCHANGE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_OFFCHAIN_DATA_INVALID()",
      "name": "ERR_OFFCHAIN_DATA_INVALID",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_SLIPPAGE_HIT()",
      "name": "ERR_SLIPPAGE_HIT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_WRAPPER_INVALID()",
      "name": "ERR_WRAPPER_INVALID",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ETH_ILK()",
      "name": "ETH_ILK",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "EXCHANGE_WETH_ADDRESS()",
      "name": "EXCHANGE_WETH_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "JUG_ADDRESS()",
      "name": "JUG_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "KYBER_ETH_ADDRESS()",
      "name": "KYBER_ETH_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "LENDING_POOL_ADDRESS_PROVIDER()",
      "name": "LENDING_POOL_ADDRESS_PROVIDER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MANUAL_SERVICE_FEE()",
      "name": "MANUAL_SERVICE_FEE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SAVER_EXCHANGE_REGISTRY()",
      "name": "SAVER_EXCHANGE_REGISTRY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SPOTTER_ADDRESS()",
      "name": "SPOTTER_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "VAT_ADDRESS()",
      "name": "VAT_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WALLET_ID()",
      "name": "WALLET_ID",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ZRX_ALLOWLIST_ADDR()",
      "name": "ZRX_ALLOWLIST_ADDR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addressesProvider()",
      "name": "addressesProvider",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "admin()",
      "name": "admin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "boost(tuple(address,address,uint256,uint256,uint256,uint256,address,address,bytes,tuple),uint256,uint256,address,uint8)",
      "name": "boost",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exchangeData",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "type": "address"
            },
            {
              "name": "destAddr",
              "description": "",
              "type": "address"
            },
            {
              "name": "srcAmount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "destAmount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "minPrice",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "dfsFeeDivider",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "user",
              "description": "",
              "type": "address"
            },
            {
              "name": "wrapper",
              "description": "",
              "type": "address"
            },
            {
              "name": "wrapperData",
              "description": "",
              "type": "bytes"
            },
            {
              "name": "offchainData",
              "description": "",
              "type": "tuple"
            }
          ]
        },
        {
          "name": "_cdpId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_gasCost",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_joinAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_managerType",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "daiJoin()",
      "name": "daiJoin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "executeOperation(address,uint256,uint256,bytes)",
      "name": "executeOperation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_reserve",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_params",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getCdpInfo(address,uint256,bytes32)",
      "name": "getCdpInfo",
      "description": "Gets CDP info (collateral, debt).",
      "parameterDecorators": [
        {
          "name": "_manager",
          "description": "Manager contract.",
          "recommendedTypes": []
        },
        {
          "name": "_cdpId",
          "description": "Id of the CDP.",
          "recommendedTypes": []
        },
        {
          "name": "_ilk",
          "description": "Ilk of the CDP.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getManagerAddr(uint8)",
      "name": "getManagerAddr",
      "description": "Based on the manager type returns the address.",
      "parameterDecorators": [
        {
          "name": "_managerType",
          "description": "Type of vault manager to use.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMaxCollateral(address,uint256,bytes32,address)",
      "name": "getMaxCollateral",
      "description": "Gets the maximum amount of collateral available to draw. Substracts 10 wei to aviod rounding error later on.",
      "parameterDecorators": [
        {
          "name": "_managerAddr",
          "description": "Address of the CDP Manager.",
          "recommendedTypes": []
        },
        {
          "name": "_cdpId",
          "description": "Id of the CDP.",
          "recommendedTypes": []
        },
        {
          "name": "_ilk",
          "description": "Ilk of the CDP.",
          "recommendedTypes": []
        },
        {
          "name": "_joinAddr",
          "description": "Joind address of collateral.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMaxDebt(address,uint256,bytes32)",
      "name": "getMaxDebt",
      "description": "Gets the maximum amount of debt available to generate. Substracts 10 wei to aviod rounding error later on.",
      "parameterDecorators": [
        {
          "name": "_managerAddr",
          "description": "Address of the CDP Manager.",
          "recommendedTypes": []
        },
        {
          "name": "_cdpId",
          "description": "Id of the CDP.",
          "recommendedTypes": []
        },
        {
          "name": "_ilk",
          "description": "Ilk of the CDP.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOwner(address,uint256)",
      "name": "getOwner",
      "description": "Address that owns the DSProxy that owns the CDP.",
      "parameterDecorators": [
        {
          "name": "_manager",
          "description": "Manager contract.",
          "recommendedTypes": []
        },
        {
          "name": "_cdpId",
          "description": "Id of the CDP.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPrice(bytes32)",
      "name": "getPrice",
      "description": "Gets a price of the asset.",
      "parameterDecorators": [
        {
          "name": "_ilk",
          "description": "Ilk of the CDP.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "kill()",
      "name": "kill",
      "description": "Destroy the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "logger()",
      "name": "logger",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "packExchangeData(tuple(address,address,uint256,uint256,uint256,uint256,address,address,bytes,tuple))",
      "name": "packExchangeData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exData",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "type": "address"
            },
            {
              "name": "destAddr",
              "description": "",
              "type": "address"
            },
            {
              "name": "srcAmount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "destAmount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "minPrice",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "dfsFeeDivider",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "user",
              "description": "",
              "type": "address"
            },
            {
              "name": "wrapper",
              "description": "",
              "type": "address"
            },
            {
              "name": "wrapperData",
              "description": "",
              "type": "bytes"
            },
            {
              "name": "offchainData",
              "description": "",
              "type": "tuple"
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "repay(tuple(address,address,uint256,uint256,uint256,uint256,address,address,bytes,tuple),uint256,uint256,address,uint8)",
      "name": "repay",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exchangeData",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "type": "address"
            },
            {
              "name": "destAddr",
              "description": "",
              "type": "address"
            },
            {
              "name": "srcAmount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "destAmount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "minPrice",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "dfsFeeDivider",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "user",
              "description": "",
              "type": "address"
            },
            {
              "name": "wrapper",
              "description": "",
              "type": "address"
            },
            {
              "name": "wrapperData",
              "description": "",
              "type": "bytes"
            },
            {
              "name": "offchainData",
              "description": "",
              "type": "tuple"
            }
          ]
        },
        {
          "name": "_cdpId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_gasCost",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_joinAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_managerType",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAdminByAdmin(address)",
      "name": "setAdminByAdmin",
      "description": "Admin is able to set new admin.",
      "parameterDecorators": [
        {
          "name": "_admin",
          "description": "Address of multisig that becomes new admin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAdminByOwner(address)",
      "name": "setAdminByOwner",
      "description": "Admin is set by owner first time, after that admin is super role and has permission to change owner.",
      "parameterDecorators": [
        {
          "name": "_admin",
          "description": "Address of multisig that becomes admin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOwnerByAdmin(address)",
      "name": "setOwnerByAdmin",
      "description": "Admin is able to change owner.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "Address of new owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "spotter()",
      "name": "spotter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unpackExchangeData(bytes)",
      "name": "unpackExchangeData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_exData",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vat()",
      "name": "vat",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawStuckFunds(address,uint256)",
      "name": "withdrawStuckFunds",
      "description": "withdraw stuck funds.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}