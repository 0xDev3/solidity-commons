{"schema":"../schema.json","tags":["gnosis"],"name":"GnosisSafeProxyFactory","description":"Proxy Factory - Allows to create new proxy contact and execute a message call to the new proxy within one transaction.","eventDecorators":[{"signature":"ProxyCreation(address,address)","name":"ProxyCreation","description":"Event emitted when an ownership transfer request is accepted by the pending owner. Emitted when maximum value of ETH is raised.","parameterDecorators":[{"name":"proxy","description":"","recommendedTypes":[],"indexed":false},{"name":"singleton","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"calculateCreateProxyWithNonceAddress(address,bytes,uint256)","name":"calculateCreateProxyWithNonceAddress","description":"Allows to get the address for a new proxy contact created via `createProxyWithNonce` This method is only meant for address calculation purpose when you use an initializer that would revert, therefore the response is returned with a revert. When calling this method set `from` to the address of the proxy factory.","parameterDecorators":[{"name":"_singleton","description":"Address of singleton contract.","recommendedTypes":[]},{"name":"initializer","description":"Payload for message call sent to new proxy contract.","recommendedTypes":[]},{"name":"saltNonce","description":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.","recommendedTypes":[]}],"returnDecorators":[{"name":"proxy","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"createProxy(address,bytes)","name":"createProxy","description":"Allows to create new proxy contact and execute a message call to the new proxy within one transaction.","parameterDecorators":[{"name":"singleton","description":"Address of singleton contract.","recommendedTypes":[]},{"name":"data","description":"Payload for message call sent to new proxy contract.","recommendedTypes":[]}],"returnDecorators":[{"name":"proxy","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"createProxyWithCallback(address,bytes,uint256,address)","name":"createProxyWithCallback","description":"Allows to create new proxy contact, execute a message call to the new proxy and call a specified callback within one transaction.","parameterDecorators":[{"name":"_singleton","description":"Address of singleton contract.","recommendedTypes":[]},{"name":"initializer","description":"Payload for message call sent to new proxy contract.","recommendedTypes":[]},{"name":"saltNonce","description":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.","recommendedTypes":[]},{"name":"callback","description":"Callback that will be invoked after the new proxy contract has been successfully deployed and initialized.","recommendedTypes":[]}],"returnDecorators":[{"name":"proxy","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"createProxyWithNonce(address,bytes,uint256)","name":"createProxyWithNonce","description":"Allows to create new proxy contact and execute a message call to the new proxy within one transaction.","parameterDecorators":[{"name":"_singleton","description":"Address of singleton contract.","recommendedTypes":[]},{"name":"initializer","description":"Payload for message call sent to new proxy contract.","recommendedTypes":[]},{"name":"saltNonce","description":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.","recommendedTypes":[]}],"returnDecorators":[{"name":"proxy","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"proxyCreationCode()","name":"proxyCreationCode","description":"Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"proxyRuntimeCode()","name":"proxyRuntimeCode","description":"Allows to retrieve the runtime code of a deployed Proxy. This can be used to check that the expected Proxy was deployed.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true}]}