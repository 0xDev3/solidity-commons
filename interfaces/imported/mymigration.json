{"schema":"../schema.json","tags":[],"name":"MyMigration","description":"","eventDecorators":[{"signature":"TokenMigrated(address,uint256,uint256)","name":"TokenMigrated","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false},{"name":"legacyTokenId","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"BURN_ADDRESS()","name":"BURN_ADDRESS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"NEW_CONTRACT()","name":"NEW_CONTRACT","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"OPENSEA_STORE()","name":"OPENSEA_STORE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"_getInternalTokenId(uint256)","name":"_getInternalTokenId","description":"Retrieves the internal token ID from a legacy token ID in OpenSea format. - Requires the format of the legacyTokenId to match OpenSea format - Requires the encoded maker address to be the original minter.","parameterDecorators":[{"name":"legacyTokenId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"The OpenSea internal token ID. Thanks CyberKongz for the insights into OpenSea IDs!.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"convertInternalToNewId(uint256)","name":"convertInternalToNewId","description":"","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)","name":"onERC1155BatchReceived","description":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","parameterDecorators":[{"name":"operator","description":"The address which initiated the batch transfer (i.e. msg.sender).","recommendedTypes":[]},{"name":"from","description":"The address which previously owned the token.","recommendedTypes":[]},{"name":"ids","description":"An array containing ids of each token being transferred (order and length must match values array).","recommendedTypes":[]},{"name":"values","description":"An array containing amounts of each token being transferred (order and length must match ids array).","recommendedTypes":[]},{"name":"data","description":"Additional data with no specified format.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"onERC1155Received(address,address,uint256,uint256,bytes)","name":"onERC1155Received","description":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","parameterDecorators":[{"name":"operator","description":"The address which initiated the transfer (i.e. msg.sender).","recommendedTypes":[]},{"name":"from","description":"The address which previously owned the token.","recommendedTypes":[]},{"name":"id","description":"The ID of the token being transferred.","recommendedTypes":[]},{"name":"value","description":"The amount of tokens being transferred.","recommendedTypes":[]},{"name":"data","description":"Additional data with no specified format.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true}]}