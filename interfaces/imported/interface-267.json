{"schema":"../schema.json","tags":["tokens"],"name":"MarbleDutchAuction","description":"Dutch auction for non-fungible tokens created by Marble.Cards.","eventDecorators":[{"signature":"AuctioneerCutChanged(uint256)","name":"AuctioneerCutChanged","description":"","parameterDecorators":[{"name":"_auctioneerCut","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AuctioneerDelayedCancelCutChanged(uint256)","name":"AuctioneerDelayedCancelCutChanged","description":"","parameterDecorators":[{"name":"_auctioneerDelayedCancelCut","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AuctionRemoved(uint256)","name":"AuctionRemoved","description":"","parameterDecorators":[{"name":"_tokenId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AuctionCreated(uint256,address,uint256,uint256,uint256,bool)","name":"AuctionCreated","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false},{"name":"seller","description":"","recommendedTypes":[],"indexed":false},{"name":"startingPrice","description":"","recommendedTypes":[],"indexed":false},{"name":"endingPrice","description":"","recommendedTypes":[],"indexed":false},{"name":"duration","description":"","recommendedTypes":[],"indexed":false},{"name":"delayedCancel","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AuctionSuccessful(uint256,uint256,address)","name":"AuctionSuccessful","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false},{"name":"totalPrice","description":"","recommendedTypes":[],"indexed":false},{"name":"winner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AuctionCancelled(uint256)","name":"AuctionCancelled","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Pause()","name":"Pause","description":"","parameterDecorators":[]},{"signature":"Unpause()","name":"Unpause","description":"","parameterDecorators":[]},{"signature":"Withdraw(uint256)","name":"Withdraw","description":"","parameterDecorators":[{"name":"balance","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"Function to check which interfaces are suported by this contract.","parameterDecorators":[{"name":"_interfaceID","description":"Id of the interface.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenOfSellerByIndex(address,uint256)","name":"tokenOfSellerByIndex","description":"returns the n-th NFT ID from a list of owner's tokens.","parameterDecorators":[{"name":"_seller","description":"Token owner's address.","recommendedTypes":[]},{"name":"_index","description":"Index number representing n-th token in owner's list of tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenInAuctionByIndex(uint256)","name":"tokenInAuctionByIndex","description":"Returns NFT ID by its index.","parameterDecorators":[{"name":"_index","description":"A counter less than `totalSupply()`.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"adminList(uint256)","name":"adminList","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"totalAuctions()","name":"totalAuctions","description":"Returns the count of all existing auctions.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"removeAdmin(address)","name":"removeAdmin","description":"Removes special rights for provided address.","parameterDecorators":[{"name":"adminAddress","description":"- address of current admin.","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"isAdmin(address)","name":"isAdmin","description":"Returns true, if provided address has special privilages, otherwise false.","parameterDecorators":[{"name":"adminAddress","description":"- address to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"isIndeed","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"removeAuction(uint256)","name":"removeAuction","description":"remove NFT reference from auction conrtact, should be use only when NFT is being burned.","parameterDecorators":[{"name":"_tokenId","description":"ID of token on auction.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isOnAuction(uint256)","name":"isOnAuction","description":"Returns true if NFT is placed as auction over this contract, otherwise false.","parameterDecorators":[{"name":"_tokenId","description":"ID of NFT to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"isIndeed","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"unpause()","name":"unpause","description":"called by the owner to unpause, returns to normal state.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"createAuction(uint256,uint256,uint256,uint256)","name":"createAuction","description":"Creates new auction without special logic.","parameterDecorators":[{"name":"_tokenId","description":"ID of token to auction, sender must be owner.","recommendedTypes":[]},{"name":"_startingPrice","description":"Price of item (in wei) at beginning of auction.","recommendedTypes":[]},{"name":"_endingPrice","description":"Price of item (in wei) at end of auction.","recommendedTypes":[]},{"name":"_duration","description":"Length of time to move between starting price and ending price (in seconds) - it determines dynamic state of auction.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bid(uint256)","name":"bid","description":"Bids on an open auction, completing the auction and transferring ownership of the NFT if enough Ether is supplied. NOTE: Bid can be placed on normal auction any time, but in case of \"minting\" auction (_delayedCancel == true) it can be placed only when call of _isTimeUp(auction) returns false.","parameterDecorators":[{"name":"_tokenId","description":"ID of token to bid on.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimOwnership()","name":"claimOwnership","description":"Allows the current pending owner to claim the ownership of the contract. It emits OwnershipTransferred event and resets pending owner to 0.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tokens(uint256)","name":"tokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalAuctionsBySeller(address)","name":"totalAuctionsBySeller","description":"Returns the count of all existing auctions.","parameterDecorators":[{"name":"_seller","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"sellerToTokens(address,uint256)","name":"sellerToTokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"paused()","name":"paused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawBalance()","name":"withdrawBalance","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAuctioneerCut(uint256)","name":"setAuctioneerCut","description":"Sets new auctioneer cut, in case we are to cheap :)).","parameterDecorators":[{"name":"_cut","description":"Percent cut the auctioneer takes on each auction, must be between 0-10000. Values 0-10,000 map to 0%-100%.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addAdmin(address)","name":"addAdmin","description":"Grants special rights for address holder.","parameterDecorators":[{"name":"adminAddress","description":"- address of future admin.","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"tokenToIndex(uint256)","name":"tokenToIndex","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setAuctioneerDelayedCancelCut(uint256)","name":"setAuctioneerDelayedCancelCut","description":"Sets new auctioneer delayed cut, in case we are not earning much during creating NFTs initial auctions!.","parameterDecorators":[{"name":"_cut","description":"Percent cut the auctioneer takes on each auction, must be between 0-10000. Values 0-10,000 map to 0%-100%.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAuction(uint256)","name":"getAuction","description":"Returns auction info for an NFT on auction.","parameterDecorators":[{"name":"_tokenId","description":"ID of NFT placed in auction.","recommendedTypes":[]}],"returnDecorators":[{"name":"seller","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"startingPrice","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"endingPrice","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"duration","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"startedAt","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"delayedCancel","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"called by the owner to pause, triggers stopped state.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"cancelAuctionWhenPaused(uint256)","name":"cancelAuctionWhenPaused","description":"Cancels an auction when the contract is paused. Only the admin may do this, and NFTs are returned to the seller. This should only be used in emergencies like moving to another auction contract.","parameterDecorators":[{"name":"_tokenId","description":"ID of the NFT on auction to cancel.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"auctioneerDelayedCancelCut()","name":"auctioneerDelayedCancelCut","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint16"}],"emittableEvents":[],"readOnly":true},{"signature":"cancelAuction(uint256)","name":"cancelAuction","description":"It allows seller to cancel auction and get back Marble NFT, but it works only when delayedCancel property is false or when auction duratian time is up.","parameterDecorators":[{"name":"_tokenId","description":"ID of token on auction.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setNFTContract(address)","name":"setNFTContract","description":"Sets an addresses of ERC 721 contract owned/admined by same entity.","parameterDecorators":[{"name":"_nftAddress","description":"Address of ERC 721 contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getCurrentPrice(uint256)","name":"getCurrentPrice","description":"Returns the current price of an auction.","parameterDecorators":[{"name":"_tokenId","description":"ID of the token price we are checking.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nftContract()","name":"nftContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"createMintingAuction(uint256,uint256,uint256,uint256,address)","name":"createMintingAuction","description":"Creates and begins a new minting auction. Minitng auction is initial auction allowing to challenge newly Minted Marble NFT. If no-one buy NFT during its dynamic state, then seller (original creator of NFT) will be allowed to become owner of NFT. It means during dynamic (duration) state of auction, it won't be possible to use cancelAuction function by seller!.","parameterDecorators":[{"name":"_tokenId","description":"ID of token to auction, sender must be owner.","recommendedTypes":[]},{"name":"_startingPrice","description":"Price of item (in wei) at beginning of auction.","recommendedTypes":[]},{"name":"_endingPrice","description":"Price of item (in wei) at end of auction.","recommendedTypes":[]},{"name":"_duration","description":"Length of time to move between starting price and ending price (in seconds).","recommendedTypes":[]},{"name":"_seller","description":"Seller, if not the message sender.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"pendingOwner()","name":"pendingOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenIdToAuction(uint256)","name":"tokenIdToAuction","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"seller","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"startingPrice","description":"","recommendedTypes":[],"solidityType":"uint128"},{"name":"endingPrice","description":"","recommendedTypes":[],"solidityType":"uint128"},{"name":"duration","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"startedAt","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"delayedCancel","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"adminsMap(address)","name":"adminsMap","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"auctioneerCut()","name":"auctioneerCut","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint16"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Allows the current owner to give new owner ability to claim the ownership of the contract. This differs from the Owner's function in that it allows setting pedingOwner address to 0x0, which effectively cancels an active claim.","parameterDecorators":[{"name":"_newOwner","description":"The address which can claim ownership of the contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tokenToSellerIndex(uint256)","name":"tokenToSellerIndex","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}