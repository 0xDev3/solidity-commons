{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "liquidity"
  ],
  "name": "LiquidityProtectionStore",
  "description": "The Liquidity Protection Store contract serves as the storage of the liquidity protection mechanism. It holds the data and tokens and is non upgradable.",
  "eventDecorators": [
    {
      "signature": "BalanceLocked(address,uint256,uint256)",
      "name": "BalanceLocked",
      "description": "An event emitted when a vault is liquidated. triggered when network tokens are locked.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "provider of the network tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "amount of network tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_expirationTime",
          "description": "lock expiration time.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BalanceUnlocked(address,uint256)",
      "name": "BalanceUnlocked",
      "description": "An event emitted when a vault is liquidated. triggered when network tokens are unlocked.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "provider of the network tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "amount of network tokens.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnerUpdate(address,address)",
      "name": "OwnerUpdate",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "_prevOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PoolWhitelistUpdated(address,bool)",
      "name": "PoolWhitelistUpdated",
      "description": "An event emitted when a vault is liquidated. triggered when the pool whitelist is updated.",
      "parameterDecorators": [
        {
          "name": "_poolAnchor",
          "description": "pool anchor.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_added",
          "description": "true if the pool was added to the whitelist, false if it was removed.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProtectionAdded(address,address,address,uint256,uint256)",
      "name": "ProtectionAdded",
      "description": "An event emitted when a vault is liquidated. triggered when liquidity protection is added.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "liquidity provider.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_poolToken",
          "description": "pool token address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_reserveToken",
          "description": "reserve token address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_poolAmount",
          "description": "amount of pool tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_reserveAmount",
          "description": "amount of reserve tokens.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProtectionRemoved(address,address,address,uint256,uint256)",
      "name": "ProtectionRemoved",
      "description": "An event emitted when a vault is liquidated. triggered when liquidity protection is removed.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "liquidity provider.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_poolToken",
          "description": "pool token address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_reserveToken",
          "description": "reserve token address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_poolAmount",
          "description": "amount of pool tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_reserveAmount",
          "description": "amount of reserve tokens.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProtectionUpdated(address,uint256,uint256,uint256,uint256)",
      "name": "ProtectionUpdated",
      "description": "An event emitted when a vault is liquidated. triggered when liquidity protection is updated.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "liquidity provider.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_prevPoolAmount",
          "description": "previous amount of pool tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_prevReserveAmount",
          "description": "previous amount of reserve tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newPoolAmount",
          "description": "new amount of pool tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newReserveAmount",
          "description": "new amount of reserve tokens.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SystemBalanceUpdated(address,uint256,uint256)",
      "name": "SystemBalanceUpdated",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "token address.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_prevAmount",
          "description": "previous amount.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newAmount",
          "description": "new amount.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptOwnership()",
      "name": "acceptOwnership",
      "description": "used by a new owner to accept an ownership transfer.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addLockedBalance(address,uint256,uint256)",
      "name": "addLockedBalance",
      "description": "adds new locked network token balance can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "liquidity provider.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "token amount.",
          "recommendedTypes": []
        },
        {
          "name": "_expirationTime",
          "description": "lock expiration time.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "new locked balance index.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addPoolToWhitelist(address)",
      "name": "addPoolToWhitelist",
      "description": "adds a pool to the whitelist can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_poolAnchor",
          "description": "pool anchor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addProtectedLiquidity(address,address,address,uint256,uint256,uint256,uint256,uint256)",
      "name": "addProtectedLiquidity",
      "description": "adds protected liquidity can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "liquidity provider.",
          "recommendedTypes": []
        },
        {
          "name": "_poolToken",
          "description": "pool token address.",
          "recommendedTypes": []
        },
        {
          "name": "_reserveToken",
          "description": "reserve token address.",
          "recommendedTypes": []
        },
        {
          "name": "_poolAmount",
          "description": "pool token amount.",
          "recommendedTypes": []
        },
        {
          "name": "_reserveAmount",
          "description": "reserve token amount.",
          "recommendedTypes": []
        },
        {
          "name": "_reserveRateN",
          "description": "rate of 1 protected reserve token in units of the other reserve token (numerator).",
          "recommendedTypes": []
        },
        {
          "name": "_reserveRateD",
          "description": "rate of 1 protected reserve token in units of the other reserve token (denominator).",
          "recommendedTypes": []
        },
        {
          "name": "_timestamp",
          "description": "timestamp.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "new protected liquidity id.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "decSystemBalance(address,uint256)",
      "name": "decSystemBalance",
      "description": "decreases the system balance for a given token can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "token address.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "token amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "incSystemBalance(address,uint256)",
      "name": "incSystemBalance",
      "description": "increases the system balance for a given token can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "token address.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "token amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isPoolWhitelisted(address)",
      "name": "isPoolWhitelisted",
      "description": "checks whether a given pool is whitelisted.",
      "parameterDecorators": [
        {
          "name": "_poolAnchor",
          "description": "pool anchor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if the given pool is whitelisted, false otherwise.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lockedBalance(address,uint256)",
      "name": "lockedBalance",
      "description": "returns an existing locked network token balance details.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "locked balances provider.",
          "recommendedTypes": []
        },
        {
          "name": "_index",
          "description": "start index.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "amount of network tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_1",
          "description": "lock expiration time.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lockedBalanceCount(address)",
      "name": "lockedBalanceCount",
      "description": "returns the number of network token locked balances for a given provider.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "locked balances provider.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the number of network token locked balances.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lockedBalanceRange(address,uint256,uint256)",
      "name": "lockedBalanceRange",
      "description": "returns a range of locked network token balances for a given provider.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "locked balances provider.",
          "recommendedTypes": []
        },
        {
          "name": "_startIndex",
          "description": "start index.",
          "recommendedTypes": []
        },
        {
          "name": "_endIndex",
          "description": "end index (exclusive).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "locked amounts.",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "_1",
          "description": "expiration times.",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "newOwner()",
      "name": "newOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "protectedLiquidity(uint256)",
      "name": "protectedLiquidity",
      "description": "returns an existing protected liquidity details.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "protected liquidity id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "liquidity provider.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "_1",
          "description": "pool token address.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "_2",
          "description": "reserve token address.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "_3",
          "description": "pool token amount.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_4",
          "description": "reserve token amount.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_5",
          "description": "rate of 1 protected reserve token in units of the other reserve token (numerator).",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_6",
          "description": "rate of 1 protected reserve token in units of the other reserve token (denominator).",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_7",
          "description": "timestamp.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "protectedLiquidityCount(address)",
      "name": "protectedLiquidityCount",
      "description": "returns the number of protected liquidities for the given provider.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "liquidity provider.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "number of protected liquidities.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "protectedLiquidityId(address,uint256)",
      "name": "protectedLiquidityId",
      "description": "returns the id of a protected liquidity for the given provider at a specific index.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "liquidity provider.",
          "recommendedTypes": []
        },
        {
          "name": "_index",
          "description": "protected liquidity index.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "protected liquidity id.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "protectedLiquidityIds(address)",
      "name": "protectedLiquidityIds",
      "description": "returns the list of protected liquidity ids for the given provider.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "liquidity provider.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "protected liquidity ids.",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeLockedBalance(address,uint256)",
      "name": "removeLockedBalance",
      "description": "removes a locked network token balance can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_provider",
          "description": "liquidity provider.",
          "recommendedTypes": []
        },
        {
          "name": "_index",
          "description": "index of the locked balance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removePoolFromWhitelist(address)",
      "name": "removePoolFromWhitelist",
      "description": "removes a pool from the whitelist can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_poolAnchor",
          "description": "pool anchor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeProtectedLiquidity(uint256)",
      "name": "removeProtectedLiquidity",
      "description": "removes protected liquidity can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "protected liquidity id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "systemBalance(address)",
      "name": "systemBalance",
      "description": "returns the system balance for a given token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "system balance.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalProtectedPoolAmount(address)",
      "name": "totalProtectedPoolAmount",
      "description": "returns the total protected pool token amount for a given pool.",
      "parameterDecorators": [
        {
          "name": "_poolToken",
          "description": "pool token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total protected amount.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalProtectedReserveAmount(address,address)",
      "name": "totalProtectedReserveAmount",
      "description": "returns the total protected reserve amount for a given pool.",
      "parameterDecorators": [
        {
          "name": "_poolToken",
          "description": "pool token address.",
          "recommendedTypes": []
        },
        {
          "name": "_reserveToken",
          "description": "reserve token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total protected amount.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "new contract owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateProtectedLiquidityAmounts(uint256,uint256,uint256)",
      "name": "updateProtectedLiquidityAmounts",
      "description": "updates an existing protected liquidity pool/reserve amounts can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "protected liquidity id.",
          "recommendedTypes": []
        },
        {
          "name": "_newPoolAmount",
          "description": "new pool tokens amount.",
          "recommendedTypes": []
        },
        {
          "name": "_newReserveAmount",
          "description": "new reserve tokens amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "whitelistedPool(uint256)",
      "name": "whitelistedPool",
      "description": "returns the whitelisted pool at a given index.",
      "parameterDecorators": [
        {
          "name": "_index",
          "description": "index.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "whitelisted pool anchor.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "whitelistedPoolCount()",
      "name": "whitelistedPoolCount",
      "description": "returns the number of whitelisted pools.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "number of whitelisted pools.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "whitelistedPools()",
      "name": "whitelistedPools",
      "description": "returns the list of whitelisted pools.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "list of whitelisted pools.",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawTokens(address,address,uint256)",
      "name": "withdrawTokens",
      "description": "withdraws tokens held by the contract can only be called by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "token address.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "recipient address.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}