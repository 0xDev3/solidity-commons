{
  "schema": "../schema.json",
  "tags": [
    "swaps",
    "liquidity",
    "uniswap"
  ],
  "name": "COA_TO_UNI",
  "description": "PUBLIC FACING: add Liquidity to UNISWAP.",
  "eventDecorators": [
    {
      "signature": "UniSwapResult(uint256,uint256,uint256)",
      "name": "UniSwapResult",
      "description": "Event emitted when a supported token is removed. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "amountCOA",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountETH",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "liquidity",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "Coin()",
      "name": "Coin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "UNISWAP_ROUTER()",
      "name": "UNISWAP_ROUTER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "accept()",
      "name": "accept",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "flush_UNI(uint256)",
      "name": "flush_UNI",
      "description": "",
      "parameterDecorators": [
        {
          "name": "coin_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getCoin()",
      "name": "getCoin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWETH()",
      "name": "getWETH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawBalance()",
      "name": "withdrawBalance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}