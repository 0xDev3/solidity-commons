{"schema":"../schema.json","tags":[],"name":"Staking","description":"","eventDecorators":[{"signature":"AuthorizedAddressAdded(address,address)","name":"AuthorizedAddressAdded","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"target","description":"","recommendedTypes":[],"indexed":true},{"name":"caller","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"AuthorizedAddressRemoved(address,address)","name":"AuthorizedAddressRemoved","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"target","description":"","recommendedTypes":[],"indexed":true},{"name":"caller","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"EpochEnded(uint256,uint256,uint256,uint256,uint256)","name":"EpochEnded","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"epoch","description":"","recommendedTypes":[],"indexed":true},{"name":"numPoolsToFinalize","description":"","recommendedTypes":[],"indexed":false},{"name":"rewardsAvailable","description":"","recommendedTypes":[],"indexed":false},{"name":"totalFeesCollected","description":"","recommendedTypes":[],"indexed":false},{"name":"totalWeightedStake","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EpochFinalized(uint256,uint256,uint256)","name":"EpochFinalized","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"epoch","description":"","recommendedTypes":[],"indexed":true},{"name":"rewardsPaid","description":"","recommendedTypes":[],"indexed":false},{"name":"rewardsRemaining","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MoveStake(address,uint256,uint8,bytes32,uint8,bytes32)","name":"MoveStake","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"staker","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"fromStatus","description":"","recommendedTypes":[],"indexed":false},{"name":"fromPool","description":"","recommendedTypes":[],"indexed":true},{"name":"toStatus","description":"","recommendedTypes":[],"indexed":false},{"name":"toPool","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OperatorShareDecreased(bytes32,uint32,uint32)","name":"OperatorShareDecreased","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"poolId","description":"","recommendedTypes":[],"indexed":true},{"name":"oldOperatorShare","description":"","recommendedTypes":[],"indexed":false},{"name":"newOperatorShare","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ParamsSet(uint256,uint32,uint256,uint256,uint256)","name":"ParamsSet","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"epochDurationInSeconds","description":"","recommendedTypes":[],"indexed":false},{"name":"rewardDelegatedStakeWeight","description":"","recommendedTypes":[],"indexed":false},{"name":"minimumPoolStake","description":"","recommendedTypes":[],"indexed":false},{"name":"cobbDouglasAlphaNumerator","description":"","recommendedTypes":[],"indexed":false},{"name":"cobbDouglasAlphaDenominator","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PopAdded(address)","name":"PopAdded","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"exchangeAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PopRemoved(address)","name":"PopRemoved","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"exchangeAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RbPoolStakingPoolSet(address,bytes32)","name":"RbPoolStakingPoolSet","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"rbPoolAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"poolId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RewardsPaid(uint256,bytes32,uint256,uint256)","name":"RewardsPaid","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"epoch","description":"","recommendedTypes":[],"indexed":true},{"name":"poolId","description":"","recommendedTypes":[],"indexed":true},{"name":"operatorReward","description":"","recommendedTypes":[],"indexed":false},{"name":"membersReward","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Stake(address,uint256)","name":"Stake","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"staker","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StakingPoolCreated(bytes32,address,uint32)","name":"StakingPoolCreated","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"poolId","description":"","recommendedTypes":[],"indexed":false},{"name":"operator","description":"","recommendedTypes":[],"indexed":false},{"name":"operatorShare","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StakingPoolEarnedRewardsInEpoch(uint256,bytes32)","name":"StakingPoolEarnedRewardsInEpoch","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"epoch","description":"","recommendedTypes":[],"indexed":true},{"name":"poolId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Unstake(address,uint256)","name":"Unstake","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"staker","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addAuthorizedAddress(address)","name":"addAuthorizedAddress","description":"Authorizes an address.","parameterDecorators":[{"name":"target","description":"Address to authorize.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addPopAddress(address)","name":"addPopAddress","description":"Adds a new pop address.","parameterDecorators":[{"name":"addr","description":"Address of pop contract to add.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"aggregatedStatsByEpoch(uint256)","name":"aggregatedStatsByEpoch","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"rewardsAvailable","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"numPoolsToFinalize","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"totalFeesCollected","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"totalWeightedStake","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"totalRewardsFinalized","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"authorities(uint256)","name":"authorities","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"authorized(address)","name":"authorized","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"cobbDouglasAlphaDenominator()","name":"cobbDouglasAlphaDenominator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"cobbDouglasAlphaNumerator()","name":"cobbDouglasAlphaNumerator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"computeRewardBalanceOfDelegator(bytes32,address)","name":"computeRewardBalanceOfDelegator","description":"Computes the reward balance in ETH of a specific member of a pool.","parameterDecorators":[{"name":"poolId","description":"Unique id of pool.","recommendedTypes":[]},{"name":"member","description":"The member of the pool.","recommendedTypes":[]}],"returnDecorators":[{"name":"reward","description":"totalReward Balance in ETH.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"computeRewardBalanceOfOperator(bytes32)","name":"computeRewardBalanceOfOperator","description":"Computes the reward balance in ETH of the operator of a pool.","parameterDecorators":[{"name":"poolId","description":"Unique id of pool.","recommendedTypes":[]}],"returnDecorators":[{"name":"reward","description":"totalReward Balance in ETH.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"createStakingPool(address)","name":"createStakingPool","description":"Create a new staking pool. The sender will be the staking pal of this pool. Note that a staking pal must be payable.","parameterDecorators":[{"name":"rigoblockPoolAddress","description":"Adds rigoblock pool to the created staking pool for convenience if non-null.","recommendedTypes":[]}],"returnDecorators":[{"name":"poolId","description":"The unique pool id generated for this pool.","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"creditPopReward(address,uint256)","name":"creditPopReward","description":"Credits the value of a pool's pop reward. Only a known RigoBlock pop can call this method. See (MixinPopManager).","parameterDecorators":[{"name":"poolAccount","description":"The address of the rigoblock pool account.","recommendedTypes":[]},{"name":"popReward","description":"The pop reward.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"currentEpoch()","name":"currentEpoch","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"currentEpochStartTimeInSeconds()","name":"currentEpochStartTimeInSeconds","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"decreaseStakingPoolOperatorShare(bytes32,uint32)","name":"decreaseStakingPoolOperatorShare","description":"Decreases the operator share for the given pool (i.e. increases pool rewards for members).","parameterDecorators":[{"name":"poolId","description":"Unique Id of pool.","recommendedTypes":[]},{"name":"newOperatorShare","description":"The newly decreased percentage of any rewards owned by the operator.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"endEpoch()","name":"endEpoch","description":"Begins a new epoch, preparing the prior one for finalization. Throws if not enough time has passed between epochs or if the previous epoch was not fully finalized.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"numPoolsToFinalize The number of unfinalized pools.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"epochDurationInSeconds()","name":"epochDurationInSeconds","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"finalizePool(bytes32)","name":"finalizePool","description":"Instantly finalizes a single pool that earned rewards in the previous epoch, crediting it rewards for members and withdrawing operator's rewards as WETH. This can be called by internal functions that need to finalize a pool immediately. Does nothing if the pool is already finalized or did not earn rewards in the previous epoch.","parameterDecorators":[{"name":"poolId","description":"The pool ID to finalize.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAuthorizedAddresses()","name":"getAuthorizedAddresses","description":"Gets all authorized addresses.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Array of authorized addresses.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getCurrentEpochEarliestEndTimeInSeconds()","name":"getCurrentEpochEarliestEndTimeInSeconds","description":"Returns the earliest end time in seconds of this epoch. The next epoch can begin once this time is reached. Epoch period = [startTimeInSeconds..endTimeInSeconds).","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Time in seconds.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getDragoRegistry()","name":"getDragoRegistry","description":"An overridable way to access the deployed dragoRegistry. Must be view to allow overrides to access state.","parameterDecorators":[],"returnDecorators":[{"name":"dragoRegistry","description":"The dragoRegistry contract.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getGlobalStakeByStatus(uint8)","name":"getGlobalStakeByStatus","description":"Gets global stake for a given status.","parameterDecorators":[{"name":"stakeStatus","description":"UNDELEGATED or DELEGATED.","recommendedTypes":[]}],"returnDecorators":[{"name":"balance","description":"Global stake for given status.","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getGrgContract()","name":"getGrgContract","description":"An overridable way to access the deployed GRG contract. Must be view to allow overrides to access state.","parameterDecorators":[],"returnDecorators":[{"name":"grgContract","description":"The GRG contract instance.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getGrgVault()","name":"getGrgVault","description":"An overridable way to access the deployed grgVault. Must be view to allow overrides to access state.","parameterDecorators":[],"returnDecorators":[{"name":"grgVault","description":"The grgVault contract.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getOwnerStakeByStatus(address,uint8)","name":"getOwnerStakeByStatus","description":"Gets an owner's stake balances by status.","parameterDecorators":[{"name":"staker","description":"Owner of stake.","recommendedTypes":[]},{"name":"stakeStatus","description":"UNDELEGATED or DELEGATED.","recommendedTypes":[]}],"returnDecorators":[{"name":"balance","description":"Owner's stake balances for given status.","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getParams()","name":"getParams","description":"Retrieves all configurable parameter values.","parameterDecorators":[],"returnDecorators":[{"name":"_epochDurationInSeconds","description":"Minimum seconds between epochs.","recommendedTypes":[],"solidityType":"uint256"},{"name":"_rewardDelegatedStakeWeight","description":"How much delegated stake is weighted vs operator stake, in ppm.","recommendedTypes":[],"solidityType":"uint32"},{"name":"_minimumPoolStake","description":"Minimum amount of stake required in a pool to collect rewards.","recommendedTypes":[],"solidityType":"uint256"},{"name":"_cobbDouglasAlphaNumerator","description":"Numerator for cobb douglas alpha factor.","recommendedTypes":[],"solidityType":"uint32"},{"name":"_cobbDouglasAlphaDenominator","description":"Denominator for cobb douglas alpha factor.","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"getStakeDelegatedToPoolByOwner(address,bytes32)","name":"getStakeDelegatedToPoolByOwner","description":"Returns the stake delegated to a specific staking pool, by a given staker.","parameterDecorators":[{"name":"staker","description":"of stake.","recommendedTypes":[]},{"name":"poolId","description":"Unique Id of pool.","recommendedTypes":[]}],"returnDecorators":[{"name":"balance","description":"Stake delegated to pool by staker.","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getStakingPool(bytes32)","name":"getStakingPool","description":"Returns a staking pool.","parameterDecorators":[{"name":"poolId","description":"Unique id of pool.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getStakingPoolStatsThisEpoch(bytes32)","name":"getStakingPoolStatsThisEpoch","description":"Get stats on a staking pool in this epoch.","parameterDecorators":[{"name":"poolId","description":"Pool Id to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"PoolStats struct for pool id.","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalStake(address)","name":"getTotalStake","description":"Returns the total stake for a given staker.","parameterDecorators":[{"name":"staker","description":"of stake.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Total GRG staked by `staker`.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalStakeDelegatedToPool(bytes32)","name":"getTotalStakeDelegatedToPool","description":"Returns the total stake delegated to a specific staking pool, across all members.","parameterDecorators":[{"name":"poolId","description":"Unique Id of pool.","recommendedTypes":[]}],"returnDecorators":[{"name":"balance","description":"Total stake delegated to pool.","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"grgReservedForPoolRewards()","name":"grgReservedForPoolRewards","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"init()","name":"init","description":"Initialize storage owned by this contract. This function should not be called directly. The StakingProxy contract will call it in `attachStakingContract()`.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"joinStakingPoolAsRbPoolAccount(bytes32,address)","name":"joinStakingPoolAsRbPoolAccount","description":"Allows caller to join a staking pool as a rigoblock pool account.","parameterDecorators":[{"name":"poolId","description":"Unique id of pool.","recommendedTypes":[]},{"name":"rigoblockPoolAccount","description":"Address of subaccount to be added to staking pool.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"minimumPoolStake()","name":"minimumPoolStake","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"moveStake(tuple(uint8,bytes32),tuple(uint8,bytes32),uint256)","name":"moveStake","description":"Moves stake between statuses: 'undelegated' or 'delegated'. Delegated stake can also be moved between pools. This change comes into effect next epoch.","parameterDecorators":[{"name":"from","description":"Status to move stake out of.","recommendedTypes":[],"parameters":[{"name":"status","description":"","type":"uint8"},{"name":"poolId","description":"","type":"bytes32"}]},{"name":"to","description":"Status to move stake into.","recommendedTypes":[],"parameters":[{"name":"status","description":"","type":"uint8"},{"name":"poolId","description":"","type":"bytes32"}]},{"name":"amount","description":"Amount of stake to move.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"poolIdByRbPoolAccount(address)","name":"poolIdByRbPoolAccount","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"poolStatsByEpoch(bytes32,uint256)","name":"poolStatsByEpoch","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"feesCollected","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"weightedStake","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"membersStake","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"removeAuthorizedAddress(address)","name":"removeAuthorizedAddress","description":"Removes authorizion of an address.","parameterDecorators":[{"name":"target","description":"Address to remove authorization from.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeAuthorizedAddressAtIndex(address,uint256)","name":"removeAuthorizedAddressAtIndex","description":"Removes authorizion of an address.","parameterDecorators":[{"name":"target","description":"Address to remove authorization from.","recommendedTypes":[]},{"name":"index","description":"Index of target in authorities array.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removePopAddress(address)","name":"removePopAddress","description":"Removes an existing proof_of_performance address.","parameterDecorators":[{"name":"addr","description":"Address of proof_of_performance contract to remove.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardDelegatedStakeWeight()","name":"rewardDelegatedStakeWeight","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardsByPoolId(bytes32)","name":"rewardsByPoolId","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setParams(uint256,uint32,uint256,uint32,uint32)","name":"setParams","description":"Set all configurable parameters at once.","parameterDecorators":[{"name":"_epochDurationInSeconds","description":"Minimum seconds between epochs.","recommendedTypes":[]},{"name":"_rewardDelegatedStakeWeight","description":"How much delegated stake is weighted vs operator stake, in ppm.","recommendedTypes":[]},{"name":"_minimumPoolStake","description":"Minimum amount of stake required in a pool to collect rewards.","recommendedTypes":[]},{"name":"_cobbDouglasAlphaNumerator","description":"Numerator for cobb douglas alpha factor.","recommendedTypes":[]},{"name":"_cobbDouglasAlphaDenominator","description":"Denominator for cobb douglas alpha factor.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setStakingPalAddress(bytes32,address)","name":"setStakingPalAddress","description":"Allows the operator to update the staking pal address.","parameterDecorators":[{"name":"poolId","description":"Unique id of pool.","recommendedTypes":[]},{"name":"newStakingPalAddress","description":"Address of the new staking pal.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake(uint256)","name":"stake","description":"Stake GRG tokens. Tokens are deposited into the GRG Vault. Unstake to retrieve the GRG. Stake is in the 'Active' status.","parameterDecorators":[{"name":"amount","description":"Amount of GRG to stake.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakingContract()","name":"stakingContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Change the owner of this contract.","parameterDecorators":[{"name":"newOwner","description":"New owner address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unstake(uint256)","name":"unstake","description":"Unstake. Tokens are withdrawn from the GRG Vault and returned to the staker. Stake must be in the 'undelegated' status in both the current and next epoch in order to be unstaked.","parameterDecorators":[{"name":"amount","description":"Amount of GRG to unstake.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"validPops(address)","name":"validPops","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawDelegatorRewards(bytes32)","name":"withdrawDelegatorRewards","description":"Withdraws the caller's WETH rewards that have accumulated until the last epoch.","parameterDecorators":[{"name":"poolId","description":"Unique id of pool.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}