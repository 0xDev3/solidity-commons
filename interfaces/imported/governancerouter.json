{"schema":"../schema.json","tags":[],"name":"GovernanceRouter","description":"","eventDecorators":[{"signature":"ExitRecovery(address)","name":"ExitRecovery","description":"Emitted when recovery state is exited by the RecoveryManager.","parameterDecorators":[{"name":"recoveryManager","description":"the address of the current RecoveryManager who initiated the transition.","recommendedTypes":[],"indexed":false}]},{"signature":"InitiateRecovery(address,uint256)","name":"InitiateRecovery","description":"Emitted when recovery state is initiated by the RecoveryManager.","parameterDecorators":[{"name":"recoveryManager","description":"the address of the current RecoveryManager who initiated the transition.","recommendedTypes":[],"indexed":true},{"name":"recoveryActiveAt","description":"the block at which recovery state will be active.","recommendedTypes":[],"indexed":false}]},{"signature":"SetRouter(uint32,bytes32,bytes32)","name":"SetRouter","description":"Emitted a remote GovernanceRouter address is added, removed, or changed.","parameterDecorators":[{"name":"domain","description":"the domain of the remote Router.","recommendedTypes":[],"indexed":true},{"name":"previousRouter","description":"the previously registered router; 0 if router is being added.","recommendedTypes":[],"indexed":false},{"name":"newRouter","description":"the new registered router; 0 if router is being removed.","recommendedTypes":[],"indexed":false}]},{"signature":"TransferGovernor(uint32,uint32,address,address)","name":"TransferGovernor","description":"Emitted when the Governor role is transferred.","parameterDecorators":[{"name":"previousGovernorDomain","description":"the domain of the previous Governor.","recommendedTypes":[],"indexed":false},{"name":"newGovernorDomain","description":"the domain of the new Governor.","recommendedTypes":[],"indexed":false},{"name":"previousGovernor","description":"the address of the previous Governor; 0 if the governor was remote.","recommendedTypes":[],"indexed":true},{"name":"newGovernor","description":"the address of the new Governor; 0 if the governor is remote.","recommendedTypes":[],"indexed":true}]},{"signature":"TransferRecoveryManager(address,address)","name":"TransferRecoveryManager","description":"Emitted when the RecoveryManager role is transferred.","parameterDecorators":[{"name":"previousRecoveryManager","description":"the address of the previous RecoveryManager.","recommendedTypes":[],"indexed":true},{"name":"newRecoveryManager","description":"the address of the new RecoveryManager.","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"VERSION()","name":"VERSION","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"callLocal(tuple(bytes32,bytes)[])","name":"callLocal","description":"Dispatch calls locally.","parameterDecorators":[{"name":"_calls","description":"The calls.","recommendedTypes":[],"parameters":[{"name":"to","description":"","type":"bytes32"},{"name":"data","description":"","type":"bytes"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"callRemote(uint32,tuple(bytes32,bytes)[])","name":"callRemote","description":"Dispatch calls on a remote chain via the remote GovernanceRouter.","parameterDecorators":[{"name":"_destination","description":"The domain of the remote chain.","recommendedTypes":[]},{"name":"_calls","description":"The calls.","recommendedTypes":[],"parameters":[{"name":"to","description":"","type":"bytes32"},{"name":"data","description":"","type":"bytes"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"domains(uint256)","name":"domains","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"exitRecovery()","name":"exitRecovery","description":"Exit recovery mode. callable by the recovery manager to end recovery mode.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"governor()","name":"governor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"governorDomain()","name":"governorDomain","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"handle(uint32,bytes32,bytes)","name":"handle","description":"Handle Optics messages For all non-Governor chains to handle messages sent from the Governor chain via Optics. Governor chain should never receive messages, because non-Governor chains are not able to send them.","parameterDecorators":[{"name":"_origin","description":"The domain (of the Governor Router).","recommendedTypes":[]},{"name":"_sender","description":"The message sender (must be the Governor Router).","recommendedTypes":[]},{"name":"_message","description":"The message.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"inRecovery()","name":"inRecovery","description":"Check if the contract is in recovery mode currently.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"TRUE iff the contract is actively in recovery mode currently.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address)","name":"initialize","description":"","parameterDecorators":[{"name":"_xAppConnectionManager","description":"","recommendedTypes":[]},{"name":"_recoveryManager","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initiateRecoveryTimelock()","name":"initiateRecoveryTimelock","description":"Initiate the recovery timelock. callable by the recovery manager.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"localDomain()","name":"localDomain","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"recoveryActiveAt()","name":"recoveryActiveAt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"recoveryManager()","name":"recoveryManager","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"recoveryTimelock()","name":"recoveryTimelock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"routers(uint32)","name":"routers","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"setRouter(uint32,bytes32)","name":"setRouter","description":"Set the router address for a given domain and dispatch the change to all remote routers.","parameterDecorators":[{"name":"_domain","description":"The domain.","recommendedTypes":[]},{"name":"_router","description":"The address of the new router.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRouterLocal(uint32,bytes32)","name":"setRouterLocal","description":"Set the router address *locally only* for the deployer to setup the router mapping locally before transferring governorship to the \"true\" governor. External helper for contract setup.","parameterDecorators":[{"name":"_domain","description":"The domain.","recommendedTypes":[]},{"name":"_router","description":"The new router.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setXAppConnectionManager(address)","name":"setXAppConnectionManager","description":"Set the address of the XAppConnectionManager. Domain/address validation helper.","parameterDecorators":[{"name":"_xAppConnectionManager","description":"The address of the new xAppConnectionManager.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferGovernor(uint32,address)","name":"transferGovernor","description":"Transfer governorship.","parameterDecorators":[{"name":"_newDomain","description":"The domain of the new governor.","recommendedTypes":[]},{"name":"_newGovernor","description":"The address of the new governor.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferRecoveryManager(address)","name":"transferRecoveryManager","description":"Transfer recovery manager role. callable by the recoveryManager at any time to transfer the role.","parameterDecorators":[{"name":"_newRecoveryManager","description":"The address of the new recovery manager.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"xAppConnectionManager()","name":"xAppConnectionManager","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}