{"schema":"../schema.json","tags":["oracles","tokens","escrows"],"name":"MMEscrow","description":"The contract owner should be either an oracle or an oracle-powered contract, since the token flow should reflect off-chain value flow. This contract allows for escrows to be created where a user wants to off-ramp value from the MM ecosystem.","eventDecorators":[{"signature":"EscrowCancelled(uint256)","name":"EscrowCancelled","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EscrowCreated(uint256,address,uint256)","name":"EscrowCreated","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true},{"name":"who","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EscrowExecuted(uint256,address,uint256)","name":"EscrowExecuted","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true},{"name":"who","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"cancel(uint256)","name":"cancel","description":"Oracle-facing function for cancelling an escrow. This function should only be called if the off-chain value transfer fails and the user requests their funds to be returned.","parameterDecorators":[{"name":"id","description":"The identifier of the escrow to cancel.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"createEscrow(uint256)","name":"createEscrow","description":"Public user-facing function for creating escrows. Users should *approve* this contract to spend their tokens before calling this.","parameterDecorators":[{"name":"amount","description":"The amount of tokens to deposit into the escrow.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"escrows(uint256)","name":"escrows","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"who","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"executed","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"execute(uint256)","name":"execute","description":"Oracle-facing function for executing an escrow (actually moving value). This function should only be called once the off-chain value transfer is complete.","parameterDecorators":[{"name":"id","description":"The identifier of the escrow to execute.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}