{"schema":"../schema.json","tags":["gnosis"],"name":"CompatibilityFallbackHandler","description":"Compatibility Fallback Handler - fallback handler to provider compatibility between pre 1.3.0 and 1.3.0+ Safe contracts.","eventDecorators":[{"signature":"ERC721Received(string)","name":"ERC721Received","description":"event when tvl is updated.","parameterDecorators":[{"name":"pool","description":"address of the pool.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"NAME()","name":"NAME","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"VERSION()","name":"VERSION","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"getMessageHash(bytes)","name":"getMessageHash","description":"Returns hash of a message that can be signed by owners.","parameterDecorators":[{"name":"message","description":"Message that should be hashed.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Message hash.","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getMessageHashForSafe(address,bytes)","name":"getMessageHashForSafe","description":"Returns hash of a message that can be signed by owners.","parameterDecorators":[{"name":"safe","description":"Safe to which the message is targeted.","recommendedTypes":[]},{"name":"message","description":"Message that should be hashed.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Message hash.","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getModules()","name":"getModules","description":"Returns array of first 10 modules.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Array of modules.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"isValidSignature(bytes32,bytes)","name":"isValidSignature","description":"Implementation of updated EIP-1271See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol. Should return whether the signature provided is valid for the provided data. The save does not implement the interface since `checkSignatures` is not a view method. The method will not perform any state changes (see parameters of `checkSignatures`).","parameterDecorators":[{"name":"_dataHash","description":"Hash of the data signed on the behalf of address(msg.sender).","recommendedTypes":[]},{"name":"_signature","description":"Signature byte array associated with _dataHash.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"a bool upon valid or invalid signature with corresponding _dataHash.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":true},{"signature":"isValidSignature(bytes,bytes)","name":"isValidSignature","description":"Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`). Should return whether the signature provided is valid for the provided data.","parameterDecorators":[{"name":"_data","description":"Arbitrary length data signed on the behalf of address(msg.sender).","recommendedTypes":[]},{"name":"_signature","description":"Signature byte array associated with _data.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"a bool upon valid or invalid signature with corresponding _data.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)","name":"onERC1155BatchReceived","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]},{"name":"param4","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC1155Received(address,address,uint256,uint256,bytes)","name":"onERC1155Received","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]},{"name":"param4","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC721Received(address,address,uint256,bytes)","name":"onERC721Received","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"simulate(address,bytes)","name":"simulate","description":"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). Catches revert and returns encoded result as bytes.","parameterDecorators":[{"name":"targetContract","description":"Address of the contract containing the code to execute.","recommendedTypes":[]},{"name":"calldataPayload","description":"Calldata that should be sent to the target contract (encoded method name and arguments).","recommendedTypes":[]}],"returnDecorators":[{"name":"response","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"tokensReceived(address,address,address,uint256,bytes,bytes)","name":"tokensReceived","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]},{"name":"param4","description":"","recommendedTypes":[]},{"name":"param5","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":true}]}