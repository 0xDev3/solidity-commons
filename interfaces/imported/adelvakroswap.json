{"schema":"../schema.json","tags":["swaps"],"name":"AdelVAkroSwap","description":"","eventDecorators":[{"signature":"AdelSwapped(address,uint256,uint256)","name":"AdelSwapped","description":"","parameterDecorators":[{"name":"receiver","description":"","recommendedTypes":[],"indexed":true},{"name":"adelAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"akroAmount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"amount","description":"The amount of liquidity (priced in liquidityToken) that was provided.","recommendedTypes":[],"indexed":true},{"name":"to","description":"The address that provided the liquidity.","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"adel()","name":"adel","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"adelSwapped(address)","name":"adelSwapped","description":"Returns the actual amount of ADEL swapped by a user.","parameterDecorators":[{"name":"_account","description":"Address of a user.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"akro()","name":"akro","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address)","name":"initialize","description":"","parameterDecorators":[{"name":"_akro","description":"","recommendedTypes":[]},{"name":"_adel","description":"","recommendedTypes":[]},{"name":"_vakro","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"merkleRoots(uint256)","name":"merkleRoots","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"minAmountToSwap()","name":"minAmountToSwap","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardAdelPool()","name":"rewardAdelPool","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardAkroPool()","name":"rewardAkroPool","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setMerkleRoots(bytes32[])","name":"setMerkleRoots","description":"Sets the Merkle roots.","parameterDecorators":[{"name":"_merkleRoots","description":"Array of hashes.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMinSwapAmount(uint256)","name":"setMinSwapAmount","description":"Sets the minimum amount of ADEL which can be swapped. 0 by default.","parameterDecorators":[{"name":"_minAmount","description":"Minimum amount in wei (the least decimals).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRewardStakingPool(address,address)","name":"setRewardStakingPool","description":"Sets the staking pool addresses with ADEL rewards.","parameterDecorators":[{"name":"_rewardAkroPool","description":"Akro staking pool address).","recommendedTypes":[]},{"name":"_rewardAdelPool","description":"Adel staking pool address).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setStakingPool(address)","name":"setStakingPool","description":"Sets the ADEL staking pool address.","parameterDecorators":[{"name":"_stakingPool","description":"Adel staking pool address).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setSwapRate(uint256,uint256)","name":"setSwapRate","description":"Sets the rate of ADEL to vAKRO swap: 1 ADEL = _swapRateNumerator/_swapRateDenominator vAKROBy default is set to 0, that means that swap is disabled.","parameterDecorators":[{"name":"_swapRateNumerator","description":"Numerator for Adel converting. Can be set to 0 - that stops the swap.","recommendedTypes":[]},{"name":"_swapRateDenominator","description":"Denominator for Adel converting. Can't be set to 0.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakingPool()","name":"stakingPool","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"swapFromAdel(uint256,uint256,uint256,bytes32[])","name":"swapFromAdel","description":"Allows to swap ADEL token from the wallet for vAKRO.","parameterDecorators":[{"name":"_adelAmount","description":"Amout of ADEL the user approves for the swap.","recommendedTypes":[]},{"name":"merkleRootIndex","description":"Index of a merkle root to be used for calculations.","recommendedTypes":[]},{"name":"adelAllowedToSwap","description":"Maximum ADEL allowed for a user to swap.","recommendedTypes":[]},{"name":"merkleProofs","description":"Array of consiquent merkle hashes.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"swapFromRewardAdel(uint256,uint256,bytes32[])","name":"swapFromRewardAdel","description":"Allows to swap ADEL token which belongs to vested unclaimed rewards.","parameterDecorators":[{"name":"merkleRootIndex","description":"Index of a merkle root to be used for calculations.","recommendedTypes":[]},{"name":"adelAllowedToSwap","description":"Maximum ADEL allowed for a user to swap.","recommendedTypes":[]},{"name":"merkleProofs","description":"Array of consiquent merkle hashes.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"swapFromStakedAdel(uint256,uint256,bytes32[])","name":"swapFromStakedAdel","description":"Allows to swap ADEL token which is currently staked in StakingPool.","parameterDecorators":[{"name":"merkleRootIndex","description":"Index of a merkle root to be used for calculations.","recommendedTypes":[]},{"name":"adelAllowedToSwap","description":"Maximum ADEL allowed for a user to swap.","recommendedTypes":[]},{"name":"merkleProofs","description":"Array of consiquent merkle hashes.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"swapRateDenominator()","name":"swapRateDenominator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"swapRateNumerator()","name":"swapRateNumerator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"swappedAdel(address,uint256)","name":"swappedAdel","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"vakro()","name":"vakro","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"verifyMerkleProofs(address,uint256,uint256,bytes32[])","name":"verifyMerkleProofs","description":"Verifies merkle proofs of user to be elligible for swap.","parameterDecorators":[{"name":"_account","description":"Address of a user.","recommendedTypes":[]},{"name":"_merkleRootIndex","description":"Index of a merkle root to be used for calculations.","recommendedTypes":[]},{"name":"_adelAllowedToSwap","description":"Maximum ADEL allowed for a user to swap.","recommendedTypes":[]},{"name":"_merkleProofs","description":"Array of consiquent merkle hashes.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawAdel(address)","name":"withdrawAdel","description":"Withdraws all ADEL collected on a Swap contract.","parameterDecorators":[{"name":"_recepient","description":"Recepient of ADEL.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}