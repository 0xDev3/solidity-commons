{"schema":"../schema.json","tags":["locking"],"name":"BlockchainPresence","description":"The Blockchain Presence smart contract consists of four modules: - Order & Delivery - Commitments - Account Management - Contract Governance.","eventDecorators":[{"signature":"PINChanged(uint32,address)","name":"PINChanged","description":"Event for token purchase logging. Event emitted in purchases. `buyer` is the account that sent the ETH, `beneficiary` is the account that got the tokens, `weiAmount` the amount of wei received from `buyer` and sent to the wallet, `tokenAmount` is the amount of tokens sent to `beneficiary`.","parameterDecorators":[{"name":"senderID","description":"","recommendedTypes":[],"indexed":false},{"name":"newPIN","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"dataDelivered(uint32,bool,bool)","name":"dataDelivered","description":"Event for token purchase logging. Event emitted in purchases. `buyer` is the account that sent the ETH, `beneficiary` is the account that got the tokens, `weiAmount` the amount of wei received from `buyer` and sent to the wallet, `tokenAmount` is the amount of tokens sent to `beneficiary`.","parameterDecorators":[{"name":"orderID","description":"","recommendedTypes":[],"indexed":false},{"name":"_statusFlag","description":"","recommendedTypes":[],"indexed":false},{"name":"_status","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"fallbackCall(address,uint256)","name":"fallbackCall","description":"Event for token purchase logging. Event emitted in purchases. `buyer` is the account that sent the ETH, `beneficiary` is the account that got the tokens, `weiAmount` the amount of wei received from `buyer` and sent to the wallet, `tokenAmount` is the amount of tokens sent to `beneficiary`.","parameterDecorators":[{"name":"CustomerAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"MonetaryAmount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"newClaim(uint32,address,address,address,address,address)","name":"newClaim","description":"Event for token purchase logging. Event emitted in purchases. `buyer` is the account that sent the ETH, `beneficiary` is the account that got the tokens, `weiAmount` the amount of wei received from `buyer` and sent to the wallet, `tokenAmount` is the amount of tokens sent to `beneficiary`.","parameterDecorators":[{"name":"senderID","description":"","recommendedTypes":[],"indexed":false},{"name":"PIN","description":"","recommendedTypes":[],"indexed":false},{"name":"PUK","description":"","recommendedTypes":[],"indexed":false},{"name":"PUK2a","description":"","recommendedTypes":[],"indexed":false},{"name":"PUK2b","description":"","recommendedTypes":[],"indexed":false},{"name":"PUK2c","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"newCommitment(uint32,uint32)","name":"newCommitment","description":"Event for token purchase logging. Event emitted in purchases. `buyer` is the account that sent the ETH, `beneficiary` is the account that got the tokens, `weiAmount` the amount of wei received from `buyer` and sent to the wallet, `tokenAmount` is the amount of tokens sent to `beneficiary`.","parameterDecorators":[{"name":"senderID","description":"","recommendedTypes":[],"indexed":false},{"name":"commitmentID","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"newOrder(address,uint32,uint32,string,uint32,uint40,uint64,bool,address)","name":"newOrder","description":"Event for token purchase logging. Event emitted in purchases. `buyer` is the account that sent the ETH, `beneficiary` is the account that got the tokens, `weiAmount` the amount of wei received from `buyer` and sent to the wallet, `tokenAmount` is the amount of tokens sent to `beneficiary`.","parameterDecorators":[{"name":"_PIN","description":"","recommendedTypes":[],"indexed":true},{"name":"orderID","description":"","recommendedTypes":[],"indexed":false},{"name":"commitmentID","description":"","recommendedTypes":[],"indexed":false},{"name":"_location","description":"","recommendedTypes":[],"indexed":false},{"name":"_orderDate","description":"","recommendedTypes":[],"indexed":false},{"name":"_gasForDelivery","description":"","recommendedTypes":[],"indexed":false},{"name":"_gasPrice","description":"","recommendedTypes":[],"indexed":false},{"name":"condition","description":"","recommendedTypes":[],"indexed":false},{"name":"receiverAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"newSender(uint32,address,address,address,address,address)","name":"newSender","description":"Event for token purchase logging. Event emitted in purchases. `buyer` is the account that sent the ETH, `beneficiary` is the account that got the tokens, `weiAmount` the amount of wei received from `buyer` and sent to the wallet, `tokenAmount` is the amount of tokens sent to `beneficiary`.","parameterDecorators":[{"name":"senderID","description":"","recommendedTypes":[],"indexed":false},{"name":"PIN","description":"","recommendedTypes":[],"indexed":false},{"name":"PUK","description":"","recommendedTypes":[],"indexed":false},{"name":"PUK2a","description":"","recommendedTypes":[],"indexed":false},{"name":"PUK2b","description":"","recommendedTypes":[],"indexed":false},{"name":"PUK2c","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"BCPGross()","name":"BCPGross","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"BCPOwner()","name":"BCPOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"BCPWebsite()","name":"BCPWebsite","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ChangePIN(uint32,address)","name":"ChangePIN","description":"to change the PIN address via the PUKhas to be called by the PUK.","parameterDecorators":[{"name":"senderID","description":"uint that identifies a specific sender (is constant).","recommendedTypes":[]},{"name":"_newPIN","description":"alternative PIN for the deleted one.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"Collect()","name":"Collect","description":"transfers all collected payments from this contract to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"GetReceiverFromOrderID(uint32)","name":"GetReceiverFromOrderID","description":"necessary to be able to display the receiver address on our webpage.","parameterDecorators":[{"name":"orderID","description":"uint that identifies a specific order (is constant).","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"GetSenderInformation(uint32)","name":"GetSenderInformation","description":"returns the hole sender structhas to be called by the PUKis needed for testing purposes, you have to check whether PIN and/or PUK got changed.","parameterDecorators":[{"name":"senderID","description":"uint that identifies a specific sender (is constant).","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"GetTransactionCosts(uint32,uint40)","name":"GetTransactionCosts","description":"The order & delivery module consists of nine order functions and the Relay function: The order functions differ in the number of function arguments: - GetTransactionCosts: Determines the transaction costs - GeneralOrder: Is the only order function that contains the hole function body - Relay: Receives the incoming data and transfers it to the final receiver and substracts the fee from the original payment of the receiver.","parameterDecorators":[{"name":"_commitmentID","description":"","recommendedTypes":[]},{"name":"_gasForMailbox","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"GetsenderID()","name":"GetsenderID","description":"determines the senderID via the addressthe possibility to easlily get your senderID increases the sender convenienceis needed for testing purposes, you have to know the senderID.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"HorizonExtension(uint32,uint32)","name":"HorizonExtension","description":"extends the senders commitment.","parameterDecorators":[{"name":"commitmentID","description":"uint that identfies the senders most recent .xlsx file -> here that ID should be chosen the sender wishes to extend.","recommendedTypes":[]},{"name":"_newHorizon","description":"the date until when a sender commits himself (in epochtime).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"NewCommitment(uint32,uint32,uint64,uint64,bytes32)","name":"NewCommitment","description":"sets up new commitments for .xlsx files.","parameterDecorators":[{"name":"senderID","description":"uint that identifies a specific sender (is constant).","recommendedTypes":[]},{"name":"_horizon","description":"the date until when a sender commits himself (in epochtime).","recommendedTypes":[]},{"name":"_senderFee","description":"sets the fee that is required to be paid within the order process.","recommendedTypes":[]},{"name":"_gasPrice","description":"sets the gas Price for the delivery process of that .xlsx file.","recommendedTypes":[]},{"name":"_descriptionHash","description":"sets the identification parameter for the commited data.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":false},{"signature":"NewSender(address,address)","name":"NewSender","description":"function registers new senders within a lower security level using the PUK address as PUK und PUK2 triplet.","parameterDecorators":[{"name":"_PIN","description":"is the SCAs main address.","recommendedTypes":[]},{"name":"_PUK","description":"is the senders main address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":false},{"signature":"NewSenderPro(address,address,address,address,address)","name":"NewSenderPro","description":"function register allows to set PIN, PUK and PUK2 triplet, thereby creating the senderIDthis function has to be called via the PUK address.","parameterDecorators":[{"name":"_PIN","description":"is the SCAs main address.","recommendedTypes":[]},{"name":"_PUK","description":"is the senders main address.","recommendedTypes":[]},{"name":"_PUK2a","description":"first of the PUK2 triplet. Is held by the sender.","recommendedTypes":[]},{"name":"_PUK2b","description":"second of the PUK2 triplet. Is held by the first trusted party.","recommendedTypes":[]},{"name":"_PUK2c","description":"third of the PUK2 triplet. Is held by the second trusted party.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":false},{"signature":"ORDER(uint32,uint40,string,uint32)","name":"ORDER","description":"general order function for customized orders.","parameterDecorators":[{"name":"commitmentID","description":"uint that identifies a specific commitment.","recommendedTypes":[]},{"name":"_gasForMailbox","description":"is the maximum of gas that is available for the delivery process (set by the receiver).","recommendedTypes":[]},{"name":"_location","description":"is the position (column and row) in the .xlsx file.","recommendedTypes":[]},{"name":"_orderDate","description":"date on which the order should arrive (in epochtime).","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":false},{"signature":"Relay(uint32,int88,bool)","name":"Relay","description":"receives the final data and collects the fee.","parameterDecorators":[{"name":"orderID","description":"uint that identifies a specific order (is constant).","recommendedTypes":[]},{"name":"_data","description":"is the finally requested information behind the order.","recommendedTypes":[]},{"name":"_statusFlag","description":"is a control variable that shows if the incoming transaction contains the datapoint.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"ResetPINPUK(uint32,address,address,address,address,address)","name":"ResetPINPUK","description":"","parameterDecorators":[{"name":"senderID","description":"","recommendedTypes":[]},{"name":"_newPIN","description":"","recommendedTypes":[]},{"name":"_newPUK","description":"","recommendedTypes":[]},{"name":"_newPUK2a","description":"","recommendedTypes":[]},{"name":"_newPUK2b","description":"","recommendedTypes":[]},{"name":"_newPUK2c","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"commitments(uint256)","name":"commitments","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"senderID","description":"","recommendedTypes":[],"solidityType":"uint32"},{"name":"_horizon","description":"","recommendedTypes":[],"solidityType":"uint32"},{"name":"_senderFee","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"_gasPrice","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"_descriptionHash","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true}]}