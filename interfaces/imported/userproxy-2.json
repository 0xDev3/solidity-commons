{
  "schema": "../schema.json",
  "tags": [],
  "name": "UserProxy",
  "description": "UserProxy contract.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "ammWrapperAddr()",
      "name": "ammWrapperAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collectAMMFee(address[],address)",
      "name": "collectAMMFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenList",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "collectPMMFee(address[],address)",
      "name": "collectPMMFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenList",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address,address)",
      "name": "initialize",
      "description": "Replacing constructor and initialize the contract. This function should only be called once.",
      "parameterDecorators": [
        {
          "name": "_pmmAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_weth",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isPMMEnabled()",
      "name": "isPMMEnabled",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isValidMM(address)",
      "name": "isValidMM",
      "description": "",
      "parameterDecorators": [
        {
          "name": "mm",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isValidSignature(address,bytes32,bytes,bytes)",
      "name": "isValidSignature",
      "description": "Verifies that a hash has been signed by the given signer.",
      "parameterDecorators": [
        {
          "name": "_signerAddress",
          "description": "Address that should have signed the given hash.",
          "recommendedTypes": []
        },
        {
          "name": "_hash",
          "description": "Hash of the EIP-712 encoded data.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "Full EIP-712 data structure that was hashed and signed.",
          "recommendedTypes": []
        },
        {
          "name": "_sig",
          "description": "Proof that the hash has been signed by signer. For non wallet signatures, _sig is expected to be an array tightly encoded as (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "isValid",
          "description": "True if the address recovered from the provided signature matches the input signer address.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pmmAddr()",
      "name": "pmmAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registerMM(address,bool)",
      "name": "registerMM",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_mm",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_add",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAMMCurveTokenIndex(address,address[])",
      "name": "setAMMCurveTokenIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_makerAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_assetAddresses",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAMMSubsidyFactor(uint256)",
      "name": "setAMMSubsidyFactor",
      "description": "Update AMMWrapper's subsidyFactor param.",
      "parameterDecorators": [
        {
          "name": "_subsidyFactor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPMMStatus(bool)",
      "name": "setPMMStatus",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_enable",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "toAMM(bytes)",
      "name": "toAMM",
      "description": "proxy to AMM.",
      "parameterDecorators": [
        {
          "name": "_payload",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "toPMM(bytes)",
      "name": "toPMM",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_payload",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeAMMWrapper(address)",
      "name": "upgradeAMMWrapper",
      "description": "Update AMMWrapper contract address. Used only when ABI of AMMWrapeer remain unchanged. Otherwise, UserProxy contract should be upgraded altogether.",
      "parameterDecorators": [
        {
          "name": "_newAMMWrapperAddr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradePMM(address)",
      "name": "upgradePMM",
      "description": "Update PMM contract address. Used only when ABI of PMM remain unchanged. Otherwise, UserProxy contract should be upgraded altogether.",
      "parameterDecorators": [
        {
          "name": "_newPMMAddr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "version()",
      "name": "version",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}