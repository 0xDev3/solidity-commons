{
  "schema": "../schema.json",
  "tags": [],
  "name": "TroveFactory",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CollateralUpdate(address,uint256)",
      "name": "CollateralUpdate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "totalCollateral",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DebtUpdate(address,uint256)",
      "name": "DebtUpdate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "collateral",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "totalDebt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewTrove(address,address,address)",
      "name": "NewTrove",
      "description": "",
      "parameterDecorators": [
        {
          "name": "trove",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Redemption(address,uint256,uint256,uint256,uint256,uint256,address)",
      "name": "Redemption",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "stableAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "stableUnspent",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "startBaseRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "finishBaseRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "lastTroveRedeemed",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TroveCollateralUpdate(address,address,uint256,uint256)",
      "name": "TroveCollateralUpdate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "trove",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newCollateralization",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TroveDebtUpdate(address,address,address,uint256,uint256,uint256,uint256)",
      "name": "TroveDebtUpdate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "trove",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "actor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "baseRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newCollateralization",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "feePaid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TroveInserted(address,address,address,bool)",
      "name": "TroveInserted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "trove",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "referenceTrove",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "before",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TroveLiquidated(address,address,uint256,address,uint256)",
      "name": "TroveLiquidated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "trove",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "collateralToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "priceAtLiquidation",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "stabilityPoolLiquidation",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "collateral",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TroveRemoved(address)",
      "name": "TroveRemoved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "trove",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DECIMAL_PRECISION()",
      "name": "DECIMAL_PRECISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "LIQUIDATION_RESERVE()",
      "name": "LIQUIDATION_RESERVE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_INT()",
      "name": "MAX_INT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WETHContract()",
      "name": "WETHContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "arbitragePool()",
      "name": "arbitragePool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "containsTrove(address,address)",
      "name": "containsTrove",
      "description": "returns and checks if such trove exists for this token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_trove",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createTrove(address)",
      "name": "createTrove",
      "description": "creates a trove if the token is supported.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "any supported token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "trove",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createTroveAndBorrow(address,uint256,address,uint256,address)",
      "name": "createTroveAndBorrow",
      "description": "creates a trove with collateral and borrows from it.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "any supported token address.",
          "recommendedTypes": []
        },
        {
          "name": "_collateralAmount",
          "description": "a positive amount of collateral to transfer from the sender's account or zero.",
          "recommendedTypes": []
        },
        {
          "name": "_recipient",
          "description": "is the address to which the newly minted tokens will be transferred.",
          "recommendedTypes": []
        },
        {
          "name": "_borrowAmount",
          "description": "the value of the minting.",
          "recommendedTypes": []
        },
        {
          "name": "_nextTrove",
          "description": "is the trove that we think will be the next one in the list. This might be off in case there were some other list changing transactions.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emitLiquidationEvent(address,address,address,uint256)",
      "name": "emitLiquidationEvent",
      "description": "to emit Liquidation event, to be called from a trove after liquidation.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "address of token.",
          "recommendedTypes": []
        },
        {
          "name": "_trove",
          "description": "address of the Trove.",
          "recommendedTypes": []
        },
        {
          "name": "stabilityPoolLiquidation",
          "description": "address of StabilityPool, 0x0 if Community LiquidationPool.",
          "recommendedTypes": []
        },
        {
          "name": "collateral",
          "description": "uint256 amount of collateral.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emitTroveCollateralUpdate(address,uint256,uint256)",
      "name": "emitTroveCollateralUpdate",
      "description": "to emit Collateral update event, to be called from trove.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "address of token.",
          "recommendedTypes": []
        },
        {
          "name": "_newAmount",
          "description": "new trove's Collateral value.",
          "recommendedTypes": []
        },
        {
          "name": "_newCollateralization",
          "description": "new trove's collateralization value.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emitTroveDebtUpdate(address,uint256,uint256,uint256)",
      "name": "emitTroveDebtUpdate",
      "description": "to emit Trove's debt update event, to be called from trove.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "address of token.",
          "recommendedTypes": []
        },
        {
          "name": "_newAmount",
          "description": "new trove's debt value.",
          "recommendedTypes": []
        },
        {
          "name": "_newCollateralization",
          "description": "new trove's collateralization value.",
          "recommendedTypes": []
        },
        {
          "name": "_feePaid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "feeRecipient()",
      "name": "feeRecipient",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "firstTrove(address)",
      "name": "firstTrove",
      "description": "returns the first trove by minimal collaterization ratio.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBorrowingFee(uint256)",
      "name": "getBorrowingFee",
      "description": "returns fee from borrowing the amount.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRedemptionAmount(uint256,uint256)",
      "name": "getRedemptionAmount",
      "description": "returns amount to be used in redemption excluding fee,.",
      "parameterDecorators": [
        {
          "name": "_feeRatio",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRedemptionFee(uint256,uint256)",
      "name": "getRedemptionFee",
      "description": "returns fee from redeeming the amount.",
      "parameterDecorators": [
        {
          "name": "_feeRatio",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRedemptionFeeRatio(address)",
      "name": "getRedemptionFeeRatio",
      "description": "returns fee from redeeming the amount.",
      "parameterDecorators": [
        {
          "name": "_trove",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "increaseCollateralNative(address,address)",
      "name": "increaseCollateralNative",
      "description": "deposits native token into trove after wrapping the ETH (EWT, AVAX, etc) into WETH (WEWT, WAVAX, etc).",
      "parameterDecorators": [
        {
          "name": "_trove",
          "description": "tove to be deposited in.",
          "recommendedTypes": []
        },
        {
          "name": "_newNextTrove",
          "description": "hint for next trove position.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "insertTrove(address,address)",
      "name": "insertTrove",
      "description": "insert a trove in the sorted list of troves. the troves must be sorted by collateralisation ratio CR the sender must be the trove which will be inserted in the list.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_newNextTrove",
          "description": "is the trove before which the trove will be added.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lastTrove(address)",
      "name": "lastTrove",
      "description": "returns the last trove by maximum collaterization ratio.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "liquidationPool(address)",
      "name": "liquidationPool",
      "description": "returns contract address of LiquidationPool for specific token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nextTrove(address,address)",
      "name": "nextTrove",
      "description": "returns the next trove by collaterization ratio.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_trove",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "prevTrove(address,address)",
      "name": "prevTrove",
      "description": "returns the previous trove by collaterization ratio.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_trove",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "redeemStableCoinForCollateral(address,uint256,uint256,uint256,address)",
      "name": "redeemStableCoinForCollateral",
      "description": "redeem desired StableCoin amount for desired collateral tokens.",
      "parameterDecorators": [
        {
          "name": "_collateralToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_stableAmount",
          "description": "the desired amount of StableCoin to pay for redemption.",
          "recommendedTypes": []
        },
        {
          "name": "_maxRate",
          "description": "is max fee (in % with 1e18 precision) allowed to pay.",
          "recommendedTypes": []
        },
        {
          "name": "_lastTroveCurrentICR",
          "description": "ICR of the last trove to be redeemed, if matches then the hint is working and it redeems.",
          "recommendedTypes": []
        },
        {
          "name": "_lastTroveNewPositionHint",
          "description": "hint for the of the nextNewTrove after redemption for the latest trove.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeTrove(address,address)",
      "name": "removeTrove",
      "description": "remove a trove from the list and send any remaining token balance to the owner.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_trove",
          "description": "is the trove which will be removed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setArbitragePool(address)",
      "name": "setArbitragePool",
      "description": "sets contract address of ArbitragePool.",
      "parameterDecorators": [
        {
          "name": "_arbitragePool",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFeeRecipient(address)",
      "name": "setFeeRecipient",
      "description": "sets contract address of FeeRecipient.",
      "parameterDecorators": [
        {
          "name": "_feeRecipient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLiquidationPool(address,address)",
      "name": "setLiquidationPool",
      "description": "sets contract address of LiquidationPool for specific token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_liquidationPool",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setStabilityPool(address)",
      "name": "setStabilityPool",
      "description": "sets contract address of StabilityPool.",
      "parameterDecorators": [
        {
          "name": "_stabilityPool",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTokenOwner()",
      "name": "setTokenOwner",
      "description": "sets address of the contract for stableCoin issuance.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTokenPriceFeed(address)",
      "name": "setTokenPriceFeed",
      "description": "sets contract address of TokenPriceFeed.",
      "parameterDecorators": [
        {
          "name": "_tokenPriceFeed",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWETH(address,address)",
      "name": "setWETH",
      "description": "sets contract address of Wrapped native token, along with liquidationPool.",
      "parameterDecorators": [
        {
          "name": "_WETH",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_liquidationPool",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stabilityPool()",
      "name": "stabilityPool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stableCoin()",
      "name": "stableCoin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "togglePause()",
      "name": "togglePause",
      "description": "toggles the pause state of the contract if the contract is paused borrowing is disabled and liquidation with Stability Pool is impossible (Community liquidations still allowed).",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenCollateralization(address)",
      "name": "tokenCollateralization",
      "description": "returns total collateral ratio averaged between troves for specific token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenOwner()",
      "name": "tokenOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenToPriceFeed()",
      "name": "tokenToPriceFeed",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalCollateral(address)",
      "name": "totalCollateral",
      "description": "returns total collateral among all troves for specific token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalDebt()",
      "name": "totalDebt",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalDebtForToken(address)",
      "name": "totalDebtForToken",
      "description": "returns total debt among all troves for specific token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferTokenOwnership(address)",
      "name": "transferTokenOwnership",
      "description": "transfers contract ownership this function is used when a new TroveFactory version is deployed and the same tokens are used. We transfer the ownership of the TokenOwner contract and the new TroveFactory is able to add minters.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "troveCount(address)",
      "name": "troveCount",
      "description": "returns the number of troves for specific token.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateTotalCollateral(address,uint256,bool)",
      "name": "updateTotalCollateral",
      "description": "function to be called from trove to update total collateral value of all troves of this tokens.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_increase",
          "description": "bool that indicates \"+\" or \"-\" operation.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateTotalDebt(uint256,bool)",
      "name": "updateTotalDebt",
      "description": "function to be called from trove to change totalDebt.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_borrow",
          "description": "indicates if it is borrow or repay/liquidatin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}