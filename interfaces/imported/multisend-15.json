{
  "schema": "../schema.json",
  "tags": [],
  "name": "MultiSend",
  "description": "",
  "eventDecorators": [
    {
      "signature": "EscapeHatchCalled(address,uint256)",
      "name": "EscapeHatchCalled",
      "description": "The standard EIP-20 transfer event.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "The standard EIP-20 transfer event.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "The standard EIP-20 transfer event.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Transfer(address,address,uint256)",
      "name": "Transfer",
      "description": "The standard EIP-20 transfer event.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "The standard EIP-20 transfer event.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "_totalSupply()",
      "name": "_totalSupply",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "decimals()",
      "name": "decimals",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "emergencyStop()",
      "name": "emergencyStop",
      "description": "Emergency stop contract in a case of a critical security flaw discovered.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "escapeHatch(address,address)",
      "name": "escapeHatch",
      "description": "The `escapeHatch()` should only be called as a last resort if a security issue is uncovered or something unexpected happened.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "to transfer, use 0x0 for ether.",
          "recommendedTypes": []
        },
        {
          "name": "_escapeHatchDestination",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multiTransferEqual_L1R(address[],uint256)",
      "name": "multiTransferEqual_L1R",
      "description": "Send equal Ether amount to multiple addresses. Payable.",
      "parameterDecorators": [
        {
          "name": "_addresses",
          "description": "Array of addresses to send to.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Amount to send.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multiTransferTokenEqual_71p(address,address[],uint256)",
      "name": "multiTransferTokenEqual_71p",
      "description": "Send equal ERC20 tokens amount to multiple contracts.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The token to send.",
          "recommendedTypes": []
        },
        {
          "name": "_addresses",
          "description": "Array of addresses to send to.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Tokens amount to send to each address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multiTransferTokenEther(address,address[],uint256[],uint256,uint256[])",
      "name": "multiTransferTokenEther",
      "description": "Send ERC20 tokens and Ether to multiple addresses using three arrays which includes the address and the amounts.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The token to send.",
          "recommendedTypes": []
        },
        {
          "name": "_addresses",
          "description": "Array of addresses to send to.",
          "recommendedTypes": []
        },
        {
          "name": "_amounts",
          "description": "Array of token amounts to send.",
          "recommendedTypes": []
        },
        {
          "name": "_amountSum",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amountsEther",
          "description": "Array of Ether amounts to send.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multiTransferTokenEtherEqual(address,address[],uint256,uint256)",
      "name": "multiTransferTokenEtherEqual",
      "description": "Send equal ERC20 tokens amount to multiple addresses.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The token to send.",
          "recommendedTypes": []
        },
        {
          "name": "_addresses",
          "description": "Array of addresses to send to.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Tokens amount to send to each address.",
          "recommendedTypes": []
        },
        {
          "name": "_amountEther",
          "description": "Ether amount to send.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multiTransferToken_a4A(address,address[],uint256[],uint256)",
      "name": "multiTransferToken_a4A",
      "description": "Send ERC20 tokens to multiple addresses using two arrays which includes the address and the amount.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The token to send.",
          "recommendedTypes": []
        },
        {
          "name": "_addresses",
          "description": "Array of addresses to send to.",
          "recommendedTypes": []
        },
        {
          "name": "_amounts",
          "description": "Array of token amounts to send.",
          "recommendedTypes": []
        },
        {
          "name": "_amountSum",
          "description": "Sum of the _amounts array to send.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multiTransfer_OST(address[],uint256[])",
      "name": "multiTransfer_OST",
      "description": "Send to multiple addresses using two arrays which includes the address and the amount. Payable.",
      "parameterDecorators": [
        {
          "name": "_addresses",
          "description": "Array of addresses to send to.",
          "recommendedTypes": []
        },
        {
          "name": "_amounts",
          "description": "Array of amounts to send.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "symbol()",
      "name": "symbol",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSupply()",
      "name": "totalSupply",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transfer2(address,uint256,address,uint256)",
      "name": "transfer2",
      "description": "Send to two addresses Payable.",
      "parameterDecorators": [
        {
          "name": "_address1",
          "description": "Address to send to.",
          "recommendedTypes": []
        },
        {
          "name": "_amount1",
          "description": "Amount to send to _address1.",
          "recommendedTypes": []
        },
        {
          "name": "_address2",
          "description": "Address to send to.",
          "recommendedTypes": []
        },
        {
          "name": "_amount2",
          "description": "Amount to send to _address2.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}