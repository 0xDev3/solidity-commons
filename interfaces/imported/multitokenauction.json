{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "MultiTokenAuction",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ChangedFeePerMillion(uint256)",
      "name": "ChangedFeePerMillion",
      "description": "Signals that a new price update request is being posted to the Witnet Request Board.",
      "parameterDecorators": [
        {
          "name": "cutPerMillion",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CreateAuctionEvent(address,string,address,uint96,uint96,uint96,uint32,uint256,tuple)",
      "name": "CreateAuctionEvent",
      "description": "Signals that a new price update request is being posted to the Witnet Request Board.",
      "parameterDecorators": [
        {
          "name": "creatorAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "payTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "openBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expiryBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "increment",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expiryExtension",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "nfts",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CreatorWithdrawProfit(address,address,uint256)",
      "name": "CreatorWithdrawProfit",
      "description": "Signals that a new price update request is being posted to the Witnet Request Board.",
      "parameterDecorators": [
        {
          "name": "creatorAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "payTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Signals that a new price update request is being posted to the Witnet Request Board.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PlayerBidEvent(string,address,uint256,address,uint256,uint96)",
      "name": "PlayerBidEvent",
      "description": "Signals that a new price update request is being posted to the Witnet Request Board.",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "playerAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "payTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "bid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expiryBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PlayerWithdrawBid(string,uint256)",
      "name": "PlayerWithdrawBid",
      "description": "Signals that a new price update request is being posted to the Witnet Request Board.",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProcessWithdrawNft(string,uint256)",
      "name": "ProcessWithdrawNft",
      "description": "Signals that a new price update request is being posted to the Witnet Request Board.",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardEvent(string,uint256,address)",
      "name": "RewardEvent",
      "description": "Signals that a new price update request is being posted to the Witnet Request Board.",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "winnerAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetNewPayToken(string,address)",
      "name": "SetNewPayToken",
      "description": "Signals that a new price update request is being posted to the Witnet Request Board.",
      "parameterDecorators": [
        {
          "name": "tokenName",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addAuctionNFT(string,tuple(address,uint256,uint256,uint256,uint256))",
      "name": "addAuctionNFT",
      "description": "",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "nft",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "contractAddress",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minBid",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "fixedPrice",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createAuction(string,string,uint96,uint96,uint32,uint96,tuple(address,uint256,uint256,uint256,uint256)[])",
      "name": "createAuction",
      "description": "",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "payTokenName",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "openBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "expiryBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "expiryExtension",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "minIncrement",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "nfts",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "contractAddress",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minBid",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "fixedPrice",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "creator_withdraw_nft(string,uint256)",
      "name": "creator_withdraw_nft",
      "description": "",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "creator_withdraw_nft_batch(string)",
      "name": "creator_withdraw_nft_batch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "creator_withdraw_profit(string)",
      "name": "creator_withdraw_profit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "payTokenName",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cutPerMillion()",
      "name": "cutPerMillion",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_creator_balance(address,address)",
      "name": "get_creator_balance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "creatorAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "payTokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_current_result(string,uint256)",
      "name": "get_current_result",
      "description": "",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_match(string)",
      "name": "get_match",
      "description": "",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param5",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param6",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_pay_token(string)",
      "name": "get_pay_token",
      "description": "",
      "parameterDecorators": [
        {
          "name": "payTokenName",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "get_player_bid(string,address,uint256,address)",
      "name": "get_player_bid",
      "description": "",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "playerAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "payTokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "matchNFTs(string,uint256)",
      "name": "matchNFTs",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "contractAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "minBid",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "fixedPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "matchResults(string,uint256)",
      "name": "matchResults",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "topBidder",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "standingBid",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "finalBid",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "matches(string)",
      "name": "matches",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "creatorAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "payTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "minIncrement",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint96"
        },
        {
          "name": "openBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint96"
        },
        {
          "name": "expiryBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint96"
        },
        {
          "name": "expiryExtension",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "nftCount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxCutPerMillion()",
      "name": "maxCutPerMillion",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
      "name": "onERC1155BatchReceived",
      "description": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "The address which initiated the batch transfer (i.e. msg.sender).",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "The address which previously owned the token.",
          "recommendedTypes": []
        },
        {
          "name": "ids",
          "description": "An array containing ids of each token being transferred (order and length must match values array).",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "An array containing amounts of each token being transferred (order and length must match ids array).",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Additional data with no specified format.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed.",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onERC1155Received(address,address,uint256,uint256,bytes)",
      "name": "onERC1155Received",
      "description": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "The address which initiated the transfer (i.e. msg.sender).",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "The address which previously owned the token.",
          "recommendedTypes": []
        },
        {
          "name": "id",
          "description": "The ID of the token being transferred.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "The amount of tokens being transferred.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "Additional data with no specified format.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed.",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "payTokens(string)",
      "name": "payTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "player_bid(string,uint256,uint256)",
      "name": "player_bid",
      "description": "",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "player_fixed_price(string,uint256)",
      "name": "player_fixed_price",
      "description": "",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "player_withdraw_bid(string,uint256)",
      "name": "player_withdraw_bid",
      "description": "",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reward(string,uint256)",
      "name": "reward",
      "description": "",
      "parameterDecorators": [
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenIndex",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOwnerCutPerMillion(uint256)",
      "name": "setOwnerCutPerMillion",
      "description": "Sets the share cut for the owner of the contract that's charged to the seller on a successful sale.",
      "parameterDecorators": [
        {
          "name": "_cutPerMillion",
          "description": "- Share amount, from 0 to 99,999.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPayToken(string,address)",
      "name": "setPayToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token_name",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_token_address",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}