{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "locking",
    "vaults"
  ],
  "name": "MultisigProxy",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Transacted(address,address,bytes32,address,uint256,bytes)",
      "name": "Transacted",
      "description": "Emitted when a user sells wTokens to the AMM. Token transfer event.",
      "parameterDecorators": [
        {
          "name": "msgSender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "otherSigner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "operation",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "toAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VaultCreated(address)",
      "name": "VaultCreated",
      "description": "Emitted when a user sells wTokens to the AMM. Token transfer event.",
      "parameterDecorators": [
        {
          "name": "vaultAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "createERC20Operation(address,address[],uint256[],address[])",
      "name": "createERC20Operation",
      "description": "Create a new Multisignature Operation for an ERC20 transfer returns id of the operation.",
      "parameterDecorators": [
        {
          "name": "vaultAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenContractAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createOperation(address,address[],uint256[])",
      "name": "createOperation",
      "description": "Create a new Multisignature Operation returns id of the operation.",
      "parameterDecorators": [
        {
          "name": "vaultAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createVault(uint256)",
      "name": "createVault",
      "description": "Create a new contract (VaultContract) that will store funds returns address of newly created VaultContract address and store it.",
      "parameterDecorators": [
        {
          "name": "minSig",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getOperationInfos(uint256)",
      "name": "getOperationInfos",
      "description": "Get the number of signatures for an Operation returns id of the operation To update with new Transaction Structure.",
      "parameterDecorators": [
        {
          "name": "_operationId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "vaultAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "signatures",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "minimumSignature",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "transactionCount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOperationSignatures(uint256)",
      "name": "getOperationSignatures",
      "description": "Get the number of signatures for an Operation returns id of the operation.",
      "parameterDecorators": [
        {
          "name": "_operationId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getVaultBalance(address)",
      "name": "getVaultBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vaultAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSigner(address)",
      "name": "isSigner",
      "description": "Determine if an address is a signer on this wallet.",
      "parameterDecorators": [
        {
          "name": "signer",
          "description": "address to check returns boolean indicating whether address is signer or not.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "signOperation(uint256)",
      "name": "signOperation",
      "description": "Sign a Multisignature Operation returns id of the operation.",
      "parameterDecorators": [
        {
          "name": "_operationId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "signers(uint256)",
      "name": "signers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}