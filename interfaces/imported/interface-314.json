{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "CodexRecordProxy",
  "description": "CodexRecordProxy, a proxy contract for token storage.",
  "eventDecorators": [
    {
      "signature": "Upgraded(string,address)",
      "name": "Upgraded",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "version",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "implementation",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ProxyOwnershipTransferred(address,address)",
      "name": "ProxyOwnershipTransferred",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "proxyOwner()",
      "name": "proxyOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "Since name is passed into the ERC721 token constructor, it's not stored in the CodexRecordProxy contract. Thus, we call into the contract directly to retrieve its value.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "version()",
      "name": "version",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "upgradeTo(string,address)",
      "name": "upgradeTo",
      "description": "Upgrades the CodexRecordProxy to point at a new implementation. Only callable by the owner. Only upgrade the token after extensive testing has been done. The storage is append only. The new token must inherit from the previous token so the shape of the storage is maintained.",
      "parameterDecorators": [
        {
          "name": "_version",
          "description": "The version of the token.",
          "recommendedTypes": []
        },
        {
          "name": "_implementation",
          "description": "The address at which the implementation is available.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "implementation()",
      "name": "implementation",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "symbol()",
      "name": "symbol",
      "description": "Since symbol is passed into the ERC721 token constructor, it's not stored in the CodexRecordProxy contract. Thus, we call into the contract directly to retrieve its value.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferProxyOwnership(address)",
      "name": "transferProxyOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}