{
  "schema": "../schema.json",
  "tags": [
    "dao"
  ],
  "name": "ZamzamDAO",
  "description": "Zamzam DAO contract. This contract keeps track of all the projects created from the Zamzam platform, their states and attributes, eg. total amonut raised for a project. This contract is used by the Zamzam platform to create projects, collect, release and refund funds for projects, etc.",
  "eventDecorators": [
    {
      "signature": "Donation(uint256,address,uint256)",
      "name": "Donation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "donor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FundsRefunded(uint256,address,uint256)",
      "name": "FundsRefunded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "donor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FundsReleased(uint256,uint256)",
      "name": "FundsReleased",
      "description": "",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProjectCreated(uint256,uint256,uint256,uint256)",
      "name": "ProjectCreated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fundingStartTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fundingEndTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "goalAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "adminWallet()",
      "name": "adminWallet",
      "description": "Returns the admin wallet.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "allowRefunds(uint256)",
      "name": "allowRefunds",
      "description": "Enables refunds on a proejct `projectId`.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "The ID of the project for whom refunds will be enabled Only Zamzam admin can set this field.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "amountDonated(uint256,address)",
      "name": "amountDonated",
      "description": "Returns the total donation made by user `user` for project `projectId`.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createProject(uint256,uint256,uint256)",
      "name": "createProject",
      "description": "Create a Zamzam project. Create a Zamzam project, only a Zamzam admin can create a Zamzam project.",
      "parameterDecorators": [
        {
          "name": "_fundingStartTime",
          "description": "The date from which donations will be accepted for this project.",
          "recommendedTypes": []
        },
        {
          "name": "_fundingEndTime",
          "description": "The date until which (and including) donations will be accepted for this project.",
          "recommendedTypes": []
        },
        {
          "name": "_goalAmount",
          "description": "The minimum amount of tokens needed to start the project.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns the projectId of the created project.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "donate(uint256,uint256)",
      "name": "donate",
      "description": "Donate to a Zamzam Project. Donates `tokenAmount` Zamzam tokens to project `projectId`.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "The ID of the project to which the donation will be made.",
          "recommendedTypes": []
        },
        {
          "name": "tokenAmount",
          "description": "The amount of Zamzam tokens which will be donated.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns true if the donation was successful.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "donateAdmin(uint256,uint256,address)",
      "name": "donateAdmin",
      "description": "Zamzam admin can donate in the name of a user. Zamzam admin can donate in the name of a user to support fiat donations To support fiat donations, the user pays in fiat currency, and an equivalent amount of Zamzam tokens are credited to the Zamzam admin. Then the Zamzam admin calls this function, passing in the address of the user to make a donation in their name.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "The ID of the project to which the donation will be made.",
          "recommendedTypes": []
        },
        {
          "name": "tokenAmount",
          "description": "The amount of Zamzam tokens which will be donated.",
          "recommendedTypes": []
        },
        {
          "name": "donor",
          "description": "The address of the user who will be accounted for the donation.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns true if the donation was successful.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fundingEndTime(uint256)",
      "name": "fundingEndTime",
      "description": "Returns the funding end time of project `projectId`.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fundingStartTime(uint256)",
      "name": "fundingStartTime",
      "description": "Returns the funding start time of project `projectId`.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "goalAmount(uint256)",
      "name": "goalAmount",
      "description": "Returns the goal amount of project `projectId`.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "refundDonor(uint256)",
      "name": "refundDonor",
      "description": "Refund tokens to a donor. Refunds the unused tokens of a Zamzam project `projectId` back to the msg.sender.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "The ID of the project whose tokens will be refunded.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns true if refund of tokens of project was successful.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "refundsAllowed(uint256)",
      "name": "refundsAllowed",
      "description": "Returns if refunds are allowed on project `projectId` or not.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "releaseFunds(uint256,uint256)",
      "name": "releaseFunds",
      "description": "Release the tokens of a Zamzam Project. Releases `tokenAmount` tokens of a Zamzam project `projectId` to the admin wallet `_adminWallet` The Zamzam admin then releases the tokens to the appropriate addresses.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "The ID of the project whose tokens will be released.",
          "recommendedTypes": []
        },
        {
          "name": "tokenAmount",
          "description": "The amount of tokens which will be released.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns true if the release of tokens was successful.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "Returns the zamzam token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalRaised(uint256)",
      "name": "totalRaised",
      "description": "Returns the total funds raised by project `projectId`.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSpent(uint256)",
      "name": "totalSpent",
      "description": "Returns the total funds spent by project `projectId`.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "votingPower(uint256,address)",
      "name": "votingPower",
      "description": "Calculates the voting power of a user `userId` in project `projectId`.",
      "parameterDecorators": [
        {
          "name": "projectId",
          "description": "projectId of the project in which the voting power is calculated.",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "Address of the user whose voting power calculated.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns the voting power a user `user` in project `projectId`.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}