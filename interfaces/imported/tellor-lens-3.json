{
  "schema": "../schema.json",
  "tags": [
    "oracles"
  ],
  "name": "Lens",
  "description": "Tellor Lens. A contract to aggregate and simplify calls to the Tellor oracle.*.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "currentReward()",
      "name": "currentReward",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentValue(uint256)",
      "name": "getCurrentValue",
      "description": "Allows the user to get the latest value for the requestId specified.",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "is the requestId to look up the value for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "ifRetrieve",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDataBefore(uint256,uint256)",
      "name": "getDataBefore",
      "description": "Allows the user to get the first value for the requestId before the specified timestamp.",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "is the requestId to look up the value for.",
          "recommendedTypes": []
        },
        {
          "name": "_timestamp",
          "description": "before which to search for first verified value.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_ifRetrieve",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getIndexForDataBefore(uint256,uint256)",
      "name": "getIndexForDataBefore",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_timestamp",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "found",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getNewValueCountbyRequestId(uint256)",
      "name": "getNewValueCountbyRequestId",
      "description": "Counts the number of values that have been submited for the request.",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "the requestId to look up.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTimestampbyRequestIDandIndex(uint256,uint256)",
      "name": "getTimestampbyRequestIDandIndex",
      "description": "Gets the timestamp for the value based on their index.",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "is the requestId to look up.",
          "recommendedTypes": []
        },
        {
          "name": "_index",
          "description": "is the value index to look up.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isInDispute(uint256,uint256)",
      "name": "isInDispute",
      "description": "Gets the 5 miners who mined the value for the specified requestId/_timestamp.",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "to looku p.",
          "recommendedTypes": []
        },
        {
          "name": "_timestamp",
          "description": "is the timestamp to look up miners for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "retrieveData(uint256,uint256)",
      "name": "retrieveData",
      "description": "Retreive value from oracle based on requestId/timestamp.",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "being requested.",
          "recommendedTypes": []
        },
        {
          "name": "_timestamp",
          "description": "to retreive data/value from.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tellor()",
      "name": "tellor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "timeOfLastNewValue()",
      "name": "timeOfLastNewValue",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalTip(uint256)",
      "name": "totalTip",
      "description": "",
      "parameterDecorators": [
        {
          "name": "requestID",
          "description": "is the ID for which the function returns the total tips.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "values(uint256,uint256)",
      "name": "values",
      "description": "",
      "parameterDecorators": [
        {
          "name": "requestID",
          "description": "is the ID for which the function returns the prices for.",
          "recommendedTypes": []
        },
        {
          "name": "count",
          "description": "is the number of last prices to return.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}