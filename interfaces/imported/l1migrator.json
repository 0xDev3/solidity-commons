{
  "schema": "../schema.json",
  "tags": [],
  "name": "L1Migrator",
  "description": "",
  "eventDecorators": [
    {
      "signature": "BridgeMinterUpdate(address)",
      "name": "BridgeMinterUpdate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "bridgeMinter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "L2MigratorUpdate(address)",
      "name": "L2MigratorUpdate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "l2Migrator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MigrateDelegatorInitiated(uint256,tuple)",
      "name": "MigrateDelegatorInitiated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "seqNo",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "params",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MigrateSenderInitiated(uint256,tuple)",
      "name": "MigrateSenderInitiated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "seqNo",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "params",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MigrateUnbondingLocksInitiated(uint256,tuple)",
      "name": "MigrateUnbondingLocksInitiated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "seqNo",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "params",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TxToL2(address,address,uint256,bytes)",
      "name": "TxToL2",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "seqNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bondingManagerAddr()",
      "name": "bondingManagerAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bridgeMinterAddr()",
      "name": "bridgeMinterAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMigrateDelegatorParams(address,address)",
      "name": "getMigrateDelegatorParams",
      "description": "Return L2 calldata and MigrateDelegatorParams to use for a L2 call on L2Migrator.",
      "parameterDecorators": [
        {
          "name": "_l1Addr",
          "description": "Address migrating from L1.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Addr",
          "description": "Address to use on L2.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "data",
          "description": "L2 calldata for finalizeMigrateDelegator() in L2Migrator.",
          "recommendedTypes": [],
          "solidityType": "bytes"
        },
        {
          "name": "params",
          "description": "MigrateDelegatorParams to use for finalizeMigrateDelegator() in L2Migrator.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "l1Addr",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "l2Addr",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "stake",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "delegatedStake",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "fees",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "delegate",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMigrateSenderParams(address,address)",
      "name": "getMigrateSenderParams",
      "description": "Return L2 calldata and MigrateSenderParams to use for a L2 call on L2Migrator.",
      "parameterDecorators": [
        {
          "name": "_l1Addr",
          "description": "Address migrating from L1.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Addr",
          "description": "Address to use on L2.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "data",
          "description": "L2 calldata for finalizeMigrateSender() in L2Migrator.",
          "recommendedTypes": [],
          "solidityType": "bytes"
        },
        {
          "name": "params",
          "description": "MigrateSenderParams to use for finalizeMigrateSender() in L2Migrator.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "l1Addr",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "l2Addr",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "deposit",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "reserve",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMigrateUnbondingLocksParams(address,address,uint256[])",
      "name": "getMigrateUnbondingLocksParams",
      "description": "Return L2 calldata and MigrateUnbondingLocksParams to use for a L2 call on L2Migrator.",
      "parameterDecorators": [
        {
          "name": "_l1Addr",
          "description": "Address migrating from L1.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Addr",
          "description": "Address to use on L2.",
          "recommendedTypes": []
        },
        {
          "name": "_unbondingLockIds",
          "description": "IDs of unbonding locks in L1 BondingManager to migrate.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "data",
          "description": "L2 calldata for finalizeMigrateUnbondingLocks() in L2Migrator.",
          "recommendedTypes": [],
          "solidityType": "bytes"
        },
        {
          "name": "params",
          "description": "MigrateUnbondingLocksParams to use for finalizeMigrateUnbondingLocks() in L2Migrator.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "l1Addr",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "l2Addr",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "total",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "unbondingLockIds",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256[]"
            },
            {
              "name": "delegate",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "inbox()",
      "name": "inbox",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "l1LPTGatewayAddr()",
      "name": "l1LPTGatewayAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "l2MigratorAddr()",
      "name": "l2MigratorAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "migrateDelegator(address,address,bytes,uint256,uint256,uint256)",
      "name": "migrateDelegator",
      "description": "Executes a L2 call to L2Migrator to migrate transcoder/delegator state from the L1 BondingManager. The term \"delegator\" here can refer to both a transcoder (self-delegated delegator) and delegator.",
      "parameterDecorators": [
        {
          "name": "_l1Addr",
          "description": "Address migrating from L1.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Addr",
          "description": "Address to use on L2.",
          "recommendedTypes": []
        },
        {
          "name": "_sig",
          "description": "Optional EIP-712 signature over a payload that includes _l1Addr and _l2Addr.",
          "recommendedTypes": []
        },
        {
          "name": "_maxGas",
          "description": "Gas limit for L2 execution.",
          "recommendedTypes": []
        },
        {
          "name": "_gasPriceBid",
          "description": "Gas price bid for L2 execution.",
          "recommendedTypes": []
        },
        {
          "name": "_maxSubmissionCost",
          "description": "Max ETH to pay for retryable ticket base submission fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "migrateETH(uint256,uint256,uint256)",
      "name": "migrateETH",
      "description": "Executes a L2 call to send ETH from the L1BridgeMinter to the L2Migrator. Anyone can call this function.",
      "parameterDecorators": [
        {
          "name": "_maxGas",
          "description": "Gas limit for L2 execution.",
          "recommendedTypes": []
        },
        {
          "name": "_gasPriceBid",
          "description": "Gas price bid for L2 execution.",
          "recommendedTypes": []
        },
        {
          "name": "_maxSubmissionCost",
          "description": "Max ETH to pay for retryable ticket base submission fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "migrateLPT(uint256,uint256,uint256)",
      "name": "migrateLPT",
      "description": "Executes a L2 call to send LPT from the L1BridgeMinter to the L2Migrator. Anyone can call this function.",
      "parameterDecorators": [
        {
          "name": "_maxGas",
          "description": "Gas limit for L2 execution.",
          "recommendedTypes": []
        },
        {
          "name": "_gasPriceBid",
          "description": "Gas price bid for L2 execution.",
          "recommendedTypes": []
        },
        {
          "name": "_maxSubmissionCost",
          "description": "Max ETH to pay for retryable ticket base submission fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "migrateSender(address,address,bytes,uint256,uint256,uint256)",
      "name": "migrateSender",
      "description": "Executes a L2 call to L2Migrator to migrate sender deposit/reserve state from the L1 TicketBroker.",
      "parameterDecorators": [
        {
          "name": "_l1Addr",
          "description": "Address migrating from L1.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Addr",
          "description": "Address to use on L2.",
          "recommendedTypes": []
        },
        {
          "name": "_sig",
          "description": "Optional EIP-712 signature over a payload that includes _l1Addr and _l2Addr.",
          "recommendedTypes": []
        },
        {
          "name": "_maxGas",
          "description": "Gas limit for L2 execution.",
          "recommendedTypes": []
        },
        {
          "name": "_gasPriceBid",
          "description": "Gas price bid for L2 execution.",
          "recommendedTypes": []
        },
        {
          "name": "_maxSubmissionCost",
          "description": "Max ETH to pay for retryable ticket base submission fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "migrateUnbondingLocks(address,address,uint256[],bytes,uint256,uint256,uint256)",
      "name": "migrateUnbondingLocks",
      "description": "Executes a L2 call to L2Migrator to migrate unbonding locks state from the L1 BondingManager.",
      "parameterDecorators": [
        {
          "name": "_l1Addr",
          "description": "Address migrating from L1.",
          "recommendedTypes": []
        },
        {
          "name": "_l2Addr",
          "description": "Address to use on L2.",
          "recommendedTypes": []
        },
        {
          "name": "_unbondingLockIds",
          "description": "IDs of unbonding locks in the L1 BondingManager to migrate.",
          "recommendedTypes": []
        },
        {
          "name": "_sig",
          "description": "Optional EIP-712 signature over a payload that includes _l1Addr, _l2Addr and _unbondingLockIds.",
          "recommendedTypes": []
        },
        {
          "name": "_maxGas",
          "description": "Gas limit for L2 execution.",
          "recommendedTypes": []
        },
        {
          "name": "_gasPriceBid",
          "description": "Gas price bid for L2 execution.",
          "recommendedTypes": []
        },
        {
          "name": "_maxSubmissionCost",
          "description": "Max ETH to pay for retryable ticket base submission fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "Pause the contract. Only callable by addresses with governor role.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "setBridgeMinter(address)",
      "name": "setBridgeMinter",
      "description": "Sets BridgeMinter.",
      "parameterDecorators": [
        {
          "name": "_bridgeMinterAddr",
          "description": "BridgeMinter address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setL2Migrator(address)",
      "name": "setL2Migrator",
      "description": "Sets L2Migrator.",
      "parameterDecorators": [
        {
          "name": "_l2MigratorAddr",
          "description": "L2Migrator address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ticketBrokerAddr()",
      "name": "ticketBrokerAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenAddr()",
      "name": "tokenAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "Unpause the contract. Only callable by addresses with governor role.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}