{
  "schema": "../schema.json",
  "tags": [
    "flash loans",
    "loans",
    "compound"
  ],
  "name": "CompoundFlashLoanTaker",
  "description": "Entry point for the FL Repay Boosts, called by DSProxy.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "CETH_ADDRESS()",
      "name": "CETH_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "COMPOUND_LOGGER()",
      "name": "COMPOUND_LOGGER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "COMPOUND_SAVER_FLASH_LOAN()",
      "name": "COMPOUND_SAVER_FLASH_LOAN",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "COMPTROLLER()",
      "name": "COMPTROLLER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DISCOUNT_ADDR()",
      "name": "DISCOUNT_ADDR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DISCOUNT_ADDRESS()",
      "name": "DISCOUNT_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERC20_PROXY_0X()",
      "name": "ERC20_PROXY_0X",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ETH_ADDRESS()",
      "name": "ETH_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "FACTORY_ADDRESS()",
      "name": "FACTORY_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "KYBER_ETH_ADDRESS()",
      "name": "KYBER_ETH_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SAVER_EXCHANGE_REGISTRY()",
      "name": "SAVER_EXCHANGE_REGISTRY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SERVICE_FEE()",
      "name": "SERVICE_FEE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WALLET_ADDR()",
      "name": "WALLET_ADDR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WALLET_ID()",
      "name": "WALLET_ID",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WETH_ADDRESS()",
      "name": "WETH_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ZRX_ALLOWLIST_ADDR()",
      "name": "ZRX_ALLOWLIST_ADDR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "boost(tuple(address,address,uint256,uint256,uint256,address,address,bytes,uint256),address[2],uint256)",
      "name": "boost",
      "description": "Borrows token, converts to collateral, and adds to position. Called through the DSProxy.",
      "parameterDecorators": [
        {
          "name": "_exData",
          "description": "Exchange data.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "srcAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wrapper",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "exchangeAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "callData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "price0x",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "_cAddresses",
          "description": "Coll/Debt addresses [cCollAddress, cBorrowAddress].",
          "recommendedTypes": []
        },
        {
          "name": "_gasCost",
          "description": "Gas cost for specific transaction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "boostWithLoan(tuple(address,address,uint256,uint256,uint256,address,address,bytes,uint256),address[2],uint256)",
      "name": "boostWithLoan",
      "description": "Boosts the position with it's own fund or with FL if needed.",
      "parameterDecorators": [
        {
          "name": "_exData",
          "description": "Exchange data.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "srcAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wrapper",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "exchangeAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "callData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "price0x",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "_cAddresses",
          "description": "cTokens addreses and exchange [cCollAddress, cBorrowAddress, exchangeAddress].",
          "recommendedTypes": []
        },
        {
          "name": "_gasCost",
          "description": "Gas cost for specific transaction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "gasToken()",
      "name": "gasToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMaxBorrow(address,address)",
      "name": "getMaxBorrow",
      "description": "Returns the maximum amount of borrow amount available. Due to rounding errors the result is - 1% wei from the exact amount.",
      "parameterDecorators": [
        {
          "name": "_cBorrowAddress",
          "description": "Borrow token we are getting the max value of.",
          "recommendedTypes": []
        },
        {
          "name": "_account",
          "description": "Users account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns the max. borrow amount in that token.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getMaxCollateral(address,address)",
      "name": "getMaxCollateral",
      "description": "Returns the maximum amount of collateral available to withdraw. Due to rounding errors the result is - 1% wei from the exact amount.",
      "parameterDecorators": [
        {
          "name": "_cCollAddress",
          "description": "Collateral we are getting the max value of.",
          "recommendedTypes": []
        },
        {
          "name": "_account",
          "description": "Users account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns the max. collateral amount in that token.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "givePermission(address)",
      "name": "givePermission",
      "description": "Called in the context of DSProxy to authorize an address.",
      "parameterDecorators": [
        {
          "name": "_contractAddr",
          "description": "Address which will be authorized.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lendingPool()",
      "name": "lendingPool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "logger()",
      "name": "logger",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "packExchangeData(tuple(address,address,uint256,uint256,uint256,address,address,bytes,uint256))",
      "name": "packExchangeData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exData",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "srcAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wrapper",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "exchangeAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "callData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "price0x",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removePermission(address)",
      "name": "removePermission",
      "description": "Called in the context of DSProxy to remove authority of an address.",
      "parameterDecorators": [
        {
          "name": "_contractAddr",
          "description": "Auth address which will be removed from authority list.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "repay(tuple(address,address,uint256,uint256,uint256,address,address,bytes,uint256),address[2],uint256)",
      "name": "repay",
      "description": "Withdraws collateral, converts to borrowed token and repays debt. Called through the DSProxy.",
      "parameterDecorators": [
        {
          "name": "_exData",
          "description": "Exchange data.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "srcAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wrapper",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "exchangeAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "callData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "price0x",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "_cAddresses",
          "description": "Coll/Debt addresses [cCollAddress, cBorrowAddress].",
          "recommendedTypes": []
        },
        {
          "name": "_gasCost",
          "description": "Gas cost for specific transaction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "repayWithLoan(tuple(address,address,uint256,uint256,uint256,address,address,bytes,uint256),address[2],uint256)",
      "name": "repayWithLoan",
      "description": "Repays the position with it's own fund or with FL if needed.",
      "parameterDecorators": [
        {
          "name": "_exData",
          "description": "Exchange data.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "srcAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wrapper",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "exchangeAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "callData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "price0x",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "_cAddresses",
          "description": "cTokens addreses and exchange [cCollAddress, cBorrowAddress, exchangeAddress].",
          "recommendedTypes": []
        },
        {
          "name": "_gasCost",
          "description": "Gas cost for specific transaction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}