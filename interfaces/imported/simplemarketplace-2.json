{
  "schema": "../schema.json",
  "tags": [],
  "name": "SimpleMarketplace",
  "description": "",
  "eventDecorators": [
    {
      "signature": "BundleBought(uint256)",
      "name": "BundleBought",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. This event will be emitted every time the implementation gets upgraded.",
      "parameterDecorators": [
        {
          "name": "implementation",
          "description": "representing the address of the upgraded implementation.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BundleCreated(uint256,address,address,uint256[],uint256)",
      "name": "BundleCreated",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. This event will be emitted every time the implementation gets upgraded.",
      "parameterDecorators": [
        {
          "name": "bundleId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "contractAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "creatorAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenIds",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "price",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BundleWithdrawn(uint256)",
      "name": "BundleWithdrawn",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. This event will be emitted every time the implementation gets upgraded.",
      "parameterDecorators": [
        {
          "name": "implementation",
          "description": "representing the address of the upgraded implementation.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. This event will be emitted every time the implementation gets upgraded.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "MAX_BUNDLE_SIZE()",
      "name": "MAX_BUNDLE_SIZE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MIN_WEI_PRICE()",
      "name": "MIN_WEI_PRICE",
      "description": "Setting a min price so that users cannot accidentally sell their tokens at a price that is off by a conversion rate. The min WEI price below is equivalent to ETH 0.000001 WEI has a conversion rate of: 1 ETH = 1_000_000_000 GWEI 1 GWEI = 1_000_000_000 WEI.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyBundle(uint256)",
      "name": "buyBundle",
      "description": "See {ISimpleMarketplace-buyBundle}.",
      "parameterDecorators": [
        {
          "name": "bundleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBundle(uint256)",
      "name": "getBundle",
      "description": "Returns all pertinent information related to a bundleId.",
      "parameterDecorators": [
        {
          "name": "bundleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBundleId(address,uint256)",
      "name": "getBundleId",
      "description": "See {ISimpleMarketplace-getBundleId}.",
      "parameterDecorators": [
        {
          "name": "contractAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isBuyable(uint256)",
      "name": "isBuyable",
      "description": "See {ISimpleMarketplace-isBuyable}.",
      "parameterDecorators": [
        {
          "name": "bundleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registryAddress()",
      "name": "registryAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sellBundle(address,address,uint256[],uint256)",
      "name": "sellBundle",
      "description": "See {ISimpleMarketplace-sellBundle}.",
      "parameterDecorators": [
        {
          "name": "contractAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "creatorAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenIds",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "price",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawBalance(uint256)",
      "name": "withdrawBalance",
      "description": "After every transaction the marketplace holds a cut. A portion of this accumulated amount can be withdrawn by the owner at anytime. Requirements: - Only Marketplace owner can withdraw balance.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawBundle(uint256)",
      "name": "withdrawBundle",
      "description": "See {ISimpleMarketplace-withdrawBundle}.",
      "parameterDecorators": [
        {
          "name": "bundleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}