{"schema":"../schema.json","tags":[],"name":"OwnedUpgradeabilityProxy","description":"S4fechainProxy. This contract combines an upgradeability proxy with basic authorization control functionalities.","eventDecorators":[{"signature":"ProxyOwnershipTransferred(address,address)","name":"ProxyOwnershipTransferred","description":"Emitted when update is made on Home or unconfirmed update root is submitted on Replica. Event to show ownership has been transferred.","parameterDecorators":[{"name":"previousOwner","description":"representing the address of the previous owner.","recommendedTypes":[],"indexed":false},{"name":"newOwner","description":"representing the address of the new owner.","recommendedTypes":[],"indexed":false}]},{"signature":"Upgraded(address)","name":"Upgraded","description":"Emitted when update is made on Home or unconfirmed update root is submitted on Replica. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"implementation","description":"representing the address of the upgraded implementation.","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"implementation()","name":"implementation","description":"Tells the address of the current implementation.","parameterDecorators":[],"returnDecorators":[{"name":"impl","description":"address of the current implementation.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"maintenance()","name":"maintenance","description":"Tells if contract is on maintenance.","parameterDecorators":[],"returnDecorators":[{"name":"_maintenance","description":"if contract is on maintenance.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"proxyOwner()","name":"proxyOwner","description":"Tells the address of the owner.","parameterDecorators":[],"returnDecorators":[{"name":"owner","description":"the address of the owner.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setMaintenance(bool)","name":"setMaintenance","description":"Sets if contract is on maintenance.","parameterDecorators":[{"name":"_maintenance","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferProxyOwnership(address)","name":"transferProxyOwnership","description":"Allows the current owner to transfer control of the contract to a newOwner.","parameterDecorators":[{"name":"newOwner","description":"The address to transfer ownership to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeTo(address)","name":"upgradeTo","description":"Allows the proxy owner to upgrade the current version of the proxy.","parameterDecorators":[{"name":"_implementation","description":"representing the address of the new implementation to be set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeToAndCall(address,bytes)","name":"upgradeToAndCall","description":"Allows the proxy owner to upgrade the current version of the proxy and call the new implementation to initialize whatever is needed through a low level call.","parameterDecorators":[{"name":"_implementation","description":"representing the address of the new implementation to be set.","recommendedTypes":[]},{"name":"data","description":"represents the msg.data to bet sent in the low level call. This parameter may include the function signature of the implementation to be called with the needed payload.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}