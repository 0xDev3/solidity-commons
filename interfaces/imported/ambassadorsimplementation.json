{
  "schema": "../schema.json",
  "tags": [],
  "name": "AmbassadorsImplementation",
  "description": "Welcome to Ambassadors contract.",
  "eventDecorators": [
    {
      "signature": "AmbassadorAccountReplaced(uint256,address,address,address)",
      "name": "AmbassadorAccountReplaced",
      "description": "Triggered when an ambassador replaces it's own account.",
      "parameterDecorators": [
        {
          "name": "ambassadorIndex",
          "description": "Index of the ambassador being replaced.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "entityAccount",
          "description": "Address of the entity where ambassador is being replaced.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldAccount",
          "description": "Ambassador's old account address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAccount",
          "description": "Ambassador's new account address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AmbassadorAdded(address,address)",
      "name": "AmbassadorAdded",
      "description": "Triggered when an ambassador is added to an entity.",
      "parameterDecorators": [
        {
          "name": "ambassador",
          "description": "Address of the ambassador added.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "entity",
          "description": "Address of the entity where the ambassador is added.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AmbassadorRemoved(address,address)",
      "name": "AmbassadorRemoved",
      "description": "Triggered when an ambassador is removed.",
      "parameterDecorators": [
        {
          "name": "ambassador",
          "description": "Address of the ambassador removed.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "entity",
          "description": "Address of the entity where the ambassador is removed.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AmbassadorReplaced(uint256,address,address,address)",
      "name": "AmbassadorReplaced",
      "description": "Triggered when an ambassador is replaced by the entity.",
      "parameterDecorators": [
        {
          "name": "ambassadorIndex",
          "description": "Index of the ambassador being replaced.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "entityAccount",
          "description": "Address of the entity where ambassador is being replaced.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldAmbassador",
          "description": "Ambassador's old account address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAmbassador",
          "description": "Ambassador's new account address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AmbassadorToCommunityUpdated(address,address,address)",
      "name": "AmbassadorToCommunityUpdated",
      "description": "Triggered when a community is transfered from one ambassador to another.",
      "parameterDecorators": [
        {
          "name": "fromAmbassador",
          "description": "Ambassador address from which the community is being transfered from.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toAmbassador",
          "description": "Ambassador address to which the community is being transfered to.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "community",
          "description": "Community address being transfered.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AmbassadorTransfered(address,address,address)",
      "name": "AmbassadorTransfered",
      "description": "Triggered when an ambassador is transfered to a new entity.",
      "parameterDecorators": [
        {
          "name": "ambassador",
          "description": "Ambassador address being replaced.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldEntity",
          "description": "Entity's old account address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newEntity",
          "description": "Entity's new account address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "CommunityRemoved(address,address)",
      "name": "CommunityRemoved",
      "description": "Triggered when a community is removed.",
      "parameterDecorators": [
        {
          "name": "ambassador",
          "description": "Ambassador of the community being removed.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "community",
          "description": "Community address being removed.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "EntityAccountReplaced(uint256,address,address)",
      "name": "EntityAccountReplaced",
      "description": "Triggered when an entity replaced account address.",
      "parameterDecorators": [
        {
          "name": "entityIndex",
          "description": "Entity index replacing account address.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "oldAccount",
          "description": "Old account address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAccount",
          "description": "New account address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "EntityAdded(address)",
      "name": "EntityAdded",
      "description": "Triggered when an entity is added.",
      "parameterDecorators": [
        {
          "name": "entity",
          "description": "Address of the entity added.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "EntityRemoved(address)",
      "name": "EntityRemoved",
      "description": "Triggered when an entity is removed.",
      "parameterDecorators": [
        {
          "name": "entity",
          "description": "Address of the entity removed.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addAmbassador(address)",
      "name": "addAmbassador",
      "description": "Registers an ambassador.",
      "parameterDecorators": [
        {
          "name": "_ambassador",
          "description": "Address of the ambassador.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addEntity(address)",
      "name": "addEntity",
      "description": "Registers an entity.",
      "parameterDecorators": [
        {
          "name": "_entity",
          "description": "Address of the entity.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ambassadorByAddress(address)",
      "name": "ambassadorByAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ambassadorByIndex(uint256)",
      "name": "ambassadorByIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ambassadorIndex()",
      "name": "ambassadorIndex",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ambassadorToEntity(uint256)",
      "name": "ambassadorToEntity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "communityAdmin()",
      "name": "communityAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "communityToAmbassador(address)",
      "name": "communityToAmbassador",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "entityAmbassadors(uint256)",
      "name": "entityAmbassadors",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "entityByAddress(address)",
      "name": "entityByAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "entityByIndex(uint256)",
      "name": "entityByIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "entityIndex()",
      "name": "entityIndex",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getVersion()",
      "name": "getVersion",
      "description": "Returns the current implementation version.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "Used to initialize a new Ambassadors contract.",
      "parameterDecorators": [
        {
          "name": "_communityAdmin",
          "description": "Address of the community admin contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isAmbassador(address)",
      "name": "isAmbassador",
      "description": "Returns boolean whether an address is ambassador or not.",
      "parameterDecorators": [
        {
          "name": "_ambassador",
          "description": "Address of the ambassador.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Boolean whether an address is ambassador or not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAmbassadorAt(address,address)",
      "name": "isAmbassadorAt",
      "description": "Returns boolean whether an address is ambassador at a given entity.",
      "parameterDecorators": [
        {
          "name": "_ambassador",
          "description": "Address of the ambassador.",
          "recommendedTypes": []
        },
        {
          "name": "_entityAddress",
          "description": "Address of the entity.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Boolean whether an address is ambassador at a given entity or not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAmbassadorOf(address,address)",
      "name": "isAmbassadorOf",
      "description": "Returns boolean whether an address is ambassador of a given community.",
      "parameterDecorators": [
        {
          "name": "_ambassador",
          "description": "Address of the ambassador.",
          "recommendedTypes": []
        },
        {
          "name": "_community",
          "description": "Address of the community.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Boolean whether an address is ambassador of a given community or not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isEntityOf(address,address)",
      "name": "isEntityOf",
      "description": "Returns boolean whether an address is entity reponsible for ambassador of a given community.",
      "parameterDecorators": [
        {
          "name": "_entity",
          "description": "Address of the entity.",
          "recommendedTypes": []
        },
        {
          "name": "_community",
          "description": "Address of the community.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Boolean whether an address is entity reponsible for ambassador of a given community or not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAmbassador(address)",
      "name": "removeAmbassador",
      "description": "Removes an ambassador.",
      "parameterDecorators": [
        {
          "name": "_ambassador",
          "description": "Address of the ambassador.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeCommunity(address)",
      "name": "removeCommunity",
      "description": "Removes community.",
      "parameterDecorators": [
        {
          "name": "_community",
          "description": "Community address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeEntity(address)",
      "name": "removeEntity",
      "description": "Removes an entity.",
      "parameterDecorators": [
        {
          "name": "_entity",
          "description": "Address of the entity.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "replaceAmbassador(address,address)",
      "name": "replaceAmbassador",
      "description": "Replaces an ambassador. Called by entity.",
      "parameterDecorators": [
        {
          "name": "_oldAmbassador",
          "description": "Address of the ambassador.",
          "recommendedTypes": []
        },
        {
          "name": "_newAmbassador",
          "description": "New ambassador address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "replaceAmbassadorAccount(address,address)",
      "name": "replaceAmbassadorAccount",
      "description": "Replace ambassador account. Called by ambassador.",
      "parameterDecorators": [
        {
          "name": "_ambassador",
          "description": "Address of the ambassador.",
          "recommendedTypes": []
        },
        {
          "name": "_newAmbassador",
          "description": "New ambassador address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "replaceEntityAccount(address,address)",
      "name": "replaceEntityAccount",
      "description": "Replace entity account.",
      "parameterDecorators": [
        {
          "name": "_entity",
          "description": "Address of the entity.",
          "recommendedTypes": []
        },
        {
          "name": "_newEntity",
          "description": "New entity address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCommunityToAmbassador(address,address)",
      "name": "setCommunityToAmbassador",
      "description": "Sets community to ambassador.",
      "parameterDecorators": [
        {
          "name": "_ambassador",
          "description": "Address of the ambassador.",
          "recommendedTypes": []
        },
        {
          "name": "_community",
          "description": "Community address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferAmbassador(address,address,bool)",
      "name": "transferAmbassador",
      "description": "Transfers an ambassador to another entity.",
      "parameterDecorators": [
        {
          "name": "_ambassador",
          "description": "Address of the ambassador.",
          "recommendedTypes": []
        },
        {
          "name": "_toEntity",
          "description": "Address of the entity.",
          "recommendedTypes": []
        },
        {
          "name": "_keepCommunities",
          "description": "Boolean whether to keep the ambassador's communities or not.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferCommunityToAmbassador(address,address)",
      "name": "transferCommunityToAmbassador",
      "description": "Transfers community from ambassador to another ambassador.",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "Address of the ambassador to transfer the community to.",
          "recommendedTypes": []
        },
        {
          "name": "_community",
          "description": "Community address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateCommunityAdmin(address)",
      "name": "updateCommunityAdmin",
      "description": "Updates the address of the communityAdmin. used only for testing the new community upgrade flow.",
      "parameterDecorators": [
        {
          "name": "_newCommunityAdmin",
          "description": "address of the new communityAdmin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}