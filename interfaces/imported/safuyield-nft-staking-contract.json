{"schema":"../schema.json","tags":["tokens","staking","nft","yield","synthetix"],"name":"ERC721Staking","description":"SAFUYIELD NFT Staking Contract. Staking Contract that uses the Synthetix Staking model to distribute rewards in a dynamic way based on the amount of tokens staked by each staker at any given time.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when the collected tokens were withdrawn.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RewardAdded(uint256)","name":"RewardAdded","description":"Emitted when the collected tokens were withdrawn.","parameterDecorators":[{"name":"reward","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RewardPaid(address,uint256)","name":"RewardPaid","description":"Emitted when the collected tokens were withdrawn.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"reward","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RewardsDurationUpdated(uint256)","name":"RewardsDurationUpdated","description":"Emitted when the collected tokens were withdrawn.","parameterDecorators":[{"name":"newDuration","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Staked(address,uint256,uint256[])","name":"Staked","description":"Emitted when the collected tokens were withdrawn.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenIds","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdrawn(address,uint256,uint256[])","name":"Withdrawn","description":"Emitted when the collected tokens were withdrawn.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenIds","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addRewardAmount(uint256)","name":"addRewardAmount","description":"fuction used by the Owner to add rewards to be distributed in the set staking period. Rewards can be added multiple times in the same staking period; this will increase the rewards rate for the said period. the Staking Contract has to already own enough Rewards Tokens to distribute all the rewards, so make sure to send all the tokens to the contract before calling this function.","parameterDecorators":[{"name":"reward","description":"the amount of tokens to be added to the rewards pool.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"calculateRewards(address)","name":"calculateRewards","description":"used to calculate the earned rewards for a user.","parameterDecorators":[{"name":"_user","description":"the address of the user to calculate available rewards for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_rewards","description":"the amount of tokens available as rewards for the passed address.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"claimRewards()","name":"claimRewards","description":"function called by the user to claim his accumulated rewards.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claiming()","name":"claiming","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getRewardForDuration()","name":"getRewardForDuration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_distributedTokens","description":"the total amount of ERC20 Tokens distributed as rewards for the set staking period.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getRewardPerToken()","name":"getRewardPerToken","description":"getter function to get the reward per second for staking one NFT.","parameterDecorators":[],"returnDecorators":[{"name":"_rewardPerToken","description":"the amount of token per second rewarded for staking one NFT.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lastTimeRewardApplicable()","name":"lastTimeRewardApplicable","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_lastRewardsApplicable","description":"the last time the rewards were applicable, returns block.timestamp if the rewards period is not ended.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lastUpdateTime()","name":"lastUpdateTime","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nftCollection()","name":"nftCollection","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC721Received(address,address,uint256,bytes)","name":"onERC721Received","description":"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"periodFinish()","name":"periodFinish","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardPerToken()","name":"rewardPerToken","description":"calculates the rewards per token for the current time whenever a new deposit/withdraw is made to keep track of the correct token distribution between stakers.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardRate()","name":"rewardRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardsDuration()","name":"rewardsDuration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardsToken()","name":"rewardsToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setClaimingState(bool)","name":"setClaimingState","description":"function used by owner to enable or disable the claimRewards function.","parameterDecorators":[{"name":"_newState","description":"the state of claiming.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setStakingPeriod(uint256,uint256)","name":"setStakingPeriod","description":"function for the Owner of the Contract to set the Staking initialize a staking period and set the amount of tokens to be distributed as rewards in that period.","parameterDecorators":[{"name":"_amount","description":"the amount of Reward Tokens to be distributed.","recommendedTypes":[]},{"name":"_duration","description":"the duration in with the rewards will be distributed, in seconds.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake(uint256[])","name":"stake","description":"functon called by the users to Stake NFTs. the Token IDs have to be prevoiusly approved for transfer in the ERC721 contract with the address of this contract.","parameterDecorators":[{"name":"tokenIds","description":"array of Token IDs of the NFTs to be staked.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakedAssets(uint256)","name":"stakedAssets","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"totalStakedSupply()","name":"totalStakedSupply","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userRewardPerTokenPaid(address)","name":"userRewardPerTokenPaid","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"userStakeInfo(address)","name":"userStakeInfo","description":"function useful for Front End to see the stake and rewards for users.","parameterDecorators":[{"name":"_user","description":"the address of the user to get informations for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_tokensStaked","description":"an array of Token IDs that are the stake the user currently has.","recommendedTypes":[],"solidityType":"uint256[]"},{"name":"_availableRewards","description":"the rewards accumulated by the user.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256[])","name":"withdraw","description":"function called by the user to Withdraw NFTs from staking.","parameterDecorators":[{"name":"tokenIds","description":"array of Token IDs of the NFTs to be withdrawn.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawAll()","name":"withdrawAll","description":"function called by the user to withdraw all NFTs and claim the rewards in one transaction.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}