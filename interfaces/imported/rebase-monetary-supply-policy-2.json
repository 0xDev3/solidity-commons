{"schema":"../schema.json","tags":[],"name":"RebasePolicy","description":"Rebase Monetary Supply Policy.","eventDecorators":[{"signature":"LogRebase(uint256,uint256,uint256,int256,uint256)","name":"LogRebase","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"epoch","description":"","recommendedTypes":[],"indexed":true},{"name":"exchangeRate","description":"","recommendedTypes":[],"indexed":false},{"name":"cpi","description":"","recommendedTypes":[],"indexed":false},{"name":"requestedSupplyAdjustment","description":"","recommendedTypes":[],"indexed":false},{"name":"timestampSec","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipRenounced(address)","name":"OwnershipRenounced","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when ETH are Received by this wallet.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"minRebaseTimeIntervalSec()","name":"minRebaseTimeIntervalSec","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rebaseC()","name":"rebaseC","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"inRebaseWindow()","name":"inRebaseWindow","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"setRebaseTimingParameters(uint256,uint256,uint256)","name":"setRebaseTimingParameters","description":"Sets the parameters which control the timing and frequency of rebase operations. a) the minimum time period that must elapse between rebase cycles. b) the rebase window offset parameter. c) the rebase window length parameter.","parameterDecorators":[{"name":"minRebaseTimeIntervalSec_","description":"More than this much time must pass between rebase operations, in seconds.","recommendedTypes":[]},{"name":"rebaseWindowOffsetSec_","description":"The number of seconds from the beginning of the rebase interval, where the rebase window begins.","recommendedTypes":[]},{"name":"rebaseWindowLengthSec_","description":"The length of the rebase window in seconds.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialize(address,address,uint256)","name":"initialize","description":"ZOS upgradable contract initialization method. It is called at the time of contract creation to invoke parent class initializers and initialize the contract's state variables.","parameterDecorators":[{"name":"owner_","description":"","recommendedTypes":[]},{"name":"rebaseC_","description":"","recommendedTypes":[]},{"name":"baseCpi_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRebaseLag(uint256)","name":"setRebaseLag","description":"Sets the rebase lag parameter. It is used to dampen the applied supply adjustment by 1 / rebaseLag If the rebase lag R, equals 1, the smallest value for R, then the full supply correction is applied on each rebase cycle. If it is greater than 1, then a correction of 1/R of is applied on each rebase.","parameterDecorators":[{"name":"rebaseLag_","description":"The new rebase lag parameter.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lastRebaseTimestampSec()","name":"lastRebaseTimestampSec","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setCpiOracle(address)","name":"setCpiOracle","description":"Sets the reference to the CPI oracle.","parameterDecorators":[{"name":"cpiOracle_","description":"The address of the cpi oracle contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setDeviationThreshold(uint256)","name":"setDeviationThreshold","description":"Sets the deviation threshold fraction. If the exchange rate given by the market oracle is within this fractional distance from the targetRate, then no supply modifications are made. DECIMALS fixed point number.","parameterDecorators":[{"name":"deviationThreshold_","description":"The new exchange rate threshold fraction.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"marketOracle()","name":"marketOracle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rebaseLag()","name":"rebaseLag","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rebaseWindowOffsetSec()","name":"rebaseWindowOffsetSec","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore. Allows the current owner to relinquish control of the contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"epoch()","name":"epoch","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rebaseWindowLengthSec()","name":"rebaseWindowLengthSec","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setMarketOracle(address)","name":"setMarketOracle","description":"Sets the reference to the market oracle.","parameterDecorators":[{"name":"marketOracle_","description":"The address of the market oracle contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"cpiOracle()","name":"cpiOracle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rebase()","name":"rebase","description":"Initiates a new rebase operation, provided the minimum time period has elapsed. The supply adjustment equals (_totalSupply * DeviationFromTargetRate) / rebaseLag Where DeviationFromTargetRate is (MarketOracleRate - targetRate) / targetRate and targetRate is CpiOracleRate / baseCpi.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"orchestrator()","name":"orchestrator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address)","name":"initialize","description":"The Ownable constructor sets the original `owner` of the contract to the sender account.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setOrchestrator(address)","name":"setOrchestrator","description":"Sets the reference to the orchestrator.","parameterDecorators":[{"name":"orchestrator_","description":"The address of the orchestrator contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimReward(address)","name":"claimReward","description":"","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deviationThreshold()","name":"deviationThreshold","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Allows the current owner to transfer control of the contract to a newOwner.","parameterDecorators":[{"name":"newOwner","description":"The address to transfer ownership to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}