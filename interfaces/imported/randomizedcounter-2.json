{"schema":"../schema.json","tags":[],"name":"RandomizedCounter","description":"","eventDecorators":[{"signature":"LogCountThresholdHit(uint256,uint256,uint256)","name":"LogCountThresholdHit","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"rewardAmount_","description":"","recommendedTypes":[],"indexed":false},{"name":"count_","description":"","recommendedTypes":[],"indexed":false},{"name":"randomThreshold","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogManualPoolStarted(uint256)","name":"LogManualPoolStarted","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"startedAt","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogRewardAdded(uint256)","name":"LogRewardAdded","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"reward","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogRewardPaid(address,uint256)","name":"LogRewardPaid","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"reward","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogRewardRevoked(uint256,uint256)","name":"LogRewardRevoked","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"durationRevoked","description":"","recommendedTypes":[],"indexed":false},{"name":"amountRevoked","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetApiConsumer(address)","name":"LogSetApiConsumer","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"apiConsumer_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetBeforePeriodFinish(bool)","name":"LogSetBeforePeriodFinish","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"beforePeriodFinish_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetCountInSequence(bool)","name":"LogSetCountInSequence","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"countInSequence_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetCountThreshold(uint256)","name":"LogSetCountThreshold","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"countThreshold_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetDuration(uint256)","name":"LogSetDuration","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"duration_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetPoolEnabled(bool)","name":"LogSetPoolEnabled","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"poolEnabled_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetRequestParams(string)","name":"LogSetRequestParams","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"requestParams_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetRequestPath(string)","name":"LogSetRequestPath","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"requestPath_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetRevokeReward(bool)","name":"LogSetRevokeReward","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"revokeReward_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetRevokeRewardDuration(uint256)","name":"LogSetRevokeRewardDuration","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"revokeRewardDuration","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSetRewardAmount(uint256)","name":"LogSetRewardAmount","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"rewardAmount_","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogStaked(address,uint256)","name":"LogStaked","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogWithdrawn(address,uint256)","name":"LogWithdrawn","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when a edition is created reserving the corresponding token IDs.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"apiConsumer()","name":"apiConsumer","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOf(address)","name":"balanceOf","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"beforePeriodFinish()","name":"beforePeriodFinish","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"checkStabilizerAndGetReward(int256,int256,uint256,uint256)","name":"checkStabilizerAndGetReward","description":"Upon succesive succesful s ( exchange price in target price ) the count will increase. As the count increases if it meets the set threshold. Then a precentage of debase tokens assigned to the policy contract will be transfered to the stabilizer pool. With the added condition that the stabilizer pool has completed it's distribution period or a new flag is set to ovverride the time period.","parameterDecorators":[{"name":"supplyDelta_","description":"","recommendedTypes":[]},{"name":"rebaseLag_","description":"","recommendedTypes":[]},{"name":"exchangeRate_","description":"","recommendedTypes":[]},{"name":"debasePolicyBalance","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"rewardAmount_","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"count()","name":"count","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"countInSequence()","name":"countInSequence","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"duration()","name":"duration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"earned(address)","name":"earned","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"exit()","name":"exit","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getReward()","name":"getReward","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialize(string,address,address,address,address,uint256,uint256)","name":"initialize","description":"","parameterDecorators":[{"name":"poolName_","description":"","recommendedTypes":[]},{"name":"rewardToken_","description":"","recommendedTypes":[]},{"name":"pairToken_","description":"","recommendedTypes":[]},{"name":"policy_","description":"","recommendedTypes":[]},{"name":"apiConsumer_","description":"","recommendedTypes":[]},{"name":"rewardAmount_","description":"","recommendedTypes":[]},{"name":"duration_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lastTimeRewardApplicable()","name":"lastTimeRewardApplicable","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lastUpdateTime()","name":"lastUpdateTime","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"periodFinish()","name":"periodFinish","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"policy()","name":"policy","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"poolEnabled()","name":"poolEnabled","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"poolName()","name":"poolName","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requestParams()","name":"requestParams","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"requestPath()","name":"requestPath","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"revokeReward()","name":"revokeReward","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"revokeRewardDuration()","name":"revokeRewardDuration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardAmount()","name":"rewardAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardDistributed()","name":"rewardDistributed","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardPerToken()","name":"rewardPerToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardPerTokenStored()","name":"rewardPerTokenStored","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardRate()","name":"rewardRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardToken()","name":"rewardToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rewards(address)","name":"rewards","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setApiConsumer(address)","name":"setApiConsumer","description":"","parameterDecorators":[{"name":"apiConsumer_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBeforePeriodFinish(bool)","name":"setBeforePeriodFinish","description":"Function to allow reward distribution before previous rewards have been distributed.","parameterDecorators":[{"name":"beforePeriodFinish_","description":"Flag to toggle distribution.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCountInSequence(bool)","name":"setCountInSequence","description":"Function to enable or disable count should be in sequence.","parameterDecorators":[{"name":"countInSequence_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setDuration(uint256)","name":"setDuration","description":"Function to set reward drop period.","parameterDecorators":[{"name":"duration_","description":"New drop duration.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPoolEnabled(bool)","name":"setPoolEnabled","description":"Function enabled or disable pool staking,withdraw.","parameterDecorators":[{"name":"poolEnabled_","description":"Flag to toggle pool.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRequestParams(string)","name":"setRequestParams","description":"","parameterDecorators":[{"name":"requestParams_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRequestPath(string)","name":"setRequestPath","description":"","parameterDecorators":[{"name":"requestPath_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRevokeReward(bool)","name":"setRevokeReward","description":"","parameterDecorators":[{"name":"revokeReward_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRevokeRewardDuration(uint256)","name":"setRevokeRewardDuration","description":"","parameterDecorators":[{"name":"revokeRewardDuration_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRewardAmount(uint256)","name":"setRewardAmount","description":"","parameterDecorators":[{"name":"rewardAmount_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake(uint256)","name":"stake","description":"","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalRewards()","name":"totalRewards","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalSupply()","name":"totalSupply","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userRewardPerTokenPaid(address)","name":"userRewardPerTokenPaid","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256)","name":"withdraw","description":"","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"y()","name":"y","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}