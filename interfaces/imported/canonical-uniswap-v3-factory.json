{
  "schema": "../schema.json",
  "tags": [
    "swaps",
    "uniswap"
  ],
  "name": "UniswapV3Factory",
  "description": "Canonical Uniswap V3 factory. Deploys Uniswap V3 pools and manages ownership and control over pool protocol fees.",
  "eventDecorators": [
    {
      "signature": "FeeAmountEnabled(uint24,int24)",
      "name": "FeeAmountEnabled",
      "description": "Emitted when a new fee amount is enabled for pool creation via the factory.",
      "parameterDecorators": [
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tickSpacing",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnerChanged(address,address)",
      "name": "OwnerChanged",
      "description": "Emitted when the owner of the factory is changed.",
      "parameterDecorators": [
        {
          "name": "oldOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PoolCreated(address,address,uint24,int24,address)",
      "name": "PoolCreated",
      "description": "Emitted when a pool is created.",
      "parameterDecorators": [
        {
          "name": "token0",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token1",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tickSpacing",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "createPool(address,address,uint24)",
      "name": "createPool",
      "description": "Creates a pool for the given two tokens and fee. tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
      "parameterDecorators": [
        {
          "name": "tokenA",
          "description": "One of the two tokens in the desired pool.",
          "recommendedTypes": []
        },
        {
          "name": "tokenB",
          "description": "The other of the two tokens in the desired pool.",
          "recommendedTypes": []
        },
        {
          "name": "fee",
          "description": "The desired fee for the pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "pool",
          "description": "The address of the newly created pool.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enableFeeAmount(uint24,int24)",
      "name": "enableFeeAmount",
      "description": "Enables a fee amount with the given tickSpacing. Fee amounts may never be removed once enabled.",
      "parameterDecorators": [
        {
          "name": "fee",
          "description": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6).",
          "recommendedTypes": []
        },
        {
          "name": "tickSpacing",
          "description": "The spacing between ticks to be enforced for all pools created with the given fee amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "feeAmountTickSpacing(uint24)",
      "name": "feeAmountTickSpacing",
      "description": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int24"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPool(address,address,uint24)",
      "name": "getPool",
      "description": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the current owner of the factory.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "parameters()",
      "name": "parameters",
      "description": "Get the parameters to be used in constructing the pool, set transiently during pool creation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "factory",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "token0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "token1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint24"
        },
        {
          "name": "tickSpacing",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int24"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setOwner(address)",
      "name": "setOwner",
      "description": "Updates the owner of the factory. Must be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "The new owner of the factory.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}