{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "nft"
  ],
  "name": "NFTForCarbonAuction",
  "description": "An NFT auction to be paid in carbon credit tokens.",
  "eventDecorators": [
    {
      "signature": "Bid(uint256,uint256)",
      "name": "Bid",
      "description": "Emitted every time an order is broadcasted. The {NylonTransferred} event is emitted once Nylon are sent.",
      "parameterDecorators": [
        {
          "name": "highestBid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "lowestBid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "End()",
      "name": "End",
      "description": "Emitted every time an order is broadcasted. The {NylonTransferred} event is emitted once Nylon are sent.",
      "parameterDecorators": []
    },
    {
      "signature": "Start(uint256)",
      "name": "Start",
      "description": "Emitted every time an order is broadcasted. The {NylonTransferred} event is emitted once Nylon are sent.",
      "parameterDecorators": [
        {
          "name": "startingBid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdraw(address,uint256)",
      "name": "Withdraw",
      "description": "Emitted every time an order is broadcasted. The {NylonTransferred} event is emitted once Nylon are sent.",
      "parameterDecorators": [
        {
          "name": "bidder",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "artist()",
      "name": "artist",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "auctioneer()",
      "name": "auctioneer",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "batchEnd()",
      "name": "batchEnd",
      "description": "ends the bidding and sends out the NFTs.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bid(uint256)",
      "name": "bid",
      "description": "a bid in terms of the carbonToken. the amount_ must be approved first.",
      "parameterDecorators": [
        {
          "name": "amount_",
          "description": "the amount to bid in the auction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the returned balance.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bids(address)",
      "name": "bids",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "carbonToken()",
      "name": "carbonToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currentlyBiddingFor(address)",
      "name": "currentlyBiddingFor",
      "description": "Returns the ix of nftIds for the given account. Since 0 is a valid ix, nftIds.length is returned if no bid exists.",
      "parameterDecorators": [
        {
          "name": "account_",
          "description": "address the account to query the id for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "ix of nftIds for the bid or nftIds.length if not existing.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "end()",
      "name": "end",
      "description": "ends the bidding without sending NFTs.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "endAt()",
      "name": "endAt",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ended()",
      "name": "ended",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "highestBidders(uint256)",
      "name": "highestBidders",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "highestBids(uint256)",
      "name": "highestBids",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "highestPrice()",
      "name": "highestPrice",
      "description": "get the ceil price for a bid at the current stage.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the highest price.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lowestPrice()",
      "name": "lowestPrice",
      "description": "get the entry price for a bid at the current stage.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the lowest price.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "medianPrice()",
      "name": "medianPrice",
      "description": "get the median price for a bid at the current stage. we round up here and are not taking the average if the total number of nfts is an even number.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the median price.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nft()",
      "name": "nft",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nftIds(uint256)",
      "name": "nftIds",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "start(address,uint256,uint256,uint256)",
      "name": "start",
      "description": "start the auction process. only the original creator / auctioneer can kick things off.",
      "parameterDecorators": [
        {
          "name": "nft_",
          "description": "address of the underlying nft.",
          "recommendedTypes": []
        },
        {
          "name": "numberOfTokens_",
          "description": "number of tokens starting at ix 0 approved to transfer into the auction.",
          "recommendedTypes": []
        },
        {
          "name": "startingBid_",
          "description": "starting bid, subsequent bid must be at least 1 wei higher, 0 is possible.",
          "recommendedTypes": []
        },
        {
          "name": "duration_",
          "description": "time of the auction in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "started()",
      "name": "started",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw()",
      "name": "withdraw",
      "description": "withdraw unmatched bid collaterals after the auction.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the returned balance.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawNFTAtIndex(uint256)",
      "name": "withdrawNFTAtIndex",
      "description": "withdraw an nft to the winner. the ix can be retrieved via currentlyBiddingFor(account_).",
      "parameterDecorators": [
        {
          "name": "ix_",
          "description": "of the nft.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}