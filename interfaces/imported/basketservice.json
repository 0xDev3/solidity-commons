{"schema":"../schema.json","tags":["celo network"],"name":"BasketService","description":"Implementation of the basket service smart contract. The {BaskeService} smart contract receives cryptocurrencies and in exchange sends Nylon. The value of a Nylon is determined by the value of the cryptocurrencies held by this smart contract. It inherits from the ERC20 and Ownable interfaces of the openzeppelin contracts collection. Additionally, the Nylon is embed in the contract. Ownable means that someone \"owns\" the Nylon. This may be a person or an other smart contract. NOTE: For now, the basket service will only hold Celo.","eventDecorators":[{"signature":"NylonTransferred(address,uint256)","name":"NylonTransferred","description":"The {NylonTransferred} event is emitted once Nylon are sent.","parameterDecorators":[{"name":"_to","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"transferNylon(address,uint256)","name":"transferNylon","description":"Nylon can be transferred by x-amount. These nylon are directly minted and sent to the input address. Requirements: - 'address' of the new owner, e.G. address of the basket service. {transferNylon} is only callable by the the contract owner. NOTE: To ensure that this function cannot be called by a person, the ownership should be transferred to the address of an other contract. See {ExchangeService}. NOTE2: The ownable interface has been removed for testing puropses. See previous versions to revert changes when deploying!.","parameterDecorators":[{"name":"_to","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false}]}