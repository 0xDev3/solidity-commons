{
  "schema": "../schema.json",
  "tags": [
    "dao"
  ],
  "name": "SeedFactory",
  "description": "PrimeDAO Seed Factory. Enable PrimeDAO governance to create new Seed contracts.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SeedCreated(address,address)",
      "name": "SeedCreated",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "newSeed",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "deploySeed(address,address,address[],uint256[],uint256,uint256,uint256,uint32[],bool,uint256,bytes)",
      "name": "deploySeed",
      "description": "Deploys Seed contract.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "The address that recieves fees.",
          "recommendedTypes": []
        },
        {
          "name": "_admin",
          "description": "The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.",
          "recommendedTypes": []
        },
        {
          "name": "_tokens",
          "description": "Array containing two params: - The address of the seed token being distributed. - The address of the funding token being exchanged for seed token.",
          "recommendedTypes": []
        },
        {
          "name": "_softHardThresholds",
          "description": "Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.",
          "recommendedTypes": []
        },
        {
          "name": "_price",
          "description": "price of a SeedToken, expressed in fundingTokens, with precision of 10**18.",
          "recommendedTypes": []
        },
        {
          "name": "_startTime",
          "description": "Distribution start time in unix timecode.",
          "recommendedTypes": []
        },
        {
          "name": "_endTime",
          "description": "Distribution end time in unix timecode.",
          "recommendedTypes": []
        },
        {
          "name": "_vestingDurationAndCliff",
          "description": "Array containing two params: - Vesting period duration in days. - Cliff duration in days.",
          "recommendedTypes": []
        },
        {
          "name": "_permissionedSeed",
          "description": "Set to true if only whitelisted adresses are allowed to participate.",
          "recommendedTypes": []
        },
        {
          "name": "_fee",
          "description": "Success fee expressed as a % (e.g. 10**18 = 100% fee, 10**16 = 1%).",
          "recommendedTypes": []
        },
        {
          "name": "_metadata",
          "description": "Seed contract metadata, that is IPFS URI.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "masterCopy()",
      "name": "masterCopy",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMasterCopy(address)",
      "name": "setMasterCopy",
      "description": "Set Seed contract which works as a base for clones.",
      "parameterDecorators": [
        {
          "name": "_masterCopy",
          "description": "The address of the new Seed basis.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}