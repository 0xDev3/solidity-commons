{
  "schema": "../schema.json",
  "tags": [],
  "name": "SmartWallet",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Executed(address,address,bytes,uint256,bytes)",
      "name": "Executed",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": [
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "destAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "encodedCalldata",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "result",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WhitelistChanged(address)",
      "name": "WhitelistChanged",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": [
        {
          "name": "_whitelistAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "execute(address,bytes)",
      "name": "execute",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_destAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_encodedCalldata",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "execute(address,bytes,uint256)",
      "name": "execute",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_destAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_encodedCalldata",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "init(address)",
      "name": "init",
      "description": "Initializes the contract by checking compatibility and setting `_whitelistAddress` that is later used to decide who is allowed to call {execute}. This value changes when {approve} or {transferFrom} are called.",
      "parameterDecorators": [
        {
          "name": "_whitelistAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialized()",
      "name": "initialized",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onERC721Received(address,address,uint256,bytes)",
      "name": "onERC721Received",
      "description": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWhitelistAddress(address)",
      "name": "setWhitelistAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_whitelistAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "whitelistAddress()",
      "name": "whitelistAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}