{
  "schema": "../schema.json",
  "tags": [],
  "name": "Market",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdminChanged(address,address)",
      "name": "AdminChanged",
      "description": "Configuration removed event.",
      "parameterDecorators": [
        {
          "name": "previousAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BeaconUpgraded(address)",
      "name": "BeaconUpgraded",
      "description": "Configuration removed event.",
      "parameterDecorators": [
        {
          "name": "beacon",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "LogNewToken(address,address,uint256)",
      "name": "LogNewToken",
      "description": "Configuration removed event.",
      "parameterDecorators": [
        {
          "name": "marketAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "LogTokenSold(address,uint256,address,address,uint256,uint256)",
      "name": "LogTokenSold",
      "description": "Configuration removed event.",
      "parameterDecorators": [
        {
          "name": "marketAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "numTokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Configuration removed event.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Upgraded(address)",
      "name": "Upgraded",
      "description": "Configuration removed event.",
      "parameterDecorators": [
        {
          "name": "implementation",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "WithdrawCredits(address,uint256)",
      "name": "WithdrawCredits",
      "description": "Configuration removed event.",
      "parameterDecorators": [
        {
          "name": "userAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "INVERSE_BASIS_POINT()",
      "name": "INVERSE_BASIS_POINT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_commissionPoints()",
      "name": "_commissionPoints",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createToken(uint256,uint256,tuple(address,uint256)[])",
      "name": "createToken",
      "description": "Create a NFT/Token that will be stored in the EQTradable ContractThis emits the tokenId and the creator/minter.",
      "parameterDecorators": [
        {
          "name": "numTokens",
          "description": "Amount of tokens to be created and minted.",
          "recommendedTypes": []
        },
        {
          "name": "price",
          "description": "Value of each token.",
          "recommendedTypes": []
        },
        {
          "name": "splitStructure",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "splitAddress",
              "description": "",
              "type": "address"
            },
            {
              "name": "percentagePoints",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositRevenue(uint256,address[])",
      "name": "depositRevenue",
      "description": "Deposit revenue and update credits of all token owners.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "The ID of the token.",
          "recommendedTypes": []
        },
        {
          "name": "recipients",
          "description": "Token owner address stored in the database.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAccountCredit(address)",
      "name": "getAccountCredit",
      "description": "Get amount of credits of the address.",
      "parameterDecorators": [
        {
          "name": "accountAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCommissionRecipient()",
      "name": "getCommissionRecipient",
      "description": "Get CommissionRecipient.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenMinter(uint256)",
      "name": "getTokenMinter",
      "description": "Get token minter.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenPrice(uint256)",
      "name": "getTokenPrice",
      "description": "Get token price.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address)",
      "name": "initialize",
      "description": "Initializes the contract by setting the tradable token and commission recipient addresses.",
      "parameterDecorators": [
        {
          "name": "eqTradableAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "commissionRecipient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "purchaseToken(uint256,uint256)",
      "name": "purchaseToken",
      "description": "Purchase tokens baed on the {numTokens} specified.This emits the tokenId, number of tokens and the new owner.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "The ID of the token that's being purchased.",
          "recommendedTypes": []
        },
        {
          "name": "numTokens",
          "description": "Amount of tokens to be purchased.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCommissionRecipient(address)",
      "name": "setCommissionRecipient",
      "description": "Set the commission recipient address.",
      "parameterDecorators": [
        {
          "name": "commissionRecipient",
          "description": "Commission Recipient Address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeTo(address)",
      "name": "upgradeTo",
      "description": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.",
      "parameterDecorators": [
        {
          "name": "newImplementation",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "Upgraded(address)"
      ],
      "readOnly": false
    },
    {
      "signature": "upgradeToAndCall(address,bytes)",
      "name": "upgradeToAndCall",
      "description": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.",
      "parameterDecorators": [
        {
          "name": "newImplementation",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "Upgraded(address)"
      ],
      "readOnly": false
    },
    {
      "signature": "withdrawCredits()",
      "name": "withdrawCredits",
      "description": "Withdraw Credits earned by the address.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}