{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "yield",
    "vaults",
    "celo network"
  ],
  "name": "ImpactVaultManager",
  "description": "ImpactVaultManager. This contract implements a new token vault standard inspired by ERC-4626. Key difference is that ImpactVault ERC20 tokens do not entitle depositors to a portion of the yield earned on the vault. Instead, shares of yield is tracked to mint a proportional amount of governance tokens to determine how the vault's yield will be deployed. Note: this vault should always be initialized with an ERC20 token (ex: CELO) and a non-rebasing yield token (ex: stCELO).",
  "eventDecorators": [
    {
      "signature": "DependenciesUpdated(address,address)",
      "name": "DependenciesUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "manager",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "registry",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ImpactVaultDeregistered(address)",
      "name": "ImpactVaultDeregistered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ImpactVaultRegistered(address)",
      "name": "ImpactVaultRegistered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Initialized(uint8)",
      "name": "Initialized",
      "description": "",
      "parameterDecorators": [
        {
          "name": "version",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Receive(address,uint256)",
      "name": "Receive",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "V0VaultDeregistered(address)",
      "name": "V0VaultDeregistered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "V0VaultRegistered(address)",
      "name": "V0VaultRegistered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "claimGovernanceTokens()",
      "name": "claimGovernanceTokens",
      "description": "Claims SPRL governance tokens for a given address in proportion to the yield associated with that address across all registered vaults. Withdraws underlying yield assets from vault into this contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deregisterV0Vault(address)",
      "name": "deregisterV0Vault",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_vaultToRemove",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deregisterVault(address)",
      "name": "deregisterVault",
      "description": "Remove a registered ImpactVault.",
      "parameterDecorators": [
        {
          "name": "_vaultToRemove",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTotalYieldCUSD(address)",
      "name": "getTotalYieldCUSD",
      "description": "Returns the total yield in cUSD associated with a given address across all impact vaults.",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "totalYieldUSD",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "impactVaults(uint256)",
      "name": "impactVaults",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_sprlTokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isImpactVault(address)",
      "name": "isImpactVault",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_vault",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isV0Vault(address)",
      "name": "isV0Vault",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_vault",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registerV0Vault(address)",
      "name": "registerV0Vault",
      "description": "For migration purposes only.",
      "parameterDecorators": [
        {
          "name": "_vaultToAdd",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registerVault(address)",
      "name": "registerVault",
      "description": "Add a new ImpactVault.",
      "parameterDecorators": [
        {
          "name": "_vaultToAdd",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDependencies(address)",
      "name": "setDependencies",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_sprlTokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "v0Vaults(uint256)",
      "name": "v0Vaults",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}