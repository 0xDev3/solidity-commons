{
  "schema": "../schema.json",
  "tags": [
    "celo network"
  ],
  "name": "CelofarmsPoolInitializable",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdminTokenRecovery(address,uint256)",
      "name": "AdminTokenRecovery",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenRecovered",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposit(address,uint256)",
      "name": "Deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EmergencyWithdraw(address,uint256)",
      "name": "EmergencyWithdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewPoolLimit(uint256)",
      "name": "NewPoolLimit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "poolLimitPerUser",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewRewardPerBlock(uint256)",
      "name": "NewRewardPerBlock",
      "description": "",
      "parameterDecorators": [
        {
          "name": "rewardPerBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewStakedTokenTransferFee(uint16)",
      "name": "NewStakedTokenTransferFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "transferFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewStartAndEndBlocks(uint256,uint256)",
      "name": "NewStartAndEndBlocks",
      "description": "",
      "parameterDecorators": [
        {
          "name": "startBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewWithdrawalInterval(uint256)",
      "name": "NewWithdrawalInterval",
      "description": "",
      "parameterDecorators": [
        {
          "name": "interval",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RewardsStop(uint256)",
      "name": "RewardsStop",
      "description": "",
      "parameterDecorators": [
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdraw(address,uint256)",
      "name": "Withdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "Celofarms_POOL_FACTORY()",
      "name": "Celofarms_POOL_FACTORY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAXIMUM_WITHDRAWAL_INTERVAL()",
      "name": "MAXIMUM_WITHDRAWAL_INTERVAL",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PRECISION_FACTOR()",
      "name": "PRECISION_FACTOR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "accTokenPerShare()",
      "name": "accTokenPerShare",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bonusEndBlock()",
      "name": "bonusEndBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "canWithdraw(address)",
      "name": "canWithdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(uint256)",
      "name": "deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyRewardWithdraw(uint256)",
      "name": "emergencyRewardWithdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyWithdraw()",
      "name": "emergencyWithdraw",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "hasUserLimit()",
      "name": "hasUserLimit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,uint256,uint256,uint256,uint256,uint16,uint256,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakedToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_rewardToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_rewardPerBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusEndBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_poolLimitPerUser",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_stakedTokenTransferFee",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_withdrawalInterval",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_admin",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isInitialized()",
      "name": "isInitialized",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastRewardBlock()",
      "name": "lastRewardBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingReward(address)",
      "name": "pendingReward",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolLimitPerUser()",
      "name": "poolLimitPerUser",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "recoverWrongTokens(address,uint256)",
      "name": "recoverWrongTokens",
      "description": "It allows the admin to recover wrong tokens sent to the contract. This function is only callable by admin.",
      "parameterDecorators": [
        {
          "name": "_tokenAddress",
          "description": ": the address of the token to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenAmount",
          "description": ": the number of tokens to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardPerBlock()",
      "name": "rewardPerBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardToken()",
      "name": "rewardToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakedToken()",
      "name": "stakedToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakedTokenTransferFee()",
      "name": "stakedTokenTransferFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "startBlock()",
      "name": "startBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stopReward()",
      "name": "stopReward",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePoolLimitPerUser(bool,uint256)",
      "name": "updatePoolLimitPerUser",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_hasUserLimit",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_poolLimitPerUser",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateRewardPerBlock(uint256)",
      "name": "updateRewardPerBlock",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_rewardPerBlock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateStakedTokenTransferFee(uint16)",
      "name": "updateStakedTokenTransferFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_transferFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateStartAndEndBlocks(uint256,uint256)",
      "name": "updateStartAndEndBlocks",
      "description": "It allows the admin to update start and end blocks. This function is only callable by owner.",
      "parameterDecorators": [
        {
          "name": "_startBlock",
          "description": ": the new start block.",
          "recommendedTypes": []
        },
        {
          "name": "_bonusEndBlock",
          "description": ": the new end block.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateWithdrawalInterval(uint256)",
      "name": "updateWithdrawalInterval",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_interval",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "userInfo(address)",
      "name": "userInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardDebt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "nextWithdrawalUntil",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawalInterval()",
      "name": "withdrawalInterval",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}