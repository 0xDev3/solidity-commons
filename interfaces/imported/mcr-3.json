{
  "schema": "../schema.json",
  "tags": [],
  "name": "MCR",
  "description": "",
  "eventDecorators": [
    {
      "signature": "MCREvent(uint256,uint256,bytes4[],uint256[],uint256,uint256,uint256)",
      "name": "MCREvent",
      "description": "to log error messages.",
      "parameterDecorators": [
        {
          "name": "date",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "allCurr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "allCurrRates",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "mcrEtherx100",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "mcrPercx100",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "vFull",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "_calVtpAndMCRtp(uint256)",
      "name": "_calVtpAndMCRtp",
      "description": "Calculates V(Tp) and MCR%(Tp), i.e, Pool Fund Value in Ether and MCR% used in the Token Price Calculation.",
      "parameterDecorators": [
        {
          "name": "poolBalance",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "vtp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "mcrtp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addLastMCRData(uint64)",
      "name": "addLastMCRData",
      "description": "Adds MCR Data for last failed attempt.",
      "parameterDecorators": [
        {
          "name": "date",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addMCRData(uint256,uint256,uint256,bytes4[],uint256[],uint64)",
      "name": "addMCRData",
      "description": "Adds new MCR data.",
      "parameterDecorators": [
        {
          "name": "mcrP",
          "description": "Minimum Capital Requirement in percentage.",
          "recommendedTypes": []
        },
        {
          "name": "mcrE",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "vF",
          "description": "Pool1 fund value in Ether used in the last full daily calculation of the Capital model.",
          "recommendedTypes": []
        },
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_threeDayAvg",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "onlyDate",
          "description": "Date(yyyymmdd) at which MCR details are getting added.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calVtpAndMCRtp()",
      "name": "calVtpAndMCRtp",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "vtp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "mcrtp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateStepTokenPrice(bytes4,uint256)",
      "name": "calculateStepTokenPrice",
      "description": "Calculates the Token Price of SOTE in a given currency.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "Currency name.",
          "recommendedTypes": []
        },
        {
          "name": "mcrtp",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateTokenPrice(bytes4)",
      "name": "calculateTokenPrice",
      "description": "Calculates the Token Price of SOTE in a given currency with provided token supply for dynamic token price calculation.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "Currency name.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateVtpAndMCRtp(uint256)",
      "name": "calculateVtpAndMCRtp",
      "description": "",
      "parameterDecorators": [
        {
          "name": "poolBalance",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "vtp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "mcrtp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeDependentContractAddress()",
      "name": "changeDependentContractAddress",
      "description": "Iupgradable Interface to update dependent contract address.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMasterAddress(address)",
      "name": "changeMasterAddress",
      "description": "change master address.",
      "parameterDecorators": [
        {
          "name": "_masterAddress",
          "description": "is the new address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "dynamicMincapIncrementx100()",
      "name": "dynamicMincapIncrementx100",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dynamicMincapThresholdx100()",
      "name": "dynamicMincapThresholdx100",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllSumAssurance()",
      "name": "getAllSumAssurance",
      "description": "Gets total sum assured(in BNB).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMaxSellTokens()",
      "name": "getMaxSellTokens",
      "description": "Gets max numbers of tokens that can be sold at the moment.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "maxTokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getThresholdValues(uint256,uint256,uint256,uint256)",
      "name": "getThresholdValues",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vtp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "vF",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "totalSA",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "minCap",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "lowerThreshold",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "upperThreshold",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUintParameters(bytes8)",
      "name": "getUintParameters",
      "description": "Gets Uint Parameters of a code.",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "whose details we want.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "codeVal",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes8"
        },
        {
          "name": "val",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ms()",
      "name": "ms",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "soteMasterAddress()",
      "name": "soteMasterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateUintParameters(bytes8,uint256)",
      "name": "updateUintParameters",
      "description": "Updates Uint Parameters of a code.",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "whose details we want to update.",
          "recommendedTypes": []
        },
        {
          "name": "val",
          "description": "value to set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "variableMincap()",
      "name": "variableMincap",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}