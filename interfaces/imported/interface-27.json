{
  "schema": "../schema.json",
  "tags": [],
  "name": "EIP712VerifierAuction",
  "description": "Verification of MetaTXs for Auctions, that extends the verification for BuyNows inherited in EIP712VerifierBuyNow. Full contract documentation in IEIP712VerifierAuction.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "verifyAssetTransferResult(tuple(bytes32,bool),bytes,address)",
      "name": "verifyAssetTransferResult",
      "description": "Verifies that the provided AssetTransferResult struct has been signed by the provided signer.",
      "parameterDecorators": [
        {
          "name": "transferResult",
          "description": "The provided AssetTransferResult struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "paymentId",
              "description": "",
              "type": "bytes32"
            },
            {
              "name": "wasSuccessful",
              "description": "",
              "type": "bool"
            }
          ]
        },
        {
          "name": "signature",
          "description": "The provided signature of the input struct.",
          "recommendedTypes": []
        },
        {
          "name": "signer",
          "description": "The signer's address that we want to verify.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns true if the signature corresponds to the signer having signed the input struct.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "verifyBid(tuple(bytes32,uint256,uint256,uint256,uint256,uint256,address,address),bytes,address)",
      "name": "verifyBid",
      "description": "Verifies that the provided BidInput struct has been signed by the provided signer.",
      "parameterDecorators": [
        {
          "name": "bidInput",
          "description": "The provided BidInput struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "paymentId",
              "description": "",
              "type": "bytes32"
            },
            {
              "name": "endsAt",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "bidAmount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "feeBPS",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "universeId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "deadline",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "bidder",
              "description": "",
              "type": "address"
            },
            {
              "name": "seller",
              "description": "",
              "type": "address"
            }
          ]
        },
        {
          "name": "signature",
          "description": "The provided signature of the input struct.",
          "recommendedTypes": []
        },
        {
          "name": "signer",
          "description": "The signer's address that we want to verify.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns true if the signature corresponds to the provided signer having signed the input struct.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "verifyBuyNow(tuple(bytes32,uint256,uint256,uint256,uint256,address,address),bytes,address)",
      "name": "verifyBuyNow",
      "description": "Verifies that the provided BuyNowInput struct has been signed by the provided signer.",
      "parameterDecorators": [
        {
          "name": "buyNowInp",
          "description": "The provided BuyNowInput struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "paymentId",
              "description": "",
              "type": "bytes32"
            },
            {
              "name": "amount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "feeBPS",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "universeId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "deadline",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "buyer",
              "description": "",
              "type": "address"
            },
            {
              "name": "seller",
              "description": "",
              "type": "address"
            }
          ]
        },
        {
          "name": "signature",
          "description": "The provided signature of the input struct.",
          "recommendedTypes": []
        },
        {
          "name": "signer",
          "description": "The signer's address that we want to verify.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns true if the signature corresponds to the provided signer having signed the input struct.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "verifySellerSignature(bytes,tuple(bytes32,uint256,uint256,uint256,uint256,address,address))",
      "name": "verifySellerSignature",
      "description": "Verifies the seller signature showing agreement to list the asset as ruled by this explicit paymentId. To anticipate for future potential differences in verifiers for BuyNow/Auction listings, the interfaces to verifiers for both flows are kept separate, accepting the entire respective structs as input. For the same reason, the interface declares the method as 'view', prepared to use EIP712 flows, even if the initial implementation can be 'pure'.",
      "parameterDecorators": [
        {
          "name": "sellerSignature",
          "description": "the signature of the seller agreeing to list the asset as ruled by this explicit paymentId.",
          "recommendedTypes": []
        },
        {
          "name": "buyNowInp",
          "description": "The provided BuyNowInput struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "paymentId",
              "description": "",
              "type": "bytes32"
            },
            {
              "name": "amount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "feeBPS",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "universeId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "deadline",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "buyer",
              "description": "",
              "type": "address"
            },
            {
              "name": "seller",
              "description": "",
              "type": "address"
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns true if the seller signature is correct.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "verifySellerSignature(bytes,tuple(bytes32,uint256,uint256,uint256,uint256,uint256,address,address))",
      "name": "verifySellerSignature",
      "description": "Verifies the seller signature showing agreement to list the asset as ruled by this explicit paymentId. To anticipate for future potential differences in verifiers for BuyNow/Auction listings, the interfaces to verifiers for both flows are kept separate, accepting the entire respective structs as input. For the same reason, the interface declares the method as 'view', prepared to use EIP712 flows, even if the initial implementation can be 'pure'.",
      "parameterDecorators": [
        {
          "name": "sellerSignature",
          "description": "the signature of the seller agreeing to list the asset as ruled by this explicit paymentId.",
          "recommendedTypes": []
        },
        {
          "name": "bidInput",
          "description": "The provided BuyNowInput struct.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "paymentId",
              "description": "",
              "type": "bytes32"
            },
            {
              "name": "endsAt",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "bidAmount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "feeBPS",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "universeId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "deadline",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "bidder",
              "description": "",
              "type": "address"
            },
            {
              "name": "seller",
              "description": "",
              "type": "address"
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns true if the seller signature is correct.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}