{
  "schema": "../schema.json",
  "tags": [
    "oracles",
    "aave",
    "chainlink"
  ],
  "name": "AaveOracle",
  "description": "AaveOracle. Proxy smart contract to get the price of an asset from a price source, with Chainlink Aggregator smart contracts as primary option - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallbackOracle - Owned by the Aave governance system, allowed to add sources for assets, replace them and change the fallbackOracle.",
  "eventDecorators": [
    {
      "signature": "AssetSourceUpdated(address,address)",
      "name": "AssetSourceUpdated",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "source",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "BaseCurrencySet(address,uint256)",
      "name": "BaseCurrencySet",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "baseCurrency",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "baseCurrencyUnit",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FallbackOracleUpdated(address)",
      "name": "FallbackOracleUpdated",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "fallbackOracle",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BASE_CURRENCY()",
      "name": "BASE_CURRENCY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "BASE_CURRENCY_UNIT()",
      "name": "BASE_CURRENCY_UNIT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAssetPrice(address)",
      "name": "getAssetPrice",
      "description": "Gets an asset price by address.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The asset address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAssetsPrices(address[])",
      "name": "getAssetsPrices",
      "description": "Gets a list of prices from a list of assets addresses.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "The list of assets addresses.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFallbackOracle()",
      "name": "getFallbackOracle",
      "description": "Gets the address of the fallback oracle.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address The addres of the fallback oracle.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSourceOfAsset(address)",
      "name": "getSourceOfAsset",
      "description": "Gets the address of the source for an asset address.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the asset.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address The address of the source.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAssetSources(address[],address[])",
      "name": "setAssetSources",
      "description": "External function called by the Aave governance to set or replace sources of assets.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "The addresses of the assets.",
          "recommendedTypes": []
        },
        {
          "name": "sources",
          "description": "The address of the source of each asset.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFallbackOracle(address)",
      "name": "setFallbackOracle",
      "description": "Sets the fallbackOracle - Callable only by the Aave governance.",
      "parameterDecorators": [
        {
          "name": "fallbackOracle",
          "description": "The address of the fallbackOracle.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}