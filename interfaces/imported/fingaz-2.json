{
  "schema": "../schema.json",
  "tags": [],
  "name": "FINGAZ",
  "description": "FINGAZ contract for handling transactions on the Fingaz.app Platform. It facilitates buying FINGZ, booking sessions and organizing tournaments.",
  "eventDecorators": [
    {
      "signature": "FingzSale(uint256,uint256,address)",
      "name": "FingzSale",
      "description": "",
      "parameterDecorators": [
        {
          "name": "fingz_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "avax_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FingzWithdrawn(uint256)",
      "name": "FingzWithdrawn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "fingzes",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PlayerJoined(uint256,uint256)",
      "name": "PlayerJoined",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "player_index",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SessionBooked(uint256)",
      "name": "SessionBooked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "book_id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SessionCompleted(uint256)",
      "name": "SessionCompleted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "book_id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SessionRefunded(uint256,uint256)",
      "name": "SessionRefunded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "book_id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "refund_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TournamentCancelled(uint256)",
      "name": "TournamentCancelled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TournamentCompleted(uint256,address[],uint256[])",
      "name": "TournamentCompleted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "winners",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "payouts",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TournamentSetup(uint256)",
      "name": "TournamentSetup",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bookSession(address,address,uint256,bytes32)",
      "name": "bookSession",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "booker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "book_db_id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bookings(uint256)",
      "name": "bookings",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "booker",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "booking_database_id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyFingz(uint256,uint256,address)",
      "name": "buyFingz",
      "description": "$FINGZ Vendor.",
      "parameterDecorators": [
        {
          "name": "fingz_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "avax_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cancelTournament(uint256,uint256)",
      "name": "cancelTournament",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "completeSession(uint256)",
      "name": "completeSession",
      "description": "",
      "parameterDecorators": [
        {
          "name": "book_id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "completeTournament(uint256,address[],uint256[])",
      "name": "completeTournament",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "winners",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "payouts",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fingzPerAvax()",
      "name": "fingzPerAvax",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isTrustedForwarder(address)",
      "name": "isTrustedForwarder",
      "description": "",
      "parameterDecorators": [
        {
          "name": "forwarder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "joinTournament(uint256,address)",
      "name": "joinTournament",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "player",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "refundSession(uint256,uint256)",
      "name": "refundSession",
      "description": "",
      "parameterDecorators": [
        {
          "name": "book_id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "refund_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "setFingzPerAvax(uint256)",
      "name": "setFingzPerAvax",
      "description": "",
      "parameterDecorators": [
        {
          "name": "fpa",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTrustedForwarder(address)",
      "name": "setTrustedForwarder",
      "description": "",
      "parameterDecorators": [
        {
          "name": "trustedForwarder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setupTournament(uint256,bytes32)",
      "name": "setupTournament",
      "description": "",
      "parameterDecorators": [
        {
          "name": "player_limit",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tournament_database_id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tournaments(uint256)",
      "name": "tournaments",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "t_status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "player_limit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "player_count",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tournament_database_id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawAvax(uint256)",
      "name": "withdrawAvax",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawFingz(uint256)",
      "name": "withdrawFingz",
      "description": "",
      "parameterDecorators": [
        {
          "name": "fingzes",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}