{
  "schema": "../schema.json",
  "tags": [],
  "name": "UserProxy",
  "description": "UserProxy contract.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "ammWrapperAddr()",
      "name": "ammWrapperAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address)",
      "name": "initialize",
      "description": "Replacing constructor and initialize the contract. This function should only be called once.",
      "parameterDecorators": [
        {
          "name": "_operator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_permStorage",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isAMMEnabled()",
      "name": "isAMMEnabled",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPMMEnabled()",
      "name": "isPMMEnabled",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "operator()",
      "name": "operator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "permStorage()",
      "name": "permStorage",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pmmAddr()",
      "name": "pmmAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setAMMStatus(bool)",
      "name": "setAMMStatus",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_enable",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPMMStatus(bool)",
      "name": "setPMMStatus",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_enable",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "toAMM(bytes)",
      "name": "toAMM",
      "description": "proxy to AMM.",
      "parameterDecorators": [
        {
          "name": "_payload",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "toPMM(bytes)",
      "name": "toPMM",
      "description": "proxy to PMM.",
      "parameterDecorators": [
        {
          "name": "_payload",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newOperator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeAMMWrapper(address,bool)",
      "name": "upgradeAMMWrapper",
      "description": "Update AMMWrapper contract address. Used only when ABI of AMMWrapeer remain unchanged. Otherwise, UserProxy contract should be upgraded altogether.",
      "parameterDecorators": [
        {
          "name": "_newAMMWrapperAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_enable",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradePMM(address,bool)",
      "name": "upgradePMM",
      "description": "Update PMM contract address. Used only when ABI of PMM remain unchanged. Otherwise, UserProxy contract should be upgraded altogether.",
      "parameterDecorators": [
        {
          "name": "_newPMMAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_enable",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "version()",
      "name": "version",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}