{
  "schema": "../schema.json",
  "tags": [],
  "name": "ChainLog",
  "description": "An on-chain governance-managed contract registry. Publicly readable data; mutating functions must be called by an authorized user.",
  "eventDecorators": [
    {
      "signature": "Deny(address)",
      "name": "Deny",
      "description": "Event for RigelTokens purchase logging.",
      "parameterDecorators": [
        {
          "name": "usr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Rely(address)",
      "name": "Rely",
      "description": "Event for RigelTokens purchase logging.",
      "parameterDecorators": [
        {
          "name": "usr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RemoveAddress(bytes32)",
      "name": "RemoveAddress",
      "description": "Event for RigelTokens purchase logging.",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdateAddress(bytes32,address)",
      "name": "UpdateAddress",
      "description": "Event for RigelTokens purchase logging.",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdateIPFS(string)",
      "name": "UpdateIPFS",
      "description": "Event for RigelTokens purchase logging.",
      "parameterDecorators": [
        {
          "name": "ipfs",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdateSha256sum(string)",
      "name": "UpdateSha256sum",
      "description": "Event for RigelTokens purchase logging.",
      "parameterDecorators": [
        {
          "name": "sha256sum",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdateVersion(string)",
      "name": "UpdateVersion",
      "description": "Event for RigelTokens purchase logging.",
      "parameterDecorators": [
        {
          "name": "version",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "count()",
      "name": "count",
      "description": "Returns the number of keys being tracked in the keys array.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deny(address)",
      "name": "deny",
      "description": "",
      "parameterDecorators": [
        {
          "name": "usr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "get(uint256)",
      "name": "get",
      "description": "Returns the key and address of an item in the changelog array (for enumeration). _index is 0-indexed to the underlying array.",
      "parameterDecorators": [
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAddress(bytes32)",
      "name": "getAddress",
      "description": "Returns the address for a particular key.",
      "parameterDecorators": [
        {
          "name": "_key",
          "description": "a bytes32 key (ex. MCD_VAT).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "addr",
          "description": "the contract address associated with the key.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ipfs()",
      "name": "ipfs",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "keys(uint256)",
      "name": "keys",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "list()",
      "name": "list",
      "description": "Returns the list of keys being tracked by the changelog. May fail if keys is too large, if so, call count() and iterate with get().",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rely(address)",
      "name": "rely",
      "description": "",
      "parameterDecorators": [
        {
          "name": "usr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeAddress(bytes32)",
      "name": "removeAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_key",
          "description": "the key to be removed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAddress(bytes32,address)",
      "name": "setAddress",
      "description": "Set the key-value pair for a changelog item.",
      "parameterDecorators": [
        {
          "name": "_key",
          "description": "the changelog key (ex. MCD_VAT).",
          "recommendedTypes": []
        },
        {
          "name": "_addr",
          "description": "the address to the contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setIPFS(string)",
      "name": "setIPFS",
      "description": "Set the IPFS hash of a pinned changelog. designed to store IPFS pin hash that can retreive changelog json.",
      "parameterDecorators": [
        {
          "name": "_ipfs",
          "description": "The ipfs pin hash of an ipfs hosted log (optional).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSha256sum(string)",
      "name": "setSha256sum",
      "description": "Set the \"sha256sum\" of some current external changelog. designed to store sha256 of changelog.makerdao.com hosted log.",
      "parameterDecorators": [
        {
          "name": "_sha256sum",
          "description": "The sha256 sum (optional).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setVersion(string)",
      "name": "setVersion",
      "description": "Set the \"version\" of the current changelog.",
      "parameterDecorators": [
        {
          "name": "_version",
          "description": "The version string (optional).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sha256sum()",
      "name": "sha256sum",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "version()",
      "name": "version",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "wards(address)",
      "name": "wards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}