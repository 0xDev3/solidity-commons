{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "ConfigurableInterestVaultConfig",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptDebt(address)",
      "name": "acceptDebt",
      "description": "Return whether the given worker accepts more debt. Revert on non-worker.",
      "parameterDecorators": [
        {
          "name": "worker",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fairLaunch()",
      "name": "fairLaunch",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFairLaunchAddr()",
      "name": "getFairLaunchAddr",
      "description": "Return the address of fair launch contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInterestRate(uint256,uint256)",
      "name": "getInterestRate",
      "description": "Return the interest rate per second, using 1e18 as denom.",
      "parameterDecorators": [
        {
          "name": "debt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "floating",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getKillBps()",
      "name": "getKillBps",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReservePoolBps()",
      "name": "getReservePoolBps",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWNativeRelayer()",
      "name": "getWNativeRelayer",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWrappedNativeAddr()",
      "name": "getWrappedNativeAddr",
      "description": "Return the address of wrapped native token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(uint256,uint256,uint256,address,address,address,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_minDebtSize",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_reservePoolBps",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_killBps",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_interestModel",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_wrappedNative",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_wNativeRelayer",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fairLaunch",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "interestModel()",
      "name": "interestModel",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isWorker(address)",
      "name": "isWorker",
      "description": "Return whether the given address is a worker.",
      "parameterDecorators": [
        {
          "name": "worker",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "killFactor(address,uint256)",
      "name": "killFactor",
      "description": "Return the kill factor for the worker + debt, using 1e4 as denom. Revert on non-worker.",
      "parameterDecorators": [
        {
          "name": "worker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "debt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minDebtSize()",
      "name": "minDebtSize",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setParams(uint256,uint256,uint256,address,address,address,address)",
      "name": "setParams",
      "description": "Set all the basic parameters. Must only be called by the owner.",
      "parameterDecorators": [
        {
          "name": "_minDebtSize",
          "description": "The new minimum debt size value.",
          "recommendedTypes": []
        },
        {
          "name": "_reservePoolBps",
          "description": "The new interests allocated to the reserve pool value.",
          "recommendedTypes": []
        },
        {
          "name": "_killBps",
          "description": "The new reward for killing a position value.",
          "recommendedTypes": []
        },
        {
          "name": "_interestModel",
          "description": "The new interest rate model contract.",
          "recommendedTypes": []
        },
        {
          "name": "_wrappedNative",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_wNativeRelayer",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fairLaunch",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWorkers(address[],address[])",
      "name": "setWorkers",
      "description": "Set the configuration for the given workers. Must only be called by the owner.",
      "parameterDecorators": [
        {
          "name": "addrs",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "configs",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "wNativeRelayer()",
      "name": "wNativeRelayer",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "workFactor(address,uint256)",
      "name": "workFactor",
      "description": "Return the work factor for the worker + debt, using 1e4 as denom. Revert on non-worker.",
      "parameterDecorators": [
        {
          "name": "worker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "debt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "workers(address)",
      "name": "workers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "wrappedNative()",
      "name": "wrappedNative",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}