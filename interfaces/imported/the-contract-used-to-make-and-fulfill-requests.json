{"schema":"../schema.json","tags":[],"name":"Airnode","description":"The contract used to make and fulfill requests. Clients use this contract to make requests that follow a request-response scheme. In addition, it inherits from contracts that keep records of providers, requesters, endpoints, etc.","eventDecorators":[{"signature":"ClientEndorsementStatusUpdated(uint256,address,bool)","name":"ClientEndorsementStatusUpdated","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"requesterIndex","description":"","recommendedTypes":[],"indexed":true},{"name":"clientAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"endorsementStatus","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ClientFullRequestCreated(bytes32,bytes32,uint256,address,bytes32,uint256,address,address,bytes4,bytes)","name":"ClientFullRequestCreated","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"providerId","description":"","recommendedTypes":[],"indexed":true},{"name":"requestId","description":"","recommendedTypes":[],"indexed":true},{"name":"noRequests","description":"","recommendedTypes":[],"indexed":false},{"name":"clientAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"endpointId","description":"","recommendedTypes":[],"indexed":false},{"name":"requesterIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"designatedWallet","description":"","recommendedTypes":[],"indexed":false},{"name":"fulfillAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"fulfillFunctionId","description":"","recommendedTypes":[],"indexed":false},{"name":"parameters","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ClientRequestCreated(bytes32,bytes32,uint256,address,bytes32,uint256,address,address,bytes4,bytes)","name":"ClientRequestCreated","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"providerId","description":"","recommendedTypes":[],"indexed":true},{"name":"requestId","description":"","recommendedTypes":[],"indexed":true},{"name":"noRequests","description":"","recommendedTypes":[],"indexed":false},{"name":"clientAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"templateId","description":"","recommendedTypes":[],"indexed":false},{"name":"requesterIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"designatedWallet","description":"","recommendedTypes":[],"indexed":false},{"name":"fulfillAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"fulfillFunctionId","description":"","recommendedTypes":[],"indexed":false},{"name":"parameters","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ClientRequestFailed(bytes32,bytes32)","name":"ClientRequestFailed","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"providerId","description":"","recommendedTypes":[],"indexed":true},{"name":"requestId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ClientRequestFulfilled(bytes32,bytes32,uint256,bytes32)","name":"ClientRequestFulfilled","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"providerId","description":"","recommendedTypes":[],"indexed":true},{"name":"requestId","description":"","recommendedTypes":[],"indexed":true},{"name":"statusCode","description":"","recommendedTypes":[],"indexed":false},{"name":"data","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ClientRequestFulfilledWithBytes(bytes32,bytes32,uint256,bytes)","name":"ClientRequestFulfilledWithBytes","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"providerId","description":"","recommendedTypes":[],"indexed":true},{"name":"requestId","description":"","recommendedTypes":[],"indexed":true},{"name":"statusCode","description":"","recommendedTypes":[],"indexed":false},{"name":"data","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ClientShortRequestCreated(bytes32,bytes32,uint256,address,bytes32,bytes)","name":"ClientShortRequestCreated","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"providerId","description":"","recommendedTypes":[],"indexed":true},{"name":"requestId","description":"","recommendedTypes":[],"indexed":true},{"name":"noRequests","description":"","recommendedTypes":[],"indexed":false},{"name":"clientAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"templateId","description":"","recommendedTypes":[],"indexed":false},{"name":"parameters","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EndpointUpdated(bytes32,bytes32,address[])","name":"EndpointUpdated","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"providerId","description":"","recommendedTypes":[],"indexed":true},{"name":"endpointId","description":"","recommendedTypes":[],"indexed":true},{"name":"authorizers","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ProviderCreated(bytes32,address,string)","name":"ProviderCreated","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"providerId","description":"","recommendedTypes":[],"indexed":true},{"name":"admin","description":"","recommendedTypes":[],"indexed":false},{"name":"xpub","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ProviderUpdated(bytes32,address)","name":"ProviderUpdated","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"providerId","description":"","recommendedTypes":[],"indexed":true},{"name":"admin","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RequesterCreated(uint256,address)","name":"RequesterCreated","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"requesterIndex","description":"","recommendedTypes":[],"indexed":true},{"name":"admin","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RequesterUpdated(uint256,address)","name":"RequesterUpdated","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"requesterIndex","description":"","recommendedTypes":[],"indexed":true},{"name":"admin","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TemplateCreated(bytes32,bytes32,bytes32,uint256,address,address,bytes4,bytes)","name":"TemplateCreated","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"templateId","description":"","recommendedTypes":[],"indexed":true},{"name":"providerId","description":"","recommendedTypes":[],"indexed":false},{"name":"endpointId","description":"","recommendedTypes":[],"indexed":false},{"name":"requesterIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"designatedWallet","description":"","recommendedTypes":[],"indexed":false},{"name":"fulfillAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"fulfillFunctionId","description":"","recommendedTypes":[],"indexed":false},{"name":"parameters","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WithdrawalFulfilled(bytes32,uint256,bytes32,address,address,uint256)","name":"WithdrawalFulfilled","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"providerId","description":"","recommendedTypes":[],"indexed":true},{"name":"requesterIndex","description":"","recommendedTypes":[],"indexed":true},{"name":"withdrawalRequestId","description":"","recommendedTypes":[],"indexed":true},{"name":"designatedWallet","description":"","recommendedTypes":[],"indexed":false},{"name":"destination","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WithdrawalRequested(bytes32,uint256,bytes32,address,address)","name":"WithdrawalRequested","description":"An event emitted when a vault is liquidated.","parameterDecorators":[{"name":"providerId","description":"","recommendedTypes":[],"indexed":true},{"name":"requesterIndex","description":"","recommendedTypes":[],"indexed":true},{"name":"withdrawalRequestId","description":"","recommendedTypes":[],"indexed":true},{"name":"designatedWallet","description":"","recommendedTypes":[],"indexed":false},{"name":"destination","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"createProvider(address,string)","name":"createProvider","description":"Allows the master wallet (m) of the provider to create a provider record on this chain. The oracle node should calculate their providerId off-chain and retrieve its details with a getProvider() call. If the xpub is does not match, it should call this method to update the provider record. Note that the provider private key can be used to update admin through this method. This is allowed on purpose, as the provider private key is more privileged than the provider admin account.","parameterDecorators":[{"name":"admin","description":"Provider admin.","recommendedTypes":[]},{"name":"xpub","description":"Master public key of the provider node.","recommendedTypes":[]}],"returnDecorators":[{"name":"providerId","description":"Provider ID.","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"createRequester(address)","name":"createRequester","description":"Creates a requester with the given parameters, addressable by the index it returns.","parameterDecorators":[{"name":"admin","description":"Requester admin.","recommendedTypes":[]}],"returnDecorators":[{"name":"requesterIndex","description":"Requester index.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"createTemplate(bytes32,bytes32,uint256,address,address,bytes4,bytes)","name":"createTemplate","description":"Creates a request template with the given parameters, addressable by the ID it returns. A specific set of request parameters will always have the same ID. This means a few things: (1) You can compute the expected ID of a set of parameters off-chain, (2) creating a new template with the same parameters will overwrite the old one and return the same template ID, (3) after you query a template with its ID, you can verify its integrity by applying the hash and comparing the result with the ID.","parameterDecorators":[{"name":"providerId","description":"Provider ID from ProviderStore.","recommendedTypes":[]},{"name":"endpointId","description":"Endpoint ID from EndpointStore.","recommendedTypes":[]},{"name":"requesterIndex","description":"Requester index from RequesterStore.","recommendedTypes":[]},{"name":"designatedWallet","description":"Designated wallet that is requested to fulfill the request.","recommendedTypes":[]},{"name":"fulfillAddress","description":"Address that will be called to fulfill.","recommendedTypes":[]},{"name":"fulfillFunctionId","description":"Signature of the function that will be called to fulfill.","recommendedTypes":[]},{"name":"parameters","description":"Static request parameters (i.e., parameters that will not change between requests, unlike the dynamic parameters determined at runtime).","recommendedTypes":[]}],"returnDecorators":[{"name":"templateId","description":"Request template ID.","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"fail(bytes32,bytes32,address,bytes4)","name":"fail","description":"Called by the oracle node if a request cannot be fulfilled. The oracle should fall back to this if a request cannot be fulfilled because fulfill() reverts.","parameterDecorators":[{"name":"requestId","description":"Request ID.","recommendedTypes":[]},{"name":"providerId","description":"Provider ID from ProviderStore.","recommendedTypes":[]},{"name":"fulfillAddress","description":"Address that will be called to fulfill.","recommendedTypes":[]},{"name":"fulfillFunctionId","description":"Signature of the function that will be called to fulfill.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"fulfill(bytes32,bytes32,uint256,bytes32,address,bytes4)","name":"fulfill","description":"Called by the oracle node to fulfill individual requests (including regular, short and full requests).","parameterDecorators":[{"name":"requestId","description":"Request ID.","recommendedTypes":[]},{"name":"providerId","description":"Provider ID from ProviderStore.","recommendedTypes":[]},{"name":"statusCode","description":"Status code of the fulfillment.","recommendedTypes":[]},{"name":"data","description":"Fulfillment data.","recommendedTypes":[]},{"name":"fulfillAddress","description":"Address that will be called to fulfill.","recommendedTypes":[]},{"name":"fulfillFunctionId","description":"Signature of the function that will be called to fulfill.","recommendedTypes":[]}],"returnDecorators":[{"name":"callSuccess","description":"If the fulfillment call succeeded.","recommendedTypes":[],"solidityType":"bool"},{"name":"callData","description":"Data returned by the fulfillment call (if there is any).","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"fulfillBytes(bytes32,bytes32,uint256,bytes,address,bytes4)","name":"fulfillBytes","description":"Called by the oracle node to fulfill individual requests (including regular, short and full requests) with a bytes type response. The oracle uses this method to fulfill if the requester has specifically asked for a bytes type response.","parameterDecorators":[{"name":"requestId","description":"Request ID.","recommendedTypes":[]},{"name":"providerId","description":"Provider ID from ProviderStore.","recommendedTypes":[]},{"name":"statusCode","description":"Status code of the fulfillment.","recommendedTypes":[]},{"name":"data","description":"Fulfillment data of type bytes.","recommendedTypes":[]},{"name":"fulfillAddress","description":"Address that will be called to fulfill.","recommendedTypes":[]},{"name":"fulfillFunctionId","description":"Signature of the function that will be called to fulfill.","recommendedTypes":[]}],"returnDecorators":[{"name":"callSuccess","description":"If the fulfillment call succeeded.","recommendedTypes":[],"solidityType":"bool"},{"name":"callData","description":"Data returned by the fulfillment call (if there is any).","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"fulfillWithdrawal(bytes32,bytes32,uint256,address)","name":"fulfillWithdrawal","description":"Called by the designated wallet to fulfill the withdrawal request made by the requester. The oracle node sends the funds through this method to emit an event that indicates that the withdrawal request has been fulfilled.","parameterDecorators":[{"name":"withdrawalRequestId","description":"","recommendedTypes":[]},{"name":"providerId","description":"Provider ID.","recommendedTypes":[]},{"name":"requesterIndex","description":"Requester index from RequesterStore.","recommendedTypes":[]},{"name":"destination","description":"Withdrawal destination.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getEndpointAuthorizers(bytes32,bytes32)","name":"getEndpointAuthorizers","description":"Retrieves the endpoint parameters addressed by the ID.","parameterDecorators":[{"name":"providerId","description":"Provider ID from ProviderStore.","recommendedTypes":[]},{"name":"endpointId","description":"Endpoint ID.","recommendedTypes":[]}],"returnDecorators":[{"name":"authorizers","description":"Authorizer contract addresses.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getProvider(bytes32)","name":"getProvider","description":"Retrieves provider parameters addressed by the ID.","parameterDecorators":[{"name":"providerId","description":"Provider ID.","recommendedTypes":[]}],"returnDecorators":[{"name":"admin","description":"Provider admin.","recommendedTypes":[],"solidityType":"address"},{"name":"xpub","description":"Master public key of the provider node.","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"getTemplate(bytes32)","name":"getTemplate","description":"Retrieves request parameters addressed by the ID.","parameterDecorators":[{"name":"templateId","description":"Request template ID.","recommendedTypes":[]}],"returnDecorators":[{"name":"providerId","description":"Provider ID from ProviderStore.","recommendedTypes":[],"solidityType":"bytes32"},{"name":"endpointId","description":"Endpoint ID from EndpointStore.","recommendedTypes":[],"solidityType":"bytes32"},{"name":"requesterIndex","description":"Requester index from RequesterStore.","recommendedTypes":[],"solidityType":"uint256"},{"name":"designatedWallet","description":"Designated wallet that is requested to fulfill the request.","recommendedTypes":[],"solidityType":"address"},{"name":"fulfillAddress","description":"Address that will be called to fulfill.","recommendedTypes":[],"solidityType":"address"},{"name":"fulfillFunctionId","description":"Signature of the function that will be called to fulfill.","recommendedTypes":[],"solidityType":"bytes4"},{"name":"parameters","description":"Static request parameters (i.e., parameters that will not change between requests, unlike the dynamic parameters determined at runtime).","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"makeFullRequest(bytes32,bytes32,uint256,address,address,bytes4,bytes)","name":"makeFullRequest","description":"Called by the requester to make a full request. A full request does not refer to a template, meaning that it passes all the parameters in the request. It does not require a template to be created beforehand, which provides extra flexibility compared to makeRequest() and makeShortRequest(). This is the least gas efficient way of making a request. Do not use it unless you have a good reason.","parameterDecorators":[{"name":"providerId","description":"Provider ID from ProviderStore.","recommendedTypes":[]},{"name":"endpointId","description":"Endpoint ID from EndpointStore.","recommendedTypes":[]},{"name":"requesterIndex","description":"Requester index from RequesterStore.","recommendedTypes":[]},{"name":"designatedWallet","description":"Designated wallet that is requested to fulfill the request.","recommendedTypes":[]},{"name":"fulfillAddress","description":"Address that will be called to fulfill.","recommendedTypes":[]},{"name":"fulfillFunctionId","description":"Signature of the function that will be called to fulfill.","recommendedTypes":[]},{"name":"parameters","description":"All request parameters.","recommendedTypes":[]}],"returnDecorators":[{"name":"requestId","description":"Request ID.","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"makeRequest(bytes32,uint256,address,address,bytes4,bytes)","name":"makeRequest","description":"Called by the client to make a regular request. A regular request refers to a template for the requester-agnostic parameters, but requires the client to provide the requester-specific parameters. This is the recommended way of making a request in most cases. Use makeShortRequest() if gas efficiency is critical.","parameterDecorators":[{"name":"templateId","description":"Template ID from TemplateStore.","recommendedTypes":[]},{"name":"requesterIndex","description":"Requester index from RequesterStore.","recommendedTypes":[]},{"name":"designatedWallet","description":"Designated wallet that is requested to fulfill the request.","recommendedTypes":[]},{"name":"fulfillAddress","description":"Address that will be called to fulfill.","recommendedTypes":[]},{"name":"fulfillFunctionId","description":"Signature of the function that will be called to fulfill.","recommendedTypes":[]},{"name":"parameters","description":"Dynamic request parameters (i.e., parameters that are determined at runtime, unlike the static parameters stored in the template).","recommendedTypes":[]}],"returnDecorators":[{"name":"requestId","description":"Request ID.","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"makeShortRequest(bytes32,bytes)","name":"makeShortRequest","description":"Called by the requester to make a short request. A short request refers to a template, which the provider will use to get both requester-agnostic and requester-specific parameters. Use this if gas efficiency is critical.","parameterDecorators":[{"name":"templateId","description":"Template ID from TemplateStore.","recommendedTypes":[]},{"name":"parameters","description":"Dynamic request parameters (i.e., parameters that are determined at runtime, unlike the static parameters stored in the template).","recommendedTypes":[]}],"returnDecorators":[{"name":"requestId","description":"Request ID.","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"requestWithIdHasFailed(bytes32)","name":"requestWithIdHasFailed","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"requestWithdrawal(bytes32,uint256,address,address)","name":"requestWithdrawal","description":"Called by the requester admin to create a request for the provider to send the funds kept in their designated wallet to destination.","parameterDecorators":[{"name":"providerId","description":"Provider ID.","recommendedTypes":[]},{"name":"requesterIndex","description":"Requester index from RequesterStore.","recommendedTypes":[]},{"name":"designatedWallet","description":"Designated wallet that the withdrawal is requested from.","recommendedTypes":[]},{"name":"destination","description":"Withdrawal destination.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requesterIndexToAdmin(uint256)","name":"requesterIndexToAdmin","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"requesterIndexToClientAddressToEndorsementStatus(uint256,address)","name":"requesterIndexToClientAddressToEndorsementStatus","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"updateClientEndorsementStatus(uint256,address,bool)","name":"updateClientEndorsementStatus","description":"Called by the requester admin to endorse a client, i.e., allow a client to use its designated wallets. This is not provider specific, i.e., the requester allows the client's requests to be fulfilled through its designated wallets across all providers.","parameterDecorators":[{"name":"requesterIndex","description":"Requester index.","recommendedTypes":[]},{"name":"clientAddress","description":"Client address.","recommendedTypes":[]},{"name":"endorsementStatus","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateEndpointAuthorizers(bytes32,bytes32,address[])","name":"updateEndpointAuthorizers","description":"Updates the endpoint authorizers of a provider.","parameterDecorators":[{"name":"providerId","description":"Provider ID from ProviderStore.","recommendedTypes":[]},{"name":"endpointId","description":"Endpoint ID.","recommendedTypes":[]},{"name":"authorizers","description":"Authorizer contract addresses.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateProvider(bytes32,address)","name":"updateProvider","description":"Updates the provider.","parameterDecorators":[{"name":"providerId","description":"Provider ID.","recommendedTypes":[]},{"name":"admin","description":"Provider admin.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateRequesterAdmin(uint256,address)","name":"updateRequesterAdmin","description":"Updates the requester admin.","parameterDecorators":[{"name":"requesterIndex","description":"Requester index.","recommendedTypes":[]},{"name":"admin","description":"Requester admin.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}