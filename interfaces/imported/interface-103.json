{"schema":"../schema.json","tags":[],"name":"MarketplaceSettings","description":"MarketplaceSettings Settings governing the marketplace fees.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event for token purchase logging.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"Event for token purchase logging.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"Event for token purchase logging.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"Event for token purchase logging.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"TOKEN_MARK_ROLE()","name":"TOKEN_MARK_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateMarketplaceFee(uint256)","name":"calculateMarketplaceFee","description":"Utility function for calculating the marketplace fee for given amount of wei.","parameterDecorators":[{"name":"_amount","description":"uint256 wei amount.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint256 wei fee.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculatePrimarySaleFee(address,uint256)","name":"calculatePrimarySaleFee","description":"Utility function for calculating the primary sale fee for given amount of wei.","parameterDecorators":[{"name":"_contractAddress","description":"address ERC721Contract address.","recommendedTypes":[]},{"name":"_amount","description":"uint256 wei amount.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint256 wei fee.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateSecondarySaleFee(address,uint256)","name":"calculateSecondarySaleFee","description":"Utility function for calculating the secondary sale fee for given amount of wei.","parameterDecorators":[{"name":"_contractAddress","description":"address ERC721Contract address.","recommendedTypes":[]},{"name":"_amount","description":"uint256 wei amount.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint256 wei fee.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getERC721ContractPrimarySaleFeePercentage(address)","name":"getERC721ContractPrimarySaleFeePercentage","description":"Get the primary sale fee percentage for a specific ERC721 contract.","parameterDecorators":[{"name":"_contractAddress","description":"address ERC721Contract address.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint8 wei primary sale fee.","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"getERC721ContractSecondarySaleFeePercentage(address)","name":"getERC721ContractSecondarySaleFeePercentage","description":"Get the secondary sale fee percentage for a specific ERC721 contract.","parameterDecorators":[{"name":"_contractAddress","description":"address ERC721Contract address.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint8 wei primary sale fee.","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketplaceFeePercentage()","name":"getMarketplaceFeePercentage","description":"Get the marketplace fee percentage.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"uint8 wei fee.","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketplaceMaxValue()","name":"getMarketplaceMaxValue","description":"Get the max value to be used with the marketplace.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"uint256 wei value.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarketplaceMinValue()","name":"getMarketplaceMinValue","description":"Get the max value to be used with the marketplace.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"uint256 wei value.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMember(bytes32,uint256)","name":"getRoleMember","description":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMemberCount(bytes32)","name":"getRoleMemberCount","description":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"grantMarketplaceAccess(address)","name":"grantMarketplaceAccess","description":"Grants a marketplace contract access to marke.","parameterDecorators":[{"name":"_account","description":"address of the account that can perform the token mark role.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"hasERC721TokenSold(address,uint256)","name":"hasERC721TokenSold","description":"Check whether the ERC721 token has sold at least once.","parameterDecorators":[{"name":"_contractAddress","description":"address ERC721Contract address.","recommendedTypes":[]},{"name":"_tokenId","description":"uint256 token ID.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"bool of whether the token has sold.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isERC721TokenPhysical(address,uint256)","name":"isERC721TokenPhysical","description":"Check whether the ERC721 token is physical.","parameterDecorators":[{"name":"_contractAddress","description":"address ERC721Contract address.","recommendedTypes":[]},{"name":"_tokenId","description":"uint256 token ID.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"bool of whether the token is physical.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"markERC721Token(address,uint256,bool)","name":"markERC721Token","description":"Mark a token as sold. Requirements: - `_contractAddress` cannot be the zero address.","parameterDecorators":[{"name":"_contractAddress","description":"address ERC721Contract address.","recommendedTypes":[]},{"name":"_tokenId","description":"uint256 token ID.","recommendedTypes":[]},{"name":"_hasSold","description":"bool of whether the token should be marked sold or not.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"markERC721TokenAsPhysical(address,uint256,bool)","name":"markERC721TokenAsPhysical","description":"Mark a token as physical. Requirements: - `_contractAddress` cannot be the zero address.","parameterDecorators":[{"name":"_contractAddress","description":"address ERC721Contract address.","recommendedTypes":[]},{"name":"_tokenId","description":"uint256 token ID.","recommendedTypes":[]},{"name":"_hasSold","description":"bool of whether the token should be marked physical or not.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"markTokensAsPhysical(address,uint256[])","name":"markTokensAsPhysical","description":"Function to set an array of tokens for a contract as sold, thus not being subject to the primary sale fee, if one exists.","parameterDecorators":[{"name":"_originContract","description":"address of ERC721 contract.","recommendedTypes":[]},{"name":"_tokenIds","description":"uint256[] array of token ids.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"markTokensAsSold(address,uint256[])","name":"markTokensAsSold","description":"Function to set an array of tokens for a contract as sold, thus not being subject to the primary sale fee, if one exists.","parameterDecorators":[{"name":"_originContract","description":"address of ERC721 contract.","recommendedTypes":[]},{"name":"_tokenIds","description":"uint256[] array of token ids.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"setERC721ContractPrimarySaleFeePercentage(address,uint8)","name":"setERC721ContractPrimarySaleFeePercentage","description":"Set the primary sale fee percentage for a specific ERC721 contract. Requirements: - `_contractAddress` cannot be the zero address. - `_percentage` must be <= 100.","parameterDecorators":[{"name":"_contractAddress","description":"address ERC721Contract address.","recommendedTypes":[]},{"name":"_percentage","description":"uint8 percentage fee for the ERC721 contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setERC721ContractSecondarySaleFeePercentage(address,uint8)","name":"setERC721ContractSecondarySaleFeePercentage","description":"Set the secondary sale fee percentage for a specific ERC721 contract. Requirements: - `_contractAddress` cannot be the zero address. - `_percentage` must be <= 100.","parameterDecorators":[{"name":"_contractAddress","description":"address ERC721Contract address.","recommendedTypes":[]},{"name":"_percentage","description":"uint8 percentage fee for the ERC721 contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMarketplaceFeePercentage(uint8)","name":"setMarketplaceFeePercentage","description":"Set the marketplace fee percentage. Requirements: - `_percentage` must be <= 100.","parameterDecorators":[{"name":"_percentage","description":"uint8 percentage fee.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMarketplaceMaxValue(uint256)","name":"setMarketplaceMaxValue","description":"Set the maximum value of the marketplace settings.","parameterDecorators":[{"name":"_maxValue","description":"uint256 maximum wei value.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMarketplaceMinValue(uint256)","name":"setMarketplaceMinValue","description":"Set the minimum value of the marketplace settings.","parameterDecorators":[{"name":"_minValue","description":"uint256 minimum wei value.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}