{
  "schema": "../schema.json",
  "tags": [],
  "name": "GovernanceSlasher",
  "description": "",
  "eventDecorators": [
    {
      "signature": "SlashingApproved(address,uint256)",
      "name": "SlashingApproved",
      "description": "Triggered when the ubi committee has been updated.",
      "parameterDecorators": [
        {
          "name": "newUbiCommittee",
          "description": "New UBI Committee address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldUbiCommittee",
          "description": "Old UBI Committee address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "GovernanceSlashPerformed(address,uint256)",
      "name": "GovernanceSlashPerformed",
      "description": "Triggered when the ubi committee has been updated.",
      "parameterDecorators": [
        {
          "name": "newUbiCommittee",
          "description": "New UBI Committee address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldUbiCommittee",
          "description": "Old UBI Committee address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RegistrySet(address)",
      "name": "RegistrySet",
      "description": "Triggered when the ubi committee has been updated.",
      "parameterDecorators": [
        {
          "name": "registryAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Triggered when the ubi committee has been updated.",
      "parameterDecorators": [
        {
          "name": "newUbiCommittee",
          "description": "New UBI Committee address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldUbiCommittee",
          "description": "Old UBI Committee address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "initialized()",
      "name": "initialized",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approveSlashing(address,uint256)",
      "name": "approveSlashing",
      "description": "Sets account penalty. Only callable by governance.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Address that is punished.",
          "recommendedTypes": []
        },
        {
          "name": "penalty",
          "description": "Amount of penalty in wei.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registry()",
      "name": "registry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setRegistry(address)",
      "name": "setRegistry",
      "description": "Updates the address pointing to a Registry contract.",
      "parameterDecorators": [
        {
          "name": "registryAddress",
          "description": "The address of a registry contract for routing to other contracts.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "Used in place of the constructor to allow the contract to be upgradable via proxy.",
      "parameterDecorators": [
        {
          "name": "registryAddress",
          "description": "The address of the registry core smart contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "slash(address,address[],address[],uint256[])",
      "name": "slash",
      "description": "Calls `LockedGold.slash` on `account` if `account` has an entry in `slashed`.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Account to slash.",
          "recommendedTypes": []
        },
        {
          "name": "electionLessers",
          "description": "Lesser pointers for slashing locked election gold.",
          "recommendedTypes": []
        },
        {
          "name": "electionGreaters",
          "description": "Greater pointers for slashing locked election gold.",
          "recommendedTypes": []
        },
        {
          "name": "electionIndices",
          "description": "Indices of groups voted by slashed account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getApprovedSlashing(address)",
      "name": "getApprovedSlashing",
      "description": "Gets account penalty.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Address that is punished.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}