{"schema":"../schema.json","tags":[],"name":"ZkSync","description":"zkSync main contract.","eventDecorators":[{"signature":"BlockCommit(uint32)","name":"BlockCommit","description":"Token transfer event.","parameterDecorators":[{"name":"blockNumber","description":"is Block number of the current event.","recommendedTypes":[],"indexed":true}]},{"signature":"BlockVerification(uint32)","name":"BlockVerification","description":"Token transfer event.","parameterDecorators":[{"name":"blockNumber","description":"is Block number of the current event.","recommendedTypes":[],"indexed":true}]},{"signature":"BlocksRevert(uint32,uint32)","name":"BlocksRevert","description":"Token transfer event.","parameterDecorators":[{"name":"totalBlocksVerified","description":"","recommendedTypes":[],"indexed":false},{"name":"totalBlocksCommitted","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DepositCommit(uint32,uint32,address,uint16,uint128)","name":"DepositCommit","description":"Token transfer event.","parameterDecorators":[{"name":"zkSyncBlockId","description":"","recommendedTypes":[],"indexed":true},{"name":"accountId","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"is Number of token transfers.","recommendedTypes":[],"indexed":false}]},{"signature":"ExodusMode()","name":"ExodusMode","description":"Token transfer event.","parameterDecorators":[]},{"signature":"FactAuth(address,uint32,bytes)","name":"FactAuth","description":"Token transfer event.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"nonce","description":"is accout nonce.","recommendedTypes":[],"indexed":false},{"name":"fact","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"FullExitCommit(uint32,uint32,address,uint16,uint128)","name":"FullExitCommit","description":"Token transfer event.","parameterDecorators":[{"name":"zkSyncBlockId","description":"","recommendedTypes":[],"indexed":true},{"name":"accountId","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"is Number of token transfers.","recommendedTypes":[],"indexed":false}]},{"signature":"NewPriorityRequest(address,uint64,uint8,bytes,uint256)","name":"NewPriorityRequest","description":"Token transfer event.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":false},{"name":"serialId","description":"","recommendedTypes":[],"indexed":false},{"name":"opType","description":"","recommendedTypes":[],"indexed":false},{"name":"pubData","description":"","recommendedTypes":[],"indexed":false},{"name":"expirationBlock","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OnchainDeposit(address,uint16,uint128,address)","name":"OnchainDeposit","description":"Token transfer event.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"is Number of token transfers.","recommendedTypes":[],"indexed":false},{"name":"owner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OnchainWithdrawal(address,uint16,uint128)","name":"OnchainWithdrawal","description":"Token transfer event.","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"is Number of token transfers.","recommendedTypes":[],"indexed":false}]},{"signature":"PendingWithdrawalsAdd(uint32,uint32)","name":"PendingWithdrawalsAdd","description":"Token transfer event.","parameterDecorators":[{"name":"queueStartIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"queueEndIndex","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PendingWithdrawalsComplete(uint32,uint32)","name":"PendingWithdrawalsComplete","description":"Token transfer event.","parameterDecorators":[{"name":"queueStartIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"queueEndIndex","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"EMPTY_STRING_KECCAK()","name":"EMPTY_STRING_KECCAK","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"authFacts(address,uint32)","name":"authFacts","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"balancesToWithdraw(bytes22)","name":"balancesToWithdraw","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"balanceToWithdraw","description":"","recommendedTypes":[],"solidityType":"uint128"},{"name":"gasReserveValue","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"blocks(uint32)","name":"blocks","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"committedAtBlock","description":"","recommendedTypes":[],"solidityType":"uint32"},{"name":"priorityOperations","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"chunks","description":"","recommendedTypes":[],"solidityType":"uint32"},{"name":"withdrawalsDataHash","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"commitment","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"stateRoot","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"cancelOutstandingDepositsForExodusMode(uint64)","name":"cancelOutstandingDepositsForExodusMode","description":"Accrues users balances from deposit priority requests in Exodus mode. WARNING: Only for Exodus modeCanceling may take several separate transactions to be completed.","parameterDecorators":[{"name":"_n","description":"number of requests to process.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"commitBlock(uint32,uint32,bytes32[],bytes,bytes,uint32[])","name":"commitBlock","description":"Commit block - collect onchain operations, create its commitment, emit BlockCommit event.","parameterDecorators":[{"name":"_blockNumber","description":"Block number.","recommendedTypes":[]},{"name":"_feeAccount","description":"Account to collect fees.","recommendedTypes":[]},{"name":"_newBlockInfo","description":"New state of the block. (first element is the account tree root hash, rest of the array is reserved for the future).","recommendedTypes":[]},{"name":"_publicData","description":"Operations pubdata.","recommendedTypes":[]},{"name":"_ethWitness","description":"Data passed to ethereum outside pubdata of the circuit.","recommendedTypes":[]},{"name":"_ethWitnessSizes","description":"Amount of eth witness bytes for the corresponding operation.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"completeWithdrawals(uint32)","name":"completeWithdrawals","description":"executes pending withdrawals.","parameterDecorators":[{"name":"_n","description":"The number of withdrawals to complete starting from oldest.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"depositERC20(address,uint104,address)","name":"depositERC20","description":"Deposit ERC20 token to Layer 2 - transfer ERC20 tokens from user into contract, validate it, register deposit.","parameterDecorators":[{"name":"_token","description":"Token address.","recommendedTypes":[]},{"name":"_amount","description":"Token amount.","recommendedTypes":[]},{"name":"_franklinAddr","description":"Receiver Layer 2 address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"depositETH(address)","name":"depositETH","description":"Deposit ETH to Layer 2 - transfer ether from user into contract, validate it, register deposit.","parameterDecorators":[{"name":"_franklinAddr","description":"The receiver Layer 2 address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"exit(uint32,uint16,uint128,uint256[])","name":"exit","description":"Withdraws token from Franklin to root chain in case of exodus mode. User must provide proof that he owns funds.","parameterDecorators":[{"name":"_accountId","description":"Id of the account in the tree.","recommendedTypes":[]},{"name":"_tokenId","description":"Verified token id.","recommendedTypes":[]},{"name":"_amount","description":"Amount for owner (must be total amount, not part of it).","recommendedTypes":[]},{"name":"_proof","description":"Proof.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"exited(uint32,uint16)","name":"exited","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"exodusMode()","name":"exodusMode","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"firstPendingWithdrawalIndex()","name":"firstPendingWithdrawalIndex","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"firstPriorityRequestId()","name":"firstPriorityRequestId","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"fullExit(uint32,address)","name":"fullExit","description":"Register full exit request - pack pubdata, add priority request.","parameterDecorators":[{"name":"_accountId","description":"Numerical id of the account.","recommendedTypes":[]},{"name":"_token","description":"Token address, 0 address for ether.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getBalanceToWithdraw(address,uint16)","name":"getBalanceToWithdraw","description":"Gets value from balancesToWithdraw.","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[]},{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"getNoticePeriod()","name":"getNoticePeriod","description":"Notice period before activation preparation status of upgrade mode.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"initialize(bytes)","name":"initialize","description":"Franklin contract initialization. Can be external because Proxy contract intercepts illegal calls of this function.","parameterDecorators":[{"name":"initializationParameters","description":"Encoded representation of initialization parameters: _governanceAddress The address of Governance contract _verifierAddress The address of Verifier contract _ // FIXME: remove _genesisAccAddress _genesisRoot Genesis blocks (first block) root.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isReadyForUpgrade()","name":"isReadyForUpgrade","description":"Checks that contract is ready for upgrade.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"numberOfPendingWithdrawals()","name":"numberOfPendingWithdrawals","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingWithdrawals(uint32)","name":"pendingWithdrawals","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"to","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"tokenId","description":"","recommendedTypes":[],"solidityType":"uint16"}],"emittableEvents":[],"readOnly":true},{"signature":"priorityRequests(uint64)","name":"priorityRequests","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"opType","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"pubData","description":"","recommendedTypes":[],"solidityType":"bytes"},{"name":"expirationBlock","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"revertBlocks(uint32)","name":"revertBlocks","description":"Reverts unverified blocks.","parameterDecorators":[{"name":"_maxBlocksToRevert","description":"the maximum number blocks that will be reverted (use if can't revert all blocks because of gas limit).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAuthPubkeyHash(bytes,uint32)","name":"setAuthPubkeyHash","description":"","parameterDecorators":[{"name":"_pubkey_hash","description":"","recommendedTypes":[]},{"name":"_nonce","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalBlocksCommitted()","name":"totalBlocksCommitted","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"totalBlocksVerified()","name":"totalBlocksVerified","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"totalCommittedPriorityRequests()","name":"totalCommittedPriorityRequests","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"totalOpenPriorityRequests()","name":"totalOpenPriorityRequests","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"triggerExodusIfNeeded()","name":"triggerExodusIfNeeded","description":"Checks if Exodus mode must be entered. If true - enters exodus mode and emits ExodusMode event. Exodus mode must be entered in case of current ethereum block number is higher than the oldestof existed priority requests expiration block number.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"upgrade(bytes)","name":"upgrade","description":"zkSync contract upgrade. Can be external because Proxy contract intercepts illegal calls of this function.","parameterDecorators":[{"name":"upgradeParameters","description":"Encoded representation of upgrade parameters.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeCanceled()","name":"upgradeCanceled","description":"Notification that upgrade canceled.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeFinishes()","name":"upgradeFinishes","description":"Notification that upgrade finishes.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeNoticePeriodStarted()","name":"upgradeNoticePeriodStarted","description":"Notification that upgrade notice period started.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradePreparationActivationTime()","name":"upgradePreparationActivationTime","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"upgradePreparationActive()","name":"upgradePreparationActive","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"upgradePreparationStarted()","name":"upgradePreparationStarted","description":"Notification that upgrade preparation status is activated.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"verifyBlock(uint32,uint256[],bytes)","name":"verifyBlock","description":"Block verification.Verify proof -> process onchain withdrawals (accrue balances from withdrawals) -> remove priority requests.","parameterDecorators":[{"name":"_blockNumber","description":"Block number.","recommendedTypes":[]},{"name":"_proof","description":"Block proof.","recommendedTypes":[]},{"name":"_withdrawalsData","description":"Block withdrawals data.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawERC20(address,uint128)","name":"withdrawERC20","description":"Withdraw ERC20 token to Layer 1 - register withdrawal and transfer ERC20 to sender.","parameterDecorators":[{"name":"_token","description":"Token address.","recommendedTypes":[]},{"name":"_amount","description":"amount to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawERC20Guarded(address,address,uint128,uint128)","name":"withdrawERC20Guarded","description":"Sends tokens. NOTE: will revert if transfer call fails or rollup balance difference (before and after transfer) is bigger than _maxAmount.","parameterDecorators":[{"name":"_token","description":"Token address.","recommendedTypes":[]},{"name":"_to","description":"Address of recipient.","recommendedTypes":[]},{"name":"_amount","description":"Amount of tokens to transfer.","recommendedTypes":[]},{"name":"_maxAmount","description":"Maximum possible amount of tokens to transfer to this account.","recommendedTypes":[]}],"returnDecorators":[{"name":"withdrawnAmount","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":false},{"signature":"withdrawETH(uint128)","name":"withdrawETH","description":"Withdraw ETH to Layer 1 - register withdrawal and transfer ether to sender.","parameterDecorators":[{"name":"_amount","description":"Ether amount to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}