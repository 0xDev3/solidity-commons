{"schema":"../schema.json","tags":["tokens"],"name":"MigratableLinkTransmuterV2","description":"","eventDecorators":[{"signature":"ActiveVaultUpdated(address)","name":"ActiveVaultUpdated","description":"","parameterDecorators":[{"name":"adapter","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Distribution(address,uint256)","name":"Distribution","description":"","parameterDecorators":[{"name":"origin","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ForcedTransmutation(address,address,uint256)","name":"ForcedTransmutation","description":"","parameterDecorators":[{"name":"transmutedBy","description":"","recommendedTypes":[],"indexed":false},{"name":"transmutedTo","description":"","recommendedTypes":[],"indexed":false},{"name":"amountTransmuted","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"FundsHarvested(uint256,uint256)","name":"FundsHarvested","description":"","parameterDecorators":[{"name":"withdrawnAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"decreasedValue","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"FundsRecalled(uint256,uint256,uint256)","name":"FundsRecalled","description":"","parameterDecorators":[{"name":"vaultId","description":"","recommendedTypes":[],"indexed":true},{"name":"withdrawnAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"decreasedValue","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"GovernanceUpdated(address)","name":"GovernanceUpdated","description":"","parameterDecorators":[{"name":"governance","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MigrationComplete(address,uint256)","name":"MigrationComplete","description":"","parameterDecorators":[{"name":"migrateTo","description":"","recommendedTypes":[],"indexed":false},{"name":"fundsMigrated","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PauseUpdated(bool)","name":"PauseUpdated","description":"","parameterDecorators":[{"name":"status","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PendingGovernanceUpdated(address)","name":"PendingGovernanceUpdated","description":"","parameterDecorators":[{"name":"pendingGovernance","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PlantableMarginUpdated(uint256)","name":"PlantableMarginUpdated","description":"","parameterDecorators":[{"name":"plantableMargin","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PlantableThresholdUpdated(uint256)","name":"PlantableThresholdUpdated","description":"","parameterDecorators":[{"name":"plantableThreshold","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RewardsUpdated(address)","name":"RewardsUpdated","description":"","parameterDecorators":[{"name":"treasury","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SentinelUpdated(address)","name":"SentinelUpdated","description":"","parameterDecorators":[{"name":"sentinel","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokenClaimed(address,address,uint256)","name":"TokenClaimed","description":"","parameterDecorators":[{"name":"claimant","description":"","recommendedTypes":[],"indexed":false},{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"amountClaimed","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Transmutation(address,uint256)","name":"Transmutation","description":"","parameterDecorators":[{"name":"transmutedTo","description":"","recommendedTypes":[],"indexed":false},{"name":"amountTransmuted","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TransmuterPeriodUpdated(uint256)","name":"TransmuterPeriodUpdated","description":"","parameterDecorators":[{"name":"newTransmutationPeriod","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WaTokenStaked(address,uint256)","name":"WaTokenStaked","description":"","parameterDecorators":[{"name":"staker","description":"","recommendedTypes":[],"indexed":false},{"name":"amountStaked","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WaTokenUnstaked(address,uint256)","name":"WaTokenUnstaked","description":"","parameterDecorators":[{"name":"staker","description":"","recommendedTypes":[],"indexed":false},{"name":"amountUnstaked","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WhitelistSet(address,bool)","name":"WhitelistSet","description":"","parameterDecorators":[{"name":"whitelisted","description":"","recommendedTypes":[],"indexed":false},{"name":"state","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"TRANSMUTATION_PERIOD()","name":"TRANSMUTATION_PERIOD","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"ZERO_ADDRESS()","name":"ZERO_ADDRESS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"acceptGovernance()","name":"acceptGovernance","description":"Accepts the role as governance. This function reverts if the caller is not the new pending governance.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"buffer()","name":"buffer","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"bufferInfo()","name":"bufferInfo","description":"Gets info on the buffer This function is used to query the contract to get the latest state of the buffer.","parameterDecorators":[],"returnDecorators":[{"name":"_toDistribute","description":"the amount ready to be distributed.","recommendedTypes":[],"solidityType":"uint256"},{"name":"_deltaBlocks","description":"the amount of time since the last phased distribution.","recommendedTypes":[],"solidityType":"uint256"},{"name":"_buffer","description":"the amount in the buffer.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"claim()","name":"claim","description":"claims the base token after it has been transmuted This function reverts if there is no realisedToken balance.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"depositedWaTokens(address)","name":"depositedWaTokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"distribute(address,uint256)","name":"distribute","description":"Distributes the base token proportionally to all waToken stakers. This function is meant to be called by the Alchemist contract for when it is sending yield to the transmuter. Anyone can call this and add funds, idk why they would do that though...","parameterDecorators":[{"name":"origin","description":"the account that is sending the tokens to be distributed.","recommendedTypes":[]},{"name":"amount","description":"the amount of base tokens to be distributed to the transmuter.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"dividendsOwing(address)","name":"dividendsOwing","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"displays the user's share of the pooled waTokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"exit()","name":"exit","description":"Transmutes and unstakes all waTokens This function combines the transmute and unstake functions for ease of use.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"forceTransmute(address)","name":"forceTransmute","description":"Executes transmute() on another account that has had more base tokens allocated to it than waTokens staked. The caller of this function will have the surlus base tokens credited to their tokensInBucket balance, rewarding them for performing this action This function reverts if the address to transmute is not over-filled.","parameterDecorators":[{"name":"toTransmute","description":"address of the account you will force transmute.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getMultipleUserInfo(uint256,uint256)","name":"getMultipleUserInfo","description":"Gets the status of multiple users in one call This function is used to query the contract to check for accounts that have overfilled positions in order to check who can be force transmuted.","parameterDecorators":[{"name":"from","description":"the first index of the userList.","recommendedTypes":[]},{"name":"to","description":"the last index of the userList returns the userList with their staking status in paginated form.","recommendedTypes":[]}],"returnDecorators":[{"name":"theUserList","description":"","recommendedTypes":[],"solidityType":"address[]"},{"name":"theUserData","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getVaultAdapter(uint256)","name":"getVaultAdapter","description":"Get the adapter of a vault.","parameterDecorators":[{"name":"_vaultId","description":"the identifier of the vault.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the vault adapter.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getVaultTotalDeposited(uint256)","name":"getVaultTotalDeposited","description":"Get the total amount of the asset that has been deposited into a vault.","parameterDecorators":[{"name":"_vaultId","description":"the identifier of the vault.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the total amount of deposited tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"governance()","name":"governance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"harvest(uint256)","name":"harvest","description":"Harvests yield from a vault.","parameterDecorators":[{"name":"_vaultId","description":"the identifier of the vault to harvest from.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"lastDepositBlock()","name":"lastDepositBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lastDividendPoints(address)","name":"lastDividendPoints","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"migrateFunds(address)","name":"migrateFunds","description":"Migrates transmuter funds to a new transmuter.","parameterDecorators":[{"name":"migrateTo","description":"address of the new transmuter.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"nextUser()","name":"nextUser","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingGovernance()","name":"pendingGovernance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"plantableMargin()","name":"plantableMargin","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"plantableThreshold()","name":"plantableThreshold","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pointMultiplier()","name":"pointMultiplier","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"realisedTokens(address)","name":"realisedTokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"recallAllFundsFromVault(uint256)","name":"recallAllFundsFromVault","description":"Recalls all planted funds from a target vault.","parameterDecorators":[{"name":"_vaultId","description":"the id of the vault from which to recall funds.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"recallFundsFromVault(uint256,uint256)","name":"recallFundsFromVault","description":"Recalls planted funds from a target vault.","parameterDecorators":[{"name":"_vaultId","description":"the id of the vault from which to recall funds.","recommendedTypes":[]},{"name":"_amount","description":"the amount of funds to recall.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewards()","name":"rewards","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"sentinel()","name":"sentinel","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setActiveVault(address)","name":"setActiveVault","description":"Updates the active vault. This function reverts if the vault adapter is the zero address, if the token that the vault adapter accepts is not the token that this contract defines as the parent asset, or if the contract has not yet been initialized.","parameterDecorators":[{"name":"_adapter","description":"the adapter for the new active vault.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPause(bool)","name":"setPause","description":"Sets if the contract should enter emergency exit mode. There are 2 main reasons to pause: 1. Need to shut down deposits in case of an emergency in one of the vaults 2. Need to migrate to a new transmuter While the transmuter is paused, stake() and distribute() are disabled.","parameterDecorators":[{"name":"_pause","description":"if the contract should enter emergency exit mode.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPendingGovernance(address)","name":"setPendingGovernance","description":"Sets the pending governance. This function reverts if the new pending governance is the zero address or the caller is not the current governance. This is to prevent the contract governance being set to the zero address which would deadlock privileged contract functionality.","parameterDecorators":[{"name":"_pendingGovernance","description":"the new pending governance.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPlantableMargin(uint256)","name":"setPlantableMargin","description":"Sets the plantableThreshold margin for triggering the planting or recalling of funds on harvest This function reverts if the caller is not the current governance.","parameterDecorators":[{"name":"_plantableMargin","description":"the new plantable margin.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPlantableThreshold(uint256)","name":"setPlantableThreshold","description":"Sets the threshold of total held funds above which excess funds will be planted in yield farms. This function reverts if the caller is not the current governance.","parameterDecorators":[{"name":"_plantableThreshold","description":"the new plantable threshold.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRewards(address)","name":"setRewards","description":"Sets the rewards contract. This function reverts if the new rewards contract is the zero address or the caller is not the current governance.","parameterDecorators":[{"name":"_rewards","description":"the new rewards contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setSentinel(address)","name":"setSentinel","description":"Sets the address of the sentinel.","parameterDecorators":[{"name":"_sentinel","description":"address of the new sentinel.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTransmutationPeriod(uint256)","name":"setTransmutationPeriod","description":"set the TRANSMUTATION_PERIOD variable sets the length (in blocks) of one full distribution phase.","parameterDecorators":[{"name":"newTransmutationPeriod","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setWhitelist(address,bool)","name":"setWhitelist","description":"This function reverts if the caller is not governance.","parameterDecorators":[{"name":"_toWhitelist","description":"the account to mint tokens to.","recommendedTypes":[]},{"name":"_state","description":"the whitelist state.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake(uint256)","name":"stake","description":"Deposits waTokens into the transmuter.","parameterDecorators":[{"name":"amount","description":"the amount of waTokens to stake.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokensInBucket(address)","name":"tokensInBucket","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalDividendPoints()","name":"totalDividendPoints","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalSupplyWaTokens()","name":"totalSupplyWaTokens","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transmute()","name":"transmute","description":"Converts the staked waTokens to the base tokens in amount of the sum of pendingdivs and tokensInBucket once the waToken has been converted, it is burned, and the base token becomes realisedTokens which can be recieved using claim() reverts if there are no pendingdivs or tokensInBucket.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transmuteAndClaim()","name":"transmuteAndClaim","description":"Transmutes and claims all converted base tokens. This function combines the transmute and claim functions while leaving your remaining WaTokens staked.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transmuteClaimAndWithdraw()","name":"transmuteClaimAndWithdraw","description":"Transmutes, claims base tokens, and withdraws waTokens. This function helps users to exit the transmuter contract completely after converting their WaTokens to the base pair.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unclaimedDividends()","name":"unclaimedDividends","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"unstake(uint256)","name":"unstake","description":"Withdraws staked waTokens from the transmuter This function reverts if you try to draw more tokens than you deposited.","parameterDecorators":[{"name":"amount","description":"the amount of waTokens to unstake.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userInfo(address)","name":"userInfo","description":"Gets the status of a user's staking position. The total amount allocated to a user is the sum of pendingdivs and inbucket.","parameterDecorators":[{"name":"user","description":"the address of the user you wish to query. returns user status.","recommendedTypes":[]}],"returnDecorators":[{"name":"depositedAl","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"pendingdivs","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"inbucket","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"realised","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"userIsKnown(address)","name":"userIsKnown","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"userList(uint256)","name":"userList","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"vaultCount()","name":"vaultCount","description":"Gets the number of vaults in the vault list.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the vault count.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"waToken()","name":"waToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"whiteList(address)","name":"whiteList","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true}]}