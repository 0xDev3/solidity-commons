{"schema":"../schema.json","tags":[],"name":"MCDMonitorProxyV2","description":"Implements logic for calling MCDSaverProxy always from same contract.","eventDecorators":[{"signature":"MonitorChangeCanceled()","name":"MonitorChangeCanceled","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[]},{"signature":"MonitorChangeFinished(address)","name":"MonitorChangeFinished","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"monitor","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MonitorChangeInitiated(address,address)","name":"MonitorChangeInitiated","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"oldMonitor","description":"","recommendedTypes":[],"indexed":false},{"name":"newMonitor","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MonitorChangeReverted(address)","name":"MonitorChangeReverted","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"monitor","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"CHANGE_PERIOD()","name":"CHANGE_PERIOD","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"MIN_CHANGE_PERIOD()","name":"MIN_CHANGE_PERIOD","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"admin()","name":"admin","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"callExecute(address,address,bytes)","name":"callExecute","description":"Only monitor contract is able to call execute on users proxy.","parameterDecorators":[{"name":"_owner","description":"Address of cdp owner (users DSProxy address).","recommendedTypes":[]},{"name":"_saverProxy","description":"Address of MCDSaverProxy.","recommendedTypes":[]},{"name":"_data","description":"Data to send to MCDSaverProxy.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"cancelMonitorChange()","name":"cancelMonitorChange","description":"At any point allowed users are able to cancel monitor change.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeMonitor(address)","name":"changeMonitor","description":"Allowed users are able to start procedure for changing monitor. after CHANGE_PERIOD needs to call confirmNewMonitor to actually make a change.","parameterDecorators":[{"name":"_newMonitor","description":"address of new monitor.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeRequestedTimestamp()","name":"changeRequestedTimestamp","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"confirmNewMonitor()","name":"confirmNewMonitor","description":"Anyone is able to confirm new monitor after CHANGE_PERIOD if process is started.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"kill()","name":"kill","description":"Destroy the contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lastMonitor()","name":"lastMonitor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"monitor()","name":"monitor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"newMonitor()","name":"newMonitor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"revertMonitor()","name":"revertMonitor","description":"Its possible to revert monitor to last used monitor.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAdminByAdmin(address)","name":"setAdminByAdmin","description":"Admin is able to set new admin.","parameterDecorators":[{"name":"_admin","description":"Address of multisig that becomes new admin.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAdminByOwner(address)","name":"setAdminByOwner","description":"Admin is set by owner first time, after that admin is super role and has permission to change owner.","parameterDecorators":[{"name":"_admin","description":"Address of multisig that becomes admin.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setChangePeriod(uint256)","name":"setChangePeriod","description":"","parameterDecorators":[{"name":"_periodInHours","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMonitor(address)","name":"setMonitor","description":"Allowed users are able to set Monitor contract without any waiting period first time.","parameterDecorators":[{"name":"_monitor","description":"Address of Monitor contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setOwnerByAdmin(address)","name":"setOwnerByAdmin","description":"Admin is able to change owner.","parameterDecorators":[{"name":"_owner","description":"Address of new owner.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawStuckFunds(address,uint256)","name":"withdrawStuckFunds","description":"withdraw stuck funds.","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}