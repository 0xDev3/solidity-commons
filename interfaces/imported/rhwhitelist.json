{
  "schema": "../schema.json",
  "tags": [],
  "name": "RHWhitelist",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "WLAddressAdded(address)",
      "name": "WLAddressAdded",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "addedAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WLAddressRemoved(address)",
      "name": "WLAddressRemoved",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "removedAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WLMassiveAddressesAdded()",
      "name": "WLMassiveAddressesAdded",
      "description": "event for token purchase logging.",
      "parameterDecorators": []
    }
  ],
  "functionDecorators": [
    {
      "signature": "addToWhitelist(address)",
      "name": "addToWhitelist",
      "description": "Add the subscriber to the whitelist.",
      "parameterDecorators": [
        {
          "name": "_subscriber",
          "description": "The subscriber to add to the whitelist.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addToWhitelistMassive(address[])",
      "name": "addToWhitelistMassive",
      "description": "Add the subscriber list to the whitelist (max 100).",
      "parameterDecorators": [
        {
          "name": "_subscriber",
          "description": "The subscriber list to add to the whitelist.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getWLLength()",
      "name": "getWLLength",
      "description": "length of the whitelisted accounts.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "number of whitelisted addresses.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isWhitelisted(address)",
      "name": "isWhitelisted",
      "description": "check if an address is whitelisted.",
      "parameterDecorators": [
        {
          "name": "_subscriber",
          "description": "address to be checked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if subscriber is whitelisted, false otherwise.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeFromWhitelist(address)",
      "name": "removeFromWhitelist",
      "description": "Remove the subscriber from the whitelist.",
      "parameterDecorators": [
        {
          "name": "_subscriber",
          "description": "The subscriber remove from the whitelist.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}