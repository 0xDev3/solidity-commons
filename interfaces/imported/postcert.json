{
  "schema": "../schema.json",
  "tags": [],
  "name": "PostCert",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CertState(bytes32,uint256)",
      "name": "CertState",
      "description": "Handle events. Emitted when ETH are Received by this wallet.",
      "parameterDecorators": [
        {
          "name": "certHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "state",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "IssuerAdded(address)",
      "name": "IssuerAdded",
      "description": "Handle events. Emitted when ETH are Received by this wallet.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "IssuerRemoved(address)",
      "name": "IssuerRemoved",
      "description": "Handle events. Emitted when ETH are Received by this wallet.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Handle events. Emitted when ETH are Received by this wallet.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Posted(bytes32)",
      "name": "Posted",
      "description": "Handle events. Emitted when ETH are Received by this wallet.",
      "parameterDecorators": [
        {
          "name": "hash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "Post(bytes32,uint256)",
      "name": "Post",
      "description": "",
      "parameterDecorators": [
        {
          "name": "hash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "state",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addIssuer(address)",
      "name": "addIssuer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isIssuer(address)",
      "name": "isIssuer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeIssuer(address)",
      "name": "removeIssuer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceIssuer()",
      "name": "renounceIssuer",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setState(bytes32,uint256)",
      "name": "setState",
      "description": "",
      "parameterDecorators": [
        {
          "name": "hash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "state",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}