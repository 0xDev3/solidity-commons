{
  "schema": "../schema.json",
  "tags": [],
  "name": "OrganizationRegister",
  "description": "A universal organization registry. Organizations can use this scheme to open a registry. Other organizations can then add and promote themselves on this registry.",
  "eventDecorators": [
    {
      "signature": "OrgAdded(address,address)",
      "name": "OrgAdded",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "_registry",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_org",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Promotion(address,address,uint256)",
      "name": "Promotion",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "_registry",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_org",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addOrPromoteAddress(address,address,uint256)",
      "name": "addOrPromoteAddress",
      "description": "Adding or promoting an address on the registry. An address(record) to add or promote can be organization address or any contract address. Adding a record is done by paying at least the minimum required by the registry params. Promoting a record is done by paying(adding)amount of token to the registry beneficiary.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "The _avatar of the organization which own the registry.",
          "recommendedTypes": []
        },
        {
          "name": "_record",
          "description": "The address to add or promote.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount to pay for adding or promoting.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getParametersHash(address,uint256,address)",
      "name": "getParametersHash",
      "description": "Hash the parameters ,and return the hash value.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "- the token to pay for register or promotion an address.",
          "recommendedTypes": []
        },
        {
          "name": "_fee",
          "description": "- fee needed for register an address.",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "- the beneficiary payment address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "organizationsRegistry(address,address)",
      "name": "organizationsRegistry",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "parameters(bytes32)",
      "name": "parameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setParameters(address,uint256,address)",
      "name": "setParameters",
      "description": "Hash the parameters, save if needed and return the hash value.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "- the token to pay for register or promotion an address.",
          "recommendedTypes": []
        },
        {
          "name": "_fee",
          "description": "- fee needed for register an address.",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "- the beneficiary payment address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}