{"schema":"../schema.json","tags":["strategies"],"name":"StrategyFacade","description":"Facade contract for Gelato Resolver contract.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"This emits when ownership of a contract changes.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ResolverContractUpdated(address)","name":"ResolverContractUpdated","description":"This emits when ownership of a contract changes.","parameterDecorators":[{"name":"resolver","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StrategyAdded(address)","name":"StrategyAdded","description":"This emits when ownership of a contract changes.","parameterDecorators":[{"name":"strategy","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StrategyRemoved(address)","name":"StrategyRemoved","description":"This emits when ownership of a contract changes.","parameterDecorators":[{"name":"strategy","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addStrategy(address)","name":"addStrategy","description":"","parameterDecorators":[{"name":"_strategy","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"checkHarvest(uint256)","name":"checkHarvest","description":"Checks if any of the strategies should be harvested. :_callCost: must be priced in terms of wei (1e-18 ETH).","parameterDecorators":[{"name":"_callCost","description":"- The Gelato bot's estimated gas cost to call harvest function (in wei).","recommendedTypes":[]}],"returnDecorators":[{"name":"canExec","description":"- True if Gelato bot should harvest, false if it shouldn't.","recommendedTypes":[],"solidityType":"bool"},{"name":"strategy","description":"- Address of the strategy contract that needs to be harvested.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"harvest(address)","name":"harvest","description":"Call harvest function on a Strategy smart contract with the given address.","parameterDecorators":[{"name":"_strategy","description":"- Address of a Strategy smart contract which needs to be harvested No return, reverts on error.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeStrategy(address)","name":"removeStrategy","description":"","parameterDecorators":[{"name":"_strategy","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"resolver()","name":"resolver","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setResolver(address)","name":"setResolver","description":"","parameterDecorators":[{"name":"_resolver","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}