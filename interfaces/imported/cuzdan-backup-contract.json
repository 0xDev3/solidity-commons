{
  "schema": "../schema.json",
  "tags": [],
  "name": "CuzdanBackup",
  "description": "Cuzdan Backup Contract.",
  "eventDecorators": [
    {
      "signature": "BackupCompleted(string)",
      "name": "BackupCompleted",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "backerId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "close()",
      "name": "close",
      "description": "Burns contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "backupWallet(string,string)",
      "name": "backupWallet",
      "description": "Saves user encrypted backup.",
      "parameterDecorators": [
        {
          "name": "userBackup",
          "description": "Encrypted user backup.",
          "recommendedTypes": []
        },
        {
          "name": "uId",
          "description": "User ID.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "retrieveAllBackups()",
      "name": "retrieveAllBackups",
      "description": "Retrieves all users' backups.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "usersBackups",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "retrieveBackup(string)",
      "name": "retrieveBackup",
      "description": "Retrieves user's backups.",
      "parameterDecorators": [
        {
          "name": "uId",
          "description": "User ID.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "userBackups",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers contract's ownership.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "New contract owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}