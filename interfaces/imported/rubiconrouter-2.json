{
  "schema": "../schema.json",
  "tags": [],
  "name": "RubiconRouter",
  "description": "this contract is a high-level router that utilizes Rubicon smart contracts to provide added convenience when interacting with the Rubicon protocol.",
  "eventDecorators": [
    {
      "signature": "LogNote(string,uint256)",
      "name": "LogNote",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "RubiconMarketAddress()",
      "name": "RubiconMarketAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approveAssetOnMarket(address)",
      "name": "approveAssetOnMarket",
      "description": "",
      "parameterDecorators": [
        {
          "name": "toApprove",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBestOfferAndInfo(address,address)",
      "name": "getBestOfferAndInfo",
      "description": "this function returns the best offer for a pair's id and info.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "quote",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getExpectedSwapFill(uint256,uint256,address[],uint256)",
      "name": "getExpectedSwapFill",
      "description": "this function takes the same parameters of swap and returns the expected amount.",
      "parameterDecorators": [
        {
          "name": "pay_amt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "buy_amt_min",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "route",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "expectedMarketFeeBPS",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "fill_amt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_rM",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialized()",
      "name": "initialized",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "swap(uint256,uint256,address[],uint256)",
      "name": "swap",
      "description": "This function lets a user swap from route[0] -> route[last] at some minimum expected ratepay_amt - amount to be swapped away from msg.sender of *first address in path*buy_amt_min - target minimum received of *last address in path*.",
      "parameterDecorators": [
        {
          "name": "pay_amt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "buy_amt_min",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "route",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "expectedMarketFeeBPS",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}