{"schema":"../schema.json","tags":["tokens","vesting","locking"],"name":"TokenTimelock","description":"A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\".","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when the contract is unpaused. Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call: - if using `revokeRole`, it is the insta master - if using `renounceRole`, it is the role bearer (i.e. `account`).","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Revoked(address)","name":"Revoked","description":"Emitted when the contract is unpaused. Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call: - if using `revokeRole`, it is the insta master - if using `renounceRole`, it is the role bearer (i.e. `account`).","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"beneficiary()","name":"beneficiary","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the beneficiary of the tokens.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,uint256,bool)","name":"initialize","description":"","parameterDecorators":[{"name":"beneficiary_","description":"","recommendedTypes":[]},{"name":"releaseTime_","description":"","recommendedTypes":[]},{"name":"revocable_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"release(address)","name":"release","description":"Transfers tokens held by timelock to beneficiary.","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"releaseTime()","name":"releaseTime","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the time when the tokens are released.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"revoke(address)","name":"revoke","description":"Allows the owner to revoke the timelock. Tokens already vested.","parameterDecorators":[{"name":"_token","description":"ERC20 token which is being locked.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"revoked(address)","name":"revoked","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}