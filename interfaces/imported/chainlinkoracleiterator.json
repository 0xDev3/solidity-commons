{
  "schema": "../schema.json",
  "tags": [
    "oracles",
    "chainlink"
  ],
  "name": "ChainlinkOracleIterator",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "NEGATIVE_INFINITY()",
      "name": "NEGATIVE_INFINITY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUnderlyingValue(address,uint256,uint256[])",
      "name": "getUnderlyingValue",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_oracle",
          "description": "iteratable oracle through.",
          "recommendedTypes": []
        },
        {
          "name": "_timestamp",
          "description": "a given timestamp.",
          "recommendedTypes": []
        },
        {
          "name": "_roundHints",
          "description": "specified rounds for a given timestamp.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the value closest to a given timestamp.",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOracleIterator()",
      "name": "isOracleIterator",
      "description": "Proof of oracle iterator contract. Verifies that contract is a oracle iterator contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if contract is a oracle iterator contract.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "symbol()",
      "name": "symbol",
      "description": "Symbol of the oracle iterator. Should be resolved through OracleIteratorRegistry contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "oracle iterator symbol.",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}