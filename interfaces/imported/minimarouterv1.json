{"schema":"../schema.json","tags":[],"name":"MinimaRouterV1","description":"","eventDecorators":[{"signature":"FeeChanged(uint256,address,bool,uint256,uint256)","name":"FeeChanged","description":"Emitted after bundle swap.","parameterDecorators":[{"name":"account","description":"- The account that triggered the offset.","recommendedTypes":[],"indexed":true},{"name":"bundleAddress","description":"- the bundle address.","recommendedTypes":[],"indexed":true},{"name":"initialAmount","description":"- the amount to offset in terms of source bundle.","recommendedTypes":[],"indexed":true},{"name":"offsettedAmount","description":"- the amount offsetted after fees in terms of the token.","recommendedTypes":[],"indexed":false},{"name":"tokenAddress","description":"- the address of the token that is to be offsetted.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted after bundle swap.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Swap(address,address,address,address,uint256,uint256)","name":"Swap","description":"Emitted after bundle swap.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"to","description":"","recommendedTypes":[],"indexed":false},{"name":"input","description":"","recommendedTypes":[],"indexed":true},{"name":"output","description":"","recommendedTypes":[],"indexed":true},{"name":"inputAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"outputAmount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"FEE_DENOMINATOR()","name":"FEE_DENOMINATOR","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"defaultAdminFee()","name":"defaultAdminFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getOutputAmount(address[],address[],bytes[],uint256)","name":"getOutputAmount","description":"","parameterDecorators":[{"name":"path","description":"","recommendedTypes":[]},{"name":"pairs","description":"","recommendedTypes":[]},{"name":"extras","description":"","recommendedTypes":[]},{"name":"inputAmount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"outputAmount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"recoverAdminFee(address,address)","name":"recoverAdminFee","description":"","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]},{"name":"reciever","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAdmin(address,bool)","name":"setAdmin","description":"","parameterDecorators":[{"name":"addr","description":"","recommendedTypes":[]},{"name":"isAdmin","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAdminFee(uint256,uint256)","name":"setAdminFee","description":"","parameterDecorators":[{"name":"partnerId","description":"","recommendedTypes":[]},{"name":"feeNumerator","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPartnerAdmin(uint256,address)","name":"setPartnerAdmin","description":"","parameterDecorators":[{"name":"partnerId","description":"","recommendedTypes":[]},{"name":"admin","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPartnerFee(uint256,uint256)","name":"setPartnerFee","description":"","parameterDecorators":[{"name":"partnerId","description":"","recommendedTypes":[]},{"name":"feeNumerator","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"swapExactInputForOutput(tuple(address[],address[],bytes[],uint256,uint256,uint256,address,uint256,uint256,bytes))","name":"swapExactInputForOutput","description":"","parameterDecorators":[{"name":"details","description":"","recommendedTypes":[],"parameters":[{"name":"path","description":"","type":"address[]"},{"name":"pairs","description":"","type":"address[]"},{"name":"extras","description":"","type":"bytes[]"},{"name":"inputAmount","description":"","type":"uint256"},{"name":"minOutputAmount","description":"","type":"uint256"},{"name":"expectedOutputAmount","description":"","type":"uint256"},{"name":"to","description":"","type":"address"},{"name":"deadline","description":"","type":"uint256"},{"name":"partner","description":"","type":"uint256"},{"name":"sig","description":"","type":"bytes"}]}],"returnDecorators":[{"name":"outputAmount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}