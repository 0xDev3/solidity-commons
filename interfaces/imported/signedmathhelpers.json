{
  "schema": "../schema.json",
  "tags": [],
  "name": "SignedMathHelpers",
  "description": "SignedMathHelpers contract is recommended to use only in Shortcuts passed to EnsoWallet Based on OpenZepplin Contracts 4.7.3: - utils/math/SignedMath.sol (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol) - utils/math/SignedSafeMath.sol (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedSafeMath.sol).",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "VERSION()",
      "name": "VERSION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "abs(int256)",
      "name": "abs",
      "description": "Returns the absolute unsigned value of a signed value.",
      "parameterDecorators": [
        {
          "name": "n",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "add(int256,int256)",
      "name": "add",
      "description": "Returns the addition of two signed integers, reverting on overflow. Counterpart to Solidity's `+` operator. Requirements: - Addition cannot overflow.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "average(int256,int256)",
      "name": "average",
      "description": "Returns the average of two signed numbers without overflow. The result is rounded towards zero.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "div(int256,int256)",
      "name": "div",
      "description": "Returns the integer division of two signed integers. Reverts on division by zero. The result is rounded towards zero. Counterpart to Solidity's `/` operator. Requirements: - The divisor cannot be zero.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "max(int256,int256)",
      "name": "max",
      "description": "Returns the largest of two signed numbers.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "min(int256,int256)",
      "name": "min",
      "description": "Returns the smallest of two signed numbers.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mul(int256,int256)",
      "name": "mul",
      "description": "Returns the multiplication of two signed integers, reverting on overflow. Counterpart to Solidity's `*` operator. Requirements: - Multiplication cannot overflow.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sub(int256,int256)",
      "name": "sub",
      "description": "Returns the subtraction of two signed integers, reverting on underflow. Counterpart to Solidity's `-` operator. Requirements: - Subtraction cannot overflow.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}