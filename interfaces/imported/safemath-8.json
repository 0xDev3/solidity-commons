{
  "schema": "../schema.json",
  "tags": [],
  "name": "SafeMath",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "add(uint256,uint256)",
      "name": "add",
      "description": "Returns the addition of two unsigned integers, reverting on overflow. Counterpart to Solidity's `+` operator. Requirements: - Addition cannot overflow.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "div(uint256,uint256)",
      "name": "div",
      "description": "Returns the integer division of two unsigned integers. Reverts with custom message on division by zero. The result is rounded towards zero. Counterpart to Solidity's `/` operator. Note: this function uses a `revert` opcode (which leaves remaining gas untouched) while Solidity uses an invalid opcode to revert (consuming all remaining gas). Requirements: - The divisor cannot be zero.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "min(uint256,uint256)",
      "name": "min",
      "description": "",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mod(uint256,uint256)",
      "name": "mod",
      "description": "Returns the remainder of dividing two unsigned integers. (unsigned integer modulo), Reverts with custom message when dividing by zero. Counterpart to Solidity's `%` operator. This function uses a `revert` opcode (which leaves remaining gas untouched) while Solidity uses an invalid opcode to revert (consuming all remaining gas). Requirements: - The divisor cannot be zero.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mul(uint256,uint256)",
      "name": "mul",
      "description": "Returns the multiplication of two unsigned integers, reverting on overflow. Counterpart to Solidity's `*` operator. Requirements: - Multiplication cannot overflow.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sub(uint256,uint256)",
      "name": "sub",
      "description": "Returns the subtraction of two unsigned integers, reverting with custom message on overflow (when the result is negative). Counterpart to Solidity's `-` operator. Requirements: - Subtraction cannot overflow.",
      "parameterDecorators": [
        {
          "name": "a",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "b",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}