{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "VaultCore",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AllocateThresholdUpdated(uint256)",
      "name": "AllocateThresholdUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_threshold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AssetAllocated(address,address,uint256)",
      "name": "AssetAllocated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_strategy",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AssetDefaultStrategyUpdated(address,address)",
      "name": "AssetDefaultStrategyUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_strategy",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AssetSupported(address)",
      "name": "AssetSupported",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CapitalPaused()",
      "name": "CapitalPaused",
      "description": "",
      "parameterDecorators": []
    },
    {
      "signature": "CapitalUnpaused()",
      "name": "CapitalUnpaused",
      "description": "",
      "parameterDecorators": []
    },
    {
      "signature": "GovernorshipTransferred(address,address)",
      "name": "GovernorshipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "MaxSupplyDiffChanged(uint256)",
      "name": "MaxSupplyDiffChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "maxSupplyDiff",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Mint(address,uint256)",
      "name": "Mint",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PendingGovernorshipTransfer(address,address)",
      "name": "PendingGovernorshipTransfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PriceProviderUpdated(address)",
      "name": "PriceProviderUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_priceProvider",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RebasePaused()",
      "name": "RebasePaused",
      "description": "",
      "parameterDecorators": []
    },
    {
      "signature": "RebaseThresholdUpdated(uint256)",
      "name": "RebaseThresholdUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_threshold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RebaseUnpaused()",
      "name": "RebaseUnpaused",
      "description": "",
      "parameterDecorators": []
    },
    {
      "signature": "Redeem(address,uint256)",
      "name": "Redeem",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RedeemFeeUpdated(uint256)",
      "name": "RedeemFeeUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_redeemFeeBps",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StrategistUpdated(address)",
      "name": "StrategistUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StrategyApproved(address)",
      "name": "StrategyApproved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StrategyRemoved(address)",
      "name": "StrategyRemoved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TrusteeAddressChanged(address)",
      "name": "TrusteeAddressChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TrusteeFeeBpsChanged(uint256)",
      "name": "TrusteeFeeBpsChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_basis",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VaultBufferUpdated(uint256)",
      "name": "VaultBufferUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_vaultBuffer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "YieldDistribution(address,uint256,uint256)",
      "name": "YieldDistribution",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_yield",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "allocate()",
      "name": "allocate",
      "description": "Allocate unallocated funds on Vault to strategies. Allocate unallocated funds on Vault to strategies.*.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "assetDefaultStrategies(address)",
      "name": "assetDefaultStrategies",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "autoAllocateThreshold()",
      "name": "autoAllocateThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateRedeemOutputs(uint256)",
      "name": "calculateRedeemOutputs",
      "description": "Calculate the outputs for a redeem function, i.e. the mix of coins that will be returned.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "capitalPaused()",
      "name": "capitalPaused",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkBalance(address)",
      "name": "checkBalance",
      "description": "Get the balance of an asset held in Vault and all strategies.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "Address of asset.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint256 Balance of asset in decimals of asset.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimGovernance()",
      "name": "claimGovernance",
      "description": "Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllAssets()",
      "name": "getAllAssets",
      "description": "Return all asset addresses in order.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllStrategies()",
      "name": "getAllStrategies",
      "description": "Return the array of all strategies.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAssetCount()",
      "name": "getAssetCount",
      "description": "Return the number of assets supported by the Vault.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStrategyCount()",
      "name": "getStrategyCount",
      "description": "Return the number of strategies active on the Vault.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governor()",
      "name": "governor",
      "description": "Returns the address of the current Governor.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isGovernor()",
      "name": "isGovernor",
      "description": "Returns true if the caller is the current Governor.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSupportedAsset(address)",
      "name": "isSupportedAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxSupplyDiff()",
      "name": "maxSupplyDiff",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mint(address,uint256,uint256)",
      "name": "mint",
      "description": "Deposit a supported asset and mint OUSD.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "Address of the asset being deposited.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Amount of the asset being deposited.",
          "recommendedTypes": []
        },
        {
          "name": "_minimumOusdAmount",
          "description": "Minimum OUSD to mint.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "priceProvider()",
      "name": "priceProvider",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rebase()",
      "name": "rebase",
      "description": "Calculate the total value of assets held by the Vault and all strategies and update the supply of OUSD.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rebasePaused()",
      "name": "rebasePaused",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rebaseThreshold()",
      "name": "rebaseThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "redeem(uint256,uint256)",
      "name": "redeem",
      "description": "Withdraw a supported asset and burn OUSD.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "Amount of OUSD to burn.",
          "recommendedTypes": []
        },
        {
          "name": "_minimumUnitAmount",
          "description": "Minimum stablecoin units to receive in return.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeemAll(uint256)",
      "name": "redeemAll",
      "description": "Withdraw a supported asset and burn all OUSD.",
      "parameterDecorators": [
        {
          "name": "_minimumUnitAmount",
          "description": "Minimum stablecoin units to receive in return.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeemFeeBps()",
      "name": "redeemFeeBps",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setAdminImpl(address)",
      "name": "setAdminImpl",
      "description": "set the implementation for the admin, this needs to be in a base class else we cannot set it.",
      "parameterDecorators": [
        {
          "name": "newImpl",
          "description": "address of the implementation.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "strategistAddr()",
      "name": "strategistAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalValue()",
      "name": "totalValue",
      "description": "Determine the total value of assets held by the vault and its strategies.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "value",
          "description": "Total value in USD (1e18).",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferGovernance(address)",
      "name": "transferGovernance",
      "description": "Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete.",
      "parameterDecorators": [
        {
          "name": "_newGovernor",
          "description": "Address of the new Governor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "trusteeAddress()",
      "name": "trusteeAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "trusteeFeeBps()",
      "name": "trusteeFeeBps",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vaultBuffer()",
      "name": "vaultBuffer",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}