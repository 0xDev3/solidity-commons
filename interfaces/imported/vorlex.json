{
  "schema": "../schema.json",
  "tags": [],
  "name": "Vorlex",
  "description": "$$\\ $$\\ $$$$$$\\ $$$$$$$\\ $$\\ $$$$$$$$\\ $$\\ $$\\ $$ | $$ | $$ __$$\\ $$ __$$\\ $$ | $$ _____| $$ | $$ | $$ | $$ | $$ / $$ | $$ | $$ | $$ | $$ | \\$$\\ $$ | \\$$\\ $$ | $$ | $$ | $$$$$$$ | $$ | $$$$$\\ \\$$$$ / \\$$\\$$ / $$ | $$ | $$ __$$< $$ | $$ __| $$ $$< \\$$$ / $$ | $$ | $$ | $$ | $$ | $$ | $$ /\\$$\\ \\$ / $$$$$$ | $$ | $$ | $$$$$$$$\\ $$$$$$$$\\ $$ / $$ | \\_/ \\______/ \\__| \\__| \\________| \\________| \\__| \\__|.",
  "eventDecorators": [
    {
      "signature": "BatchMoved(string)",
      "name": "BatchMoved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "metadata",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Bidded(bytes32,uint256)",
      "name": "Bidded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sale_id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "bid_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Burnt(string)",
      "name": "Burnt",
      "description": "",
      "parameterDecorators": [
        {
          "name": "metadata",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CustodianChanged(uint256,address)",
      "name": "CustodianChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vorlex_id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "new_custodian",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "InFunded(string)",
      "name": "InFunded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "metadata",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Minted(uint256,string,address,uint256,string)",
      "name": "Minted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vorlex_id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "ipfs",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "custodian",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "vorlex_data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OutFunded(uint256,address,string)",
      "name": "OutFunded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "metadata",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Purchased(bytes32,uint256,address,bool,string)",
      "name": "Purchased",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sale_id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "on_chain",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "metatdata",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SaleCancelled(bytes32,bool)",
      "name": "SaleCancelled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sale_id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "by_seller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SaleClosed(bytes32,uint256)",
      "name": "SaleClosed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sale_id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "settle_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SaleSetup(bytes32,uint256,uint256,uint256,uint256,uint8)",
      "name": "SaleSetup",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sale_id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "vorlex",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "worth",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "bid_span",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Swapped(string)",
      "name": "Swapped",
      "description": "",
      "parameterDecorators": [
        {
          "name": "metadata",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferBatch(address,address,address,uint256[],uint256[])",
      "name": "TransferBatch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "ids",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferSingle(address,address,address,uint256,uint256)",
      "name": "TransferSingle",
      "description": "",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "URI(string,uint256)",
      "name": "URI",
      "description": "",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MIN_SALE()",
      "name": "MIN_SALE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOf(address,uint256)",
      "name": "balanceOf",
      "description": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOfBatch(address[],uint256[])",
      "name": "balanceOfBatch",
      "description": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.",
      "parameterDecorators": [
        {
          "name": "accounts",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ids",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "batchMove(uint256[],uint256[],address,address,bool,string)",
      "name": "batchMove",
      "description": "Batch Move for SWAP, TRANSFER & BURN OPERATIONSTransfer is impossible between Vorlexers and Vorlexers cannot burn their tokens.",
      "parameterDecorators": [
        {
          "name": "vorlex_ids",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amounts",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "is_swap",
          "description": "If operation is a Swap Operation.",
          "recommendedTypes": []
        },
        {
          "name": "metadata",
          "description": "More information about the Transfer Ops.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cancelSale(bytes32)",
      "name": "cancelSale",
      "description": "Cancel a Sale/Unbidded Auction Tokens are transferred back to seller.",
      "parameterDecorators": [
        {
          "name": "sale_id",
          "description": "Auction or Sale ID.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "closeSale(bytes32,uint256)",
      "name": "closeSale",
      "description": "Finalize Escrow :: Only by ADMIN.",
      "parameterDecorators": [
        {
          "name": "sale_id",
          "description": "Auction ID of ESCROW PURCHASE or.",
          "recommendedTypes": []
        },
        {
          "name": "settle_amount",
          "description": "Amount to Settle for ESCROW.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createSale(bytes32,bool,bool,uint256,uint256,uint256,uint256)",
      "name": "createSale",
      "description": "Create a Sale or Auction :: Only by Owner of VorlexTokens are transferred to contract when called.",
      "parameterDecorators": [
        {
          "name": "sale_id",
          "description": "keccak256 hash of {vorlex_id, sale_not_auc, amount, seller, timestamp}.",
          "recommendedTypes": []
        },
        {
          "name": "buy_not_bid",
          "description": "True for BuySale Setup, False for BidSale Setup.",
          "recommendedTypes": []
        },
        {
          "name": "is_escrow",
          "description": "Indicates if it is an Escrow sale or not. Escrow sales are finalized by admin. All Bidding Auctions are Escrowed.",
          "recommendedTypes": []
        },
        {
          "name": "vorlex_id",
          "description": "Vorlex id.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of tokens to setup for Sale or Auction.",
          "recommendedTypes": []
        },
        {
          "name": "worth",
          "description": "For Sale => cost per tokem :: For Auction => cost for all tokens.",
          "recommendedTypes": []
        },
        {
          "name": "bid_span",
          "description": "Length of Auction :: For Sale => 1hr and doesn't count :: For Auction => 1 hour min & 72 hour max after first bid.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "inFundContract(string)",
      "name": "inFundContract",
      "description": "Add ETH to the contractUsed to handle MINT FEES.",
      "parameterDecorators": [
        {
          "name": "metadata",
          "description": "More Information on the Funds, Usually MINT FEES, DONATIONS or FUEL.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "mint(string,address,uint256,uint256,string)",
      "name": "mint",
      "description": "Mints a single Vorlex NFT :: Only by MINTERIf Vorlex already exists, additional tokens are minted, no data is altered;.",
      "parameterDecorators": [
        {
          "name": "ipfs",
          "description": "IPFS hash of Vorlex.",
          "recommendedTypes": []
        },
        {
          "name": "custodian",
          "description": "Vorlex Custodian :: Physical owner and custodian of vorlex who receives royalties for transaction.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of tokens to be minted for the Vorlex NFT.",
          "recommendedTypes": []
        },
        {
          "name": "expiry",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "vorlex_data",
          "description": "JSON Information of Vorlex.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
      "name": "onERC1155BatchReceived",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onERC1155Received(address,address,uint256,uint256,bytes)",
      "name": "onERC1155Received",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "outFundContract(uint256,address,string)",
      "name": "outFundContract",
      "description": "Transfer ETH from contract :: Only by ADMIN.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of ETH to be transferred.",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "Recepient of ETH.",
          "recommendedTypes": []
        },
        {
          "name": "metadata",
          "description": "More Information on the Funds, Usually WITHDRAWAL or REFUNDS.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "placeBid(bytes32)",
      "name": "placeBid",
      "description": "Place a bid on Auction :: Will not call if for sale or Auction expiredFirst bid sets expiry to time_of_bid + bid_spanBid should be at least 1% increment to highest bid.",
      "parameterDecorators": [
        {
          "name": "sale_id",
          "description": "Auction ID.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "purchaseToken(bytes32,uint256,address,bool,string)",
      "name": "purchaseToken",
      "description": "Purchase tokens that are on sale :: Will not call if AuctionTpkens are tramsferred to buyer Custodian => Paid 10% :: Seller => Paid 80%.",
      "parameterDecorators": [
        {
          "name": "sale_id",
          "description": "Auction ID of Sale.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of tokens to buy.",
          "recommendedTypes": []
        },
        {
          "name": "buyer",
          "description": "Address of token buyer.",
          "recommendedTypes": []
        },
        {
          "name": "on_chain",
          "description": "False if token was purchased with cash or other crypto on vorlex.co.",
          "recommendedTypes": []
        },
        {
          "name": "metadata",
          "description": "Off-chain purchase information.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
      "name": "safeBatchTransferFrom",
      "description": "See {IERC1155-safeBatchTransferFrom}.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ids",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amounts",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "safeTransferFrom(address,address,uint256,uint256,bytes)",
      "name": "safeTransferFrom",
      "description": "See {IERC1155-safeTransferFrom}.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sales(bytes32)",
      "name": "sales",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "vorlex_id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "purchased_amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "settled_amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "worth",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "bid_span",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "expiry",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "seller",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "highest_bidder",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setCustodian(uint256,address)",
      "name": "setCustodian",
      "description": "Set a New Custodian for a Vorlex if Former Custodian is defunct :: Only by ADMIN.",
      "parameterDecorators": [
        {
          "name": "vorlex_id",
          "description": "Vorlex id.",
          "recommendedTypes": []
        },
        {
          "name": "new_custodian",
          "description": "Wallet Address of New Custodian.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMinSale(uint256)",
      "name": "setMinSale",
      "description": "Set Minimum Price for Token for Sales.",
      "parameterDecorators": [
        {
          "name": "new_min_sale",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSupply()",
      "name": "totalSupply",
      "description": "Get Total Number of Minted Vorlexes.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uri(uint256)",
      "name": "uri",
      "description": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vorlexes(uint256)",
      "name": "vorlexes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "ipfs",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "custodian",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "expiry",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "vorlex_data",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}