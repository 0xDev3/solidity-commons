{
  "schema": "../schema.json",
  "tags": [],
  "name": "BigBang",
  "description": "",
  "eventDecorators": [
    {
      "signature": "NotifyNewRewardsContract(address,address)",
      "name": "NotifyNewRewardsContract",
      "description": "event for token purchase logging. notify that StakeContract address has been changed.",
      "parameterDecorators": [
        {
          "name": "oldRC",
          "description": "old address of the rewards contract.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newRC",
          "description": "new address of the rewards contract.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NotifyNewStakingContract(address,address)",
      "name": "NotifyNewStakingContract",
      "description": "event for token purchase logging. notify that StakeContract address has been changed.",
      "parameterDecorators": [
        {
          "name": "oldSC",
          "description": "old address of the staking contract.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newSC",
          "description": "new address of the staking contract.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NotifyRewardAdded(uint256,uint256)",
      "name": "NotifyRewardAdded",
      "description": "event for token purchase logging. trigger notification of withdrawal.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "pid of the pool.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "rewardAmount",
          "description": "users final rewards withdrawn.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NotifyRewardClaimed(uint256,address,uint256)",
      "name": "NotifyRewardClaimed",
      "description": "event for token purchase logging. trigger notification of withdrawal.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "pid of the pool.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "address of msg.sender.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "rewardAmount",
          "description": "users final rewards withdrawn.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NotifyStake(uint256,address,uint256)",
      "name": "NotifyStake",
      "description": "event for token purchase logging. trigger notification of deposits.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "pid of the pool.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "sender of transaction.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of staked tokens.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NotifyUnstake(uint256,address,uint256)",
      "name": "NotifyUnstake",
      "description": "event for token purchase logging. trigger notification of staked amount.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "pid of the pool.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "sender of transaction.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of withdrawal tokens.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addPool(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      "name": "addPool",
      "description": "adding a new stiaking pool.",
      "parameterDecorators": [
        {
          "name": "_stakingToken",
          "description": ": token to be used for staking.",
          "recommendedTypes": []
        },
        {
          "name": "_rewardsToken",
          "description": "token to be used for rewards.",
          "recommendedTypes": []
        },
        {
          "name": "_tier1Fee",
          "description": "Fee tier 1.",
          "recommendedTypes": []
        },
        {
          "name": "_tier2Fee",
          "description": "Fee tier 2.",
          "recommendedTypes": []
        },
        {
          "name": "_tier3Fee",
          "description": "Fee tier 3.",
          "recommendedTypes": []
        },
        {
          "name": "_tier4Fee",
          "description": "Fee tier 4.",
          "recommendedTypes": []
        },
        {
          "name": "_tier5Fee",
          "description": "Fee tier 5.",
          "recommendedTypes": []
        },
        {
          "name": "_uom",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_multiplier",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addRewardsToThePool(uint256,address,uint256)",
      "name": "addRewardsToThePool",
      "description": "add rewards amount to the pool** @pid pid of the pool.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "pid of the pool.",
          "recommendedTypes": []
        },
        {
          "name": "_poolAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "of rewards token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculateRewards(uint256,uint256,uint256)",
      "name": "calculateRewards",
      "description": "calculate rewards for the user.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "pid of the pool.",
          "recommendedTypes": []
        },
        {
          "name": "_apy",
          "description": "of the user.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "staked by the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint that is the value of the rewards.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimRewards(uint256,address)",
      "name": "claimRewards",
      "description": "claim rewards out of pool.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "of the pool.",
          "recommendedTypes": []
        },
        {
          "name": "_address",
          "description": "of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimableRewards(uint256,address)",
      "name": "claimableRewards",
      "description": "calculate rewards for the user.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_address",
          "description": "of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint that is the value of the rewards.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBalanceOfDeposit(uint256,address)",
      "name": "getBalanceOfDeposit",
      "description": "retrieve amount deposited by the msg.sender.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "of the pool.",
          "recommendedTypes": []
        },
        {
          "name": "_address",
          "description": "of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getState(uint256,address)",
      "name": "getState",
      "description": "retreive current state of users funds.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "of the pool.",
          "recommendedTypes": []
        },
        {
          "name": "_address",
          "description": "of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "array of values describing the current state of user.",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAlreadyUser(uint256,address)",
      "name": "isAlreadyUser",
      "description": "check if user has already staked something.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "of the pool.",
          "recommendedTypes": []
        },
        {
          "name": "_address",
          "description": "of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPoolOpen(uint256)",
      "name": "isPoolOpen",
      "description": "check if the pool is open for staking: the total rewardsDebt of the users does not exceed the total rewards of the pool.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "of the pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolInfo(uint256)",
      "name": "poolInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "stakingToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "rewardsToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "tier1Fee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tier2Fee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tier3Fee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tier4Fee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tier5Fee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "multiplier",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "uom",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalDeposited",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalRewards",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalRewardsDebt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolLength()",
      "name": "poolLength",
      "description": "check how many pools have been created.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardsContract(uint256,address)",
      "name": "setRewardsContract",
      "description": "set rewards contract address** @pid pid of the pool.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_rewardContract",
          "description": "new address to change contract / mechanism.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setStakeContract(uint256,address)",
      "name": "setStakeContract",
      "description": "set staking contract address.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": ": pid of the pool.",
          "recommendedTypes": []
        },
        {
          "name": "_stakeContract",
          "description": "new address to change staking contract / mechanism.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stake(uint256,address,address,uint256,uint256)",
      "name": "stake",
      "description": "deposit funds to the contract.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "pool.",
          "recommendedTypes": []
        },
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_poolAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_dValue",
          "description": "value of tokens that the msg.sender wants to deposit.",
          "recommendedTypes": []
        },
        {
          "name": "_tier",
          "description": "days msg.sender wants to deposit the token for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalRewardsInThePool(uint256,address)",
      "name": "totalRewardsInThePool",
      "description": "check total rewards in the pool.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "of the pool.",
          "recommendedTypes": []
        },
        {
          "name": "_poolAddress",
          "description": "address of the pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstake(uint256,address,uint256)",
      "name": "unstake",
      "description": "withdrawal funds out of pool.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "pid of the pool.",
          "recommendedTypes": []
        },
        {
          "name": "_address",
          "description": "of the user.",
          "recommendedTypes": []
        },
        {
          "name": "wdValue",
          "description": "amount to unstake.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "userInfo(uint256,address)",
      "name": "userInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardDebt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endOfStake",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "apy",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}