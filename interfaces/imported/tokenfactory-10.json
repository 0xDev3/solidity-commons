{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "TokenFactory",
  "description": "TokenFactory. Factory contract for deployment of new TokenProxy contracts.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "deploy(string,string,uint8,uint256)",
      "name": "deploy",
      "description": "Deploys a new TokenProxy contract, using saved token image contract as a template.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "deployed token name.",
          "recommendedTypes": []
        },
        {
          "name": "_symbol",
          "description": "deployed token symbol.",
          "recommendedTypes": []
        },
        {
          "name": "_decimals",
          "description": "deployed token decimals.",
          "recommendedTypes": []
        },
        {
          "name": "_chainId",
          "description": "chain id of the current environment.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address of a newly created contract.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getModuleInterfacesVersion()",
      "name": "getModuleInterfacesVersion",
      "description": "Tells the module interface version that this contract supports.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "major",
          "description": "value of the version.",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "minor",
          "description": "value of the version.",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "patch",
          "description": "value of the version.",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setTokenImage(address)",
      "name": "setTokenImage",
      "description": "Updates the address of the used token image contract. Only owner can call this method.",
      "parameterDecorators": [
        {
          "name": "_tokenImage",
          "description": "address of the new token image used for further deployments.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenImage()",
      "name": "tokenImage",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Changes the owner of this contract.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "address of the new owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}