{
  "schema": "../schema.json",
  "tags": [],
  "name": "Resolver",
  "description": "",
  "eventDecorators": [
    {
      "signature": "NewKey(uint256,string,string)",
      "name": "NewKey",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "keyIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "key",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ResetRecords(uint256)",
      "name": "ResetRecords",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Set(uint256,string,string,string,string)",
      "name": "Set",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "keyIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "valueIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "key",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "get(string,uint256)",
      "name": "get",
      "description": "Function to get record.",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "The key to query the value of.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "The token id to fetch.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getByHash(uint256,uint256)",
      "name": "getByHash",
      "description": "Function get value by provied key hash. Keys hashes can be found in Sync event emitted by Registry.sol contract.",
      "parameterDecorators": [
        {
          "name": "keyHash",
          "description": "The key to query the value of.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "The token id to set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "key",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMany(string[],uint256)",
      "name": "getMany",
      "description": "Function to get multiple record.",
      "parameterDecorators": [
        {
          "name": "keys",
          "description": "The keys to query the value of.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "The token id to fetch.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getManyByHash(uint256[],uint256)",
      "name": "getManyByHash",
      "description": "Function get values by provied key hashes. Keys hashes can be found in Sync event emitted by Registry.sol contract.",
      "parameterDecorators": [
        {
          "name": "keyHashes",
          "description": "The key to query the value of.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "The token id to set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "keys",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string[]"
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hashToKey(uint256)",
      "name": "hashToKey",
      "description": "Function to get key by provided hash. Keys hashes can be found in Sync event emitted by Registry.sol contract.",
      "parameterDecorators": [
        {
          "name": "keyHash",
          "description": "The key to query the value of.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hashesToKeys(uint256[])",
      "name": "hashesToKeys",
      "description": "Function to get keys by provided key hashes. Keys hashes can be found in Sync event emitted by Registry.sol contract.",
      "parameterDecorators": [
        {
          "name": "hashes",
          "description": "The key to query the value of.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nonceOf(uint256)",
      "name": "nonceOf",
      "description": "Gets the nonce of the specified address.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "token ID for nonce query.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "preconfigure(string[],string[],uint256)",
      "name": "preconfigure",
      "description": "",
      "parameterDecorators": [
        {
          "name": "keys",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reconfigure(string[],string[],uint256)",
      "name": "reconfigure",
      "description": "Function to reset all domain records and set new ones.",
      "parameterDecorators": [
        {
          "name": "keys",
          "description": "records keys.",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "records values.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "domain token id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reconfigureFor(string[],string[],uint256,bytes)",
      "name": "reconfigureFor",
      "description": "Delegated version of reconfigure() function.",
      "parameterDecorators": [
        {
          "name": "keys",
          "description": "records keys.",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "records values.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "domain token id.",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "user signature.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registry()",
      "name": "registry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reset(uint256)",
      "name": "reset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "resetFor(uint256,bytes)",
      "name": "resetFor",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "set(string,string,uint256)",
      "name": "set",
      "description": "Function to set record.",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "The key set the value of.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "The value to set key to.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "The token id to set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFor(string,string,uint256,bytes)",
      "name": "setFor",
      "description": "Function to set record on behalf of an address.",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "The key set the value of.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "The value to set key to.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "The token id to set.",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "The signature to verify the transaction with.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMany(string[],string[],uint256)",
      "name": "setMany",
      "description": "",
      "parameterDecorators": [
        {
          "name": "keys",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setManyFor(string[],string[],uint256,bytes)",
      "name": "setManyFor",
      "description": "Function to set record on behalf of an address.",
      "parameterDecorators": [
        {
          "name": "keys",
          "description": "The keys set the values of.",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "The values to set keys to.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "The token id to set.",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "The signature to verify the transaction with.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}