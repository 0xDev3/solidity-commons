{
  "schema": "../schema.json",
  "tags": [
    "compound"
  ],
  "name": "CompoundSubscriptions",
  "description": "Stores subscription information for Compound automatization.",
  "eventDecorators": [
    {
      "signature": "ParamUpdates(address,uint128,uint128,uint128,uint128,bool)",
      "name": "ParamUpdates",
      "description": "Emitted when a user withdraws tokens.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Subscribed(address)",
      "name": "Subscribed",
      "description": "Emitted when a user withdraws tokens.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Unsubscribed(address)",
      "name": "Unsubscribed",
      "description": "Emitted when a user withdraws tokens.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Updated(address)",
      "name": "Updated",
      "description": "Emitted when a user withdraws tokens.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "admin()",
      "name": "admin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeIndex()",
      "name": "changeIndex",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getHolder(address)",
      "name": "getHolder",
      "description": "Returns subscribtion information about a user.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "The actual address that owns the Compound position.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Subscription information about the user if exists.",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSubscribers()",
      "name": "getSubscribers",
      "description": "Helper method to return all the subscribed CDPs.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "List of all subscribers.",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSubscribersByPage(uint256,uint256)",
      "name": "getSubscribersByPage",
      "description": "Helper method for the frontend, returns all the subscribed CDPs paginated.",
      "parameterDecorators": [
        {
          "name": "_page",
          "description": "What page of subscribers you want.",
          "recommendedTypes": []
        },
        {
          "name": "_perPage",
          "description": "Number of entries per page.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "List of all subscribers for that page.",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSubscribed(address)",
      "name": "isSubscribed",
      "description": "Checks if the user is subscribed.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "The actual address that owns the Compound position.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "If the user is subscribed.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "kill()",
      "name": "kill",
      "description": "Destroy the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setAdminByAdmin(address)",
      "name": "setAdminByAdmin",
      "description": "Admin is able to set new admin.",
      "parameterDecorators": [
        {
          "name": "_admin",
          "description": "Address of multisig that becomes new admin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAdminByOwner(address)",
      "name": "setAdminByOwner",
      "description": "Admin is set by owner first time, after that admin is super role and has permission to change owner.",
      "parameterDecorators": [
        {
          "name": "_admin",
          "description": "Address of multisig that becomes admin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOwnerByAdmin(address)",
      "name": "setOwnerByAdmin",
      "description": "Admin is able to change owner.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "Address of new owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "subscribe(uint128,uint128,uint128,uint128,bool)",
      "name": "subscribe",
      "description": "Adds the users Compound poistion in the list of subscriptions so it can be monitored. Called by the DSProxy contract which owns the Compound position.",
      "parameterDecorators": [
        {
          "name": "_minRatio",
          "description": "Minimum ratio below which repay is triggered.",
          "recommendedTypes": []
        },
        {
          "name": "_maxRatio",
          "description": "Maximum ratio after which boost is triggered.",
          "recommendedTypes": []
        },
        {
          "name": "_optimalBoost",
          "description": "Ratio amount which boost should target.",
          "recommendedTypes": []
        },
        {
          "name": "_optimalRepay",
          "description": "Ratio amount which repay should target.",
          "recommendedTypes": []
        },
        {
          "name": "_boostEnabled",
          "description": "Boolean determing if boost is enabled.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "subscribers(uint256)",
      "name": "subscribers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "minRatio",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "maxRatio",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "optimalRatioBoost",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "optimalRatioRepay",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "boostEnabled",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "subscribersPos(address)",
      "name": "subscribersPos",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "arrPos",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "subscribed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unsubscribe()",
      "name": "unsubscribe",
      "description": "Called by the users DSProxy. Owner who subscribed cancels his subscription.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unsubscribeByAdmin(address)",
      "name": "unsubscribeByAdmin",
      "description": "Admin function to unsubscribe a CDP.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "The actual address that owns the Compound position.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawStuckFunds(address,uint256)",
      "name": "withdrawStuckFunds",
      "description": "withdraw stuck funds.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}