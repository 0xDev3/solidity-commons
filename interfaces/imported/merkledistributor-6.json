{"schema":"../schema.json","tags":["merkle proofs"],"name":"MerkleDistributor","description":"","eventDecorators":[{"signature":"Claimed(address,uint256,address,uint256,address)","name":"Claimed","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"caller","description":"","recommendedTypes":[],"indexed":true},{"name":"windowIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false},{"name":"rewardToken","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"DeleteWindow(uint256,address)","name":"DeleteWindow","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"windowIndex","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SetWindow(uint256,uint256,uint256,address,address)","name":"SetWindow","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"windowIndex","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false},{"name":"windowStart","description":"","recommendedTypes":[],"indexed":true},{"name":"rewardToken","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WithdrawRewards(address,uint256)","name":"WithdrawRewards","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"claimWindow(tuple(uint256,uint256,address,bytes32[]))","name":"claimWindow","description":"","parameterDecorators":[{"name":"claim","description":"","recommendedTypes":[],"parameters":[{"name":"windowIndex","description":"","type":"uint256"},{"name":"amount","description":"","type":"uint256"},{"name":"account","description":"","type":"address"},{"name":"merkleProof","description":"","type":"bytes32[]"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimWindows(tuple(uint256,uint256,address,bytes32[])[],address,address)","name":"claimWindows","description":"","parameterDecorators":[{"name":"claims","description":"","recommendedTypes":[],"parameters":[{"name":"windowIndex","description":"","type":"uint256"},{"name":"amount","description":"","type":"uint256"},{"name":"account","description":"","type":"address"},{"name":"merkleProof","description":"","type":"bytes32[]"}]},{"name":"rewardToken","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimed(uint256,address)","name":"claimed","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"deleteWindow(uint256)","name":"deleteWindow","description":"","parameterDecorators":[{"name":"windowIndex","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getCurrentTime()","name":"getCurrentTime","description":"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"uint for the current Testable timestamp.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lastSeededIndex()","name":"lastSeededIndex","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"merkleWindows(uint256)","name":"merkleWindows","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"start","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"merkleRoot","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"rewardToken","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCurrentTime(uint256)","name":"setCurrentTime","description":"Sets the current time. Will revert if not running in test mode.","parameterDecorators":[{"name":"time","description":"timestamp to set current Testable time to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setWindow(uint256,uint256,address,bytes32)","name":"setWindow","description":"","parameterDecorators":[{"name":"totalRewardsDistributed","description":"","recommendedTypes":[]},{"name":"windowStart","description":"","recommendedTypes":[]},{"name":"rewardToken","description":"","recommendedTypes":[]},{"name":"merkleRoot","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"timerAddress()","name":"timerAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawRewards(address,uint256)","name":"withdrawRewards","description":"","parameterDecorators":[{"name":"rewardCurrency","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}