{
  "schema": "../schema.json",
  "tags": [],
  "name": "SmolCraft",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CraftedItem(address,uint256)",
      "name": "CraftedItem",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "cardId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RecipeAdded(uint256[],uint256[],uint256,uint256)",
      "name": "RecipeAdded",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "ingredients",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amounts",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "craftedItem",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "price",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RecipeRemoved(uint256)",
      "name": "RecipeRemoved",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "recipeId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "Ting()",
      "name": "Ting",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addRecipe(uint256,uint256[],uint256[],uint256,uint256)",
      "name": "addRecipe",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_recipeId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_ingredientIds",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_ingredientAmounts",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_craftedItemId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tingPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cardCosts(uint256)",
      "name": "cardCosts",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "craft(uint256)",
      "name": "craft",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_recipeId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "recipeIdList(uint256)",
      "name": "recipeIdList",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeRecipe(uint256)",
      "name": "removeRecipe",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_recipeId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "smolStudio()",
      "name": "smolStudio",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}