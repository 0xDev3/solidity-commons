{
  "schema": "../schema.json",
  "tags": [],
  "name": "Outbox",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OutBoxTransactionExecuted(address,address,uint256,uint256)",
      "name": "OutBoxTransactionExecuted",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "destAddr",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "l2Sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "outboxIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "transactionIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OutboxEntryCreated(uint256,uint256,bytes32,uint256)",
      "name": "OutboxEntryCreated",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "batchNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "outboxIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "outputRoot",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "numInBatch",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "beacon()",
      "name": "beacon",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bridge()",
      "name": "bridge",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateItemHash(address,address,uint256,uint256,uint256,uint256,bytes)",
      "name": "calculateItemHash",
      "description": "",
      "parameterDecorators": [
        {
          "name": "l2Sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "destAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "l2Block",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "l1Block",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "l2Timestamp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldataForL1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateMerkleRoot(bytes32[],uint256,bytes32)",
      "name": "calculateMerkleRoot",
      "description": "",
      "parameterDecorators": [
        {
          "name": "proof",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "path",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "item",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "executeTransaction(uint256,bytes32[],uint256,address,address,uint256,uint256,uint256,uint256,bytes)",
      "name": "executeTransaction",
      "description": "Executes a messages in an Outbox entry. Reverts if dispute period hasn't expired and.",
      "parameterDecorators": [
        {
          "name": "outboxIndex",
          "description": "Index of OutboxEntry in outboxes array.",
          "recommendedTypes": []
        },
        {
          "name": "proof",
          "description": "Merkle proof of message inclusion in outbox entry.",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "Merkle path to message.",
          "recommendedTypes": []
        },
        {
          "name": "l2Sender",
          "description": "sender if original message (i.e., caller of ArbSys.sendTxToL1).",
          "recommendedTypes": []
        },
        {
          "name": "destAddr",
          "description": "destination address for L1 contract call.",
          "recommendedTypes": []
        },
        {
          "name": "l2Block",
          "description": "l2 block number at which sendTxToL1 call was made.",
          "recommendedTypes": []
        },
        {
          "name": "l1Block",
          "description": "l1 block number at which sendTxToL1 call was made.",
          "recommendedTypes": []
        },
        {
          "name": "l2Timestamp",
          "description": "l2 Timestamp at which sendTxToL1 call was made.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "value in L1 message in wei.",
          "recommendedTypes": []
        },
        {
          "name": "calldataForL1",
          "description": "abi-encoded L1 message data.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_rollup",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bridge",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isMaster()",
      "name": "isMaster",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "l2ToL1Block()",
      "name": "l2ToL1Block",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "l2ToL1EthBlock()",
      "name": "l2ToL1EthBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "l2ToL1Sender()",
      "name": "l2ToL1Sender",
      "description": "When l2ToL1Sender returns a nonzero address, the message was originated by an L2 account When the return value is zero, that means this is a system message.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "l2ToL1Timestamp()",
      "name": "l2ToL1Timestamp",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "outboxes(uint256)",
      "name": "outboxes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "outboxesLength()",
      "name": "outboxesLength",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "processOutgoingMessages(bytes,uint256[])",
      "name": "processOutgoingMessages",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sendsData",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sendLengths",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rollup()",
      "name": "rollup",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}