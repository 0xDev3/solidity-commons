{
  "schema": "../schema.json",
  "tags": [
    "locking",
    "dao"
  ],
  "name": "TimelockController_RewardsDistributor2",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CallExecuted(bytes32,uint256,address,uint256,bytes)",
      "name": "CallExecuted",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked. Emitted when a call is performed as part of operation `id`.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CallScheduled(bytes32,uint256,address,uint256,bytes,bytes32,uint256)",
      "name": "CallScheduled",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked. Emitted when a call is scheduled as part of operation `id`.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "predecessor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "delay",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Cancelled(bytes32)",
      "name": "Cancelled",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked. Emitted when operation `id` is cancelled.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "MinDelayChange(uint256,uint256)",
      "name": "MinDelayChange",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked. Emitted when the minimum delay for future operations is modified.",
      "parameterDecorators": [
        {
          "name": "oldDuration",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newDuration",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MinDelayReducedChange(uint256,uint256)",
      "name": "MinDelayReducedChange",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "oldDuration",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newDuration",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SetBeneficiaries(address[],uint256[])",
      "name": "SetBeneficiaries",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetScheduled(bytes32,uint256,uint256,uint256,bool,bytes32,uint256)",
      "name": "SetScheduled",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked. Emitted when a call is scheduled as part of operation `id`.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_allocPoint",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_withUpdate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "predecessor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "delay",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetScheduled(bytes32,uint256,address,uint256,bytes,bytes32,uint256)",
      "name": "SetScheduled",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "predecessor",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "delay",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "EXECUTOR_ROLE()",
      "name": "EXECUTOR_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PROPOSER_ROLE()",
      "name": "PROPOSER_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "TIMELOCK_ADMIN_ROLE()",
      "name": "TIMELOCK_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "add(address,address,bool,address)",
      "name": "add",
      "description": "No timelock functions.",
      "parameterDecorators": [
        {
          "name": "_autofarmAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_want",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_withUpdate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_strat",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "beneficiaryAddresses(uint256)",
      "name": "beneficiaryAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "beneficiaryRewardFactors(uint256)",
      "name": "beneficiaryRewardFactors",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cancel(bytes32)",
      "name": "cancel",
      "description": "Cancel an operation. Requirements: - the caller must have the 'proposer' role.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "convertTokensToWBNB(tuple(address,address[],uint256)[])",
      "name": "convertTokensToWBNB",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_swaps",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "uniRouterAddress",
              "description": "",
              "type": "address"
            },
            {
              "name": "path",
              "description": "",
              "type": "address[]"
            },
            {
              "name": "slippageFactor",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "devWalletAddress()",
      "name": "devWalletAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "distributeRewards()",
      "name": "distributeRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "earn(address)",
      "name": "earn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stratAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "execute(address,uint256,bytes,bytes32,bytes32)",
      "name": "execute",
      "description": "Execute an (ready) operation containing a single transaction. Emits a {CallExecuted} event. Requirements: - the caller must have the 'executor' role.",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "predecessor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "CallExecuted(bytes32,uint256,address,uint256,bytes)"
      ],
      "readOnly": false
    },
    {
      "signature": "executeBatch(address[],uint256[],bytes[],bytes32,bytes32)",
      "name": "executeBatch",
      "description": "Execute an (ready) operation containing a batch of transactions. Emits one {CallExecuted} event per transaction in the batch. Requirements: - the caller must have the 'executor' role.",
      "parameterDecorators": [
        {
          "name": "targets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "datas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "predecessor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "CallExecuted(bytes32,uint256,address,uint256,bytes)"
      ],
      "readOnly": false
    },
    {
      "signature": "executeSet(address,uint256,uint256,bool,bytes32,bytes32)",
      "name": "executeSet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_autofarmAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_allocPoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_withUpdate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "predecessor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "farm(address)",
      "name": "farm",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stratAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getMinDelay()",
      "name": "getMinDelay",
      "description": "Returns the minimum delay for an operation to become valid. This value can be changed by executing an operation that calls `updateDelay`.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "duration",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleMember(bytes32,uint256)",
      "name": "getRoleMember",
      "description": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleMemberCount(bytes32)",
      "name": "getRoleMemberCount",
      "description": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTimestamp(bytes32)",
      "name": "getTimestamp",
      "description": "Returns the timestamp at with an operation becomes ready (0 for unset operations, 1 for done operations).",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hashOperation(address,uint256,bytes,bytes32,bytes32)",
      "name": "hashOperation",
      "description": "Returns the identifier of an operation containing a single transaction.",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "predecessor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "hash",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hashOperationBatch(address[],uint256[],bytes[],bytes32,bytes32)",
      "name": "hashOperationBatch",
      "description": "Returns the identifier of an operation containing a batch of transactions.",
      "parameterDecorators": [
        {
          "name": "targets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "datas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "predecessor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "hash",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOperationDone(bytes32)",
      "name": "isOperationDone",
      "description": "Returns whether an operation is done or not.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "done",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOperationPending(bytes32)",
      "name": "isOperationPending",
      "description": "Returns whether an operation is pending or not.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "pending",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOperationReady(bytes32)",
      "name": "isOperationReady",
      "description": "Returns whether an operation is ready or not.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "ready",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minDelay()",
      "name": "minDelay",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minDelayReduced()",
      "name": "minDelayReduced",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "noTimeLockFunc1(address)",
      "name": "noTimeLockFunc1",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stratAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pause(address)",
      "name": "pause",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stratAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "schedule(address,uint256,bytes,bytes32,bytes32,uint256)",
      "name": "schedule",
      "description": "Schedule an operation containing a single transaction. Emits a {CallScheduled} event. Requirements: - the caller must have the 'proposer' role.",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "predecessor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "delay",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "CallScheduled(bytes32,uint256,address,uint256,bytes,bytes32,uint256)"
      ],
      "readOnly": false
    },
    {
      "signature": "scheduleBatch(address[],uint256[],bytes[],bytes32,bytes32,uint256)",
      "name": "scheduleBatch",
      "description": "Schedule an operation containing a batch of transactions. Emits one {CallScheduled} event per transaction in the batch. Requirements: - the caller must have the 'proposer' role.",
      "parameterDecorators": [
        {
          "name": "targets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "datas",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "predecessor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "delay",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "CallScheduled(bytes32,uint256,address,uint256,bytes,bytes32,uint256)"
      ],
      "readOnly": false
    },
    {
      "signature": "scheduleSet(address,uint256,uint256,bool,bytes32,bytes32)",
      "name": "scheduleSet",
      "description": "Reduced timelock functions.",
      "parameterDecorators": [
        {
          "name": "_autofarmAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_allocPoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_withUpdate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "predecessor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBeneficiaries(address[],uint256[])",
      "name": "setBeneficiaries",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_beneficiaryAddresses",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiaryRewardFactors",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDevWalletAddress(address)",
      "name": "setDevWalletAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_devWalletAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpause(address)",
      "name": "unpause",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stratAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateMinDelay(uint256)",
      "name": "updateMinDelay",
      "description": "Changes the minimum timelock duration for future operations. Emits a {MinDelayChange} event. Requirements: - the caller must be the timelock itself. This can only be achieved by scheduling and later executing an operation where the timelock is the target and the data is the ABI-encoded call to this function.",
      "parameterDecorators": [
        {
          "name": "newDelay",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "MinDelayChange(uint256,uint256)"
      ],
      "readOnly": false
    },
    {
      "signature": "updateMinDelayReduced(uint256)",
      "name": "updateMinDelayReduced",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newDelay",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "wbnbAddress()",
      "name": "wbnbAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "wrapBNB(address)",
      "name": "wrapBNB",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stratAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}