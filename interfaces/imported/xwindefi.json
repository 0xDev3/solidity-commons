{
  "schema": "../schema.json",
  "tags": [],
  "name": "xWinDefi",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Received(address,uint256)",
      "name": "Received",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "_CreateTarget(address,address,address[],uint256[],uint256)",
      "name": "_CreateTarget",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toFund",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newTargets",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newWeight",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "txnTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "_DepositFarm(address,uint256,uint256)",
      "name": "_DepositFarm",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "_EmergencyRedeem(address,address,uint256)",
      "name": "_EmergencyRedeem",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fundaddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "_MoveNonIndexNameToBaseEvent(address,address,address,uint256,uint256)",
      "name": "_MoveNonIndexNameToBaseEvent",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toFund",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "swapOutput",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "_RebalanceAllInOne(address,address,uint256,uint256)",
      "name": "_RebalanceAllInOne",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toFund",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "baseBalance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "txnTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "_Redeem(address,address,uint256,uint256,uint256)",
      "name": "_Redeem",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toFund",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "redeemUnit",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "rewardQty",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "redeemratio",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "_StakeMyReward(address,uint256)",
      "name": "_StakeMyReward",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "rewardQty",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "_Subscribe(address,address,uint256,uint256)",
      "name": "_Subscribe",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toFund",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "subsAmt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "mintQty",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "_WithdrawFarm(address,uint256,uint256)",
      "name": "_WithdrawFarm",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "_WithdrawReward(address,uint256)",
      "name": "_WithdrawReward",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "rewardQty",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "CreateTarget(address[],uint256[],address)",
      "name": "CreateTarget",
      "description": "create target ratio by portfolio manager.",
      "parameterDecorators": [
        {
          "name": "_toAddresses",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_targetWeight",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "xFundAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "DepositFarm(uint256,uint256)",
      "name": "DepositFarm",
      "description": "Deposit LP tokens to xWin Protocol for xWin allocation.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "GetEstimateReward(address)",
      "name": "GetEstimateReward",
      "description": "get estimated reward of XWN token.",
      "parameterDecorators": [
        {
          "name": "fromAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "GetQuotes(uint256,address)",
      "name": "GetQuotes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenBal",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "targetToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountB",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amountA",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MoveNonIndexNameToBase(address,address,uint256,uint256)",
      "name": "MoveNonIndexNameToBase",
      "description": "perform MoveNonIndexNameTo BNB for non benchmark name.",
      "parameterDecorators": [
        {
          "name": "xFundAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenaddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "priceImpactTolerance",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ProtocolTransfer(address,uint256)",
      "name": "ProtocolTransfer",
      "description": "emergency trf XWN token to new protocol.",
      "parameterDecorators": [
        {
          "name": "_newProtocol",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "RebalanceAllInOne(tuple(address,uint256,uint256,uint256,bool,address),address[],uint256[])",
      "name": "RebalanceAllInOne",
      "description": "perform update target, move non-bm to base and finally rebalance.",
      "parameterDecorators": [
        {
          "name": "_tradeParams",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "xFundAddress",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "priceImpactTolerance",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "deadline",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "returnInBase",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "referral",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "_toAddresses",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_targetWeight",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "Redeem(tuple(address,uint256,uint256,uint256,bool,address))",
      "name": "Redeem",
      "description": "perform redemption based on unit redeem.",
      "parameterDecorators": [
        {
          "name": "_tradeParams",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "xFundAddress",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "priceImpactTolerance",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "deadline",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "returnInBase",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "referral",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "StakeMyReward(uint256)",
      "name": "StakeMyReward",
      "description": "User to claim the reward and stake them into DEX.",
      "parameterDecorators": [
        {
          "name": "deadline",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "Subscribe(tuple(address,uint256,uint256,uint256,bool,address))",
      "name": "Subscribe",
      "description": "perform subscription based on ratio setup and put into lending if available.",
      "parameterDecorators": [
        {
          "name": "_tradeParams",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "xFundAddress",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "priceImpactTolerance",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "deadline",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "returnInBase",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "referral",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "WithdrawFarm(uint256,uint256)",
      "name": "WithdrawFarm",
      "description": "Withdraw LP tokens from xWin Protocol.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "WithdrawReward()",
      "name": "WithdrawReward",
      "description": "withdraw reward of XWN token.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "add(address,uint256,uint256)",
      "name": "add",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_rewardperblock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_multiplier",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addxwinFund(address[],bool[])",
      "name": "addxwinFund",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_fundaddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_isxwinFund",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyOn()",
      "name": "emergencyOn",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "emergencyRedeem(uint256,address)",
      "name": "emergencyRedeem",
      "description": "perform redemption based on unit redeem and give up all xwin rewards.",
      "parameterDecorators": [
        {
          "name": "_redeemAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fundaddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyRemoveFromFarm(address)",
      "name": "emergencyRemoveFromFarm",
      "description": "manager perform remove from farm for emergency state.",
      "parameterDecorators": [
        {
          "name": "_fundaddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyWithdraw(uint256)",
      "name": "emergencyWithdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllPendingXwin(address)",
      "name": "getAllPendingXwin",
      "description": "View function to see all pending xWin token earn on frontend.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPlatformAddress()",
      "name": "getPlatformAddress",
      "description": "get platform wallet address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPlatformFee()",
      "name": "getPlatformFee",
      "description": "get platform fee.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "gexWinBenefitPool()",
      "name": "gexWinBenefitPool",
      "description": "get platform wallet address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isxwinFund(address)",
      "name": "isxwinFund",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingXwin(uint256,address)",
      "name": "pendingXwin",
      "description": "View function to see pending xWin on frontend.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolInfo(uint256)",
      "name": "poolInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "lpToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "rewardperblock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "multiplier",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolLength()",
      "name": "poolLength",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardRemaining()",
      "name": "rewardRemaining",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "startblock()",
      "name": "startblock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateEmergencyState(bool)",
      "name": "updateEmergencyState",
      "description": "turn on emerrgency state by deployer.",
      "parameterDecorators": [
        {
          "name": "_state",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateFarmPoolInfo(uint256,uint256,uint256)",
      "name": "updateFarmPoolInfo",
      "description": "create or update farm pool fee by deployer.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_rewardperblock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_multiplier",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateManagerRewardPerUnit(uint256)",
      "name": "updateManagerRewardPerUnit",
      "description": "update manager reward by deployer.",
      "parameterDecorators": [
        {
          "name": "_managerRewardperunit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePlatformFee(uint256)",
      "name": "updatePlatformFee",
      "description": "update platform fee by deployer.",
      "parameterDecorators": [
        {
          "name": "newPlatformFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateProtocol(address,address)",
      "name": "updateProtocol",
      "description": "update xwin defi protocol.",
      "parameterDecorators": [
        {
          "name": "_fundaddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_newProtocol",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateReferralRewardPerUnit(uint256)",
      "name": "updateReferralRewardPerUnit",
      "description": "update referal fee by deployer.",
      "parameterDecorators": [
        {
          "name": "_referralperunit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateRewardPerBlock(uint256)",
      "name": "updateRewardPerBlock",
      "description": "reward per block by deployer.",
      "parameterDecorators": [
        {
          "name": "_rewardperblock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateRewardRemaining(uint256)",
      "name": "updateRewardRemaining",
      "description": "update rewardRemaining by deployer.",
      "parameterDecorators": [
        {
          "name": "_newRemaining",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateStakeProtocol(address)",
      "name": "updateStakeProtocol",
      "description": "update platform fee by deployer.",
      "parameterDecorators": [
        {
          "name": "newStakeProtocol",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateXwinBenefitPool(address)",
      "name": "updateXwinBenefitPool",
      "description": "update platform fee by deployer.",
      "parameterDecorators": [
        {
          "name": "_xwinBenefitPool",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "userInfo(uint256,address)",
      "name": "userInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "blockstart",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "xWinReferral(address)",
      "name": "xWinReferral",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "referral",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "xWinRewards(address)",
      "name": "xWinRewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "blockstart",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "accBasetoken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "accMinttoken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "previousRealizedQty",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "xWinToken()",
      "name": "xWinToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "xwinBenefitPool()",
      "name": "xwinBenefitPool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}