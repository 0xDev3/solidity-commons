{"schema":"../schema.json","tags":["tokens","swaps","uniswap","synthetix"],"name":"MultistepSwapper","description":"SwapRouter. Swap between tokens and synths using uniswap router and synthetix exchanger.","eventDecorators":[],"functionDecorators":[{"signature":"init(address,address)","name":"init","description":"Initialize the contract.","parameterDecorators":[{"name":"_swapRouter","description":"","recommendedTypes":[]},{"name":"_synthetix","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"swap(address,bytes32,uint256,tuple(uint8,address,bytes32,uint24)[],uint256)","name":"swap","description":"Swaps `amountIn` of one token for as much as possible of another token.","parameterDecorators":[{"name":"tokenIn","description":"The token address being swapped from.","recommendedTypes":[]},{"name":"tokenInCurrencyKey","description":"The synth currency key for `tokenIn`, set to zero if `tokenIn` is not a synth.","recommendedTypes":[]},{"name":"amountIn","description":"The amount of `tokenIn` to be swapped.","recommendedTypes":[]},{"name":"swaps","description":"The swap route encoded into an array of `Swap` structs.","recommendedTypes":[],"parameters":[{"name":"swapType","description":"","type":"uint8"},{"name":"tokenOut","description":"","type":"address"},{"name":"tokenOutCurrencyKey","description":"","type":"bytes32"},{"name":"poolFee","description":"","type":"uint24"}]},{"name":"amountOutMinimum","description":"The minimum amount of the last `Swap` struct `tokenOut` token that must be returned.","recommendedTypes":[]}],"returnDecorators":[{"name":"amountOut","description":"The amount of the received token.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false}]}