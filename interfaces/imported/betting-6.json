{
  "schema": "../schema.json",
  "tags": [],
  "name": "Betting",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "activeBets(uint256)",
      "name": "activeBets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addAdmin(address)",
      "name": "addAdmin",
      "description": "Add a new admin with the same previledges except adding a new admin.",
      "parameterDecorators": [
        {
          "name": "_newAdmin",
          "description": "The address of the new admin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "admin()",
      "name": "admin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bets(uint256)",
      "name": "bets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "title",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "description",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "category",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "option0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "option1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "endDate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "betType",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "betsCount()",
      "name": "betsCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bettingsCount()",
      "name": "bettingsCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "blockTimeStamp()",
      "name": "blockTimeStamp",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cancelBet(uint256)",
      "name": "cancelBet",
      "description": "Cancel a bet, only by one of the admins.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "the bet id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "checkAdmin(address)",
      "name": "checkAdmin",
      "description": "Check if an address corresponds to an admin.",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": ".",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createBet(string,string,string,string,string,uint256,uint256,uint256,address)",
      "name": "createBet",
      "description": "Create a new bet available starting from now.",
      "parameterDecorators": [
        {
          "name": "_title",
          "description": "Short text title for the bet.",
          "recommendedTypes": []
        },
        {
          "name": "_description",
          "description": "Short textual description of the bet.",
          "recommendedTypes": []
        },
        {
          "name": "_category",
          "description": "Category ID of the bet.",
          "recommendedTypes": []
        },
        {
          "name": "_option0",
          "description": "Short text for option 0 of the bet.",
          "recommendedTypes": []
        },
        {
          "name": "_option1",
          "description": "Short text for option 1 of the bet.",
          "recommendedTypes": []
        },
        {
          "name": "_endDate",
          "description": "expiration date of the bet.",
          "recommendedTypes": []
        },
        {
          "name": "_betType",
          "description": "0 or 1, see spec for more details.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": ", only useful for ERC20 currency, DON'T LET IT EMPTY FOR ETH, PUT SOME VALUE.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "declareWinner(uint256,uint256)",
      "name": "declareWinner",
      "description": "decalre the winning option for a bet.",
      "parameterDecorators": [
        {
          "name": "_betId",
          "description": ".",
          "recommendedTypes": []
        },
        {
          "name": "_option",
          "description": "the winning option for the bet.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositERC20(uint256,address)",
      "name": "depositERC20",
      "description": "deposit ERC20 to be used for betting or creating bets.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": ".",
          "recommendedTypes": []
        },
        {
          "name": "_token",
          "description": "address of the erc20 smart contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositUSDT(uint256)",
      "name": "depositUSDT",
      "description": "deposit USDT to be used for betting or creating bets.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": ".",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "erc20Balances(address,address)",
      "name": "erc20Balances",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ethBalance(address)",
      "name": "ethBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBetTotal(uint256)",
      "name": "getBetTotal",
      "description": "get total amount received for a bet.",
      "parameterDecorators": [
        {
          "name": "_betId",
          "description": ".",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBetTotalOptions0(uint256)",
      "name": "getBetTotalOptions0",
      "description": "get total amount received for option 0 for a bet.",
      "parameterDecorators": [
        {
          "name": "_betId",
          "description": ".",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBetTotalOptions1(uint256)",
      "name": "getBetTotalOptions1",
      "description": "get total amount received for option 1 for a bet.",
      "parameterDecorators": [
        {
          "name": "_betId",
          "description": ".",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBets()",
      "name": "getBets",
      "description": "Get all available bets.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBetters(uint256)",
      "name": "getBetters",
      "description": "get betters list for a given bet.",
      "parameterDecorators": [
        {
          "name": "_betId",
          "description": ".",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBetting(uint256)",
      "name": "getBetting",
      "description": "Create a new bet available starting from now.",
      "parameterDecorators": [
        {
          "name": "_better",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPositivesBets()",
      "name": "getPositivesBets",
      "description": "Get positives bets.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "length_global()",
      "name": "length_global",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minBetERC20(address)",
      "name": "minBetERC20",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minBetETH()",
      "name": "minBetETH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minBetUSDT()",
      "name": "minBetUSDT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owners(address)",
      "name": "owners",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sendBet(uint256,uint256,uint256)",
      "name": "sendBet",
      "description": "Send a betting to an existing actif bet.",
      "parameterDecorators": [
        {
          "name": "_betId",
          "description": "id of the bet.",
          "recommendedTypes": []
        },
        {
          "name": "_option",
          "description": "0 or 1, the two available options to bet on.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "only usefull for ERC20 bes, for ETH, msg.value is enough.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMinBetForERC20(address,uint256)",
      "name": "setMinBetForERC20",
      "description": "Specify min bet for ERC20.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "address of the erc20 token.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "min amount to create a bet with the _token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateBetsStates()",
      "name": "updateBetsStates",
      "description": "Check for expired bets.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "usdtBalance(address)",
      "name": "usdtBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "usdtInterface()",
      "name": "usdtInterface",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawERC20(address)",
      "name": "withdrawERC20",
      "description": "withdraw ERC20 balance.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "address of the erc20 smart contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawETH()",
      "name": "withdrawETH",
      "description": "withdraw ETH balance.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawUSDT()",
      "name": "withdrawUSDT",
      "description": "withdraw USDT balance.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}