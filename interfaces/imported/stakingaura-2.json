{
  "schema": "../schema.json",
  "tags": [],
  "name": "StakingAuRa",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ClaimedReward(address,address,uint256,uint256,uint256)",
      "name": "ClaimedReward",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "fromPoolStakingAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "stakingEpoch",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokensAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "nativeCoinsAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AddedPool(address)",
      "name": "AddedPool",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "poolStakingAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ClaimedOrderedWithdrawal(address,address,uint256,uint256)",
      "name": "ClaimedOrderedWithdrawal",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "fromPoolStakingAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "stakingEpoch",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MovedStake(address,address,address,uint256,uint256)",
      "name": "MovedStake",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "fromPoolStakingAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "toPoolStakingAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "stakingEpoch",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OrderedWithdrawal(address,address,uint256,int256)",
      "name": "OrderedWithdrawal",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "fromPoolStakingAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "stakingEpoch",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PlacedStake(address,address,uint256,uint256)",
      "name": "PlacedStake",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "toPoolStakingAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "stakingEpoch",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RemovedPool(address)",
      "name": "RemovedPool",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "poolStakingAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "WithdrewStake(address,address,uint256,uint256)",
      "name": "WithdrewStake",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "fromPoolStakingAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "stakingEpoch",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "delegatorStakeSnapshot(address,address,uint256)",
      "name": "delegatorStakeSnapshot",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialValidatorStake(uint256)",
      "name": "initialValidatorStake",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_totalAmount",
          "description": "The initial validator total stake amount (for all initial validators).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "poolDelegatorIndex(address,address)",
      "name": "poolDelegatorIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removePools()",
      "name": "removePools",
      "description": "Called by the `ValidatorSetAuRa.newValidatorSet` function when a pool must be removed by the algorithm.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address,address[],uint256,uint256,uint256,uint256,uint256)",
      "name": "initialize",
      "description": "(e.g., 4320 = 6 hours for 5-seconds blocks in AuRa).",
      "parameterDecorators": [
        {
          "name": "_validatorSetContract",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_initialStakingAddresses",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_delegatorMinStake",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_candidateMinStake",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_stakingEpochDuration",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_stakingEpochStartBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_stakeWithdrawDisallowPeriod",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setStakingEpochStartBlock(uint256)",
      "name": "setStakingEpochStartBlock",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_blockNumber",
          "description": "The number of the very first block in the upcoming staking epoch.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "moveStake(address,address,uint256)",
      "name": "moveStake",
      "description": "by the `maxWithdrawAllowed` getter.",
      "parameterDecorators": [
        {
          "name": "_fromPoolStakingAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_toPoolStakingAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDelegatorMinStake(uint256)",
      "name": "setDelegatorMinStake",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_minStake",
          "description": "The value of a new limit in Wei.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "erc677TokenContract()",
      "name": "erc677TokenContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDelegatorPools(address,uint256,uint256)",
      "name": "getDelegatorPools",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_delegator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_offset",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_length",
          "description": "The max number of items to return.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "result",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardWasTaken(address,address,uint256)",
      "name": "rewardWasTaken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addPool(uint256,address)",
      "name": "addPool",
      "description": "(msg.sender). This address cannot be equal to `msg.sender`.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_miningAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isInitialized()",
      "name": "isInitialized",
      "description": "Returns a boolean flag indicating if the `initialize` function has been called.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removePool(address)",
      "name": "removePool",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingAddress",
          "description": "The staking address of the pool to be removed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimReward(uint256[],address)",
      "name": "claimReward",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingEpochs",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_poolStakingAddress",
          "description": "The staking address of the pool from which the reward needs to be withdrawn.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCandidateMinStake(uint256)",
      "name": "setCandidateMinStake",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_minStake",
          "description": "The value of a new limit in Wei.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeAmountTotal(address)",
      "name": "stakeAmountTotal",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakeFirstEpoch(address,address)",
      "name": "stakeFirstEpoch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setErc677TokenContract(address)",
      "name": "setErc677TokenContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_erc677TokenContract",
          "description": "The address of the contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "candidateMinStake()",
      "name": "candidateMinStake",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolInactiveIndex(address)",
      "name": "poolInactiveIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPools()",
      "name": "getPools",
      "description": "if its address has at least the minimum stake and this stake is not ordered to be withdrawn.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxWithdrawAllowed(address,address)",
      "name": "maxWithdrawAllowed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_poolStakingAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_staker",
          "description": "The staker address that is going to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakingEpochStartBlock()",
      "name": "stakingEpochStartBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolDelegatorsInactive(address)",
      "name": "poolDelegatorsInactive",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_poolStakingAddress",
          "description": "The pool staking address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastChangeBlock()",
      "name": "lastChangeBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakeAmountByCurrentEpoch(address,address)",
      "name": "stakeAmountByCurrentEpoch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_poolStakingAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_delegatorOrZero",
          "description": "The delegator's address (or zero address if the staker is the pool itself).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakingEpoch()",
      "name": "stakingEpoch",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDelegatorPoolsLength(address)",
      "name": "getDelegatorPoolsLength",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_delegator",
          "description": "The delegator address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakingEpochEndBlock()",
      "name": "stakingEpochEndBlock",
      "description": "Returns the number of the last block of the current staking epoch.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxWithdrawOrderAllowed(address,address)",
      "name": "maxWithdrawOrderAllowed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_poolStakingAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_staker",
          "description": "The staker address that is going to order the withdrawal.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolDelegatorInactiveIndex(address,address)",
      "name": "poolDelegatorInactiveIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPoolsLikelihood()",
      "name": "getPoolsLikelihood",
      "description": "`uint256 sum` - The total sum of the amounts.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "likelihoods",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "sum",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakeWithdrawDisallowPeriod()",
      "name": "stakeWithdrawDisallowPeriod",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "clearUnremovableValidator(address)",
      "name": "clearUnremovableValidator",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_unremovableStakingAddress",
          "description": "The staking address of the unremovable validator.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "poolDelegators(address)",
      "name": "poolDelegators",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_poolStakingAddress",
          "description": "The pool staking address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "orderWithdrawEpoch(address,address)",
      "name": "orderWithdrawEpoch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onTokenTransfer(address,uint256,bytes)",
      "name": "onTokenTransfer",
      "description": "by the `_staker` param.",
      "parameterDecorators": [
        {
          "name": "_staker",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getPoolsToBeElected()",
      "name": "getPoolsToBeElected",
      "description": "This array is kept updated by the `_addPoolToBeElected` and `_deletePoolToBeElected` internal functions.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakeAmount(address,address)",
      "name": "stakeAmount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPoolActive(address)",
      "name": "isPoolActive",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingAddress",
          "description": "The staking address of the pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stake(address,uint256)",
      "name": "stake",
      "description": "because `msg.value` is used instead.",
      "parameterDecorators": [
        {
          "name": "_toPoolStakingAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "poolIndex(address)",
      "name": "poolIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "orderWithdraw(address,int256)",
      "name": "orderWithdraw",
      "description": "`maxWithdrawOrderAllowed` getter.",
      "parameterDecorators": [
        {
          "name": "_poolStakingAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeLastEpoch(address,address)",
      "name": "stakeLastEpoch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimOrderedWithdraw(address)",
      "name": "claimOrderedWithdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_poolStakingAddress",
          "description": "The staking address of the pool from which the ordered tokens/coins are withdrawn.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getPoolsToBeRemoved()",
      "name": "getPoolsToBeRemoved",
      "description": "address withdraws (or orders) all of its own staking tokens from the pool, inactivating the pool.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakingEpochDuration()",
      "name": "stakingEpochDuration",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "delegatorMinStake()",
      "name": "delegatorMinStake",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "orderedWithdrawAmountTotal(address)",
      "name": "orderedWithdrawAmountTotal",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPoolsInactive()",
      "name": "getPoolsInactive",
      "description": "has zero stake, or if its entire stake is ordered to be withdrawn.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "validatorSetContract()",
      "name": "validatorSetContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "orderedWithdrawAmount(address,address)",
      "name": "orderedWithdrawAmount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeMyPool()",
      "name": "removeMyPool",
      "description": "they are an `unremovable validator`.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "poolToBeRemovedIndex(address)",
      "name": "poolToBeRemovedIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "incrementStakingEpoch()",
      "name": "incrementStakingEpoch",
      "description": "Called by the `ValidatorSetAuRa.newValidatorSet` at the last block of the finished staking epoch.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "MAX_CANDIDATES()",
      "name": "MAX_CANDIDATES",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(address,uint256)",
      "name": "withdraw",
      "description": "by the `maxWithdrawAllowed` getter.",
      "parameterDecorators": [
        {
          "name": "_fromPoolStakingAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "areStakeAndWithdrawAllowed()",
      "name": "areStakeAndWithdrawAllowed",
      "description": "Used by all staking/withdrawal functions.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolToBeElectedIndex(address)",
      "name": "poolToBeElectedIndex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRewardAmount(uint256[],address,address)",
      "name": "getRewardAmount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingEpochs",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_poolStakingAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_staker",
          "description": "The staker address (validator's staking address or delegator's address).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenRewardSum",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "nativeRewardSum",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}