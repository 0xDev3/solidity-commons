{"schema":"../schema.json","tags":["liquidity"],"name":"RoutersFacet","description":"","eventDecorators":[{"signature":"LiquidityFeeNumeratorUpdated(uint256,address)","name":"LiquidityFeeNumeratorUpdated","description":"Emitted when the LIQUIDITY_FEE_NUMERATOR variable is updated.","parameterDecorators":[{"name":"liquidityFeeNumerator","description":"- The LIQUIDITY_FEE_NUMERATOR new value.","recommendedTypes":[],"indexed":false},{"name":"caller","description":"- The account that called the function.","recommendedTypes":[],"indexed":false}]},{"signature":"MaxRoutersPerTransferUpdated(uint256,address)","name":"MaxRoutersPerTransferUpdated","description":"Emitted when the maxRoutersPerTransfer variable is updated.","parameterDecorators":[{"name":"maxRoutersPerTransfer","description":"- The maxRoutersPerTransfer new value.","recommendedTypes":[],"indexed":false},{"name":"caller","description":"- The account that called the function.","recommendedTypes":[],"indexed":false}]},{"signature":"RouterAdded(address,address)","name":"RouterAdded","description":"Emitted when a new router is added.","parameterDecorators":[{"name":"router","description":"- The address of the added router.","recommendedTypes":[],"indexed":true},{"name":"caller","description":"- The account that called the function.","recommendedTypes":[],"indexed":false}]},{"signature":"RouterApprovedForPortal(address,address)","name":"RouterApprovedForPortal","description":"Emitted when a router is approved for Portal.","parameterDecorators":[{"name":"router","description":"- The address of the approved router.","recommendedTypes":[],"indexed":false},{"name":"caller","description":"- The account that called the function.","recommendedTypes":[],"indexed":false}]},{"signature":"RouterLiquidityAdded(address,address,bytes32,uint256,address)","name":"RouterLiquidityAdded","description":"Emitted when a router adds liquidity to the contract.","parameterDecorators":[{"name":"router","description":"- The address of the router the funds were credited to.","recommendedTypes":[],"indexed":true},{"name":"local","description":"- The address of the token added (all liquidity held in local asset).","recommendedTypes":[],"indexed":false},{"name":"key","description":"- The hash of the canonical id and domain.","recommendedTypes":[],"indexed":false},{"name":"amount","description":"- The amount of liquidity added.","recommendedTypes":[],"indexed":false},{"name":"caller","description":"- The account that called the function.","recommendedTypes":[],"indexed":false}]},{"signature":"RouterLiquidityRemoved(address,address,address,bytes32,uint256,address)","name":"RouterLiquidityRemoved","description":"Emitted when a router withdraws liquidity from the contract.","parameterDecorators":[{"name":"router","description":"- The router you are removing liquidity from.","recommendedTypes":[],"indexed":true},{"name":"to","description":"- The address the funds were withdrawn to.","recommendedTypes":[],"indexed":false},{"name":"local","description":"- The address of the token withdrawn.","recommendedTypes":[],"indexed":false},{"name":"key","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"- The amount of liquidity withdrawn.","recommendedTypes":[],"indexed":false},{"name":"caller","description":"- The account that called the function.","recommendedTypes":[],"indexed":false}]},{"signature":"RouterOwnerAccepted(address,address,address)","name":"RouterOwnerAccepted","description":"Emitted when the owner of router is accepted.","parameterDecorators":[{"name":"router","description":"- The address of the added router.","recommendedTypes":[],"indexed":true},{"name":"prevOwner","description":"- The address of the previous owner of the router.","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"- The address of the new owner of the router.","recommendedTypes":[],"indexed":true}]},{"signature":"RouterOwnerProposed(address,address,address)","name":"RouterOwnerProposed","description":"Emitted when the owner of router is proposed.","parameterDecorators":[{"name":"router","description":"- The address of the added router.","recommendedTypes":[],"indexed":true},{"name":"prevProposed","description":"- The address of the previous proposed.","recommendedTypes":[],"indexed":true},{"name":"newProposed","description":"- The address of the new proposed.","recommendedTypes":[],"indexed":true}]},{"signature":"RouterRecipientSet(address,address,address)","name":"RouterRecipientSet","description":"Emitted when the recipient of router is updated.","parameterDecorators":[{"name":"router","description":"- The address of the added router.","recommendedTypes":[],"indexed":true},{"name":"prevRecipient","description":"- The address of the previous recipient of the router.","recommendedTypes":[],"indexed":true},{"name":"newRecipient","description":"- The address of the new recipient of the router.","recommendedTypes":[],"indexed":true}]},{"signature":"RouterRemoved(address,address)","name":"RouterRemoved","description":"Emitted when an existing router is removed.","parameterDecorators":[{"name":"router","description":"- The address of the removed router.","recommendedTypes":[],"indexed":true},{"name":"caller","description":"- The account that called the function.","recommendedTypes":[],"indexed":false}]},{"signature":"RouterUnapprovedForPortal(address,address)","name":"RouterUnapprovedForPortal","description":"Emitted when a router is disapproved for Portal.","parameterDecorators":[{"name":"router","description":"- The address of the disapproved router.","recommendedTypes":[],"indexed":false},{"name":"caller","description":"- The account that called the function.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"LIQUIDITY_FEE_DENOMINATOR()","name":"LIQUIDITY_FEE_DENOMINATOR","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"LIQUIDITY_FEE_NUMERATOR()","name":"LIQUIDITY_FEE_NUMERATOR","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"acceptProposedRouterOwner(address)","name":"acceptProposedRouterOwner","description":"New router owner must accept role, or previous if proposed is 0x0.","parameterDecorators":[{"name":"router","description":"Router address to set recipient.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addRouterLiquidity(uint256,address)","name":"addRouterLiquidity","description":"This is used by any router to increase their available liquidity for a given asset. The liquidity will be held in the local asset, which is the representation if you are *not* on the canonical domain, and the canonical asset otherwise.","parameterDecorators":[{"name":"_amount","description":"- The amount of liquidity to add for the router.","recommendedTypes":[]},{"name":"_local","description":"- The address of the asset you're adding liquidity for. If adding liquidity of the native asset, routers may use `address(0)` or the wrapped asset.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addRouterLiquidityFor(uint256,address,address)","name":"addRouterLiquidityFor","description":"This is used by anyone to increase a router's available liquidity for a given asset. The liquidity will be held in the local asset, which is the representation if you are *not* on the canonical domain, and the canonical asset otherwise.","parameterDecorators":[{"name":"_amount","description":"- The amount of liquidity to add for the router.","recommendedTypes":[]},{"name":"_local","description":"- The address of the asset you're adding liquidity for. If adding liquidity of the native asset, routers may use `address(0)` or the wrapped asset.","recommendedTypes":[]},{"name":"_router","description":"The router you are adding liquidity on behalf of.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"approveRouterForPortal(address)","name":"approveRouterForPortal","description":"Allow router to use Portals.","parameterDecorators":[{"name":"_router","description":"- The router address to approve.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getProposedRouterOwner(address)","name":"getProposedRouterOwner","description":"Returns the currently proposed router owner. All routers must wait for the delay timeout before accepting a new owner.","parameterDecorators":[{"name":"_router","description":"The relevant router address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getProposedRouterOwnerTimestamp(address)","name":"getProposedRouterOwnerTimestamp","description":"Returns the currently proposed router owner timestamp. All routers must wait for the delay timeout before accepting a new owner.","parameterDecorators":[{"name":"_router","description":"The relevant router address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getRouterApproval(address)","name":"getRouterApproval","description":"Returns the approved router for the given router address.","parameterDecorators":[{"name":"_router","description":"The relevant router address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getRouterApprovalForPortal(address)","name":"getRouterApprovalForPortal","description":"Returns whether the router is approved for portals or not.","parameterDecorators":[{"name":"_router","description":"The relevant router address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getRouterOwner(address)","name":"getRouterOwner","description":"Returns the router owner if it is set, or the router itself if not. Uses logic function here to handle the case where router owner is not set. Other getters within this interface use explicitly the stored value.","parameterDecorators":[{"name":"_router","description":"The relevant router address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRouterRecipient(address)","name":"getRouterRecipient","description":"Returns the recipient for the specified router. The recipient (if set) receives all funds when router liquidity is removed.","parameterDecorators":[{"name":"_router","description":"The relevant router address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"maxRoutersPerTransfer()","name":"maxRoutersPerTransfer","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"proposeRouterOwner(address,address)","name":"proposeRouterOwner","description":"Current owner or router may propose a new router owner.","parameterDecorators":[{"name":"router","description":"Router address to set recipient.","recommendedTypes":[]},{"name":"proposed","description":"Proposed owner Address to set to router.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeRouter(address)","name":"removeRouter","description":"Used to remove routers that can transact crosschain.","parameterDecorators":[{"name":"router","description":"Router address to remove.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeRouterLiquidity(uint256,address,address)","name":"removeRouterLiquidity","description":"This is used by any router to decrease their available liquidity for a given asset.","parameterDecorators":[{"name":"_amount","description":"- The amount of liquidity to remove for the router.","recommendedTypes":[]},{"name":"_local","description":"- The address of the asset you're removing liquidity from. If removing liquidity of the native asset, routers may use `address(0)` or the wrapped asset.","recommendedTypes":[]},{"name":"_to","description":"The address that will receive the liquidity being removed if no router recipient exists.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeRouterLiquidityFor(uint256,address,address,address)","name":"removeRouterLiquidityFor","description":"This is used by any router owner to decrease their available liquidity for a given asset.","parameterDecorators":[{"name":"_amount","description":"- The amount of liquidity to remove for the router.","recommendedTypes":[]},{"name":"_local","description":"- The address of the asset you're removing liquidity from. If removing liquidity of the native asset, routers may use `address(0)` or the wrapped asset.","recommendedTypes":[]},{"name":"_to","description":"The address that will receive the liquidity being removed.","recommendedTypes":[]},{"name":"_router","description":"The address of the router.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"routerBalances(address,address)","name":"routerBalances","description":"","parameterDecorators":[{"name":"_router","description":"","recommendedTypes":[]},{"name":"_asset","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setLiquidityFeeNumerator(uint256)","name":"setLiquidityFeeNumerator","description":"Sets the LIQUIDITY_FEE_NUMERATOR. Admin can set LIQUIDITY_FEE_NUMERATOR variable, Liquidity fee should be less than 5%.","parameterDecorators":[{"name":"_numerator","description":"new LIQUIDITY_FEE_NUMERATOR.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMaxRoutersPerTransfer(uint256)","name":"setMaxRoutersPerTransfer","description":"Used to set the max amount of routers a payment can be routed through.","parameterDecorators":[{"name":"_newMaxRouters","description":"The new max amount of routers.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRouterRecipient(address,address)","name":"setRouterRecipient","description":"Sets the designated recipient for a router. Router should only be able to set this once otherwise if router key compromised, no problem is solved since attacker could just update recipient.","parameterDecorators":[{"name":"router","description":"Router address to set recipient.","recommendedTypes":[]},{"name":"recipient","description":"Recipient Address to set to router.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setupRouter(address,address,address)","name":"setupRouter","description":"Used to set router initial properties.","parameterDecorators":[{"name":"router","description":"Router address to setup.","recommendedTypes":[]},{"name":"owner","description":"Initial Owner of router.","recommendedTypes":[]},{"name":"recipient","description":"Initial Recipient of router.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unapproveRouterForPortal(address)","name":"unapproveRouterForPortal","description":"Remove router access to use Portals.","parameterDecorators":[{"name":"_router","description":"- The router address to remove approval.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}