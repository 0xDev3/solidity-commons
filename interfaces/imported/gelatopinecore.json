{
  "schema": "../schema.json",
  "tags": [],
  "name": "GelatoPineCore",
  "description": "",
  "eventDecorators": [
    {
      "signature": "DepositETH(bytes32,address,uint256,bytes)",
      "name": "DepositETH",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "_key",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OrderCancelled(bytes32,address,address,address,bytes,uint256)",
      "name": "OrderCancelled",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "_key",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_inputToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_witness",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OrderExecuted(bytes32,address,address,address,bytes,bytes,uint256,uint256)",
      "name": "OrderExecuted",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "_key",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_inputToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_witness",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_auxData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_bought",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ETH_ADDRESS()",
      "name": "ETH_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "GELATO()",
      "name": "GELATO",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "canExecuteOrder(address,address,address,address,bytes,bytes)",
      "name": "canExecuteOrder",
      "description": "Check whether an order can be executed or not.",
      "parameterDecorators": [
        {
          "name": "_module",
          "description": "- Address of the module to use for the order execution.",
          "recommendedTypes": []
        },
        {
          "name": "_inputToken",
          "description": "- Address of the input token.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "- Address of the order's owner.",
          "recommendedTypes": []
        },
        {
          "name": "_witness",
          "description": "- Address of the witness.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "- Bytes of the order's data.",
          "recommendedTypes": []
        },
        {
          "name": "_auxData",
          "description": "- Bytes of the auxiliar data used for the handlers to execute the order.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "bool - whether the order can be executed or not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cancelOrder(address,address,address,address,bytes)",
      "name": "cancelOrder",
      "description": "Cancel order. The params should be the same used for the order creation.",
      "parameterDecorators": [
        {
          "name": "_module",
          "description": "- Address of the module to use for the order execution.",
          "recommendedTypes": []
        },
        {
          "name": "_inputToken",
          "description": "- Address of the input token.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "- Address of the order's owner.",
          "recommendedTypes": []
        },
        {
          "name": "_witness",
          "description": "- Address of the witness.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "- Bytes of the order's data.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "decodeOrder(bytes)",
      "name": "decodeOrder",
      "description": "Get order's properties.",
      "parameterDecorators": [
        {
          "name": "_data",
          "description": "- Bytes of the order.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "module",
          "description": "- Address of the module to use for the order execution.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "inputToken",
          "description": "- Address of the input token.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "owner",
          "description": "- Address of the order's owner.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "witness",
          "description": "- Address of the witness.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "data",
          "description": "- Bytes of the order's data.",
          "recommendedTypes": [],
          "solidityType": "bytes"
        },
        {
          "name": "secret",
          "description": "- Private key of the _witness.",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "depositEth(bytes)",
      "name": "depositEth",
      "description": "Create an ETH to token order.",
      "parameterDecorators": [
        {
          "name": "_data",
          "description": "- Bytes of an ETH to token order. See `encodeEthOrder` for more info.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "encodeEthOrder(address,address,address,address,bytes,bytes32)",
      "name": "encodeEthOrder",
      "description": "Get the calldata needed to create a ETH to token order. Returns the input data that the user needs to use to create the order The _secret is used to prevent a front-running at the order execution.",
      "parameterDecorators": [
        {
          "name": "_module",
          "description": "- Address of the module to use for the order execution.",
          "recommendedTypes": []
        },
        {
          "name": "_inputToken",
          "description": "- Address of the input token.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "- Address of the order's owner.",
          "recommendedTypes": []
        },
        {
          "name": "_witness",
          "description": "- Address of the witness.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "- Bytes of the order's data.",
          "recommendedTypes": []
        },
        {
          "name": "_secret",
          "description": "- Private key of the _witness.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "bytes - input data to send the transaction.",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "encodeTokenOrder(address,address,address,address,bytes,bytes32,uint256)",
      "name": "encodeTokenOrder",
      "description": "Get the calldata needed to create a token to token/ETH order. Returns the input data that the user needs to use to create the order The _secret is used to prevent a front-running at the order execution The _amount is used as the param `_value` for the ERC20 `transfer` function.",
      "parameterDecorators": [
        {
          "name": "_module",
          "description": "- Address of the module to use for the order execution.",
          "recommendedTypes": []
        },
        {
          "name": "_inputToken",
          "description": "- Address of the input token.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "- Address of the order's owner.",
          "recommendedTypes": []
        },
        {
          "name": "_witness",
          "description": "- Address of the witness.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "- Bytes of the order's data.",
          "recommendedTypes": []
        },
        {
          "name": "_secret",
          "description": "- Private key of the _witness.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "- uint256 of the order amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "bytes - input data to send the transaction.",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ethDeposits(bytes32)",
      "name": "ethDeposits",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "executeOrder(address,address,address,bytes,bytes,bytes)",
      "name": "executeOrder",
      "description": "Executes an order. The sender should use the _secret to sign its own address to prevent front-runnings.",
      "parameterDecorators": [
        {
          "name": "_module",
          "description": "- Address of the module to use for the order execution.",
          "recommendedTypes": []
        },
        {
          "name": "_inputToken",
          "description": "- Address of the input token.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "- Address of the order's owner.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "- Bytes of the order's data.",
          "recommendedTypes": []
        },
        {
          "name": "_signature",
          "description": "- Signature to calculate the witness.",
          "recommendedTypes": []
        },
        {
          "name": "_auxData",
          "description": "- Bytes of the auxiliar data used for the handlers to execute the order.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "existOrder(address,address,address,address,bytes)",
      "name": "existOrder",
      "description": "Check whether an order exists or not. Check the balance of the order.",
      "parameterDecorators": [
        {
          "name": "_module",
          "description": "- Address of the module to use for the order execution.",
          "recommendedTypes": []
        },
        {
          "name": "_inputToken",
          "description": "- Address of the input token.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "- Address of the order's owner.",
          "recommendedTypes": []
        },
        {
          "name": "_witness",
          "description": "- Address of the witness.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "- Bytes of the order's data.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "bool - whether the order exists or not.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "keyOf(address,address,address,address,bytes)",
      "name": "keyOf",
      "description": "Get the order's key.",
      "parameterDecorators": [
        {
          "name": "_module",
          "description": "- Address of the module to use for the order execution.",
          "recommendedTypes": []
        },
        {
          "name": "_inputToken",
          "description": "- Address of the input token.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "- Address of the order's owner.",
          "recommendedTypes": []
        },
        {
          "name": "_witness",
          "description": "- Address of the witness.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "- Bytes of the order's data.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "bytes32 - order's key.",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vaultOfOrder(address,address,address,address,bytes)",
      "name": "vaultOfOrder",
      "description": "Get the vault's address of a token to token/ETH order.",
      "parameterDecorators": [
        {
          "name": "_module",
          "description": "- Address of the module to use for the order execution.",
          "recommendedTypes": []
        },
        {
          "name": "_inputToken",
          "description": "- Address of the input token.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "- Address of the order's owner.",
          "recommendedTypes": []
        },
        {
          "name": "_witness",
          "description": "- Address of the witness.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "- Bytes of the order's data.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address - The address of the vault.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}