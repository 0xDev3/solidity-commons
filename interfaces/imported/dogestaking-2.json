{"schema":"../schema.json","tags":[],"name":"DogeStaking","description":"","eventDecorators":[{"signature":"Deposited(address,uint256,uint256,uint256,uint256)","name":"Deposited","description":"An event emitted when a vote has been cast on a proposal. Emitted when a user deposits tokens.","parameterDecorators":[{"name":"sender","description":"User address.","recommendedTypes":[],"indexed":true},{"name":"amount","description":"The amount of deposited tokens.","recommendedTypes":[],"indexed":false},{"name":"balance","description":"Current user balance.","recommendedTypes":[],"indexed":false},{"name":"accruedReward","description":"User's accrued reward.","recommendedTypes":[],"indexed":false},{"name":"prevDepositDuration","description":"Duration of the previous deposit in seconds.","recommendedTypes":[],"indexed":false}]},{"signature":"LiquidityProvidersRewardAddressSet(address,address)","name":"LiquidityProvidersRewardAddressSet","description":"An event emitted when a vote has been cast on a proposal. Emitted when a new Liquidity Providers Reward address value is set.","parameterDecorators":[{"name":"value","description":"A new address value.","recommendedTypes":[],"indexed":false},{"name":"sender","description":"The owner address at the moment of address changing.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"An event emitted when a vote has been cast on a proposal.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RewardsTransferred(address,uint256)","name":"RewardsTransferred","description":"An event emitted when a vote has been cast on a proposal. Emitted when rewards is transferred for any user.","parameterDecorators":[{"name":"holder","description":"User address for which rewards is calculated.","recommendedTypes":[],"indexed":false},{"name":"amount","description":"Rewards calculated for this period.","recommendedTypes":[],"indexed":false}]},{"signature":"Withdrawn(address,uint256,uint256,uint256,uint256)","name":"Withdrawn","description":"An event emitted when a vote has been cast on a proposal. Emitted when a user withdraws tokens.","parameterDecorators":[{"name":"sender","description":"User address.","recommendedTypes":[],"indexed":true},{"name":"amount","description":"The amount of withdrawn tokens.","recommendedTypes":[],"indexed":false},{"name":"balance","description":"Current user balance.","recommendedTypes":[],"indexed":false},{"name":"accruedReward","description":"User's accrued reward.","recommendedTypes":[],"indexed":false},{"name":"lastDepositDuration","description":"Duration of the last deposit in seconds.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"allowStaking(bool)","name":"allowStaking","description":"This method is used to turn on or off the staking feature.","parameterDecorators":[{"name":"_status","description":"Status of the staking feature to be set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claim()","name":"claim","description":"Claim the available rewards in puppy token.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimTokens(address,address,uint256)","name":"claimTokens","description":"This method is used to claim unsupported tokens accidentally sent to the contract. It can only be called by the owner.","parameterDecorators":[{"name":"_token","description":"The address of the token contract (zero address for claiming native coins).","recommendedTypes":[]},{"name":"_to","description":"The address of the tokens/coins receiver.","recommendedTypes":[]},{"name":"_amount","description":"Amount to claim.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"depositedTokens(address)","name":"depositedTokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"dogeToken()","name":"dogeToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getNumberOfHolders()","name":"getNumberOfHolders","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Returns the total number of doge token holders who have staked.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalAvailableRewards()","name":"getTotalAvailableRewards","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Returns the total puppytoken available in the liquidity provider address.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUnclaimedReward(address)","name":"getUnclaimedReward","description":"","parameterDecorators":[{"name":"_holder","description":"Address for which the reward is to be calculated.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Returns the available puppy tokens to be claimed.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address,address)","name":"initialize","description":"","parameterDecorators":[{"name":"_owner","description":"","recommendedTypes":[]},{"name":"_dogeTokenAddress","description":"","recommendedTypes":[]},{"name":"_puppyTokenAddress","description":"","recommendedTypes":[]},{"name":"_liquidityProvidersRewardAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lastClaimedTime(address)","name":"lastClaimedTime","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"liquidityProvidersRewardAddress()","name":"liquidityProvidersRewardAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"puppyToken()","name":"puppyToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardRate()","name":"rewardRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setRewardRate(uint256)","name":"setRewardRate","description":"This method is used to update the reward rate per year. Add additional two zeroes to increase precision.","parameterDecorators":[{"name":"_rewardRate","description":"Reward rate to be set per yeat with two additional zeroes like 1000% is provided as 100000.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake(uint256)","name":"stake","description":"Main method to stake the doge tokens. User need to approve first to stake.","parameterDecorators":[{"name":"_amountToStake","description":"Amount to stake, this will be transferred from user's wallet to this contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakingStatus()","name":"stakingStatus","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"totalClaimedRewards()","name":"totalClaimedRewards","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalRewardsEarned(address)","name":"totalRewardsEarned","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalStaked()","name":"totalStaked","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unstake(uint256)","name":"unstake","description":"Unstake the doge tokens, Unstaked tokens will be transferred to caller's wallet.","parameterDecorators":[{"name":"_amountToUnstake","description":"Amount to be unstaked.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}