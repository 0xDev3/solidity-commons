{"schema":"../schema.json","tags":[],"name":"Hermez","description":"","eventDecorators":[{"signature":"AddToken(address,uint32)","name":"AddToken","description":"Event emitted when user create request for credit.","parameterDecorators":[{"name":"tokenAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenID","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ForgeBatch(uint32,uint16)","name":"ForgeBatch","description":"Event emitted when user create request for credit.","parameterDecorators":[{"name":"batchNum","description":"","recommendedTypes":[],"indexed":true},{"name":"l1UserTxsLen","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"InitializeHermezEvent(uint8,uint256,uint64)","name":"InitializeHermezEvent","description":"Event emitted when user create request for credit.","parameterDecorators":[{"name":"forgeL1L2BatchTimeout","description":"","recommendedTypes":[],"indexed":false},{"name":"feeAddToken","description":"","recommendedTypes":[],"indexed":false},{"name":"withdrawalDelay","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"L1UserTxEvent(uint32,uint8,bytes)","name":"L1UserTxEvent","description":"Event emitted when user create request for credit.","parameterDecorators":[{"name":"queueIndex","description":"","recommendedTypes":[],"indexed":true},{"name":"position","description":"","recommendedTypes":[],"indexed":true},{"name":"l1UserTx","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogData(bytes)","name":"LogData","description":"Event emitted when user create request for credit.","parameterDecorators":[{"name":"b","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogInput(uint256)","name":"LogInput","description":"Event emitted when user create request for credit.","parameterDecorators":[{"name":"i","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSig(bytes32,bytes32,bytes32,uint8)","name":"LogSig","description":"Event emitted when user create request for credit.","parameterDecorators":[{"name":"bjj","description":"","recommendedTypes":[],"indexed":false},{"name":"r","description":"","recommendedTypes":[],"indexed":false},{"name":"s","description":"","recommendedTypes":[],"indexed":false},{"name":"v","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UpdateFeeAddToken(uint256)","name":"UpdateFeeAddToken","description":"Event emitted when user create request for credit.","parameterDecorators":[{"name":"newFeeAddToken","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UpdateForgeL1L2BatchTimeout(uint8)","name":"UpdateForgeL1L2BatchTimeout","description":"Event emitted when user create request for credit.","parameterDecorators":[{"name":"newForgeL1L2BatchTimeout","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WithdrawEvent(uint48,uint32,bool)","name":"WithdrawEvent","description":"Event emitted when user create request for credit.","parameterDecorators":[{"name":"idx","description":"","recommendedTypes":[],"indexed":true},{"name":"numExitRoot","description":"","recommendedTypes":[],"indexed":true},{"name":"instantWithdraw","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"ABSOLUTE_MAX_L1L2BATCHTIMEOUT()","name":"ABSOLUTE_MAX_L1L2BATCHTIMEOUT","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"ACCOUNT_CREATION_HASH()","name":"ACCOUNT_CREATION_HASH","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"AUTHORISE_TYPEHASH()","name":"AUTHORISE_TYPEHASH","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"DOMAIN_SEPARATOR()","name":"DOMAIN_SEPARATOR","description":"Retrieve the DOMAIN_SEPARATOR hash.","parameterDecorators":[],"returnDecorators":[{"name":"domainSeparator","description":"hash used for sign messages.","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"EIP712DOMAIN_HASH()","name":"EIP712DOMAIN_HASH","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"HERMEZ_NETWORK_HASH()","name":"HERMEZ_NETWORK_HASH","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"NAME_HASH()","name":"NAME_HASH","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"VERSION_HASH()","name":"VERSION_HASH","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"_checkSig(bytes32,bytes32,bytes32,uint8)","name":"_checkSig","description":"Retrieve ethereum address from a (defaultMessage + babyjub) signature.","parameterDecorators":[{"name":"babyjub","description":"Public key babyjubjub represented as point: sign + (Ay).","recommendedTypes":[]},{"name":"r","description":"Signature parameter.","recommendedTypes":[]},{"name":"s","description":"Signature parameter.","recommendedTypes":[]},{"name":"v","description":"Signature parameter.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Ethereum address recovered from the signature.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"addL1Transaction(uint256,uint48,uint40,uint40,uint32,uint48,bytes)","name":"addL1Transaction","description":"Create a new rollup l1 user transaction.","parameterDecorators":[{"name":"babyPubKey","description":"Public key babyjubjub represented as point: sign + (Ay).","recommendedTypes":[]},{"name":"fromIdx","description":"Index leaf of sender account or 0 if create new account.","recommendedTypes":[]},{"name":"loadAmountF","description":"Amount from L1 to L2 to sender account or new account.","recommendedTypes":[]},{"name":"amountF","description":"Amount transfered between L2 accounts.","recommendedTypes":[]},{"name":"tokenID","description":"Token identifier.","recommendedTypes":[]},{"name":"toIdx","description":"Index leaf of recipient account, or _EXIT_IDX if exit, or 0 if not transfer Events: `L1UserTxEvent`.","recommendedTypes":[]},{"name":"permit","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"exitNullifierMap(uint32,uint48)","name":"exitNullifierMap","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"exitRootsMap(uint32)","name":"exitRootsMap","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"feeAddToken()","name":"feeAddToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"forgeBatch(uint48,uint256,uint256,bytes,bytes,bytes,uint8,bool,uint256[2],uint256[2][2],uint256[2])","name":"forgeBatch","description":"Forge a new batch providing the L2 Transactions, L1Corrdinator transactions and the proof. If the proof is succesfully verified, update the current state, adding a new state and exit root. In order to optimize the gas consumption the parameters `encodedL1CoordinatorTx`, `l1L2TxsData` and `feeIdxCoordinator` are read directly from the calldata using assembly with the instruction `calldatacopy`.","parameterDecorators":[{"name":"newLastIdx","description":"New total rollup accounts.","recommendedTypes":[]},{"name":"newStRoot","description":"New state root.","recommendedTypes":[]},{"name":"newExitRoot","description":"New exit root.","recommendedTypes":[]},{"name":"encodedL1CoordinatorTx","description":"Encoded L1-coordinator transactions.","recommendedTypes":[]},{"name":"l1L2TxsData","description":"Encoded l2 data.","recommendedTypes":[]},{"name":"feeIdxCoordinator","description":"Encoded idx accounts of the coordinator where the fees will be payed.","recommendedTypes":[]},{"name":"verifierIdx","description":"Verifier index.","recommendedTypes":[]},{"name":"l1Batch","description":"Indicates if this batch will be L2 or L1-L2.","recommendedTypes":[]},{"name":"proofA","description":"zk-snark input.","recommendedTypes":[]},{"name":"proofB","description":"zk-snark input.","recommendedTypes":[]},{"name":"proofC","description":"zk-snark input Events: `ForgeBatch`.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"forgeL1L2BatchTimeout()","name":"forgeL1L2BatchTimeout","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"getChainId()","name":"getChainId","description":"","parameterDecorators":[],"returnDecorators":[{"name":"chainId","description":"The current chainId where the smarctoncract is executed.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"l1L2TxsDataHashMap(uint32)","name":"l1L2TxsDataHashMap","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"lastForgedBatch()","name":"lastForgedBatch","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"lastIdx()","name":"lastIdx","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint48"}],"emittableEvents":[],"readOnly":true},{"signature":"lastL1L2Batch()","name":"lastL1L2Batch","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"mapL1TxQueue(uint32)","name":"mapL1TxQueue","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"nextL1FillingQueue()","name":"nextL1FillingQueue","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"nextL1ToForgeQueue()","name":"nextL1ToForgeQueue","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"registerTokensCount()","name":"registerTokensCount","description":"Retrieve the number of tokens added in rollup.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Number of tokens added in rollup.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rollupVerifiers(uint256)","name":"rollupVerifiers","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"verifierInterface","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"maxTx","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"nLevels","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rollupVerifiersLength()","name":"rollupVerifiersLength","description":"Retrieve the number of rollup verifiers.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Number of verifiers.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"stateRootMap(uint32)","name":"stateRootMap","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenHEZ()","name":"tokenHEZ","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenList(uint256)","name":"tokenList","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenMap(address)","name":"tokenMap","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}