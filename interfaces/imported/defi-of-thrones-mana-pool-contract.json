{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "ManaPoolContract",
  "description": "DeFi Of Thrones Mana Pool Contract.",
  "eventDecorators": [
    {
      "signature": "AddRewardFromTickets(uint256,uint256,uint256,address,bool,uint256,uint256)",
      "name": "AddRewardFromTickets",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "warIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "manaEarned",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "valueInDoTx",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isEarly",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "warBonus",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ticketsNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AddTokens(uint256,address,bool)",
      "name": "AddTokens",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "valueInDoTx",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isUni",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ClaimNFT(uint256,address)",
      "name": "ClaimNFT",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "_mana",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RemoveTokens(uint256,address,bool)",
      "name": "RemoveTokens",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "valueInDoTx",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isUni",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addNFTs(uint256[],uint256[])",
      "name": "addNFTs",
      "description": "addNFTs - Owner can add NFTs & mana required to claim them Parameters : _ids : NFTs ids _manaRequired : Mana required for each NFT*.",
      "parameterDecorators": [
        {
          "name": "_ids",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_manaRequired",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addRewardFromTickets(uint256,uint256,uint256,address,bool)",
      "name": "addRewardFromTickets",
      "description": "addRewardFromTickets - When an user buys tickets from the game Parameters : _amountInWei Number of LP tokens*.",
      "parameterDecorators": [
        {
          "name": "_warIndex",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_ticketsNumber",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_dotxAmountInWei",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_userAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_isEarly",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addTokens(uint256,bool)",
      "name": "addTokens",
      "description": "addTokens - When an user wants to stake LP Parameters : _amountInWei Number of LP tokens*.",
      "parameterDecorators": [
        {
          "name": "_amountInWei",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_isUni",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculatePercentage(uint256,uint256,uint256)",
      "name": "calculatePercentage",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "percentage",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "selecteWinnerPrecision",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateRewardPerSecond(uint256)",
      "name": "calculateRewardPerSecond",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimNFT(uint256)",
      "name": "claimNFT",
      "description": "claimNFT - When an user want to use its MANA to claim NFT Parameters : _nftId : NFT id*.",
      "parameterDecorators": [
        {
          "name": "_nftId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "dotxGameAddress()",
      "name": "dotxGameAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "earlyBonusPercentage()",
      "name": "earlyBonusPercentage",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentReward(address)",
      "name": "getCurrentReward",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_userAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getManaForNFT(uint256[])",
      "name": "getManaForNFT",
      "description": "getManaForNFT - Return mana required for NFTs Parameters : _ids : NFTs ids*.",
      "parameterDecorators": [
        {
          "name": "_ids",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStake(address)",
      "name": "getStake",
      "description": "",
      "parameterDecorators": [
        {
          "name": "userAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "startTime",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "lpUniAmount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "lpMaticAmount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "currentReward",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalLpTokens(address)",
      "name": "getTotalLpTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "manaBonus(uint256)",
      "name": "manaBonus",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nfts(uint256)",
      "name": "nfts",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "manaRequired",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pool2()",
      "name": "pool2",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeTokens(uint256,bool)",
      "name": "removeTokens",
      "description": "addTokens - When an user wants to remove LP Parameters : _amountInWei Number of LP tokens*.",
      "parameterDecorators": [
        {
          "name": "_amountInWei",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_isUni",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDoTxGame(address)",
      "name": "setDoTxGame",
      "description": "",
      "parameterDecorators": [
        {
          "name": "gameAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDoTxMaticLP(address)",
      "name": "setDoTxMaticLP",
      "description": "",
      "parameterDecorators": [
        {
          "name": "dotxLpTokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDoTxNFT(address)",
      "name": "setDoTxNFT",
      "description": "",
      "parameterDecorators": [
        {
          "name": "dotxNFTAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDoTxUniLP(address)",
      "name": "setDoTxUniLP",
      "description": "",
      "parameterDecorators": [
        {
          "name": "dotxLpTokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setManaBonus(uint256,uint256)",
      "name": "setManaBonus",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_warIndex",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_manaBonus",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPool2(address)",
      "name": "setPool2",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_pool2",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setearlyBonusPercentage(uint256)",
      "name": "setearlyBonusPercentage",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_earlyBonusPercentage",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakes(address)",
      "name": "stakes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lpUniAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lpMaticAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "currentReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferNFT(uint256[],address)",
      "name": "transferNFT",
      "description": "addNFTs - Owner can add NFTs & mana required to claim them Parameters : _ids : NFTs ids*.",
      "parameterDecorators": [
        {
          "name": "_ids",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_recipient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateManaForNft(uint256,uint256)",
      "name": "updateManaForNft",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_nftId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_manaRequired",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}