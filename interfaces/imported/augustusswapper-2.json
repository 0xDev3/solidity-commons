{
  "schema": "../schema.json",
  "tags": [
    "swaps"
  ],
  "name": "AugustusSwapper",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Bought(address,address,address,address,uint256,uint256,string)",
      "name": "Bought",
      "description": "A DApp has been deauthorized by a user for a worker.",
      "parameterDecorators": [
        {
          "name": "initiator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "srcToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "destToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "srcAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "receivedAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "referrer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FeeTaken(uint256,uint256,uint256)",
      "name": "FeeTaken",
      "description": "A DApp has been deauthorized by a user for a worker.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "A DApp has been deauthorized by a user for a worker.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused()",
      "name": "Paused",
      "description": "A DApp has been deauthorized by a user for a worker.",
      "parameterDecorators": []
    },
    {
      "signature": "Swapped(address,address,address,address,uint256,uint256,uint256,string)",
      "name": "Swapped",
      "description": "A DApp has been deauthorized by a user for a worker.",
      "parameterDecorators": [
        {
          "name": "initiator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "srcToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "destToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "srcAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "receivedAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expectedAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "referrer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused()",
      "name": "Unpaused",
      "description": "A DApp has been deauthorized by a user for a worker.",
      "parameterDecorators": []
    }
  ],
  "functionDecorators": [
    {
      "signature": "approve(address,address,uint256)",
      "name": "approve",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buy(tuple(address,address,uint256,uint256,address,string,tuple[]))",
      "name": "buy",
      "description": "",
      "parameterDecorators": [
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "fromToken",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "toToken",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "fromAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "toAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "beneficiary",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "referrer",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "route",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeGSTHolder(address)",
      "name": "changeGSTHolder",
      "description": "",
      "parameterDecorators": [
        {
          "name": "gstHolder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getFeeWallet()",
      "name": "getFeeWallet",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getGasMintPrice()",
      "name": "getGasMintPrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPartnerRegistry()",
      "name": "getPartnerRegistry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenTransferProxy()",
      "name": "getTokenTransferProxy",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getVersion()",
      "name": "getVersion",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWhitelistAddress()",
      "name": "getWhitelistAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "multiSwap(tuple(address,address,uint256,uint256,uint256,address,string,tuple[]))",
      "name": "multiSwap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "fromToken",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "toToken",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "fromAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "toAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "expectedAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "beneficiary",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "referrer",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "path",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "Called by a pauser to pause, triggers stopped state.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFeeWallet(address)",
      "name": "setFeeWallet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "feeWallet",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGasMintPrice(uint256)",
      "name": "setGasMintPrice",
      "description": "",
      "parameterDecorators": [
        {
          "name": "gasMintPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPartnerRegistry(address)",
      "name": "setPartnerRegistry",
      "description": "",
      "parameterDecorators": [
        {
          "name": "partnerRegistry",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWhitelistAddress(address)",
      "name": "setWhitelistAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "whitelisted",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "simplBuy(address,address,uint256,uint256,address[],bytes,uint256[],uint256[],address,string)",
      "name": "simplBuy",
      "description": "",
      "parameterDecorators": [
        {
          "name": "fromToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "fromAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "callees",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "exchangeData",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "startIndexes",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "referrer",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "simpleSwap(address,address,uint256,uint256,uint256,address[],bytes,uint256[],uint256[],address,string)",
      "name": "simpleSwap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "fromToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "fromAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "expectedAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "callees",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "exchangeData",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "startIndexes",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "referrer",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferTokens(address,address,uint256)",
      "name": "transferTokens",
      "description": "Allows owner of the contract to transfer any tokens which are assigned to the contract This method is for safety if by any chance tokens or ETHs are assigned to the contract by mistaketoken Address of the token to be transferreddestination Recepient of the tokenamount Amount of tokens to be transferred.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "destination",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "Called by a pauser to unpause, returns to normal state.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawAllWETH(address)",
      "name": "withdrawAllWETH",
      "description": "This function sends the WETH returned during the exchange to the user.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": ": The WETH Address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}