{"schema":"../schema.json","tags":[],"name":"TreasuryDelegate","description":"","eventDecorators":[{"signature":"NewAdmin(address,address)","name":"NewAdmin","description":"The event emitted when the uniswap window changes.","parameterDecorators":[{"name":"oldAdmin","description":"","recommendedTypes":[],"indexed":false},{"name":"admin","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPendingAdmin(address,address)","name":"NewPendingAdmin","description":"The event emitted when the uniswap window changes.","parameterDecorators":[{"name":"oldPendingAdmin","description":"","recommendedTypes":[],"indexed":false},{"name":"newPendingAdmin","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"_acceptAdmin()","name":"_acceptAdmin","description":"Accepts transfer of admin rights. msg.sender must be pendingAdmin. Admin function for pending admin to accept role and update admin.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setPendingAdmin(address)","name":"_setPendingAdmin","description":"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer. Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.","parameterDecorators":[{"name":"newPendingAdmin","description":"New pending admin.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"admin()","name":"admin","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"implementation()","name":"implementation","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address)","name":"initialize","description":"Initializes the note contract.","parameterDecorators":[{"name":"note_","description":"The address of note ERC20 contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"note()","name":"note","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingAdmin()","name":"pendingAdmin","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"queryCantoBalance()","name":"queryCantoBalance","description":"Method to query current balance of CANTO in the treasury.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"treasuryCantoBalance the canto balance.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"queryNoteBalance()","name":"queryNoteBalance","description":"Method to query current balance of NOTE in the treasury.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"treasuryNoteBalance the note balance.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"redeem(address,uint256)","name":"redeem","description":"","parameterDecorators":[{"name":"cNote","description":"","recommendedTypes":[]},{"name":"cTokens","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"sendFund(address,uint256,string)","name":"sendFund","description":"Method to send treasury funds to recipient. Only the admin can call this method (Timelock contract).","parameterDecorators":[{"name":"recipient","description":"Address receiving funds.","recommendedTypes":[]},{"name":"amount","description":"Amount to send.","recommendedTypes":[]},{"name":"denom","description":"Denomination of fund to send.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unigov()","name":"unigov","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}