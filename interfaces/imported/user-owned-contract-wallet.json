{
  "schema": "../schema.json",
  "tags": [],
  "name": "UserWallet",
  "description": "User Owned Contract Wallet.",
  "eventDecorators": [
    {
      "signature": "LogExecute(address,uint256,uint256)",
      "name": "LogExecute",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogNote(bytes4,address,bytes32,bytes32,uint256,bytes)",
      "name": "LogNote",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sig",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "guy",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "foo",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "bar",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "wad",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fax",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogSetOwner(address)",
      "name": "LogSetOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "setOwner(address)",
      "name": "setOwner",
      "description": "sets new owner.",
      "parameterDecorators": [
        {
          "name": "nextOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isAuth(address)",
      "name": "isAuth",
      "description": "checks if called by owner or contract itself.",
      "parameterDecorators": [
        {
          "name": "src",
          "description": "is the address initiating the call.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registry()",
      "name": "registry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "execute(address,bytes,uint256,uint256)",
      "name": "execute",
      "description": "Execute authorised calls via delegate call.",
      "parameterDecorators": [
        {
          "name": "_target",
          "description": "logic proxy address.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "delegate call data.",
          "recommendedTypes": []
        },
        {
          "name": "_src",
          "description": "to find the source.",
          "recommendedTypes": []
        },
        {
          "name": "_session",
          "description": "to find the session.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "response",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}