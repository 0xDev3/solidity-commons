{"schema":"../schema.json","tags":["vaults"],"name":"Vault","description":"Vault must be called right after Perpetual is deployed to set Perpetual as the owner of the contract.","eventDecorators":[{"signature":"BadDebtGenerated(uint256,address,uint256)","name":"BadDebtGenerated","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"idx","description":"","recommendedTypes":[],"indexed":false},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":false},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]},{"signature":"TransferOwner(address,address)","name":"TransferOwner","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"recipient","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TransferOwnerClaim(address,address)","name":"TransferOwnerClaim","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"recipient","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"chainlinkOracle()","name":"chainlinkOracle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"claimOwner()","name":"claimOwner","description":"`pendingOwner` can claim `owner` account.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"clearingHouse()","name":"clearingHouse","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit(uint256,address,uint256,address)","name":"deposit","description":"Deposit reserveTokens to account.","parameterDecorators":[{"name":"idx","description":"","recommendedTypes":[]},{"name":"user","description":"","recommendedTypes":[]},{"name":"amount","description":"Amount of reserveTokens with token decimals.","recommendedTypes":[]},{"name":"depositToken","description":"Token address deposited (used for backwards compatibility).","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"getAssetPrice()","name":"getAssetPrice","description":"get the price of an asset.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"getBadDebt()","name":"getBadDebt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getBalance(uint256,address)","name":"getBalance","description":"","parameterDecorators":[{"name":"idx","description":"","recommendedTypes":[]},{"name":"user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"getReserveTokenDecimals()","name":"getReserveTokenDecimals","description":"get the number of decimals of the ERC20 token used in the vault.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getReserveValue(uint256,address)","name":"getReserveValue","description":"get the Portfolio value of an account.","parameterDecorators":[{"name":"idx","description":"","recommendedTypes":[]},{"name":"account","description":"Account address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalReserveToken()","name":"getTotalReserveToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"insurance()","name":"insurance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingOwner()","name":"pendingOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"reserveToken()","name":"reserveToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setClearingHouse(address)","name":"setClearingHouse","description":"","parameterDecorators":[{"name":"newClearingHouse","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"settleProfit(uint256,address,int256)","name":"settleProfit","description":"","parameterDecorators":[{"name":"idx","description":"","recommendedTypes":[]},{"name":"user","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwner(address,bool)","name":"transferOwner","description":"Transfer `owner` account.","parameterDecorators":[{"name":"recipient","description":"Account granted `owner` access control.","recommendedTypes":[]},{"name":"direct","description":"If 'true', ownership is directly transferred.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdraw(uint256,address,uint256,address)","name":"withdraw","description":"Withdraw ERC20 reserveToken from margin of the contract account.","parameterDecorators":[{"name":"idx","description":"","recommendedTypes":[]},{"name":"user","description":"","recommendedTypes":[]},{"name":"amount","description":"Amount of USDC deposited.","recommendedTypes":[]},{"name":"withdrawToken","description":"ERC20 reserveToken address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"withdrawAll(uint256,address,address)","name":"withdrawAll","description":"Withdraw all ERC20 reserveToken from margin of the contract account.","parameterDecorators":[{"name":"idx","description":"","recommendedTypes":[]},{"name":"user","description":"","recommendedTypes":[]},{"name":"withdrawToken","description":"ERC20 reserveToken address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false}]}