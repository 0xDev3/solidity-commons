{
  "schema": "../schema.json",
  "tags": [],
  "name": "AlgV1",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "addBot(address)",
      "name": "addBot",
      "description": "",
      "parameterDecorators": [
        {
          "name": "bot",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "doSwapArbMultiRoutersV4(uint256,uint256,uint256,address[],address[])",
      "name": "doSwapArbMultiRoutersV4",
      "description": "",
      "parameterDecorators": [
        {
          "name": "flag",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "threshold",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "routers",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getArbChance(uint256,uint256,address[],address[])",
      "name": "getArbChance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "flag",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amountIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "routers",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "profit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getArbMultiRoutersV4(uint256,address[],address[])",
      "name": "getArbMultiRoutersV4",
      "description": "",
      "parameterDecorators": [
        {
          "name": "flag",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "routers",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountout",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "profit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMint(address)",
      "name": "getMint",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getMintDexs(address,address,address,address,uint256)",
      "name": "getMintDexs",
      "description": "",
      "parameterDecorators": [
        {
          "name": "swapaddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "routeraddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_takeType",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMdex(address,address,address)",
      "name": "setMdex",
      "description": "",
      "parameterDecorators": [
        {
          "name": "router",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "swap",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "mdxaddr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Define a public function to transfer ownership.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawEther()",
      "name": "withdrawEther",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawToken(address)",
      "name": "withdrawToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}