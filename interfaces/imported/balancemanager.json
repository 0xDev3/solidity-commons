{
  "schema": "../schema.json",
  "tags": [
    "staking",
    "borrowing"
  ],
  "name": "BalanceManager",
  "description": "BorrowManager is where borrowers do all their interaction and it holds funds until they're sent to the StakeManager.*.",
  "eventDecorators": [
    {
      "signature": "AffiliatePaid(address,address,uint256,uint256)",
      "name": "AffiliatePaid",
      "description": "Event emitted when collateral value to loan rate is changed.",
      "parameterDecorators": [
        {
          "name": "affiliate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "referral",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposit(address,uint256)",
      "name": "Deposit",
      "description": "Event emitted when collateral value to loan rate is changed.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Loss(address,uint256)",
      "name": "Loss",
      "description": "Event emitted when collateral value to loan rate is changed.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PriceChange(address,uint256)",
      "name": "PriceChange",
      "description": "Event emitted when collateral value to loan rate is changed.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "price",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ReferralAdded(address,address,uint256)",
      "name": "ReferralAdded",
      "description": "Event emitted when collateral value to loan rate is changed.",
      "parameterDecorators": [
        {
          "name": "affiliate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "referral",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdraw(address,uint256)",
      "name": "Withdraw",
      "description": "Event emitted when collateral value to loan rate is changed.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BUCKET_STEP()",
      "name": "BUCKET_STEP",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DENOMINATOR()",
      "name": "DENOMINATOR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "arShields(address)",
      "name": "arShields",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "armorKeeper()",
      "name": "armorKeeper",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOf(address)",
      "name": "balanceOf",
      "description": "Find the current balance of a user to the second.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "The user whose balance to find.*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balances(address)",
      "name": "balances",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "lastTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "perSecondPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "lastBalance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeDevPercent(uint128)",
      "name": "changeDevPercent",
      "description": "Controller can change how much developers are paid.",
      "parameterDecorators": [
        {
          "name": "_newPercent",
          "description": "New percent that devs will receive from revenue. 100 == 10%.*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeGovPercent(uint128)",
      "name": "changeGovPercent",
      "description": "Controller can change how much governance is paid.",
      "parameterDecorators": [
        {
          "name": "_newPercent",
          "description": "New percent that governance will receive from revenue. 100 == 10%.*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeKeeper(address)",
      "name": "changeKeeper",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newKeeper",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMaster(address)",
      "name": "changeMaster",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newMaster",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changePrice(address,uint64)",
      "name": "changePrice",
      "description": "PlanManager has the ability to change the price that a user is paying for their insurance.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "The user whose price we are changing.",
          "recommendedTypes": []
        },
        {
          "name": "_newPrice",
          "description": "the new price per second that the user will be paying.*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeRefPercent(uint128)",
      "name": "changeRefPercent",
      "description": "Controller can change how much referrers are paid.",
      "parameterDecorators": [
        {
          "name": "_newPercent",
          "description": "New percent referrals receive from revenue. 100 == 10%.*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "checkPoints(uint64)",
      "name": "checkPoints",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "head",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint160"
        },
        {
          "name": "tail",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint160"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(address)",
      "name": "deposit",
      "description": "Borrower deposits an amount of ETH to pay for coverage.",
      "parameterDecorators": [
        {
          "name": "_referrer",
          "description": "User who referred the depositor.*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "devPercent()",
      "name": "devPercent",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "devWallet()",
      "name": "devWallet",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "expireBalance(address)",
      "name": "expireBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "govPercent()",
      "name": "govPercent",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "head()",
      "name": "head",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint160"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "infos(uint160)",
      "name": "infos",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "next",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint160"
        },
        {
          "name": "prev",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint160"
        },
        {
          "name": "expiresAt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_armorMaster",
          "description": "Address of the ArmorMaster contract.*.",
          "recommendedTypes": []
        },
        {
          "name": "_devWallet",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "keep()",
      "name": "keep",
      "description": "Keep function can be called by anyone to balances that have been expired. This pays out addresses and removes used cover. This is external because the doKeep modifier calls back to ArmorMaster, which then calls back to here (and elsewhere).*.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "manualUpdate(address[])",
      "name": "manualUpdate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_users",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "perSecondPrice(address)",
      "name": "perSecondPrice",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "refPercent()",
      "name": "refPercent",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "referrers(address)",
      "name": "referrers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "releaseFunds()",
      "name": "releaseFunds",
      "description": "Send funds to governanceStaker and rewardManager (don't want to have to send them with every transaction).*.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "resetBuckets(uint64[],uint160[],uint160[])",
      "name": "resetBuckets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_buckets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_heads",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tails",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "resetExpiry(uint160[])",
      "name": "resetExpiry",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_idxs",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tail()",
      "name": "tail",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint160"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "toggleShield(address)",
      "name": "toggleShield",
      "description": "Toggle whether address is a shield.*.",
      "parameterDecorators": [
        {
          "name": "_shield",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "toggleUF()",
      "name": "toggleUF",
      "description": "Toggle whether utilization farming should be on or off.*.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ufOn()",
      "name": "ufOn",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "Borrower withdraws ETH from their balance.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "The amount of ETH to withdraw.*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}