{
  "schema": "../schema.json",
  "tags": [],
  "name": "Claims",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "changeDependentContractAddress()",
      "name": "changeDependentContractAddress",
      "description": "Iupgradable Interface to update dependent contract address.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMasterAddress(address)",
      "name": "changeMasterAddress",
      "description": "change master address.",
      "parameterDecorators": [
        {
          "name": "_masterAddress",
          "description": "is the new address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changePendingClaimStart()",
      "name": "changePendingClaimStart",
      "description": "Updates the pending claim start variable, the lowest claim id with a pending decision/payout.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "checkVoteClosing(uint256)",
      "name": "checkVoteClosing",
      "description": "Checks if voting of a claim should be closed or not.",
      "parameterDecorators": [
        {
          "name": "claimId",
          "description": "Claim Id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "close",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCATokens(uint256,uint256)",
      "name": "getCATokens",
      "description": "Calculates total amount that has been used to assess a claim. Computaion:Adds acceptCA(tokens used for voting in favor of a claim) denyCA(tokens used for voting against a claim) * current token price.",
      "parameterDecorators": [
        {
          "name": "claimId",
          "description": "Claim Id.",
          "recommendedTypes": []
        },
        {
          "name": "member",
          "description": "Member type 0 -> Claim Assessors, else members.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getClaimFromNewStart(uint256)",
      "name": "getClaimFromNewStart",
      "description": "Gets claim details of claim id = pending claim start + given index.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "coverId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "claimId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "voteCA",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int8"
        },
        {
          "name": "voteMV",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int8"
        },
        {
          "name": "statusnumber",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getClaimbyIndex(uint256)",
      "name": "getClaimbyIndex",
      "description": "Gets details of a given claim id.",
      "parameterDecorators": [
        {
          "name": "_claimId",
          "description": "Claim Id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "claimId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "finalVerdict",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int8"
        },
        {
          "name": "claimOwner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "coverId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserClaimByIndex(uint256)",
      "name": "getUserClaimByIndex",
      "description": "Gets details of a claim submitted by the calling user, at a given index.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "coverId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "claimId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ms()",
      "name": "ms",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pauseAllPendingClaimsVoting()",
      "name": "pauseAllPendingClaimsVoting",
      "description": "Pause Voting of All Pending Claims when Emergency Pause Start.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setClaimStatus(uint256,uint256)",
      "name": "setClaimStatus",
      "description": "Sets the status of claim using claim id.",
      "parameterDecorators": [
        {
          "name": "claimId",
          "description": "claim id.",
          "recommendedTypes": []
        },
        {
          "name": "stat",
          "description": "status to be set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "soteMasterAddress()",
      "name": "soteMasterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "startAllPendingClaimsVoting()",
      "name": "startAllPendingClaimsVoting",
      "description": "Resume the voting phase of all Claims paused due to an emergency pause.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "submitCAVote(uint256,int8)",
      "name": "submitCAVote",
      "description": "Castes vote for members who have tokens locked under Claims Assessment.",
      "parameterDecorators": [
        {
          "name": "claimId",
          "description": "claim id.",
          "recommendedTypes": []
        },
        {
          "name": "verdict",
          "description": "1 for Accept,-1 for Deny.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "submitClaim(uint256)",
      "name": "submitClaim",
      "description": "Submits a claim for a given cover note. Adds claim to queue incase of emergency pause else directly submits the claim.",
      "parameterDecorators": [
        {
          "name": "coverId",
          "description": "Cover Id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "submitClaimAfterEPOff()",
      "name": "submitClaimAfterEPOff",
      "description": "Submits the Claims queued once the emergency pause is switched off.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "submitMemberVote(uint256,int8)",
      "name": "submitMemberVote",
      "description": "Submits a member vote for assessing a claim. Tokens other than those locked under Claims Assessment can be used to cast a vote for a given claim id.",
      "parameterDecorators": [
        {
          "name": "claimId",
          "description": "Selected claim id.",
          "recommendedTypes": []
        },
        {
          "name": "verdict",
          "description": "1 for Accept,-1 for Deny.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}