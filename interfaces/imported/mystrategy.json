{"schema":"../schema.json","tags":["tokens","strategies","locking"],"name":"MyStrategy","description":"CHANGELOG V1.0 Initial Release, can lock V1.1 Update to handle rewards which are sent to a multisig V1.2 Update to emit badger, all other rewards are sent to multisig V1.3 Updated Address to claim CVX Rewards V1.4 Updated Claiming mechanism to allow claiming any token (using difference in balances).","eventDecorators":[{"signature":"Harvest(uint256,uint256)","name":"Harvest","description":"","parameterDecorators":[{"name":"harvested","description":"","recommendedTypes":[],"indexed":false},{"name":"blockNumber","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PerformanceFeeGovernance(address,address,uint256,uint256,uint256)","name":"PerformanceFeeGovernance","description":"","parameterDecorators":[{"name":"destination","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"blockNumber","description":"","recommendedTypes":[],"indexed":true},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PerformanceFeeStrategist(address,address,uint256,uint256,uint256)","name":"PerformanceFeeStrategist","description":"","parameterDecorators":[{"name":"destination","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"blockNumber","description":"","recommendedTypes":[],"indexed":true},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RewardsCollected(address,uint256)","name":"RewardsCollected","description":"","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetController(address)","name":"SetController","description":"","parameterDecorators":[{"name":"controller","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetGovernance(address)","name":"SetGovernance","description":"","parameterDecorators":[{"name":"governance","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetPerformanceFeeGovernance(uint256)","name":"SetPerformanceFeeGovernance","description":"","parameterDecorators":[{"name":"performanceFeeGovernance","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetPerformanceFeeStrategist(uint256)","name":"SetPerformanceFeeStrategist","description":"","parameterDecorators":[{"name":"performanceFeeStrategist","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetStrategist(address)","name":"SetStrategist","description":"","parameterDecorators":[{"name":"strategist","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetWithdrawalFee(uint256)","name":"SetWithdrawalFee","description":"","parameterDecorators":[{"name":"withdrawalFee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Tend(uint256)","name":"Tend","description":"","parameterDecorators":[{"name":"tended","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TreeDistribution(address,uint256,uint256,uint256)","name":"TreeDistribution","description":"","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"blockNumber","description":"","recommendedTypes":[],"indexed":true},{"name":"timestamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdraw(uint256)","name":"Withdraw","description":"","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WithdrawAll(uint256)","name":"WithdrawAll","description":"","parameterDecorators":[{"name":"balance","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WithdrawOther(address,uint256)","name":"WithdrawOther","description":"","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"BADGER()","name":"BADGER","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"BADGER_TREE()","name":"BADGER_TREE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"BRIBES_RECEIVER()","name":"BRIBES_RECEIVER","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"CVXCRV_VAULT()","name":"CVXCRV_VAULT","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"CVX_EXTRA_REWARDS()","name":"CVX_EXTRA_REWARDS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"DELEGATE()","name":"DELEGATE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"DELEGATED_SPACE()","name":"DELEGATED_SPACE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"LOCKER()","name":"LOCKER","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"MAX_BPS()","name":"MAX_BPS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"MAX_FEE()","name":"MAX_FEE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"SNAPSHOT()","name":"SNAPSHOT","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"VOTIUM_BRIBE_CLAIMER()","name":"VOTIUM_BRIBE_CLAIMER","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"__BaseStrategy_init(address,address,address,address,address)","name":"__BaseStrategy_init","description":"","parameterDecorators":[{"name":"_governance","description":"","recommendedTypes":[]},{"name":"_strategist","description":"","recommendedTypes":[]},{"name":"_controller","description":"","recommendedTypes":[]},{"name":"_keeper","description":"","recommendedTypes":[]},{"name":"_guardian","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"balanceOf()","name":"balanceOf","description":"Get the total balance of want realized in the strategy, whether idle or active in Strategy positions.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOfPool()","name":"balanceOfPool","description":"Balance of want currently held in strategy positions.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOfWant()","name":"balanceOfWant","description":"Get the balance of want held idle in the Strategy.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"baseStrategyVersion()","name":"baseStrategyVersion","description":"===== View Functions =====.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"claimBribeFromConvex(address)","name":"claimBribeFromConvex","description":"*** Bribe Claiming ***funds are transfered to the hardcoded address BRIBES_RECEIVER. given a token address, claim that as reward from CVX Extra Rewards.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimBribeFromVotium(address,uint256,address,uint256,bytes32[])","name":"claimBribeFromVotium","description":"given the votium data (available at: https://github.com/oo-00/Votium/tree/main/merkle)allows claiming of rewards, badger is sent to tree.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]},{"name":"merkleProof","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimBribesFromConvex(address[])","name":"claimBribesFromConvex","description":"funds are transfered to the hardcoded address BRIBES_RECEIVER. given a list of token addresses, claim that as reward from CVX Extra Rewards.","parameterDecorators":[{"name":"tokens","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimBribesFromVotium(address,address[],uint256[],uint256[],bytes32[][])","name":"claimBribesFromVotium","description":"given the votium data (available at: https://github.com/oo-00/Votium/tree/main/merkle)allows claiming of multiple rewards rewards, badger is sent to tree.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]},{"name":"tokens","description":"","recommendedTypes":[]},{"name":"indexes","description":"","recommendedTypes":[]},{"name":"amounts","description":"","recommendedTypes":[]},{"name":"merkleProofs","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"controller()","name":"controller","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit()","name":"deposit","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getBoostPayment()","name":"getBoostPayment","description":"===== View Functions =====.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getName()","name":"getName","description":"Specify the name of the strategy.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"getProtectedTokens()","name":"getProtectedTokens","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"governance()","name":"governance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"guardian()","name":"guardian","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"harvest()","name":"harvest","description":"Harvest from strategy mechanics, realizing increase in underlying position.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"harvestOnRebalance()","name":"harvestOnRebalance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address,address,address,address[3],uint256[3])","name":"initialize","description":"","parameterDecorators":[{"name":"_governance","description":"","recommendedTypes":[]},{"name":"_strategist","description":"","recommendedTypes":[]},{"name":"_controller","description":"","recommendedTypes":[]},{"name":"_keeper","description":"","recommendedTypes":[]},{"name":"_guardian","description":"","recommendedTypes":[]},{"name":"_wantConfig","description":"","recommendedTypes":[]},{"name":"_feeConfig","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isTendable()","name":"isTendable","description":"Returns true if this strategy requires tending.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"keeper()","name":"keeper","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"lpComponent()","name":"lpComponent","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"manualProcessExpiredLocks()","name":"manualProcessExpiredLocks","description":"process all locks, to redeem.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"manualRebalance(uint256)","name":"manualRebalance","description":"toLock = 0, lock nothing, deposit in CVX as much as you cantoLock = 10_000, lock everything (CVX) you have. use the currently available CVX to lock.","parameterDecorators":[{"name":"toLock","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"manualSendCVXToVault()","name":"manualSendCVXToVault","description":"you can do this so you can earn again (re-lock), or just to add to the redemption pool. Send all available CVX to the Vault.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"manualSetDelegate(address)","name":"manualSetDelegate","description":"===== Extra Functions =====. Change Delegation to another address.","parameterDecorators":[{"name":"delegate","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"pause()","name":"pause","description":"===== Permissioned Actions: Authoized Contract Pausers =====.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"performanceFeeGovernance()","name":"performanceFeeGovernance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"performanceFeeStrategist()","name":"performanceFeeStrategist","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"prepareWithdrawAll()","name":"prepareWithdrawAll","description":"utility function to withdraw all CVX that we can from the lock.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"processLocksOnRebalance()","name":"processLocksOnRebalance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"processLocksOnReinvest()","name":"processLocksOnReinvest","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"reinvest()","name":"reinvest","description":"manual function to reinvest all CVX that was locked.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"reward()","name":"reward","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setController(address)","name":"setController","description":"","parameterDecorators":[{"name":"_controller","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setGovernance(address)","name":"setGovernance","description":"Change governance addressCan only be changed by governance itself.","parameterDecorators":[{"name":"_governance","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setGuardian(address)","name":"setGuardian","description":"===== Permissioned Actions: Governance =====.","parameterDecorators":[{"name":"_guardian","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setHarvestOnRebalance(bool)","name":"setHarvestOnRebalance","description":"you most likely want to skip harvest if everything is unlocked, or there's something wrong and you just want out. Should we harvest before doing manual rebalancing.","parameterDecorators":[{"name":"newHarvestOnRebalance","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setKeeper(address)","name":"setKeeper","description":"Change keeper addressCan only be changed by governance itself.","parameterDecorators":[{"name":"_keeper","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPerformanceFeeGovernance(uint256)","name":"setPerformanceFeeGovernance","description":"","parameterDecorators":[{"name":"_performanceFeeGovernance","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPerformanceFeeStrategist(uint256)","name":"setPerformanceFeeStrategist","description":"","parameterDecorators":[{"name":"_performanceFeeStrategist","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setProcessLocksOnRebalance(bool)","name":"setProcessLocksOnRebalance","description":"Should we processExpiredLocks during manualRebalance?.","parameterDecorators":[{"name":"newProcessLocksOnRebalance","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setProcessLocksOnReinvest(bool)","name":"setProcessLocksOnReinvest","description":"Should we processExpiredLocks during reinvest?.","parameterDecorators":[{"name":"newProcessLocksOnReinvest","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setStrategist(address)","name":"setStrategist","description":"Change strategist addressCan only be changed by governance itself.","parameterDecorators":[{"name":"_strategist","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setWithdrawalFee(uint256)","name":"setWithdrawalFee","description":"","parameterDecorators":[{"name":"_withdrawalFee","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setWithdrawalMaxDeviationThreshold(uint256)","name":"setWithdrawalMaxDeviationThreshold","description":"","parameterDecorators":[{"name":"_threshold","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setWithdrawalSafetyCheck(bool)","name":"setWithdrawalSafetyCheck","description":"Should we check if the amount requested is more than what we can return on withdrawal?.","parameterDecorators":[{"name":"newWithdrawalSafetyCheck","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"strategist()","name":"strategist","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"sweepRewardToken(address)","name":"sweepRewardToken","description":"Only not protected, moves the whole amount using _handleRewardTransferbecause token paths are harcoded, this function is safe to be called by anyone. Function to move rewards that are not protected.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"sweepRewards(address[])","name":"sweepRewards","description":"Bulk function for sweepRewardToken.","parameterDecorators":[{"name":"tokens","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tend()","name":"tend","description":"Rebalance, Compound or Pay off debt here.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"uniswap()","name":"uniswap","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"unpause()","name":"unpause","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"version()","name":"version","description":"Specify the version of the Strategy, for upgrades.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"want()","name":"want","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256)","name":"withdraw","description":"Withdraw partial funds from the strategy, unrolling from strategy positions as necessaryProcesses withdrawal fee if present. If it fails to recover sufficient funds (defined by withdrawalMaxDeviationThreshold), the withdrawal should fail so that this unexpected behavior can be investigated.","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawAll()","name":"withdrawAll","description":"Controller-only function to Withdraw partial funds, normally used with a vault withdrawal.","parameterDecorators":[],"returnDecorators":[{"name":"balance","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"withdrawOther(address)","name":"withdrawOther","description":"","parameterDecorators":[{"name":"_asset","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"balance","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"withdrawalFee()","name":"withdrawalFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawalMaxDeviationThreshold()","name":"withdrawalMaxDeviationThreshold","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawalSafetyCheck()","name":"withdrawalSafetyCheck","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true}]}