{
  "schema": "../schema.json",
  "tags": [
    "nft"
  ],
  "name": "NFTSale",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdminAccessSet(address,bool)",
      "name": "AdminAccessSet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_enabled",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Blacklisted(address)",
      "name": "Blacklisted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SetOpenForAll(bool)",
      "name": "SetOpenForAll",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_isOpenForAll",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Sold(uint256,address,uint256)",
      "name": "Sold",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_nftId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_price",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Whitelisted(address,uint8)",
      "name": "Whitelisted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "whitelistType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "NFT()",
      "name": "NFT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "TOKEN()",
      "name": "TOKEN",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "activeWhitelistType()",
      "name": "activeWhitelistType",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "batchPurchase(uint8[])",
      "name": "batchPurchase",
      "description": "Purchase Batch of NFTs.",
      "parameterDecorators": [
        {
          "name": "nftTypes",
          "description": "- List of NFT Types.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "blacklist(address)",
      "name": "blacklist",
      "description": "Blacklist User.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "- Address of User.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "blacklistBatch(address[])",
      "name": "blacklistBatch",
      "description": "Blacklist Users.",
      "parameterDecorators": [
        {
          "name": "users",
          "description": "- Addresses of Users.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isAdmin(address)",
      "name": "isAdmin",
      "description": "Check Admin Access.",
      "parameterDecorators": [
        {
          "name": "admin",
          "description": "- Address of Admin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "whether user has admin access.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isEnabled()",
      "name": "isEnabled",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOpenForAll()",
      "name": "isOpenForAll",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isWhitelisted(address)",
      "name": "isWhitelisted",
      "description": "Check if Whitelisted.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "- Address of User.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "whether user is whitelisted.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "isWhitelisted",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "whitelistType",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint8"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "prices(uint8)",
      "name": "prices",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "purchase(uint8)",
      "name": "purchase",
      "description": "Purchase NFT.",
      "parameterDecorators": [
        {
          "name": "nftType",
          "description": "- Type of NFT.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "purchaseLimit()",
      "name": "purchaseLimit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setActiveWhitelistType(uint8)",
      "name": "setActiveWhitelistType",
      "description": "Set the Active Whitelisting Type.",
      "parameterDecorators": [
        {
          "name": "whitelistType",
          "description": "- Type of Whitelisting.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAdmin(address,bool)",
      "name": "setAdmin",
      "description": "Set Admin Access.",
      "parameterDecorators": [
        {
          "name": "admin",
          "description": "- Address of Admin.",
          "recommendedTypes": []
        },
        {
          "name": "enabled",
          "description": "- Enable/Disable Admin Access.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setEnabled(bool)",
      "name": "setEnabled",
      "description": "- Enable/Disable Sales. - callable only by owner.",
      "parameterDecorators": [
        {
          "name": "_isEnabled",
          "description": "- enable? sales.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOpenForAll(bool)",
      "name": "setOpenForAll",
      "description": "Enable/Dsiable Whitelist Feature.",
      "parameterDecorators": [
        {
          "name": "_isOpenForAll",
          "description": "- Enable/Disable Sale for all.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPlaceholderURI(uint8,string)",
      "name": "setPlaceholderURI",
      "description": "- Set Placeholder URI. - callable only by owner.",
      "parameterDecorators": [
        {
          "name": "nftType",
          "description": "- Type of NFT.",
          "recommendedTypes": []
        },
        {
          "name": "placeholderURI",
          "description": "- Placeholder URI for type of NFT.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPrice(uint8,uint256)",
      "name": "setPrice",
      "description": "- Set Placeholder URI. - callable only by owner.",
      "parameterDecorators": [
        {
          "name": "nftType",
          "description": "- Type of NFT.",
          "recommendedTypes": []
        },
        {
          "name": "price",
          "description": "- Price of NFT.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPurchaseLimit(uint256)",
      "name": "setPurchaseLimit",
      "description": "Set the NFT purchase limit.",
      "parameterDecorators": [
        {
          "name": "_purchaseLimit",
          "description": "- NFT purchase limit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "typeCounter(uint8)",
      "name": "typeCounter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "typeMax(uint8)",
      "name": "typeMax",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "userPurchaseCounter(address)",
      "name": "userPurchaseCounter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "whitelist(address,uint8)",
      "name": "whitelist",
      "description": "Whitelist User.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "- Address of User.",
          "recommendedTypes": []
        },
        {
          "name": "whitelistType",
          "description": "- Type of Whitelisting.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "whitelistBatch(address[],uint8[])",
      "name": "whitelistBatch",
      "description": "Whitelist Users.",
      "parameterDecorators": [
        {
          "name": "users",
          "description": "- Addresses of Users.",
          "recommendedTypes": []
        },
        {
          "name": "whitelistTypes",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawFunds(address,uint256,address)",
      "name": "withdrawFunds",
      "description": "Withdraw any ERC20.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "- ERC20 token address.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "- amount to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "wallet",
          "description": "- address to withdraw to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}