{
  "schema": "../schema.json",
  "tags": [],
  "name": "KyberFprReserveVBSC",
  "description": "KyberFprReserve version 2 Allow Reserve to work work with either weth or eth. for working with weth should specify external address to hold weth. Allow Reserve to set maxGasPriceWei to trade with.",
  "eventDecorators": [
    {
      "signature": "AdminClaimed(address,address)",
      "name": "AdminClaimed",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "newAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "previousAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AlerterAdded(address,bool)",
      "name": "AlerterAdded",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "newAlerter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isAdd",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DepositToken(address,uint256)",
      "name": "DepositToken",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EtherWithdraw(uint256,address)",
      "name": "EtherWithdraw",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sendTo",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MaxGasPriceUpdated(uint128)",
      "name": "MaxGasPriceUpdated",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "newMaxGasPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewTokenWallet(address,address)",
      "name": "NewTokenWallet",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "wallet",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OperatorAdded(address,bool)",
      "name": "OperatorAdded",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "newOperator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isAdd",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetConversionRateAddress(address)",
      "name": "SetConversionRateAddress",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "rate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SetSanityRateAddress(address)",
      "name": "SetSanityRateAddress",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "sanity",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SetWethAddress(address)",
      "name": "SetWethAddress",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "weth",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TokenWithdraw(address,uint256,address)",
      "name": "TokenWithdraw",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sendTo",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TradeEnabled(bool)",
      "name": "TradeEnabled",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "enable",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TradeExecute(address,address,address,uint256,address,uint256,address)",
      "name": "TradeExecute",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "origin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "trader",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "src",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "srcAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "destToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "destAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "destAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferAdminPending(address)",
      "name": "TransferAdminPending",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "pendingAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawAddressApproved(address,address,bool)",
      "name": "WithdrawAddressApproved",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "approve",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawFunds(address,uint256,address)",
      "name": "WithdrawFunds",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "destination",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BPS()",
      "name": "BPS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addAlerter(address)",
      "name": "addAlerter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newAlerter",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addOperator(address)",
      "name": "addOperator",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newOperator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "admin()",
      "name": "admin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approveWithdrawAddress(address,address,bool)",
      "name": "approveWithdrawAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "approve",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "approvedWithdrawAddresses(bytes32)",
      "name": "approvedWithdrawAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimAdmin()",
      "name": "claimAdmin",
      "description": "Allows the pendingAdmin address to finalize the change admin process.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "conversionRatesContract()",
      "name": "conversionRatesContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "disableTrade()",
      "name": "disableTrade",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enableTrade()",
      "name": "enableTrade",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAlerters()",
      "name": "getAlerters",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBalance(address)",
      "name": "getBalance",
      "description": "return available balance of a token that reserve can use if using weth, call getBalance(eth) will return weth balance if using wallet for token, will return min of balance and allowance.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "token to get available balance that reserve can use.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getConversionRate(address,address,uint256,uint256)",
      "name": "getConversionRate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "src",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "dest",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "srcQty",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOperators()",
      "name": "getOperators",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenWallet(address)",
      "name": "getTokenWallet",
      "description": "return wallet that holds the token if token is ETH, check tokenWallet of WETH instead if wallet is 0x0, consider as this reserve address.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "wallet",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAddressApprovedForWithdrawal(address,address)",
      "name": "isAddressApprovedForWithdrawal",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxGasPriceWei()",
      "name": "maxGasPriceWei",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingAdmin()",
      "name": "pendingAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "quoteToken()",
      "name": "quoteToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAlerter(address)",
      "name": "removeAlerter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "alerter",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeOperator(address)",
      "name": "removeOperator",
      "description": "",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sanityRatesContract()",
      "name": "sanityRatesContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setConversionRate(address)",
      "name": "setConversionRate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_newConversionRate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaxGasPrice(uint128)",
      "name": "setMaxGasPrice",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newMaxGasPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSanityRate(address)",
      "name": "setSanityRate",
      "description": "sanity rate can be set to 0x0 address to disable sanity rate check.",
      "parameterDecorators": [
        {
          "name": "_newSanity",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTokenWallet(address,address)",
      "name": "setTokenWallet",
      "description": "allow set tokenWallet[token] back to 0x0 addressin case of using weth from external wallet, must call set token wallet for weth tokenWallet for weth must be different from this reserve address.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "wallet",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWeth(address)",
      "name": "setWeth",
      "description": "weth is unlikely to be changed, but added this function to keep the flexibilty.",
      "parameterDecorators": [
        {
          "name": "_newWeth",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenWallet(address)",
      "name": "tokenWallet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "trade(address,uint256,address,address,uint256,bool)",
      "name": "trade",
      "description": "",
      "parameterDecorators": [
        {
          "name": "srcToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "srcAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "destToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "destAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "conversionRate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tradeEnabled()",
      "name": "tradeEnabled",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferAdmin(address)",
      "name": "transferAdmin",
      "description": "Allows the current admin to set the pendingAdmin address.",
      "parameterDecorators": [
        {
          "name": "newAdmin",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferAdminQuickly(address)",
      "name": "transferAdminQuickly",
      "description": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
      "parameterDecorators": [
        {
          "name": "newAdmin",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "weth()",
      "name": "weth",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(address,uint256,address)",
      "name": "withdraw",
      "description": "withdraw amount of token to an approved destination if reserve is using weth instead of eth, should call withdraw weth.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "token to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "amount to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "destination",
          "description": "address to transfer fund to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawEther(uint256,address)",
      "name": "withdrawEther",
      "description": "Withdraw Ethers.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sendTo",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawToken(address,uint256,address)",
      "name": "withdrawToken",
      "description": "Withdraw all IERC20Ext compatible tokens.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "IERC20Ext The address of the token contract.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sendTo",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}