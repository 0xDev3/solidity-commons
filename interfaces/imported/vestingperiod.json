{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "vesting",
    "vaults"
  ],
  "name": "VestingPeriod",
  "description": "VestingPeriod. The vesting vault contract after the token sale Taken from https://github.com/dandelionlabs-io/polkafantasy-linear-vesting//blob/master/contracts/Vesting.sol.",
  "eventDecorators": [
    {
      "signature": "ChangeInvestor(address,address)",
      "name": "ChangeInvestor",
      "description": "Event emitted when the grant investor is changed.",
      "parameterDecorators": [
        {
          "name": "oldOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "GrantAdded(address,uint256)",
      "name": "GrantAdded",
      "description": "Event emitted when a new grant is created.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "GrantTokensClaimed(address,uint256)",
      "name": "GrantTokensClaimed",
      "description": "Event emitted when tokens are claimed by a recipient from a grant.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amountClaimed",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addTokenGrants(address[],uint256[])",
      "name": "addTokenGrants",
      "description": "Add list of grants in batch.",
      "parameterDecorators": [
        {
          "name": "_recipients",
          "description": "list of addresses of the stakeholders.",
          "recommendedTypes": []
        },
        {
          "name": "_amounts",
          "description": "list of amounts to be assigned to the stakeholders.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "blacklist(address)",
      "name": "blacklist",
      "description": "List of investors who got blacklist tokens.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateGrantClaim(address)",
      "name": "calculateGrantClaim",
      "description": "Calculate the vested and unclaimed tokens available for `recipient` to claim. Due to rounding errors once grant duration is reached, returns the entire left grant amount.",
      "parameterDecorators": [
        {
          "name": "_recipient",
          "description": "The address that has a grant.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The amount recipient can claim.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeInvestor(address,address)",
      "name": "changeInvestor",
      "description": "In case if the user doesn't want to change the grant.",
      "parameterDecorators": [
        {
          "name": "_oldAddress",
          "description": "existing address from the investor which we want to change.",
          "recommendedTypes": []
        },
        {
          "name": "_newAddress",
          "description": "new address from the investor which we want to give.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimVestedTokens(address)",
      "name": "claimVestedTokens",
      "description": "Allows a grant recipient to claim their vested tokens. Errors if no tokens have vestedIt is advised recipients check they are entitled to claim via `calculateGrantClaim` before calling this.",
      "parameterDecorators": [
        {
          "name": "_recipient",
          "description": "The address that has a grant.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimedBalance(address)",
      "name": "claimedBalance",
      "description": "The balance claimed by `recipient`.",
      "parameterDecorators": [
        {
          "name": "_recipient",
          "description": "The address that has a grant.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the number of claimed tokens by `recipient`.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenGrant(address)",
      "name": "getTokenGrant",
      "description": "Get token grant for recipient.",
      "parameterDecorators": [
        {
          "name": "_recipient",
          "description": "The address that has a grant.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the grant.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "totalClaimed",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "perSecond",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pool()",
      "name": "pool",
      "description": "Current vesting period is the same for all grants.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "vestingDuration",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalClaimed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "grants",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "PolkaFantasy token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenGrants(address)",
      "name": "tokenGrants",
      "description": "Mapping of recipient address > token grant.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalClaimed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "perSecond",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokensVestedPerDay(address)",
      "name": "tokensVestedPerDay",
      "description": "Calculate the number of tokens that will vest per day for the given recipient.",
      "parameterDecorators": [
        {
          "name": "_recipient",
          "description": "The address that has a grant.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Number of tokens that will vest per day.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokensVestedPerDay(uint256)",
      "name": "tokensVestedPerDay",
      "description": "Calculate the number of tokens that will vest per day in the given period for an amount.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "the amount to be checked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Number of tokens that will vest per day.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vestedBalance(address)",
      "name": "vestedBalance",
      "description": "Calculate the vested (claimed + unclaimed) tokens for `recipient`.",
      "parameterDecorators": [
        {
          "name": "_recipient",
          "description": "The address that has a grant.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Total vested balance (claimed + unclaimed).",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}