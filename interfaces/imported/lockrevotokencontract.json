{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "locking"
  ],
  "name": "LockRevoTokenContract",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Locked(address,bytes32,uint256,uint256)",
      "name": "Locked",
      "description": "A DApp has been deauthorized by a user for a worker.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_reason",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_validity",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "A DApp has been deauthorized by a user for a worker.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Unlocked(address,bytes32,uint256)",
      "name": "Unlocked",
      "description": "A DApp has been deauthorized by a user for a worker.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "bytes32ToString(bytes32)",
      "name": "bytes32ToString",
      "description": "",
      "parameterDecorators": [
        {
          "name": "x",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "extendLock(string,uint256)",
      "name": "extendLock",
      "description": "Extends lock for a specified reason and time.",
      "parameterDecorators": [
        {
          "name": "_reason",
          "description": "The reason to lock tokens.",
          "recommendedTypes": []
        },
        {
          "name": "_time",
          "description": "Lock extension time in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getUnlockableTokens(address)",
      "name": "getUnlockableTokens",
      "description": "Gets the unlockable tokens of a specified address.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address to query the the unlockable token count of.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "unlockableTokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getremainingLockDays(address,string)",
      "name": "getremainingLockDays",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "remainingDays",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getremainingLockTime(address,string)",
      "name": "getremainingLockTime",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "remainingTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "increaseLockAmount(string,uint256)",
      "name": "increaseLockAmount",
      "description": "Increase number of tokens locked for a specified reason.",
      "parameterDecorators": [
        {
          "name": "_reason",
          "description": "The reason to lock tokens.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Number of tokens to be increased.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lock(string,uint256,uint256)",
      "name": "lock",
      "description": "Locks a specified amount of tokens against an address, for a specified reason and time.",
      "parameterDecorators": [
        {
          "name": "_reason",
          "description": "The reason to lock tokens.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Number of tokens to be locked.",
          "recommendedTypes": []
        },
        {
          "name": "_time",
          "description": "Lock time in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lockReason(address,uint256)",
      "name": "lockReason",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "locked(address,bytes32)",
      "name": "locked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "validity",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "claimed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stringToBytes32(string)",
      "name": "stringToBytes32",
      "description": "",
      "parameterDecorators": [
        {
          "name": "source",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "result",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokensLocked(address,string)",
      "name": "tokensLocked",
      "description": "Returns tokens locked for a specified address for a specified reason.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address whose tokens are locked.",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "The reason to query the lock tokens for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokensLockedAtTime(address,string,uint256)",
      "name": "tokensLockedAtTime",
      "description": "Returns tokens locked for a specified address for a specified reason at a specific time.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address whose tokens are locked.",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "The reason to query the lock tokens for.",
          "recommendedTypes": []
        },
        {
          "name": "_time",
          "description": "The timestamp to query the lock tokens for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokensUnlockable(address,string)",
      "name": "tokensUnlockable",
      "description": "Returns unlockable tokens for a specified address for a specified reason.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address to query the the unlockable token count of.",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "The reason to query the unlockable tokens for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalBalanceOf(address)",
      "name": "totalBalanceOf",
      "description": "Returns total tokens held by an address (locked + transferable).",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address to query the total balance of.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferWithLock(address,string,uint256,uint256)",
      "name": "transferWithLock",
      "description": "Transfers and Locks a specified amount of tokens, for a specified reason and time.",
      "parameterDecorators": [
        {
          "name": "_to",
          "description": "adress to which tokens are to be transfered.",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "The reason to lock tokens.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Number of tokens to be transfered and locked.",
          "recommendedTypes": []
        },
        {
          "name": "_time",
          "description": "Lock time in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unlock(address)",
      "name": "unlock",
      "description": "Unlocks the unlockable tokens of a specified address.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "Address of user, claiming back unlockable tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "unlockableTokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}