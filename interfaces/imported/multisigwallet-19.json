{
  "schema": "../schema.json",
  "tags": [],
  "name": "MultiSigWallet",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Deposited(address,uint256,bytes)",
      "name": "Deposited",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SafeModeActivated(address)",
      "name": "SafeModeActivated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "msgSender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransactedEth(address[],address,uint256)",
      "name": "TransactedEth",
      "description": "",
      "parameterDecorators": [
        {
          "name": "signers",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "toAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransactedErc20(address,address[],address,uint256)",
      "name": "TransactedErc20",
      "description": "",
      "parameterDecorators": [
        {
          "name": "UNIAPPTokenAmount",
          "description": "amount of UNIAPP tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "signers(uint256)",
      "name": "signers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addrToBytes(address)",
      "name": "addrToBytes",
      "description": "addrToBytes convert the address to bytes data.",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "convert to bytes.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sendMultiSig(address,uint256,bytes,uint256,uint64,address[],bytes[])",
      "name": "sendMultiSig",
      "description": "Execute a multi-signature transaction from this wallet using 2 signers: one from msg.sender and the other from ecrecover.",
      "parameterDecorators": [
        {
          "name": "toAddress",
          "description": "the destination address to send an outgoing transaction.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "the amount in Wei to be sent.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "the data to send to the toAddress when invoking the transaction.",
          "recommendedTypes": []
        },
        {
          "name": "expireTime",
          "description": "the number of seconds since 1970 for which this transaction is valid.",
          "recommendedTypes": []
        },
        {
          "name": "orderId",
          "description": "the unique order id.",
          "recommendedTypes": []
        },
        {
          "name": "allSigners",
          "description": "the signer who sign tx.",
          "recommendedTypes": []
        },
        {
          "name": "signatures",
          "description": "the signatures of tx.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isSigner(address)",
      "name": "isSigner",
      "description": "Determine if an address is a signer on this wallet.",
      "parameterDecorators": [
        {
          "name": "signer",
          "description": "address to check returns boolean indicating whether address is signer or not.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tryInsertorderId(uint64,address[],address,uint256,bytes)",
      "name": "tryInsertorderId",
      "description": "Verify that the order id has not been used before and inserts it. Throws if the order ID was not accepted. We collect a window of up to 10 recent order ids, and allow any order id that is not in the window and greater than the minimum element in the window.",
      "parameterDecorators": [
        {
          "name": "orderId",
          "description": "to insert into array of stored ids.",
          "recommendedTypes": []
        },
        {
          "name": "allSigners",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "safeMode()",
      "name": "safeMode",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sendMultiSigToken(address,uint256,address,uint256,uint64,address[],bytes[])",
      "name": "sendMultiSigToken",
      "description": "Execute a multi-signature token transfer from this wallet using 2 signers: one from msg.sender and the other from ecrecover.",
      "parameterDecorators": [
        {
          "name": "toAddress",
          "description": "the destination address to send an outgoing transaction.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "the amount in tokens to be sent.",
          "recommendedTypes": []
        },
        {
          "name": "tokenContractAddress",
          "description": "the address of the erc20 token contract.",
          "recommendedTypes": []
        },
        {
          "name": "expireTime",
          "description": "the number of seconds since 1970 for which this transaction is valid.",
          "recommendedTypes": []
        },
        {
          "name": "orderId",
          "description": "the unique order id.",
          "recommendedTypes": []
        },
        {
          "name": "allSigners",
          "description": "the signer who sign tx.",
          "recommendedTypes": []
        },
        {
          "name": "signatures",
          "description": "the signatures of tx.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "activateSafeMode()",
      "name": "activateSafeMode",
      "description": "Irrevocably puts contract into safe mode. When in this mode, transactions may only be sent to signing addresses.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}