{"schema":"../schema.json","tags":[],"name":"KeyMap","description":"KeyMap.","eventDecorators":[],"functionDecorators":[{"signature":"getKey(address)","name":"getKey","description":"Throws an error if the key is not registered. getKey Retrieves the public key for the given address.","parameterDecorators":[{"name":"_address","description":"- address to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"pubKey","description":"- ABI encoded public key retrieved from storage.","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"mapKey(bytes32,bytes32)","name":"mapKey","description":"This overload reduces the calldata cost of submission. mapKey Calculates the address for a public key, then saves the mapping from address to public key.","parameterDecorators":[{"name":"slice0","description":"- first 32 bytes of the public key.","recommendedTypes":[]},{"name":"slice1","description":"- second 32 bytes of the public key.","recommendedTypes":[]}],"returnDecorators":[{"name":"_address","description":"- calculated address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"mapKey(bytes)","name":"mapKey","description":"This overload is somewhat simpler to use, but has a higher calldata cost. mapKey Calculates the address for a public key, then saves the mapping from address to public key.","parameterDecorators":[{"name":"_pubKey","description":"- ABI encoded 64 byte public key.","recommendedTypes":[]}],"returnDecorators":[{"name":"_address","description":"- calculated address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false}]}