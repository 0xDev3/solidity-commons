{"schema":"../schema.json","tags":[],"name":"AVCOv3","description":"","eventDecorators":[],"functionDecorators":[{"signature":"addOneUnit(int256)","name":"addOneUnit","description":"","parameterDecorators":[{"name":"inventoryAdded","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"buyOneUnit()","name":"buyOneUnit","description":"creates a public function named \"addOneUnit\" in which the user inputs an integer named \"inventoryAdded\" the function re-declares the \"value\" of the \"inventory\" object as its prior value plus \"inventoryAdded\" the function also re-declares the \"count\" of the \"inventory\" object as its prior value plus one.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getInventory()","name":"getInventory","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"getInventoryBalance(address)","name":"getInventoryBalance","description":"creates a public read-only function named \"getProfits\" which returns an array of integers named \"profits\" the \"profits\" array is empty for the moment, we will fill it in further below the \"memory\" command retrieves the array from local memory storage.","parameterDecorators":[{"name":"someAddress","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"getProfits()","name":"getProfits","description":"the \"public\" command allows the user to interact with this function from outside of the smart contract (to decide whether and when to run it) the function is already a read-only function, as it does not change the state of the contract however, the \"view\" command further specifies this read-only attribute, which is convenient.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256[]"}],"emittableEvents":[],"readOnly":true}]}