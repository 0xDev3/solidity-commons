{"schema":"../schema.json","tags":["oracles","tokens"],"name":"Policy","description":"XBT Monetary Supply Policy. This is an implementation of the XBT Ideal Money protocol. XBT operates symmetrically on expansion and contraction. It will both split and combine coins to maintain a stable unit price. This component regulates the token supply of the XBT ERC20 token in response to market oracles.","eventDecorators":[{"signature":"LogRebase(uint256,uint256,int256,uint256)","name":"LogRebase","description":"Emitted when a Migration is executed.","parameterDecorators":[{"name":"epoch","description":"","recommendedTypes":[],"indexed":true},{"name":"exchangeRate","description":"","recommendedTypes":[],"indexed":false},{"name":"requestedSupplyAdjustment","description":"","recommendedTypes":[],"indexed":false},{"name":"timestampSec","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when a Migration is executed.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TransactionFailed(address,uint256,bytes)","name":"TransactionFailed","description":"Emitted when a Migration is executed.","parameterDecorators":[{"name":"destination","description":"","recommendedTypes":[],"indexed":true},{"name":"index","description":"","recommendedTypes":[],"indexed":false},{"name":"data","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"XBTs()","name":"XBTs","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"_pairXBTWBTC()","name":"_pairXBTWBTC","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"addTransaction(address,bytes)","name":"addTransaction","description":"Adds a transaction that gets called for a downstream receiver of rebases.","parameterDecorators":[{"name":"destination","description":"Address of contract destination.","recommendedTypes":[]},{"name":"data","description":"Transaction data payload.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deviationThreshold()","name":"deviationThreshold","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"epoch()","name":"epoch","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"inRebaseWindow()","name":"inRebaseWindow","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"If the latest block timestamp is within the rebase time window it, returns true. Otherwise, returns false.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address)","name":"initialize","description":"ZOS upgradable contract initialization method. It is called at the time of contract creation to invoke parent class initializers and initialize the contract's state variables.","parameterDecorators":[{"name":"XBTs_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lastRebaseTimestampSec()","name":"lastRebaseTimestampSec","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"minRebaseTimeIntervalSec()","name":"minRebaseTimeIntervalSec","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rebase()","name":"rebase","description":"Initiates a new rebase operation, provided the minimum time period has elapsed. The supply adjustment equals (_totalSupply * DeviationFromTargetRate) / rebaseLag Where DeviationFromTargetRate is (exchangeRate - targetRate) / targetRate and targetRate is WBTC/USDC.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rebaseLag()","name":"rebaseLag","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rebaseWindowLengthSec()","name":"rebaseWindowLengthSec","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rebaseWindowOffsetSec()","name":"rebaseWindowOffsetSec","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"removeTransaction(uint256)","name":"removeTransaction","description":"","parameterDecorators":[{"name":"index","description":"Index of transaction to remove. Transaction ordering may have changed since adding.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setDeviationThreshold(uint256)","name":"setDeviationThreshold","description":"Sets the deviation threshold fraction. If the exchange rate given by the market oracle is within this fractional distance from the targetRate, then no supply modifications are made. DECIMALS fixed point number.","parameterDecorators":[{"name":"deviationThreshold_","description":"The new exchange rate threshold fraction.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPairXBTWBTC(address,address,address)","name":"setPairXBTWBTC","description":"","parameterDecorators":[{"name":"factory","description":"","recommendedTypes":[]},{"name":"token0","description":"","recommendedTypes":[]},{"name":"token1","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRebaseLag(uint256)","name":"setRebaseLag","description":"Sets the rebase lag parameter. It is used to dampen the applied supply adjustment by 1 / rebaseLag If the rebase lag R, equals 1, the smallest value for R, then the full supply correction is applied on each rebase cycle. If it is greater than 1, then a correction of 1/R of is applied on each rebase.","parameterDecorators":[{"name":"rebaseLag_","description":"The new rebase lag parameter.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRebaseTimingParameters(uint256,uint256,uint256)","name":"setRebaseTimingParameters","description":"Sets the parameters which control the timing and frequency of rebase operations. a) the minimum time period that must elapse between rebase cycles. b) the rebase window offset parameter. c) the rebase window length parameter.","parameterDecorators":[{"name":"minRebaseTimeIntervalSec_","description":"More than this much time must pass between rebase operations, in seconds.","recommendedTypes":[]},{"name":"rebaseWindowOffsetSec_","description":"The number of seconds from the beginning of the rebase interval, where the rebase window begins.","recommendedTypes":[]},{"name":"rebaseWindowLengthSec_","description":"The length of the rebase window in seconds.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTransactionEnabled(uint256,bool)","name":"setTransactionEnabled","description":"","parameterDecorators":[{"name":"index","description":"Index of transaction. Transaction ordering may have changed since adding.","recommendedTypes":[]},{"name":"enabled","description":"True for enabled, false for disabled.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transactions(uint256)","name":"transactions","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"enabled","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"destination","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"data","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"transactionsSize()","name":"transactionsSize","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Number of transactions, both enabled and disabled, in transactions list.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}