{"schema":"../schema.json","tags":[],"name":"ExchangeRates","description":"The repository for exchange rates.","eventDecorators":[{"signature":"OracleUpdated(address)","name":"OracleUpdated","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"newOracle","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RateStalePeriodUpdated(uint256)","name":"RateStalePeriodUpdated","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"rateStalePeriod","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RatesUpdated(bytes32[],uint256[])","name":"RatesUpdated","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"currencyKeys","description":"","recommendedTypes":[],"indexed":false},{"name":"newRates","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RateDeleted(bytes32)","name":"RateDeleted","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"InversePriceConfigured(bytes32,uint256,uint256,uint256)","name":"InversePriceConfigured","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[],"indexed":false},{"name":"entryPoint","description":"","recommendedTypes":[],"indexed":false},{"name":"upperLimit","description":"","recommendedTypes":[],"indexed":false},{"name":"lowerLimit","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"InversePriceFrozen(bytes32)","name":"InversePriceFrozen","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AggregatorAdded(bytes32,address)","name":"AggregatorAdded","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[],"indexed":false},{"name":"aggregator","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AggregatorRemoved(bytes32,address)","name":"AggregatorRemoved","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[],"indexed":false},{"name":"aggregator","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SelfDestructTerminated()","name":"SelfDestructTerminated","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[]},{"signature":"SelfDestructed(address)","name":"SelfDestructed","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"beneficiary","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SelfDestructInitiated(uint256)","name":"SelfDestructInitiated","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"selfDestructDelay","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SelfDestructBeneficiaryUpdated(address)","name":"SelfDestructBeneficiaryUpdated","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"newBeneficiary","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnerNominated(address)","name":"OwnerNominated","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnerChanged(address,address)","name":"OwnerChanged","description":"Emitted when pendingControllerImplementation is changed.","parameterDecorators":[{"name":"oldOwner","description":"","recommendedTypes":[],"indexed":false},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"rateIsStale(bytes32)","name":"rateIsStale","description":"Check if a specific currency's rate hasn't been updated for longer than the stale period.","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"lastRateUpdateTimesForCurrencies(bytes32[])","name":"lastRateUpdateTimesForCurrencies","description":"Retrieve the last update time for a list of currencies.","parameterDecorators":[{"name":"currencyKeys","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"rateStalePeriod()","name":"rateStalePeriod","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getLastRoundIdBeforeElapsedSecs(bytes32,uint256,uint256,uint256)","name":"getLastRoundIdBeforeElapsedSecs","description":"","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[]},{"name":"startingRoundId","description":"","recommendedTypes":[]},{"name":"startingTimestamp","description":"","recommendedTypes":[]},{"name":"timediff","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nominateNewOwner(address)","name":"nominateNewOwner","description":"Nominate a new owner of this contract. Only the current owner may nominate a new owner.","parameterDecorators":[{"name":"_owner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initiationTime()","name":"initiationTime","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setSelfDestructBeneficiary(address)","name":"setSelfDestructBeneficiary","description":"Set the beneficiary address of this contract. Only the contract owner may call this. The provided beneficiary must be non-null.","parameterDecorators":[{"name":"_beneficiary","description":"The address to pay any eth contained in this contract to upon self-destruction.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"effectiveValueAtRound(bytes32,uint256,bytes32,uint256,uint256)","name":"effectiveValueAtRound","description":"","parameterDecorators":[{"name":"sourceCurrencyKey","description":"","recommendedTypes":[]},{"name":"sourceAmount","description":"","recommendedTypes":[]},{"name":"destinationCurrencyKey","description":"","recommendedTypes":[]},{"name":"roundIdForSrc","description":"","recommendedTypes":[]},{"name":"roundIdForDest","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"removeAggregator(bytes32)","name":"removeAggregator","description":"Remove a pricing aggregator for the given key.","parameterDecorators":[{"name":"currencyKey","description":"The currency key to remove an aggregator for.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"anyRateIsStale(bytes32[])","name":"anyRateIsStale","description":"Check if any of the currency rates passed in haven't been updated for longer than the stale period.","parameterDecorators":[{"name":"currencyKeys","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"invertedKeys(uint256)","name":"invertedKeys","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"terminateSelfDestruct()","name":"terminateSelfDestruct","description":"Terminate and reset the self-destruction timer. Only the contract owner may call this.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addAggregator(bytes32,address)","name":"addAggregator","description":"Add a pricing aggregator for the given key. Note: existing aggregators may be overridden.","parameterDecorators":[{"name":"currencyKey","description":"The currency key to add an aggregator for.","recommendedTypes":[]},{"name":"aggregatorAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deleteRate(bytes32)","name":"deleteRate","description":"Delete a rate stored in the contract.","parameterDecorators":[{"name":"currencyKey","description":"The currency key you wish to delete the rate for.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"aggregatorKeys(uint256)","name":"aggregatorKeys","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"nominatedOwner()","name":"nominatedOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"effectiveValue(bytes32,uint256,bytes32)","name":"effectiveValue","description":"A function that lets you easily convert an amount in a source currency to an amount in the destination currency.","parameterDecorators":[{"name":"sourceCurrencyKey","description":"The currency the amount is specified in.","recommendedTypes":[]},{"name":"sourceAmount","description":"The source amount, specified in UNIT base.","recommendedTypes":[]},{"name":"destinationCurrencyKey","description":"The destination currency.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"aggregators(bytes32)","name":"aggregators","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"inversePricing(bytes32)","name":"inversePricing","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"entryPoint","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"upperLimit","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lowerLimit","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"frozen","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"acceptOwnership()","name":"acceptOwnership","description":"Accept the nomination to be owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRateStalePeriod(uint256)","name":"setRateStalePeriod","description":"Set the stale period on the updated rate variables.","parameterDecorators":[{"name":"_time","description":"The new rateStalePeriod.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getCurrentRoundId(bytes32)","name":"getCurrentRoundId","description":"","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setOracle(address)","name":"setOracle","description":"Set the Oracle that pushes the rate information to this contract.","parameterDecorators":[{"name":"_oracle","description":"The new oracle address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"oracle()","name":"oracle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"selfDestruct()","name":"selfDestruct","description":"If the self-destruction delay has elapsed, destroy this contract and remit any ether it owns to the beneficiary address. Only the contract owner may call this.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"SELFDESTRUCT_DELAY()","name":"SELFDESTRUCT_DELAY","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rateForCurrency(bytes32)","name":"rateForCurrency","description":"Retrieve the rate for a specific currency.","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rateIsFrozen(bytes32)","name":"rateIsFrozen","description":"Check if any rate is frozen (cannot be exchanged into).","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"setInversePricing(bytes32,uint256,uint256,uint256,bool,bool)","name":"setInversePricing","description":"Set an inverse price up for the currency key. * An inverse price is one which has an entryPoint, an uppper and a lower limit. Each update, the rate is calculated as double the entryPrice minus the current rate. If this calculation is above or below the upper or lower limits respectively, then the rate is frozen, and no more rate updates will be accepted.","parameterDecorators":[{"name":"currencyKey","description":"The currency to update.","recommendedTypes":[]},{"name":"entryPoint","description":"The entry price point of the inverted price.","recommendedTypes":[]},{"name":"upperLimit","description":"The upper limit, at or above which the price will be frozen.","recommendedTypes":[]},{"name":"lowerLimit","description":"The lower limit, at or below which the price will be frozen.","recommendedTypes":[]},{"name":"freeze","description":"Whether or not to freeze this rate immediately. Note: no frozen event will be configured.","recommendedTypes":[]},{"name":"freezeAtUpperLimit","description":"When the freeze flag is true, this flag indicates whether the rate to freeze at is the upperLimit or lowerLimit..","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"selfDestructInitiated()","name":"selfDestructInitiated","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"ratesAndStaleForCurrencies(bytes32[])","name":"ratesAndStaleForCurrencies","description":"Retrieve the rates and isAnyStale for a list of currencies.","parameterDecorators":[{"name":"currencyKeys","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"initiateSelfDestruct()","name":"initiateSelfDestruct","description":"Begin the self-destruction counter of this contract. Once the delay has elapsed, the contract may be self-destructed. Only the contract owner may call this.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateRates(bytes32[],uint256[],uint256)","name":"updateRates","description":"Set the rates stored in this contract.","parameterDecorators":[{"name":"currencyKeys","description":"The currency keys you wish to update the rates for (in order).","recommendedTypes":[]},{"name":"newRates","description":"The rates for each currency (in order).","recommendedTypes":[]},{"name":"timeSent","description":"The timestamp of when the update was sent, specified in seconds since epoch (e.g. the same as the now keyword in solidity). This is useful because transactions can take a while to confirm, so this way we know how old the oracle's datapoint was exactly even if it takes a long time for the transaction to confirm.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"ratesForCurrencies(bytes32[])","name":"ratesForCurrencies","description":"Retrieve the rates for a list of currencies.","parameterDecorators":[{"name":"currencyKeys","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"selfDestructBeneficiary()","name":"selfDestructBeneficiary","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeInversePricing(bytes32)","name":"removeInversePricing","description":"Remove an inverse price for the currency key.","parameterDecorators":[{"name":"currencyKey","description":"The currency to remove inverse pricing for.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lastRateUpdateTimes(bytes32)","name":"lastRateUpdateTimes","description":"Retrieves the timestamp the given rate was last updated.","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rateAndTimestampAtRound(bytes32,uint256)","name":"rateAndTimestampAtRound","description":"","parameterDecorators":[{"name":"currencyKey","description":"","recommendedTypes":[]},{"name":"roundId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"rate","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"time","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}