{
  "schema": "../schema.json",
  "tags": [],
  "name": "SmartFundRegistry",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SmartFundAdded(address,address)",
      "name": "SmartFundAdded",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "smartFundAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "COTCoinAddress()",
      "name": "COTCoinAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createSmartFund(string,uint256,uint256,bool)",
      "name": "createSmartFund",
      "description": "Creates a new Full SmartFund.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "The name of the new fund.",
          "recommendedTypes": []
        },
        {
          "name": "_successFee",
          "description": "The fund managers success fee.",
          "recommendedTypes": []
        },
        {
          "name": "_fundType",
          "description": "Fund type enum number.",
          "recommendedTypes": []
        },
        {
          "name": "_isRequireTradeVerification",
          "description": "If true fund can buy only tokens, which include in Merkle Three white list.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createSmartFundLight(string,uint256,uint256,bool)",
      "name": "createSmartFundLight",
      "description": "Creates a new Light SmartFund.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "The name of the new fund.",
          "recommendedTypes": []
        },
        {
          "name": "_successFee",
          "description": "The fund managers success fee.",
          "recommendedTypes": []
        },
        {
          "name": "_fundType",
          "description": "Fund type enum number.",
          "recommendedTypes": []
        },
        {
          "name": "_isRequireTradeVerification",
          "description": "If true fund can buy only tokens, which include in Merkle Three white list.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "defiPortal()",
      "name": "defiPortal",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "exchangePortalAddress()",
      "name": "exchangePortalAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllSmartFundAddresses()",
      "name": "getAllSmartFundAddresses",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maximumSuccessFee()",
      "name": "maximumSuccessFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "permittedAddresses()",
      "name": "permittedAddresses",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolPortalAddress()",
      "name": "poolPortalAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setExchangePortalAddress(address)",
      "name": "setExchangePortalAddress",
      "description": "Owner can set a new default ExchangePortal address.",
      "parameterDecorators": [
        {
          "name": "_newExchangePortalAddress",
          "description": "Address of the new exchange portal to be set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaximumSuccessFee(uint256)",
      "name": "setMaximumSuccessFee",
      "description": "Owner can set maximum success fee for all newly created SmartFunds.",
      "parameterDecorators": [
        {
          "name": "_maximumSuccessFee",
          "description": "New maximum success fee.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setNewDefiPortal(address)",
      "name": "setNewDefiPortal",
      "description": "Allows the fund manager to connect to a new permitted defi portal.",
      "parameterDecorators": [
        {
          "name": "_newDefiPortalAddress",
          "description": "The address of the new permitted defi portal to use.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setNewSmartFundERC20Factory(address)",
      "name": "setNewSmartFundERC20Factory",
      "description": "Owner can set new smartFundERC20Factory.",
      "parameterDecorators": [
        {
          "name": "_smartFundERC20Factory",
          "description": "address of ERC20 factory contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setNewSmartFundETHFactory(address)",
      "name": "setNewSmartFundETHFactory",
      "description": "Owner can set new smartFundETHFactory.",
      "parameterDecorators": [
        {
          "name": "_smartFundETHFactory",
          "description": "address of ETH factory contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPoolPortalAddress(address)",
      "name": "setPoolPortalAddress",
      "description": "Owner can set a new default Portal Portal address.",
      "parameterDecorators": [
        {
          "name": "_poolPortalAddress",
          "description": "Address of the new pool portal to be set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setStableCoinAddress(address)",
      "name": "setStableCoinAddress",
      "description": "Owner can set new stableCoinAddress.",
      "parameterDecorators": [
        {
          "name": "_stableCoinAddress",
          "description": "New stable address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "smartFundERC20Factory()",
      "name": "smartFundERC20Factory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "smartFundERC20LightFactory()",
      "name": "smartFundERC20LightFactory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "smartFundETHFactory()",
      "name": "smartFundETHFactory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "smartFundETHLightFactory()",
      "name": "smartFundETHLightFactory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "smartFunds(uint256)",
      "name": "smartFunds",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stableCoinAddress()",
      "name": "stableCoinAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSmartFunds()",
      "name": "totalSmartFunds",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawEther()",
      "name": "withdrawEther",
      "description": "Allows platform to withdraw ether received as part of the platform fee.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawTokens(address)",
      "name": "withdrawTokens",
      "description": "Allows platform to withdraw tokens received as part of the platform fee.",
      "parameterDecorators": [
        {
          "name": "_tokenAddress",
          "description": "Address of the token to be withdrawn.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}