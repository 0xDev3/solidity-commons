{"schema":"../schema.json","tags":[],"name":"MadeInDreams","description":"","eventDecorators":[{"signature":"Borrow(address,uint256,uint256)","name":"Borrow","description":"Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Deposit(address,uint256,uint256)","name":"Deposit","description":"Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Nodes(uint256,address)","name":"Nodes","description":"Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"nodeId","description":"","recommendedTypes":[],"indexed":false},{"name":"nodeAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RepayBorrow(address,uint256,uint256)","name":"RepayBorrow","description":"Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Swap(address,address,uint256,address,uint256)","name":"Swap","description":"Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"inputAsset","description":"","recommendedTypes":[],"indexed":false},{"name":"inputAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"outputAsset","description":"","recommendedTypes":[],"indexed":false},{"name":"outputAmount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Trade(uint256,uint256)","name":"Trade","description":"Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"nodeId","description":"","recommendedTypes":[],"indexed":false},{"name":"orderId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UpdatePrices(address,uint256,uint256)","name":"UpdatePrices","description":"Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"asset","description":"","recommendedTypes":[],"indexed":false},{"name":"priceUsd","description":"","recommendedTypes":[],"indexed":false},{"name":"timeStamp","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdraw(address,uint256,uint256)","name":"Withdraw","description":"Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"BONUS_FACTOR()","name":"BONUS_FACTOR","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"add(uint256,address,bool)","name":"add","description":"Function add. will add the token to the pool.","parameterDecorators":[{"name":"_allocPoint","description":"the allocation point of the asset.","recommendedTypes":[]},{"name":"_lpToken","description":"the adress of the erc20 asset.","recommendedTypes":[]},{"name":"_withUpdate","description":"if true will run the mass update and cost a lot of gas.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bonusEndBlock()","name":"bonusEndBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit(uint256,uint256)","name":"deposit","description":"Function deposit. deposit some liquidity.","parameterDecorators":[{"name":"_pid","description":"the token address.","recommendedTypes":[]},{"name":"_amount","description":"the account address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"dev(address)","name":"dev","description":"Function dev. Change the dev adderss.","parameterDecorators":[{"name":"_devaddr","description":"the new dev address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"devAddress()","name":"devAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"executeTrade(uint256,uint256)","name":"executeTrade","description":"Call this function to execute the trade you found. This is the function that get's called.","parameterDecorators":[{"name":"_nodeId","description":"The id of the node contract.","recommendedTypes":[]},{"name":"_orderId","description":"The id of order to fill.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"getMultiplier(uint256,uint256)","name":"getMultiplier","description":"Function getMultiplier. will return bonus multiplier as per block.","parameterDecorators":[{"name":"_from","description":"starting block.","recommendedTypes":[]},{"name":"_to","description":"bonus end block.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"massUpdatePools()","name":"massUpdatePools","description":"Function massUpdatePools. will update all the pools and cost a lot of gas.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"mid()","name":"mid","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"midPerBlock()","name":"midPerBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nodeAccReward(address)","name":"nodeAccReward","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nodeCount()","name":"nodeCount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nodes(uint256)","name":"nodes","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"nodeId","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"nodeAddress","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingSushi(uint256,address)","name":"pendingSushi","description":"","parameterDecorators":[{"name":"_pid","description":"","recommendedTypes":[]},{"name":"_user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolBalance(address)","name":"poolBalance","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolInfo(uint256)","name":"poolInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"asset","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"allocPoint","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastRewardBlock","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"accMidPerShare","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolLength()","name":"poolLength","description":"return the length of the pool.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"registerNode()","name":"registerNode","description":"This will make your DEX contract available to trade on the protocol. msg.sender is the contract that call the register.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAllocPoint(uint256,uint256,bool)","name":"setAllocPoint","description":"Function to update allocation point. will update allocation point.","parameterDecorators":[{"name":"_pid","description":"the pool id.","recommendedTypes":[]},{"name":"_allocPoint","description":"the newly set allocation point.","recommendedTypes":[]},{"name":"_withUpdate","description":"if true it will run a mass update and cost a lot of gas.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTradingFees(uint256)","name":"setTradingFees","description":"Function to set the trading fees. Only owner / governance.","parameterDecorators":[{"name":"_tradingFees","description":"The fees amount in %.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakers(uint256,address)","name":"stakers","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"stakersCount()","name":"stakersCount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"startBlock()","name":"startBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalAllocPoint()","name":"totalAllocPoint","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"tradeCount()","name":"tradeCount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unregisteredFees()","name":"unregisteredFees","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"updatePool(uint256)","name":"updatePool","description":"Function updatePool. update the accumulated reward.","parameterDecorators":[{"name":"_pid","description":"id of the pool to update.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userInfo(uint256,address)","name":"userInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewardDebt","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256,uint256)","name":"withdraw","description":"Function withdraw. withdraw some liquidity.","parameterDecorators":[{"name":"_pid","description":"the token address.","recommendedTypes":[]},{"name":"_amount","description":"the account address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}