{"schema":"../schema.json","tags":[],"name":"SymmChef","description":"","eventDecorators":[{"signature":"Deposit(address,uint256,uint256,address)","name":"Deposit","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"to","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"EmergencyWithdraw(address,uint256,uint256,address)","name":"EmergencyWithdraw","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"to","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Harvest(address,uint256,uint256)","name":"Harvest","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogPoolAddition(uint256,uint256,address,address)","name":"LogPoolAddition","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"allocPoint","description":"","recommendedTypes":[],"indexed":false},{"name":"lpToken","description":"","recommendedTypes":[],"indexed":true},{"name":"rewarder","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"LogSetPool(uint256,uint256,address,bool)","name":"LogSetPool","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"allocPoint","description":"","recommendedTypes":[],"indexed":false},{"name":"rewarder","description":"","recommendedTypes":[],"indexed":true},{"name":"overwrite","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogSymmPerSecond(uint256)","name":"LogSymmPerSecond","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"symmPerSecond","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogUpdatePool(uint256,uint64,uint256,uint256)","name":"LogUpdatePool","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"lastRewardTime","description":"","recommendedTypes":[],"indexed":false},{"name":"lpSupply","description":"","recommendedTypes":[],"indexed":false},{"name":"accSymmPerShare","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Withdraw(address,uint256,uint256,address)","name":"Withdraw","description":"Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"to","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"SYMM()","name":"SYMM","description":"Address of SYMM contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"add(uint256,address,address)","name":"add","description":"Add a new LP to the pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do.","parameterDecorators":[{"name":"allocPoint","description":"AP of the new pool.","recommendedTypes":[]},{"name":"_lpToken","description":"Address of the LP ERC-20 token.","recommendedTypes":[]},{"name":"_rewarder","description":"Address of the rewarder delegate.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"batch(bytes[],bool)","name":"batch","description":"","parameterDecorators":[{"name":"calls","description":"","recommendedTypes":[]},{"name":"revertOnFail","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"successes","description":"","recommendedTypes":[],"solidityType":"bool[]"},{"name":"results","description":"","recommendedTypes":[],"solidityType":"bytes[]"}],"emittableEvents":[],"readOnly":false},{"signature":"claimOwnership()","name":"claimOwnership","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deposit(uint256,uint256,address)","name":"deposit","description":"Deposit LP tokens to Chef for SYMM allocation.","parameterDecorators":[{"name":"pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]},{"name":"amount","description":"LP token amount to deposit.","recommendedTypes":[]},{"name":"to","description":"The receiver of `amount` deposit benefit.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyWithdraw(uint256,address)","name":"emergencyWithdraw","description":"Withdraw without caring about rewards. EMERGENCY ONLY.","parameterDecorators":[{"name":"pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]},{"name":"to","description":"Receiver of the LP tokens.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"harvest(uint256,address)","name":"harvest","description":"Harvest proceeds for transaction sender to `to`.","parameterDecorators":[{"name":"pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]},{"name":"to","description":"Receiver of SYMM rewards.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lpToken(uint256)","name":"lpToken","description":"Address of the LP token for each Chef pool.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"massUpdatePools(uint256[])","name":"massUpdatePools","description":"Update reward variables for all pools. Be careful of gas spending!.","parameterDecorators":[{"name":"pids","description":"Pool IDs of all to be updated. Make sure to update all active pools.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingOwner()","name":"pendingOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingSymm(uint256,address)","name":"pendingSymm","description":"View function to see pending SYMM on frontend.","parameterDecorators":[{"name":"_pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]},{"name":"_user","description":"Address of user.","recommendedTypes":[]}],"returnDecorators":[{"name":"pending","description":"SYMM reward for a given user.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)","name":"permitToken","description":"","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]},{"name":"from","description":"","recommendedTypes":[]},{"name":"to","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]},{"name":"deadline","description":"","recommendedTypes":[]},{"name":"v","description":"","recommendedTypes":[]},{"name":"r","description":"","recommendedTypes":[]},{"name":"s","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"poolInfo(uint256)","name":"poolInfo","description":"Info of each Chef pool.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"accSymmPerShare","description":"","recommendedTypes":[],"solidityType":"uint128"},{"name":"lastRewardTime","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"allocPoint","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"poolLength()","name":"poolLength","description":"Returns the number of Chef pools.","parameterDecorators":[],"returnDecorators":[{"name":"pools","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewarder(uint256)","name":"rewarder","description":"Address of each `IRewarder` contract in Chef.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"set(uint256,uint256,address,bool)","name":"set","description":"Update the given pool's SYMM allocation point and `IRewarder` contract. Can only be called by the owner.","parameterDecorators":[{"name":"_pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]},{"name":"_allocPoint","description":"New AP of the pool.","recommendedTypes":[]},{"name":"_rewarder","description":"Address of the rewarder delegate.","recommendedTypes":[]},{"name":"overwrite","description":"True if _rewarder should be `set`. Otherwise `_rewarder` is ignored.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setSymmPerSecond(uint256)","name":"setSymmPerSecond","description":"Sets the symm per second to be distributed. Can only be called by the owner.","parameterDecorators":[{"name":"_symmPerSecond","description":"The amount of Symm to be distributed per second.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"symmPerSecond()","name":"symmPerSecond","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalAllocPoint()","name":"totalAllocPoint","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address,bool,bool)","name":"transferOwnership","description":"","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]},{"name":"direct","description":"","recommendedTypes":[]},{"name":"renounce","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updatePool(uint256)","name":"updatePool","description":"Update reward variables of the given pool.","parameterDecorators":[{"name":"pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]}],"returnDecorators":[{"name":"pool","description":"Returns the pool that was updated.","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":false},{"signature":"userInfo(uint256,address)","name":"userInfo","description":"Info of each user that stakes LP tokens.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewardDebt","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256,uint256,address)","name":"withdraw","description":"Withdraw LP tokens from Chef.","parameterDecorators":[{"name":"pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]},{"name":"amount","description":"LP token amount to withdraw.","recommendedTypes":[]},{"name":"to","description":"Receiver of the LP tokens.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawAndHarvest(uint256,uint256,address)","name":"withdrawAndHarvest","description":"Withdraw LP tokens from Chef and harvest proceeds for transaction sender to `to`.","parameterDecorators":[{"name":"pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]},{"name":"amount","description":"LP token amount to withdraw.","recommendedTypes":[]},{"name":"to","description":"Receiver of the LP tokens and SYMM rewards.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}