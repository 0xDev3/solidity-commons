{
  "schema": "../schema.json",
  "tags": [],
  "name": "Competition",
  "description": "",
  "eventDecorators": [
    {
      "signature": "NewCompetitionProposal(bytes32,uint256,uint256[],uint256,uint256,uint256,uint256,uint256,address,address)",
      "name": "NewCompetitionProposal",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_numberOfWinners",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_rewardSplit",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_startTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_votingStartTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_suggestionsEndTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_endTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_maxNumberOfVotesPerVoter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_contributionRewardExt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewSuggestion(bytes32,uint256,string,address)",
      "name": "NewSuggestion",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_suggestionId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_descriptionHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NewVote(bytes32,uint256,address,uint256)",
      "name": "NewVote",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_suggestionId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_voter",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_reputation",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Redeem(bytes32,uint256,uint256)",
      "name": "Redeem",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_suggestionId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_rewardPercentage",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SnapshotBlock(bytes32,uint256)",
      "name": "SnapshotBlock",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_snapshotBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "MAX_NUMBER_OF_WINNERS()",
      "name": "MAX_NUMBER_OF_WINNERS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "REDEMPTION_PERIOD()",
      "name": "REDEMPTION_PERIOD",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "contributionRewardExt()",
      "name": "contributionRewardExt",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOrderedIndexOfSuggestion(uint256)",
      "name": "getOrderedIndexOfSuggestion",
      "description": "getOrderedIndexOfSuggestion return the index of specific suggestion in the winners list. for the case when the suggestion is NOT in the winners list, this method will return topSuggestions.length.",
      "parameterDecorators": [
        {
          "name": "_suggestionId",
          "description": "suggestion id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "initialize.",
      "parameterDecorators": [
        {
          "name": "_contributionRewardExt",
          "description": "the contributionRewardExt scheme which manage and allocate the rewards for the competition.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proposals(bytes32)",
      "name": "proposals",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "numberOfWinners",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "votingStartTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "suggestionsEndTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "maxNumberOfVotesPerVoter",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "contributionRewardExt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "snapshotBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "reputationReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "ethReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "nativeTokenReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "externalTokenReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposeCompetition(string,int256,uint256[3],address,uint256[],uint256[5],bool)",
      "name": "proposeCompetition",
      "description": "Submit a competion proposal.",
      "parameterDecorators": [
        {
          "name": "_descriptionHash",
          "description": "A hash of the proposal's description.",
          "recommendedTypes": []
        },
        {
          "name": "_reputationChange",
          "description": "- Amount of reputation change requested.",
          "recommendedTypes": []
        },
        {
          "name": "_rewards",
          "description": "rewards array: rewards[0] - Amount of tokens requested per period rewards[1] - Amount of ETH requested per period rewards[2] - Amount of external tokens requested per period.",
          "recommendedTypes": []
        },
        {
          "name": "_externalToken",
          "description": "Address of external token, if reward is requested there.",
          "recommendedTypes": []
        },
        {
          "name": "_rewardSplit",
          "description": "an array of precentages which specify how to split the rewards between the winning suggestions.",
          "recommendedTypes": []
        },
        {
          "name": "_competitionParams",
          "description": "competition parameters : _competitionParams[0] - competition startTime _competitionParams[1] - _votingStartTime competition voting start time _competitionParams[2] - _endTime competition end time _competitionParams[3] - _maxNumberOfVotesPerVoter on how many suggestions a voter can vote _competitionParams[4] - _suggestionsEndTime suggestion submission end time _proposerIsAdmin - true - proposer is an admin. false no admin. if admin is set, so only admin can suggest on this proposal.",
          "recommendedTypes": []
        },
        {
          "name": "_proposerIsAdmin",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeem(uint256)",
      "name": "redeem",
      "description": "redeem a winning suggestion reward.",
      "parameterDecorators": [
        {
          "name": "_suggestionId",
          "description": "suggestionId.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sendLeftOverFunds(bytes32)",
      "name": "sendLeftOverFunds",
      "description": "sendLeftOverFund send leftover funds back to the dao.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the proposal id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSnapshotBlock(bytes32)",
      "name": "setSnapshotBlock",
      "description": "setSnapshotBlock set the block for the reputaion snapshot this function is public in order to externaly set snapshot block regardless of the first voting event.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the proposal id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "suggest(bytes32,string,address)",
      "name": "suggest",
      "description": "submit a competion suggestion.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the proposal id this suggestion is referring to.",
          "recommendedTypes": []
        },
        {
          "name": "_descriptionHash",
          "description": "a descriptionHash of the suggestion.",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "the beneficiary of this suggestion.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "suggestions(uint256)",
      "name": "suggestions",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "totalVotes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "suggestionsCounter()",
      "name": "suggestionsCounter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vote(uint256)",
      "name": "vote",
      "description": "vote on a suggestion.",
      "parameterDecorators": [
        {
          "name": "_suggestionId",
          "description": "suggestionId.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}