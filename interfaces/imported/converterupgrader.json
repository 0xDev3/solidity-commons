{"schema":"../schema.json","tags":[],"name":"ConverterUpgrader","description":"","eventDecorators":[{"signature":"ConverterOwned(address,address)","name":"ConverterOwned","description":"Emitted when a new WPC speed is calculated for a market. triggered when the contract accept a converter ownership.","parameterDecorators":[{"name":"_converter","description":"converter address.","recommendedTypes":[],"indexed":true},{"name":"_owner","description":"new owner - local upgrader address.","recommendedTypes":[],"indexed":true}]},{"signature":"ConverterUpgrade(address,address)","name":"ConverterUpgrade","description":"Emitted when a new WPC speed is calculated for a market. triggered when the upgrading process is done.","parameterDecorators":[{"name":"_oldConverter","description":"old converter address.","recommendedTypes":[],"indexed":true},{"name":"_newConverter","description":"new converter address.","recommendedTypes":[],"indexed":true}]},{"signature":"OwnerUpdate(address,address)","name":"OwnerUpdate","description":"Emitted when a new WPC speed is calculated for a market.","parameterDecorators":[{"name":"_prevOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"_newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"acceptOwnership()","name":"acceptOwnership","description":"used by a new owner to accept an ownership transfer.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"newOwner()","name":"newOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"onlyOwnerCanUpdateRegistry()","name":"onlyOwnerCanUpdateRegistry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"prevRegistry()","name":"prevRegistry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"registry()","name":"registry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"restoreRegistry()","name":"restoreRegistry","description":"restores the previous contract-registry.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"restrictRegistryUpdate(bool)","name":"restrictRegistryUpdate","description":"restricts the permission to update the contract-registry.","parameterDecorators":[{"name":"_onlyOwnerCanUpdateRegistry","description":"indicates whether or not permission is restricted to owner only.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner.","parameterDecorators":[{"name":"_newOwner","description":"new contract owner.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateRegistry()","name":"updateRegistry","description":"updates to the new contract-registry.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgrade(uint16)","name":"upgrade","description":"upgrades an old converter to the latest version will throw if ownership wasn't transferred to the upgrader before calling this function. ownership of the new converter will be transferred back to the original owner. fires the ConverterUpgrade event upon success. can only be called by a converter.","parameterDecorators":[{"name":"_version","description":"old converter version.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgrade(bytes32)","name":"upgrade","description":"upgrades an old converter to the latest version will throw if ownership wasn't transferred to the upgrader before calling this function. ownership of the new converter will be transferred back to the original owner. fires the ConverterUpgrade event upon success. can only be called by a converter.","parameterDecorators":[{"name":"_version","description":"old converter version.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeOld(address,bytes32)","name":"upgradeOld","description":"upgrades an old converter to the latest version will throw if ownership wasn't transferred to the upgrader before calling this function. ownership of the new converter will be transferred back to the original owner. fires the ConverterUpgrade event upon success.","parameterDecorators":[{"name":"_converter","description":"old converter contract address.","recommendedTypes":[]},{"name":"_version","description":"old converter version.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}