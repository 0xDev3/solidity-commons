{
  "schema": "../schema.json",
  "tags": [
    "aave"
  ],
  "name": "AaveImportTakerV2",
  "description": "Import Aave position from account to wallet. Contract needs to have enough wei in WETH for all transactions (2 WETH wei per transaction).",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "AAVE_IMPORT()",
      "name": "AAVE_IMPORT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ElixyrsaverLoggerAddre()",
      "name": "ElixyrsaverLoggerAddre",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "FACTORY_ADDRESS()",
      "name": "FACTORY_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PROXY_REGISTRY_ADDRESS()",
      "name": "PROXY_REGISTRY_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SOLO_MARGIN_ADDRESS()",
      "name": "SOLO_MARGIN_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WETH_ADDR()",
      "name": "WETH_ADDR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "givePermission(address)",
      "name": "givePermission",
      "description": "Called in the context of DSProxy to authorize an address.",
      "parameterDecorators": [
        {
          "name": "_contractAddr",
          "description": "Address which will be authorized.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "importLoan(address,address,address,uint256)",
      "name": "importLoan",
      "description": "Starts the process to move users position 1 collateral and 1 borrow. User must send 2 wei with this transactionUser must approve DSProxy to pull _aCollateralToken.",
      "parameterDecorators": [
        {
          "name": "_market",
          "description": "Market in which we want to import.",
          "recommendedTypes": []
        },
        {
          "name": "_collateralToken",
          "description": "Collateral token we are moving to DSProxy.",
          "recommendedTypes": []
        },
        {
          "name": "_borrowToken",
          "description": "Borrow token we are moving to DSProxy.",
          "recommendedTypes": []
        },
        {
          "name": "_ethAmount",
          "description": "ETH amount that needs to be pulled from dydx.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removePermission(address)",
      "name": "removePermission",
      "description": "Called in the context of DSProxy to remove authority of an address.",
      "parameterDecorators": [
        {
          "name": "_contractAddr",
          "description": "Auth address which will be removed from authority list.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}