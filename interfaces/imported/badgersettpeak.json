{
  "schema": "../schema.json",
  "tags": [],
  "name": "BadgerSettPeak",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Mint(address,uint256,uint256)",
      "name": "Mint",
      "description": "Emitted when `indexer` withdrew `tokens` staked.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ibBTC",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sett",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when `indexer` withdrew `tokens` staked.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "Emitted when `indexer` withdrew `tokens` staked.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Redeem(address,uint256,uint256)",
      "name": "Redeem",
      "description": "Emitted when `indexer` withdrew `tokens` staked.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ibBTC",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sett",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "Emitted when `indexer` withdrew `tokens` staked.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "approveContractAccess(address)",
      "name": "approveContractAccess",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "approved(address)",
      "name": "approved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "badgerGovernance()",
      "name": "badgerGovernance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "blockLock(address)",
      "name": "blockLock",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calcMint(uint256,uint256)",
      "name": "calcMint",
      "description": "",
      "parameterDecorators": [
        {
          "name": "poolId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "inAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "bBTC",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calcRedeem(uint256,uint256)",
      "name": "calcRedeem",
      "description": "Determines the Sett tokens that will be received when redeeming bBTC.",
      "parameterDecorators": [
        {
          "name": "poolId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "bBtc",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "sett",
          "description": "Number of sett tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "fee",
          "description": "Fee charges.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "max",
          "description": "Max amount of bBTC redeemable for chosen sett.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "core()",
      "name": "core",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "guardian()",
      "name": "guardian",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mint(uint256,uint256,bytes32[])",
      "name": "mint",
      "description": "Mint bBTC with Sett LP token. Invoking pool.sett.safeTransferFrom() before core.mint(), will mess up core.totalSystemAssets() calculation.",
      "parameterDecorators": [
        {
          "name": "poolId",
          "description": "System internal ID of the whitelisted curve pool.",
          "recommendedTypes": []
        },
        {
          "name": "inAmount",
          "description": "Amount of Sett LP token to mint bBTC with.",
          "recommendedTypes": []
        },
        {
          "name": "merkleProof",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "outAmount",
          "description": "Amount of bBTC minted to user's account.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "modifyWhitelistedCurvePools(tuple(address,address)[])",
      "name": "modifyWhitelistedCurvePools",
      "description": "Manage whitelisted curve pools and their respective sett vaults.",
      "parameterDecorators": [
        {
          "name": "_pools",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "swap",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "sett",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "numPools()",
      "name": "numPools",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_paused",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pools(uint256)",
      "name": "pools",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "swap",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "sett",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "portfolioValue()",
      "name": "portfolioValue",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "redeem(uint256,uint256)",
      "name": "redeem",
      "description": "Redeem bBTC in Sett LP tokens. There might not be enough Sett LP to fulfill the request, in which case the transaction will revert Invoking pool.sett.safeTransfer() before core.redeem(), will mess up core.totalSystemAssets() calculation.",
      "parameterDecorators": [
        {
          "name": "poolId",
          "description": "System internal ID of the whitelisted curve pool.",
          "recommendedTypes": []
        },
        {
          "name": "inAmount",
          "description": "Amount of bBTC to redeem.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "outAmount",
          "description": "Amount of Sett LP token.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeContractAccess(address)",
      "name": "revokeContractAccess",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGuardian(address)",
      "name": "setGuardian",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_guardian",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`).",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}