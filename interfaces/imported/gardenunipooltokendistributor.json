{"schema":"../schema.json","tags":["tokens"],"name":"GardenUnipoolTokenDistributor","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"To be emitted when a translation is submitted.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RewardAdded(uint256)","name":"RewardAdded","description":"To be emitted when a translation is submitted.","parameterDecorators":[{"name":"reward","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RewardPaid(address,uint256)","name":"RewardPaid","description":"To be emitted when a translation is submitted.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"reward","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Staked(address,uint256)","name":"Staked","description":"To be emitted when a translation is submitted.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdrawn(address,uint256)","name":"Withdrawn","description":"To be emitted when a translation is submitted.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"__LPTokenWrapper_initialize()","name":"__LPTokenWrapper_initialize","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"__TokenManagerHook_initialize(address)","name":"__TokenManagerHook_initialize","description":"Usually this contract is deploy by a factory, and in the same transaction, `onRegisterAsHook` is called. Since in this case, the `onRegisterAsHook` will be called after the deployment, to avoid unwanted calls to `onRegisterAsHook`, token manager address is set in the initialization.","parameterDecorators":[{"name":"tokenManager","description":"Token manager address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"balanceOf(address)","name":"balanceOf","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"claimableStream(address)","name":"claimableStream","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"duration()","name":"duration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"earned(address)","name":"earned","description":"Function to get the amount of tokens is transferred in the claim txThe difference between what this returns and what the claimableStream function returns will be locked in TokenDistro to be streamed and released gradually.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getReward()","name":"getReward","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getTimestamp()","name":"getTimestamp","description":"Function to get the current timestamp from the block.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenManager()","name":"getTokenManager","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,uint256,address)","name":"initialize","description":"","parameterDecorators":[{"name":"_tokenDistribution","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"tokenManager","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lastTimeRewardApplicable()","name":"lastTimeRewardApplicable","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lastUpdateTime()","name":"lastUpdateTime","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"notifyRewardAmount(uint256)","name":"notifyRewardAmount","description":"","parameterDecorators":[{"name":"reward","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"onApprove(address,address,uint256)","name":"onApprove","description":"","parameterDecorators":[{"name":"_holder","description":"","recommendedTypes":[]},{"name":"_spender","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"onRegisterAsHook(uint256,address)","name":"onRegisterAsHook","description":"","parameterDecorators":[{"name":"_hookId","description":"","recommendedTypes":[]},{"name":"_token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"onRevokeAsHook(uint256,address)","name":"onRevokeAsHook","description":"","parameterDecorators":[{"name":"_hookId","description":"","recommendedTypes":[]},{"name":"_token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"onTransfer(address,address,uint256)","name":"onTransfer","description":"","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[]},{"name":"_to","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"periodFinish()","name":"periodFinish","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardDistribution()","name":"rewardDistribution","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardPerToken()","name":"rewardPerToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardPerTokenStored()","name":"rewardPerTokenStored","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardRate()","name":"rewardRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewards(address)","name":"rewards","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setRewardDistribution(address)","name":"setRewardDistribution","description":"","parameterDecorators":[{"name":"_rewardDistribution","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tokenDistro()","name":"tokenDistro","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"totalSupply()","name":"totalSupply","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userRewardPerTokenPaid(address)","name":"userRewardPerTokenPaid","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}