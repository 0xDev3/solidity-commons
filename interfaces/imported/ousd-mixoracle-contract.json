{
  "schema": "../schema.json",
  "tags": [
    "oracles"
  ],
  "name": "MixOracle",
  "description": "OUSD MixOracle Contract. The MixOracle pulls exchange rate from multiple oracles and returns min and max values.",
  "eventDecorators": [
    {
      "signature": "DriftsUpdated(uint256,uint256)",
      "name": "DriftsUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_minDrift",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_maxDrift",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EthUsdOracleRegistered(address)",
      "name": "EthUsdOracleRegistered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_oracle",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EthUsdOracleDeregistered(address)",
      "name": "EthUsdOracleDeregistered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_oracle",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenOracleRegistered(string,address[],address[])",
      "name": "TokenOracleRegistered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PendingGovernorshipTransfer(address,address)",
      "name": "PendingGovernorshipTransfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "GovernorshipTransferred(address,address)",
      "name": "GovernorshipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "governor()",
      "name": "governor",
      "description": "Returns the address of the current Governor.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "priceMin(string)",
      "name": "priceMin",
      "description": "Returns the min price of an asset in USD.",
      "parameterDecorators": [
        {
          "name": "symbol",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "price",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxDrift()",
      "name": "maxDrift",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenUSDOraclesLength(string)",
      "name": "getTokenUSDOraclesLength",
      "description": "Returns the length of the usdOracles array for a given token.",
      "parameterDecorators": [
        {
          "name": "symbol",
          "description": "Asset symbol. Example: \"DAI\".",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setMinMaxDrift(uint256,uint256)",
      "name": "setMinMaxDrift",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_minDrift",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_maxDrift",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "minDrift()",
      "name": "minDrift",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimGovernance()",
      "name": "claimGovernance",
      "description": "Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTokenETHOraclesLength(string)",
      "name": "getTokenETHOraclesLength",
      "description": "Returns the length of the ethOracles array for a given token.",
      "parameterDecorators": [
        {
          "name": "symbol",
          "description": "Asset symbol. Example: \"DAI\".",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "priceMax(string)",
      "name": "priceMax",
      "description": "Returns max price of an asset in USD.",
      "parameterDecorators": [
        {
          "name": "symbol",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "price",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registerTokenOracles(string,address[],address[])",
      "name": "registerTokenOracles",
      "description": "Adds an oracle to the list of oracles to pull data from.",
      "parameterDecorators": [
        {
          "name": "symbol",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ethOracles",
          "description": "Addresses of oracles that implements the IEthUsdOracle interface and answers for this asset.",
          "recommendedTypes": []
        },
        {
          "name": "usdOracles",
          "description": "Addresses of oracles that implements the IPriceOracle interface and answers for this asset*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTokenETHOracle(string,uint256)",
      "name": "getTokenETHOracle",
      "description": "Returns the address of a specific ETH oracle.",
      "parameterDecorators": [
        {
          "name": "symbol",
          "description": "Asset symbol. Example: \"DAI\".",
          "recommendedTypes": []
        },
        {
          "name": "idx",
          "description": "Index of the array value to return.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isGovernor()",
      "name": "isGovernor",
      "description": "Returns true if the caller is the current Governor.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferGovernance(address)",
      "name": "transferGovernance",
      "description": "Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete.",
      "parameterDecorators": [
        {
          "name": "_newGovernor",
          "description": "Address of the new Governor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unregisterEthUsdOracle(address)",
      "name": "unregisterEthUsdOracle",
      "description": "Removes an oracle to the list of oracles to pull data from.",
      "parameterDecorators": [
        {
          "name": "oracle",
          "description": "Address of an oracle that implements the IEthUsdOracle interface.*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registerEthUsdOracle(address)",
      "name": "registerEthUsdOracle",
      "description": "Adds an oracle to the list of oracles to pull data from.",
      "parameterDecorators": [
        {
          "name": "oracle",
          "description": "Address of an oracle that implements the IEthUsdOracle interface.*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTokenUSDOracle(string,uint256)",
      "name": "getTokenUSDOracle",
      "description": "Returns the address of a specific USD oracle.",
      "parameterDecorators": [
        {
          "name": "symbol",
          "description": "Asset symbol. Example: \"DAI\".",
          "recommendedTypes": []
        },
        {
          "name": "idx",
          "description": "Index of the array value to return.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ethUsdOracles(uint256)",
      "name": "ethUsdOracles",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}