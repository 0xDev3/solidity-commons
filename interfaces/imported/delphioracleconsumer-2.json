{
  "schema": "../schema.json",
  "tags": [
    "oracles"
  ],
  "name": "DelphiOracleConsumer",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Received(uint256,string,string,uint256,uint256,uint256)",
      "name": "Received",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "callId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "pair",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "median",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "answers(uint256)",
      "name": "answers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "makeRequest(string,uint256,uint256)",
      "name": "makeRequest",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pair",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "limit",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "callback_gas",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "receiveDatapoints(uint256,tuple(string,string,uint256,uint256,uint256)[])",
      "name": "receiveDatapoints",
      "description": "",
      "parameterDecorators": [
        {
          "name": "callId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "datapoints",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "pair",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "owner",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "timestamp",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "median",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "value",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "requests(uint256)",
      "name": "requests",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "pair",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}