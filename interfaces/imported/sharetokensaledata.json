{"schema":"../schema.json","tags":["tokens"],"name":"ShareTokenSaleData","description":"","eventDecorators":[{"signature":"OwnerChanged(address)","name":"OwnerChanged","description":"A DApp has been deauthorized by a user for a worker.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"end(uint256,uint256)","name":"end","description":"Set contract properties to end current round Implementations 1. Update current round 2. Update canPurchase = true 3. Save startTime for new round.","parameterDecorators":[{"name":"round","description":"","recommendedTypes":[]},{"name":"time","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"getNextReleaseTime(uint256)","name":"getNextReleaseTime","description":"Get the next time can be released for this round.","parameterDecorators":[{"name":"round","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getReleasedCountByRound(uint256)","name":"getReleasedCountByRound","description":"Get release count by round.","parameterDecorators":[{"name":"round","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getReleasedCountByRoundAndHolder(uint256,address)","name":"getReleasedCountByRoundAndHolder","description":"Get release count by round and holder.","parameterDecorators":[{"name":"round","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getReleasedPercentByRound(uint256)","name":"getReleasedPercentByRound","description":"Get release count by round.","parameterDecorators":[{"name":"round","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getShareholderBalance(address,uint256)","name":"getShareholderBalance","description":"Get share holder's token balance.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]},{"name":"round","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getShareholderCanTransfer()","name":"getShareholderCanTransfer","description":"Get the state to check whether shareholders can transfer BNU or not.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getShareholders()","name":"getShareholders","description":"Get shareholder list.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenSaleEndTime(uint256)","name":"getTokenSaleEndTime","description":"Get end time of `round`.","parameterDecorators":[{"name":"round","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalCanReleaseCountByRound(uint256)","name":"getTotalCanReleaseCountByRound","description":"Get total count can be released by round `round`.","parameterDecorators":[{"name":"round","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"isContractActive()","name":"isContractActive","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setContractStatus(bool)","name":"setContractStatus","description":"Update contract status to make sure this contract can be executed or not.","parameterDecorators":[{"name":"status","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setOwner(address)","name":"setOwner","description":"Change contract's owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"If success return true; else return false Requirements: 1. Only current owner can execute 2. `newOwner` is not zero address 3. `newOwner` is not current owner Implementations: 1. Validate requirements 2. Set current owner is newOwner 3. Emit Events 4. Return result.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"setShareholderCanTransfer(bool)","name":"setShareholderCanTransfer","description":"Set the state to check whether shareholders can transfer BNU or not.","parameterDecorators":[{"name":"value","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTokenSaleContractAddress(address)","name":"setTokenSaleContractAddress","description":"Set _tokenSaleContractAddress.","parameterDecorators":[{"name":"contractAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updatePurchaseData(address,uint256,uint256)","name":"updatePurchaseData","description":"Update all related data for purchasing Implementations: 1. Create purchase history 2. Decrease remained token for `round` 3. Increase shareholder's balance.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]},{"name":"round","description":"","recommendedTypes":[]},{"name":"tokenAmount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"updateReleasedData(uint256)","name":"updateReleasedData","description":"Update released data when releasing.","parameterDecorators":[{"name":"round","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"updateShareholderTransferData(address,address,uint256,uint256)","name":"updateShareholderTransferData","description":"Update all transfer data when a transfer request is maked Implementations 1. Add transfer history 2. Update transfer balance 3. Update share holder balance.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[]},{"name":"to","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]},{"name":"round","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"updateWithdrawData(address,uint256)","name":"updateWithdrawData","description":"Update released data when releasing.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]},{"name":"round","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false}]}