{
  "schema": "../schema.json",
  "tags": [
    "aave"
  ],
  "name": "AaveSaverTakerV2",
  "description": "Import Aave position from account to wallet. Contract needs to have enough wei in WETH for all transactions (2 WETH wei per transaction).",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "AAVE_RECEIVER()",
      "name": "AAVE_RECEIVER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DEFISAVER_LOGGER()",
      "name": "DEFISAVER_LOGGER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "FACTORY_ADDRESS()",
      "name": "FACTORY_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PROXY_REGISTRY_ADDRESS()",
      "name": "PROXY_REGISTRY_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SOLO_MARGIN_ADDRESS()",
      "name": "SOLO_MARGIN_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WETH_ADDR()",
      "name": "WETH_ADDR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "boost(address,tuple(address,address,uint256,uint256,uint256,uint256,address,address,bytes,tuple),uint256,uint256,uint256)",
      "name": "boost",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_market",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "srcAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "dfsFeeDivider",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "user",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wrapper",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wrapperData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "offchainData",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "_rateMode",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_gasCost",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_flAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "gasToken()",
      "name": "gasToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "givePermission(address)",
      "name": "givePermission",
      "description": "Called in the context of DSProxy to authorize an address.",
      "parameterDecorators": [
        {
          "name": "_contractAddr",
          "description": "Address which will be authorized.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "packExchangeData(tuple(address,address,uint256,uint256,uint256,uint256,address,address,bytes,tuple))",
      "name": "packExchangeData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exData",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "srcAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "dfsFeeDivider",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "user",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wrapper",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wrapperData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "offchainData",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removePermission(address)",
      "name": "removePermission",
      "description": "Called in the context of DSProxy to remove authority of an address.",
      "parameterDecorators": [
        {
          "name": "_contractAddr",
          "description": "Auth address which will be removed from authority list.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "repay(address,tuple(address,address,uint256,uint256,uint256,uint256,address,address,bytes,tuple),uint256,uint256,uint256)",
      "name": "repay",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_market",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAddr",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "srcAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "destAmount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "dfsFeeDivider",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "user",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wrapper",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "wrapperData",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "offchainData",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "_rateMode",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_gasCost",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_flAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpackExchangeData(bytes)",
      "name": "unpackExchangeData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_exData",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "srcAddr",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "destAddr",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "srcAmount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "destAmount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "minPrice",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "dfsFeeDivider",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "user",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "wrapper",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "wrapperData",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bytes"
            },
            {
              "name": "offchainData",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}