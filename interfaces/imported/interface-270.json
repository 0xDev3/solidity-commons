{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "ContributionReward",
  "description": "A scheme for proposing and rewarding contributions to an organization. An agent can ask an organization to recognize a contribution and reward him with token, reputation, ether or any combination.",
  "eventDecorators": [
    {
      "signature": "NewContributionProposal(address,bytes32,address,string,int256,uint256[5],address,address)",
      "name": "NewContributionProposal",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_intVoteInterface",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_descriptionHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_reputationChange",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_rewards",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_externalToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalExecuted(address,bytes32,int256)",
      "name": "ProposalExecuted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RedeemEther(address,bytes32,address,uint256)",
      "name": "RedeemEther",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RedeemExternalToken(address,bytes32,address,uint256)",
      "name": "RedeemExternalToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RedeemNativeToken(address,bytes32,address,uint256)",
      "name": "RedeemNativeToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RedeemReputation(address,bytes32,address,int256)",
      "name": "RedeemReputation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "balanceOfStakingToken(address,bytes32)",
      "name": "balanceOfStakingToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "burnReputation(uint256,address,bytes32)",
      "name": "burnReputation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executeProposal(bytes32,int256)",
      "name": "executeProposal",
      "description": "execution of proposals, can only be called by the voting machine in which the vote is held.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_param",
          "description": "a parameter of the voting result, 1 yes and 2 is no.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getParametersHash(bytes32,address)",
      "name": "getParametersHash",
      "description": "return a hash of the given parameters.",
      "parameterDecorators": [
        {
          "name": "_voteApproveParams",
          "description": "parameters for the voting machine used to approve a contribution.",
          "recommendedTypes": []
        },
        {
          "name": "_intVote",
          "description": "the voting machine used to approve a contribution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPeriodsToPay(bytes32,address,uint256)",
      "name": "getPeriodsToPay",
      "description": "getPeriodsToPay return the periods left to be paid for reputation,nativeToken,ether or externalToken. The function ignore the reward amount to be paid (which can be zero).",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_avatar",
          "description": "address of the controller.",
          "recommendedTypes": []
        },
        {
          "name": "_redeemType",
          "description": "- the type of the reward : 0 - reputation 1 - nativeTokenReward 2 - Ether 3 - ExternalToken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProposalEthReward(bytes32,address)",
      "name": "getProposalEthReward",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProposalExecutionTime(bytes32,address)",
      "name": "getProposalExecutionTime",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProposalExternalToken(bytes32,address)",
      "name": "getProposalExternalToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProposalExternalTokenReward(bytes32,address)",
      "name": "getProposalExternalTokenReward",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRedeemedPeriods(bytes32,address,uint256)",
      "name": "getRedeemedPeriods",
      "description": "getRedeemedPeriods return the already redeemed periods for reputation, nativeToken, ether or externalToken.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_avatar",
          "description": "address of the controller.",
          "recommendedTypes": []
        },
        {
          "name": "_redeemType",
          "description": "- the type of the reward : 0 - reputation 1 - nativeTokenReward 2 - Ether 3 - ExternalToken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalReputationSupply(bytes32)",
      "name": "getTotalReputationSupply",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mintReputation(uint256,address,bytes32)",
      "name": "mintReputation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "organizationsProposals(address,bytes32)",
      "name": "organizationsProposals",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "nativeTokenReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "reputationChange",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "ethReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "externalToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "externalTokenReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "periodLength",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "numberOfPeriods",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "executionTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "parameters(bytes32)",
      "name": "parameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "voteApproveParams",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "intVote",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalsInfo(address,bytes32)",
      "name": "proposalsInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "avatar",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposeContributionReward(address,string,int256,uint256[5],address,address)",
      "name": "proposeContributionReward",
      "description": "Submit a proposal for a reward for a contribution:.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "Avatar of the organization that the contribution was made for.",
          "recommendedTypes": []
        },
        {
          "name": "_descriptionHash",
          "description": "A hash of the proposal's description.",
          "recommendedTypes": []
        },
        {
          "name": "_reputationChange",
          "description": "- Amount of reputation change requested .Can be negative.",
          "recommendedTypes": []
        },
        {
          "name": "_rewards",
          "description": "rewards array: rewards[0] - Amount of tokens requested per period rewards[1] - Amount of ETH requested per period rewards[2] - Amount of external tokens requested per period rewards[3] - Period length - if set to zero it allows immediate redeeming after execution. rewards[4] - Number of periods.",
          "recommendedTypes": []
        },
        {
          "name": "_externalToken",
          "description": "Address of external token, if reward is requested there.",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "Who gets the rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeem(bytes32,address,bool[4])",
      "name": "redeem",
      "description": "redeem rewards for proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_avatar",
          "description": "address of the controller.",
          "recommendedTypes": []
        },
        {
          "name": "_whatToRedeem",
          "description": "whatToRedeem array: whatToRedeem[0] - reputation whatToRedeem[1] - nativeTokenReward whatToRedeem[2] - Ether whatToRedeem[3] - ExternalToken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "reputationReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "nativeTokenReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "etherReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "externalTokenReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeemEther(bytes32,address)",
      "name": "redeemEther",
      "description": "RedeemEther reward for proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_avatar",
          "description": "address of the controller.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeemExternalToken(bytes32,address)",
      "name": "redeemExternalToken",
      "description": "RedeemNativeToken reward for proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_avatar",
          "description": "address of the controller.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeemNativeToken(bytes32,address)",
      "name": "redeemNativeToken",
      "description": "RedeemNativeToken reward for proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_avatar",
          "description": "address of the controller.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeemReputation(bytes32,address)",
      "name": "redeemReputation",
      "description": "RedeemReputation reward for proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_avatar",
          "description": "address of the controller.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "reputation",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reputationOf(address,bytes32)",
      "name": "reputationOf",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setParameters(bytes32,address)",
      "name": "setParameters",
      "description": "hash the parameters, save them if necessary, and return the hash value.",
      "parameterDecorators": [
        {
          "name": "_voteApproveParams",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_intVote",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakingTokenTransfer(address,address,uint256,bytes32)",
      "name": "stakingTokenTransfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}