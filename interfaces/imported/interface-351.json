{"schema":"../schema.json","tags":["tokens","dao"],"name":"ArbitrableTokenList","description":"ArbitrableTokenList This contract is an arbitrable token curated registry for tokens, sometimes referred to as a TokenÂ² Curated Registry. Users can send requests to register or remove tokens from the registry, which can in turn, be challenged by parties that disagree with them. A crowdsourced insurance system allows parties to contribute to arbitration fees and win rewards if the side they backed ultimately wins a dispute. NOTE: This contract trusts that the Arbitrator is honest and will not reenter or modify its costs during a call. This contract is only to be used with an arbitrator returning appealPeriod and having non-zero fees. The governor contract (which will be a DAO) is also to be trusted.","eventDecorators":[{"signature":"TokenSubmitted(string,string,string,address)","name":"TokenSubmitted","description":"Emitted when User withdraws his/her fixed deposit before maturity period.","parameterDecorators":[{"name":"_name","description":"","recommendedTypes":[],"indexed":false},{"name":"_ticker","description":"","recommendedTypes":[],"indexed":false},{"name":"_symbolMultihash","description":"","recommendedTypes":[],"indexed":false},{"name":"_address","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RequestSubmitted(bytes32,bool)","name":"RequestSubmitted","description":"Emitted when User withdraws his/her fixed deposit before maturity period.","parameterDecorators":[{"name":"_tokenID","description":"","recommendedTypes":[],"indexed":true},{"name":"_registrationRequest","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokenStatusChange(address,address,bytes32,uint8,bool,bool)","name":"TokenStatusChange","description":"Emitted when User withdraws his/her fixed deposit before maturity period.","parameterDecorators":[{"name":"_requester","description":"","recommendedTypes":[],"indexed":true},{"name":"_challenger","description":"","recommendedTypes":[],"indexed":true},{"name":"_tokenID","description":"","recommendedTypes":[],"indexed":true},{"name":"_status","description":"","recommendedTypes":[],"indexed":false},{"name":"_disputed","description":"","recommendedTypes":[],"indexed":false},{"name":"_appealed","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RewardWithdrawal(bytes32,address,uint256,uint256,uint256)","name":"RewardWithdrawal","description":"Emitted when User withdraws his/her fixed deposit before maturity period.","parameterDecorators":[{"name":"_tokenID","description":"","recommendedTypes":[],"indexed":true},{"name":"_contributor","description":"","recommendedTypes":[],"indexed":true},{"name":"_request","description":"","recommendedTypes":[],"indexed":true},{"name":"_round","description":"","recommendedTypes":[],"indexed":false},{"name":"_value","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MetaEvidence(uint256,string)","name":"MetaEvidence","description":"Emitted when User withdraws his/her fixed deposit before maturity period.","parameterDecorators":[{"name":"_metaEvidenceID","description":"","recommendedTypes":[],"indexed":true},{"name":"_evidence","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Dispute(address,uint256,uint256,uint256)","name":"Dispute","description":"Emitted when User withdraws his/her fixed deposit before maturity period.","parameterDecorators":[{"name":"_arbitrator","description":"","recommendedTypes":[],"indexed":true},{"name":"_disputeID","description":"","recommendedTypes":[],"indexed":true},{"name":"_metaEvidenceID","description":"","recommendedTypes":[],"indexed":false},{"name":"_evidenceGroupID","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Evidence(address,uint256,address,string)","name":"Evidence","description":"Emitted when User withdraws his/her fixed deposit before maturity period.","parameterDecorators":[{"name":"_arbitrator","description":"","recommendedTypes":[],"indexed":true},{"name":"_evidenceGroupID","description":"","recommendedTypes":[],"indexed":true},{"name":"_party","description":"","recommendedTypes":[],"indexed":true},{"name":"_evidence","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Ruling(address,uint256,uint256)","name":"Ruling","description":"Emitted when User withdraws his/her fixed deposit before maturity period.","parameterDecorators":[{"name":"amount","description":"Amount withdrawn.","recommendedTypes":[],"indexed":true},{"name":"fdId","description":"Fixed deposit Id.","recommendedTypes":[],"indexed":true},{"name":"userAddr","description":"User address.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"challengePeriodDuration()","name":"challengePeriodDuration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"governor()","name":"governor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"arbitratorExtraData()","name":"arbitratorExtraData","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"amountWithdrawable(bytes32,address,uint256)","name":"amountWithdrawable","description":"Return the sum of withdrawable wei of a request an account is entitled to. This function is O(n), where n is the number of rounds of the request. This could exceed the gas limit, therefore this function should only be used for interface display and not by other contracts.","parameterDecorators":[{"name":"_tokenID","description":"The ID of the token to query.","recommendedTypes":[]},{"name":"_beneficiary","description":"The contributor for which to query.","recommendedTypes":[]},{"name":"_request","description":"The request from which to query for.","recommendedTypes":[]}],"returnDecorators":[{"name":"total","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"changeSharedStakeMultiplier(uint256)","name":"changeSharedStakeMultiplier","description":"Change the percentage of arbitration fees that must be paid as fee stake by parties when there isn't a winner or loser.","parameterDecorators":[{"name":"_sharedStakeMultiplier","description":"Multiplier of arbitration fees that must be paid as fee stake. In basis points.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"batchRequestWithdraw(address,bytes32,uint256,uint256,uint256,uint256)","name":"batchRequestWithdraw","description":"Withdraws rewards and reimbursements of multiple requests at once. This function is O(n*m) where n is the number of requests and m is the number of rounds. This could exceed gas limits, therefore this function should be used only as a utility and not be relied upon by other contracts.","parameterDecorators":[{"name":"_beneficiary","description":"The address that made contributions to the request.","recommendedTypes":[]},{"name":"_tokenID","description":"The token ID with funds to be withdrawn.","recommendedTypes":[]},{"name":"_cursor","description":"The request from which to start withdrawing.","recommendedTypes":[]},{"name":"_count","description":"The number of requests to iterate. If set to 0 or a value larger than the number of request, iterates until the last request.","recommendedTypes":[]},{"name":"_roundCursor","description":"The round of each request from where to start withdrawing.","recommendedTypes":[]},{"name":"_roundCount","description":"The number of rounds to iterate on each request. If set to 0 or a value larger than the number of rounds a request has, iteration for that request will stop at the last round.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"loserStakeMultiplier()","name":"loserStakeMultiplier","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"countByStatus()","name":"countByStatus","description":"Return the numbers of tokens with each status. This function is O(n), where n is the number of tokens. This could exceed the gas limit, therefore this function should only be used for interface display and not by other contracts.","parameterDecorators":[],"returnDecorators":[{"name":"absent","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"registered","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"registrationRequest","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"clearingRequest","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"challengedRegistrationRequest","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"challengedClearingRequest","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"fundAppeal(bytes32,uint8)","name":"fundAppeal","description":"Takes up to the total amount required to fund a side of an appeal. Reimburses the rest. Creates an appeal if both sides are fully funded. TRUSTED.","parameterDecorators":[{"name":"_tokenID","description":"The ID of the token with the request to fund.","recommendedTypes":[]},{"name":"_side","description":"The recipient of the contribution.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getTokenInfo(bytes32)","name":"getTokenInfo","description":"Returns token information. Includes length of requests array.","parameterDecorators":[{"name":"_tokenID","description":"The ID of the queried token.","recommendedTypes":[]}],"returnDecorators":[{"name":"name","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"ticker","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"addr","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"symbolMultihash","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"status","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"numberOfRequests","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rule(uint256,uint256)","name":"rule","description":"Give a ruling for a dispute. Can only be called by the arbitrator. TRUSTED. Overrides parent function to account for the situation where the winner loses a case due to paying less appeal fees than expected.","parameterDecorators":[{"name":"_disputeID","description":"ID of the dispute in the arbitrator contract.","recommendedTypes":[]},{"name":"_ruling","description":"Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"challengerBaseDeposit()","name":"challengerBaseDeposit","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"changeRequesterBaseDeposit(uint256)","name":"changeRequesterBaseDeposit","description":"Change the base amount required as a deposit to make a request.","parameterDecorators":[{"name":"_requesterBaseDeposit","description":"The new base amount of wei required to make a request.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"queryTokens(bytes32,uint256,bool[8],bool,address)","name":"queryTokens","description":"Return the values of the tokens the query finds. This function is O(n), where n is the number of tokens. This could exceed the gas limit, therefore this function should only be used for interface display and not by other contracts.","parameterDecorators":[{"name":"_cursor","description":"The ID of the token from which to start iterating. To start from either the oldest or newest item.","recommendedTypes":[]},{"name":"_count","description":"The number of tokens to return.","recommendedTypes":[]},{"name":"_filter","description":"The filter to use. Each element of the array in sequence means: - Include absent tokens in result. - Include registered tokens in result. - Include tokens with registration requests that are not disputed in result. - Include tokens with clearing requests that are not disputed in result. - Include disputed tokens with registration requests in result. - Include disputed tokens with clearing requests in result. - Include tokens submitted by the caller. - Include tokens challenged by the caller.","recommendedTypes":[]},{"name":"_oldestFirst","description":"Whether to sort from oldest to the newest item.","recommendedTypes":[]},{"name":"_tokenAddr","description":"A token address to filter submissions by address (optional).","recommendedTypes":[]}],"returnDecorators":[{"name":"values","description":"","recommendedTypes":[],"solidityType":"bytes32[]"},{"name":"hasMore","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"sharedStakeMultiplier()","name":"sharedStakeMultiplier","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"arbitratorDisputeIDToTokenID(address,uint256)","name":"arbitratorDisputeIDToTokenID","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"tokensList(uint256)","name":"tokensList","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getContributions(bytes32,uint256,uint256,address)","name":"getContributions","description":"Gets the contributions made by a party for a given round of a request.","parameterDecorators":[{"name":"_tokenID","description":"The ID of the token.","recommendedTypes":[]},{"name":"_request","description":"The position of the request.","recommendedTypes":[]},{"name":"_round","description":"The position of the round.","recommendedTypes":[]},{"name":"_contributor","description":"The address of the contributor.","recommendedTypes":[]}],"returnDecorators":[{"name":"contributions","description":"","recommendedTypes":[],"solidityType":"uint256[3]"}],"emittableEvents":[],"readOnly":true},{"signature":"arbitrator()","name":"arbitrator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"metaEvidenceUpdates()","name":"metaEvidenceUpdates","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"addressToSubmissions(address,uint256)","name":"addressToSubmissions","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"batchRoundWithdraw(address,bytes32,uint256,uint256,uint256)","name":"batchRoundWithdraw","description":"Withdraws rewards and reimbursements of multiple rounds at once. This function is O(n) where n is the number of rounds. This could exceed gas limits, therefore this function should be used only as a utility and not be relied upon by other contracts.","parameterDecorators":[{"name":"_beneficiary","description":"The address that made contributions to the request.","recommendedTypes":[]},{"name":"_tokenID","description":"The token ID with funds to be withdrawn.","recommendedTypes":[]},{"name":"_request","description":"The request from which to withdraw contributions.","recommendedTypes":[]},{"name":"_cursor","description":"The round from where to start withdrawing.","recommendedTypes":[]},{"name":"_count","description":"The number of rounds to iterate. If set to 0 or a value larger than the number of rounds, iterates until the last round.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"winnerStakeMultiplier()","name":"winnerStakeMultiplier","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"challengeRequest(bytes32,string)","name":"challengeRequest","description":"Challenges the latest request of a token. Accepts enough ETH to fund a potential dispute considering the current required amount. Reimburses unused ETH. TRUSTED.","parameterDecorators":[{"name":"_tokenID","description":"The ID of the token with the request to challenge.","recommendedTypes":[]},{"name":"_evidence","description":"A link to an evidence using its URI. Ignored if not provided or if not enough funds were provided to create a dispute.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requesterBaseDeposit()","name":"requesterBaseDeposit","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"tokens(bytes32)","name":"tokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"name","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"ticker","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"addr","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"symbolMultihash","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"status","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"changeLoserStakeMultiplier(uint256)","name":"changeLoserStakeMultiplier","description":"Change the percentage of arbitration fees that must be paid as fee stake by the party that lost the previous round.","parameterDecorators":[{"name":"_loserStakeMultiplier","description":"Multiplier of arbitration fees that must be paid as fee stake. In basis points.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getRoundInfo(bytes32,uint256,uint256)","name":"getRoundInfo","description":"Gets the information on a round of a request.","parameterDecorators":[{"name":"_tokenID","description":"The ID of the queried token.","recommendedTypes":[]},{"name":"_request","description":"The request to be queried.","recommendedTypes":[]},{"name":"_round","description":"The round to be queried.","recommendedTypes":[]}],"returnDecorators":[{"name":"appealed","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"paidFees","description":"","recommendedTypes":[],"solidityType":"uint256[3]"},{"name":"hasPaid","description":"","recommendedTypes":[],"solidityType":"bool[3]"},{"name":"feeRewards","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenCount()","name":"tokenCount","description":"Return the numbers of tokens that were submitted. Includes tokens that never made it to the list or were later removed.","parameterDecorators":[],"returnDecorators":[{"name":"count","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"requestStatusChange(string,string,address,string)","name":"requestStatusChange","description":"Submits a request to change a token status. Accepts enough ETH to fund a potential dispute considering the current required amount and reimburses the rest. TRUSTED.","parameterDecorators":[{"name":"_name","description":"The token name (e.g. Pinakion).","recommendedTypes":[]},{"name":"_ticker","description":"The token ticker (e.g. PNK).","recommendedTypes":[]},{"name":"_addr","description":"The Ethereum address of the token.","recommendedTypes":[]},{"name":"_symbolMultihash","description":"The multihash of the token symbol.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawFeesAndRewards(address,bytes32,uint256,uint256)","name":"withdrawFeesAndRewards","description":"Reimburses contributions if no disputes were raised. If a dispute was raised, sends the fee stake rewards and reimbursements proportional to the contributions made to the winner of a dispute.","parameterDecorators":[{"name":"_beneficiary","description":"The address that made contributions to a request.","recommendedTypes":[]},{"name":"_tokenID","description":"The ID of the token submission with the request from which to withdraw.","recommendedTypes":[]},{"name":"_request","description":"The request from which to withdraw.","recommendedTypes":[]},{"name":"_round","description":"The round from which to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeWinnerStakeMultiplier(uint256)","name":"changeWinnerStakeMultiplier","description":"Change the percentage of arbitration fees that must be paid as fee stake by the winner of the previous round.","parameterDecorators":[{"name":"_winnerStakeMultiplier","description":"Multiplier of arbitration fees that must be paid as fee stake. In basis points.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeArbitrator(address,bytes)","name":"changeArbitrator","description":"Change the arbitrator to be used for disputes that may be raised in the next requests. The arbitrator is trusted to support appeal periods and not reenter.","parameterDecorators":[{"name":"_arbitrator","description":"The new trusted arbitrator to be used in the next requests.","recommendedTypes":[]},{"name":"_arbitratorExtraData","description":"The extra data used by the new arbitrator.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isPermitted(bytes32)","name":"isPermitted","description":"Return true if the token is on the list.","parameterDecorators":[{"name":"_tokenID","description":"The ID of the token to be queried.","recommendedTypes":[]}],"returnDecorators":[{"name":"allowed","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getRequestInfo(bytes32,uint256)","name":"getRequestInfo","description":"Gets information on a request made for a token.","parameterDecorators":[{"name":"_tokenID","description":"The ID of the queried token.","recommendedTypes":[]},{"name":"_request","description":"The request to be queried.","recommendedTypes":[]}],"returnDecorators":[{"name":"disputed","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"disputeID","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"submissionTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"resolved","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"parties","description":"","recommendedTypes":[],"solidityType":"address[3]"},{"name":"numberOfRounds","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"ruling","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"arbitrator","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"arbitratorExtraData","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"changeTimeToChallenge(uint256)","name":"changeTimeToChallenge","description":"Change the duration of the challenge period.","parameterDecorators":[{"name":"_challengePeriodDuration","description":"The new duration of the challenge period.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"MULTIPLIER_DIVISOR()","name":"MULTIPLIER_DIVISOR","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"changeMetaEvidence(string,string)","name":"changeMetaEvidence","description":"Update the meta evidence used for disputes.","parameterDecorators":[{"name":"_registrationMetaEvidence","description":"The meta evidence to be used for future registration request disputes.","recommendedTypes":[]},{"name":"_clearingMetaEvidence","description":"The meta evidence to be used for future clearing request disputes.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeChallengerBaseDeposit(uint256)","name":"changeChallengerBaseDeposit","description":"Change the base amount required as a deposit to challenge a request.","parameterDecorators":[{"name":"_challengerBaseDeposit","description":"The new base amount of wei required to challenge a request.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeGovernor(address)","name":"changeGovernor","description":"Change the governor of the token curated registry.","parameterDecorators":[{"name":"_governor","description":"The address of the new governor.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"executeRequest(bytes32)","name":"executeRequest","description":"Executes a request if the challenge period passed and no one challenged the request.","parameterDecorators":[{"name":"_tokenID","description":"The ID of the token with the request to execute.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"submitEvidence(bytes32,string)","name":"submitEvidence","description":"Submit a reference to evidence. EVENT.","parameterDecorators":[{"name":"_tokenID","description":"","recommendedTypes":[]},{"name":"_evidence","description":"A link to an evidence using its URI.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}