{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "AugurFoundry",
  "description": "This is a factory that creates Wrappers around ERC1155 shareTokens generated by Augur.",
  "eventDecorators": [
    {
      "signature": "WrapperCreated(uint256,address)",
      "name": "WrapperCreated",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "approveWrappedETHtoAugur()",
      "name": "approveWrappedETHtoAugur",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "augur()",
      "name": "augur",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyCompleteSets(address,address)",
      "name": "buyCompleteSets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_market",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "newERC20Wrapper(uint256,string,string,uint8)",
      "name": "newERC20Wrapper",
      "description": "creates new ERC20 wrappers for a outcome of a market param _tokenId token id associated with a outcome of a market param _name a descriptive name mentioning market and outcome param _symbol symbol for the ERC20 wrapper param decimals decimals for the ERC20 wrapper.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_name",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_symbol",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_decimals",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "newERC20Wrappers(uint256[],string[],string[],uint8[])",
      "name": "newERC20Wrappers",
      "description": "creates new ERC20 wrappers for multiple tokenIds.",
      "parameterDecorators": [
        {
          "name": "_tokenIds",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_names",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_symbols",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_decimals",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sellCompleteSets(address,address,uint256,bytes32)",
      "name": "sellCompleteSets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_market",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_recipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fingerprint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_creatorFee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_reportingFee",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "shareToken()",
      "name": "shareToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unWrapMultipleTokens(uint256[],uint256[])",
      "name": "unWrapMultipleTokens",
      "description": "unwraps multiple tokens.",
      "parameterDecorators": [
        {
          "name": "_tokenIds",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amounts",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unWrapTokens(uint256,uint256)",
      "name": "unWrapTokens",
      "description": "A function that burns ERC20s and gives back ERC1155s Requirements: * - msg.sender has more than _amount of ERC20 tokens associated with _tokenId. - if the market has finalized then it is advised that you call claim() on ERC20Wrapper contract associated with the winning outcome.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "token id associated with a outcome of a market.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of tokens to be unwrapped.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "wETH()",
      "name": "wETH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "wrapMultipleTokens(uint256[],address,uint256[])",
      "name": "wrapMultipleTokens",
      "description": "wraps multiple tokens.",
      "parameterDecorators": [
        {
          "name": "_tokenIds",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amounts",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "wrapTokens(uint256,address,uint256)",
      "name": "wrapTokens",
      "description": "A function that wraps ERC1155s shareToken into ERC20s Requirements: * - msg.sender has setApprovalForAll to this contract.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "token id associated with a outcome of a market.",
          "recommendedTypes": []
        },
        {
          "name": "_account",
          "description": "account the newly minted ERC20s will go to.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of tokens to be wrapped.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "wrappers(uint256)",
      "name": "wrappers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}