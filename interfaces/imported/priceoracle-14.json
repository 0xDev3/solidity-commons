{
  "schema": "../schema.json",
  "tags": [
    "oracles"
  ],
  "name": "PriceOracle",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "addGovernor(address)",
      "name": "addGovernor",
      "description": "adding a new governor for the oracle Warning : Any Governor can update the price Hence manage the governors accordingly.",
      "parameterDecorators": [
        {
          "name": "_governor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addPrice(bytes32,bytes32,bytes32,uint256)",
      "name": "addPrice",
      "description": "adding a new price to the oracle Warning : Any Governor can update the price Hence manage the governors accordingly.",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_base",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_counter",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_price",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "admin()",
      "name": "admin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fetchLastPrice(bytes32,bytes32,bytes32)",
      "name": "fetchLastPrice",
      "description": "returns the current presale price in 18 precision.",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_base",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_counter",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fetchPresalePrice()",
      "name": "fetchPresalePrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fetchPrice(bytes32,bytes32,bytes32)",
      "name": "fetchPrice",
      "description": "Fetching Price from oracle Warning : The price returns corresponds to an exchange and Pair Pass Exchange Name, Base, Quote in Uppercase Returns an array of Prices & Time of Updation.",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_base",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_counter",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_time",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "_price",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "govCount()",
      "name": "govCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeGovernor(address)",
      "name": "removeGovernor",
      "description": "removing a governor to the oracle Warning : Any Governor can update the price Hence manage the governors accordingly.",
      "parameterDecorators": [
        {
          "name": "_governor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeOwnership(address)",
      "name": "revokeOwnership",
      "description": "changing the admin of the oracle Warning : Admin can add governor, remove governor and can update price.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPresalePrice(uint256)",
      "name": "setPresalePrice",
      "description": "changing pre-sale price in the oracle Warning : This price will be used in the sale contract. P.S The _price should be sent as 18 precision value.",
      "parameterDecorators": [
        {
          "name": "_price",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}