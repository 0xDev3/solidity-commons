{
  "schema": "../schema.json",
  "tags": [],
  "name": "Governance",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ActionFailed(uint256)",
      "name": "ActionFailed",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ActionRejected(uint256,address)",
      "name": "ActionRejected",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "rejectedBy",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalCategorized(uint256,address,uint256)",
      "name": "ProposalCategorized",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Proposal(address,uint256,uint256,string,string,string)",
      "name": "Proposal",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "proposalOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "dateAdd",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "proposalTitle",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "proposalSD",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "proposalDescHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Solution(uint256,address,uint256,string,uint256)",
      "name": "Solution",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "solutionOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "solutionId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "solutionDescHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "dateAdd",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Vote(address,uint256,uint256,uint256,uint256)",
      "name": "Vote",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "voteId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "dateAdd",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "solutionChosen",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardClaimed(address,uint256)",
      "name": "RewardClaimed",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "member",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "gbtReward",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VoteCast(uint256)",
      "name": "VoteCast",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalAccepted(uint256)",
      "name": "ProposalAccepted",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CloseProposalOnTime(uint256,uint256)",
      "name": "CloseProposalOnTime",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "time",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ActionSuccess(uint256)",
      "name": "ActionSuccess",
      "description": "Emitted when a collateral factor is changed by admin.",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "closeProposal(uint256)",
      "name": "closeProposal",
      "description": "Closes the proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "of proposal to be closed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "memberProposalVote(address,uint256)",
      "name": "memberProposalVote",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalRejectedByAB(uint256,address)",
      "name": "proposalRejectedByAB",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeDependentContractAddress()",
      "name": "changeDependentContractAddress",
      "description": "Updates all dependency addresses to latest ones from Master.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "voteTallyData(uint256,uint256)",
      "name": "voteTallyData",
      "description": "Gets vote tally data.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "in concern.",
          "recommendedTypes": []
        },
        {
          "name": "_solution",
          "description": "of a proposal id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalDetails(uint256)",
      "name": "proposalDetails",
      "description": "Gets some details of a propsal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "whose details we want.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createProposalwithSolution(string,string,string,uint256,string,bytes)",
      "name": "createProposalwithSolution",
      "description": "Creates a new proposal with solution.",
      "parameterDecorators": [
        {
          "name": "_proposalTitle",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalSD",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalDescHash",
          "description": "Proposal description hash through IPFS having Short and long description of proposal.",
          "recommendedTypes": []
        },
        {
          "name": "_categoryId",
          "description": "This id tells under which the proposal is categorized i.e. Proposal's Objective.",
          "recommendedTypes": []
        },
        {
          "name": "_solutionHash",
          "description": "Solution hash contains parameters, values and description needed according to proposal.",
          "recommendedTypes": []
        },
        {
          "name": "_action",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimReward(address,uint256)",
      "name": "claimReward",
      "description": "Claims reward for member.",
      "parameterDecorators": [
        {
          "name": "_memberAddress",
          "description": "to claim reward of.",
          "recommendedTypes": []
        },
        {
          "name": "_maxRecords",
          "description": "maximum number of records to claim reward for. _proposals list of proposals of which reward will be claimed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "pendingDAppReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proposalActionStatus(uint256)",
      "name": "proposalActionStatus",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unDelegate()",
      "name": "unDelegate",
      "description": "Undelegates the sender.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDelegationStatus(bool)",
      "name": "setDelegationStatus",
      "description": "Sets delegation acceptance status of individual user.",
      "parameterDecorators": [
        {
          "name": "_status",
          "description": "delegation acceptance status.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rejectAction(uint256)",
      "name": "rejectAction",
      "description": "Provides option to Advisory board member to reject proposal action execution within actionWaitingTime, if found suspicious.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getSolutionAction(uint256,uint256)",
      "name": "getSolutionAction",
      "description": "Gets solution action on a proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "whose details we want.",
          "recommendedTypes": []
        },
        {
          "name": "_solution",
          "description": "whose details we want.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposal(uint256)",
      "name": "proposal",
      "description": "Gets all details of a propsal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "whose details we want.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "category",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "finalVerdict",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalRewar",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenHoldingTime()",
      "name": "tokenHoldingTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createProposal(string,string,string,uint256)",
      "name": "createProposal",
      "description": "Creates a new proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalTitle",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalSD",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalDescHash",
          "description": "Proposal description hash through IPFS having Short and long description of proposal.",
          "recommendedTypes": []
        },
        {
          "name": "_categoryId",
          "description": "This id tells under which the proposal is categorized i.e. Proposal's Objective.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getPendingReward(address)",
      "name": "getPendingReward",
      "description": "Gets pending rewards of a member.",
      "parameterDecorators": [
        {
          "name": "_memberAddress",
          "description": "in concern.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "pendingDAppReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardClaimed(uint256,address)",
      "name": "rewardClaimed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUintParameters(bytes8)",
      "name": "getUintParameters",
      "description": "Gets Uint Parameters of a code.",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "whose details we want.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "codeVal",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes8"
        },
        {
          "name": "val",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "categorizeProposal(uint256,uint256,uint256)",
      "name": "categorizeProposal",
      "description": "Categorizes proposal to proceed further. Categories shows the proposal objective.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_categoryId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_incentive",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "submitVote(uint256,uint256)",
      "name": "submitVote",
      "description": "Submit a vote on the proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "to vote upon.",
          "recommendedTypes": []
        },
        {
          "name": "_solutionChosen",
          "description": "is the chosen vote.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "submitProposalWithSolution(uint256,string,bytes)",
      "name": "submitProposalWithSolution",
      "description": "Submit proposal with solution.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "Proposal id.",
          "recommendedTypes": []
        },
        {
          "name": "_solutionHash",
          "description": "Solution hash contains parameters, values and description needed according to proposal.",
          "recommendedTypes": []
        },
        {
          "name": "_action",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "followerDelegation(address)",
      "name": "followerDelegation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProposalLength()",
      "name": "getProposalLength",
      "description": "Gets length of propsal.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateUintParameters(bytes8,uint256)",
      "name": "updateUintParameters",
      "description": "Updates Uint Parameters of a code.",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "whose details we want to update.",
          "recommendedTypes": []
        },
        {
          "name": "val",
          "description": "value to set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "allowedToCreateProposal(uint256)",
      "name": "allowedToCreateProposal",
      "description": "Checks if msg.sender is allowed to create a proposal under given category.",
      "parameterDecorators": [
        {
          "name": "category",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "check",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ms()",
      "name": "ms",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "allowedToCatgorize()",
      "name": "allowedToCatgorize",
      "description": "Gets Id of member role allowed to categorize the proposal.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "roleId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "delegateVote(address)",
      "name": "delegateVote",
      "description": "Delegates vote to an address.",
      "parameterDecorators": [
        {
          "name": "_add",
          "description": "is the address to delegate vote to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "allDelegation(uint256)",
      "name": "allDelegation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "follower",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "leader",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "lastUpd",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "canCloseProposal(uint256)",
      "name": "canCloseProposal",
      "description": "Checks If the proposal voting time is up and it's ready to close i.e. Closevalue is 1 if proposal is ready to be closed, 2 if already closed, 0 otherwise!.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "Proposal id to which closing value is being checked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFollowers(address)",
      "name": "getFollowers",
      "description": "Get followers of an address.",
      "parameterDecorators": [
        {
          "name": "_add",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "triggerAction(uint256)",
      "name": "triggerAction",
      "description": "Triggers action of accepted proposal after waiting time is finished.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setInitialActionParameters()",
      "name": "setInitialActionParameters",
      "description": "Sets intial actionWaitingTime value To be called after governance implementation has been updated.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMasterAddress(address)",
      "name": "changeMasterAddress",
      "description": "change master address.",
      "parameterDecorators": [
        {
          "name": "_masterAddress",
          "description": "is the new address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isOpenForDelegation(address)",
      "name": "isOpenForDelegation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastRewardClaimed(address)",
      "name": "lastRewardClaimed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateProposal(uint256,string,string,string)",
      "name": "updateProposal",
      "description": "Edits the details of an existing proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "Proposal id that details needs to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "_proposalTitle",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalSD",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalDescHash",
          "description": "Proposal description hash having long and short description of proposal.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proposalVoteTally(uint256)",
      "name": "proposalVoteTally",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "voters",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeDelegation(address)",
      "name": "removeDelegation",
      "description": "Removes delegation of an address.",
      "parameterDecorators": [
        {
          "name": "_add",
          "description": "address to undelegate.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "nxMasterAddress()",
      "name": "nxMasterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "alreadyDelegated(address)",
      "name": "alreadyDelegated",
      "description": "Checks if an address is already delegated.",
      "parameterDecorators": [
        {
          "name": "_add",
          "description": "in concern.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "delegated",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}