{"schema":"../schema.json","tags":[],"name":"Market","description":"A Market for pieces of media. This contract contains all of the market logic for Media.","eventDecorators":[{"signature":"AskCreated(uint256,tuple)","name":"AskCreated","description":"Event emitted when a supported token is removed.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"ask","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AskRemoved(uint256,tuple)","name":"AskRemoved","description":"Event emitted when a supported token is removed.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"ask","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"BidCreated(uint256,tuple)","name":"BidCreated","description":"Event emitted when a supported token is removed.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"bid","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"BidFinalized(uint256,tuple)","name":"BidFinalized","description":"Event emitted when a supported token is removed.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"bid","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"BidRemoved(uint256,tuple)","name":"BidRemoved","description":"Event emitted when a supported token is removed.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"bid","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"BidShareUpdated(uint256,tuple)","name":"BidShareUpdated","description":"Event emitted when a supported token is removed.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[],"indexed":true},{"name":"bidShares","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"acceptBid(uint256,tuple(uint256,address,address,address,tuple))","name":"acceptBid","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"expectedBid","description":"","recommendedTypes":[],"parameters":[{"name":"amount","description":"","type":"uint256"},{"name":"currency","description":"","type":"address"},{"name":"bidder","description":"","type":"address"},{"name":"recipient","description":"","type":"address"},{"name":"sellOnShare","description":"","type":"tuple"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bidForTokenBidder(uint256,address)","name":"bidForTokenBidder","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"bidder","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"bidSharesForToken(uint256)","name":"bidSharesForToken","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"configure(address)","name":"configure","description":"Sets the media contract address. This address is the only permitted address that can call the mutable functions. This method can only be called once.","parameterDecorators":[{"name":"mediaContractAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"currentAskForToken(uint256)","name":"currentAskForToken","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"isValidBid(uint256,uint256)","name":"isValidBid","description":"Validates that the bid is valid by ensuring that the bid amount can be split perfectly into all the bid shares. We do this by comparing the sum of the individual share values with the amount and ensuring they are equal. Because the splitShare function uses integer division, any inconsistencies with the original and split sums would be due to a bid splitting that does not perfectly divide the bid amount.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"bidAmount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isValidBidShares(tuple(tuple,tuple,tuple))","name":"isValidBidShares","description":"","parameterDecorators":[{"name":"bidShares","description":"","recommendedTypes":[],"parameters":[{"name":"prevOwner","description":"","type":"tuple"},{"name":"creator","description":"","type":"tuple"},{"name":"owner","description":"","type":"tuple"}]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"mediaContract()","name":"mediaContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeAsk(uint256)","name":"removeAsk","description":"removes an ask for a token and emits an AskRemoved event.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"removeBid(uint256,address)","name":"removeBid","description":"Removes the bid on a particular media for a bidder. The bid amount is transferred from this contract to the bidder, if they have a bid placed.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"bidder","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAsk(uint256,tuple(uint256,address))","name":"setAsk","description":"Sets the ask on a particular media. If the ask cannot be evenly split into the media's bid shares, this reverts.","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"ask","description":"","recommendedTypes":[],"parameters":[{"name":"amount","description":"","type":"uint256"},{"name":"currency","description":"","type":"address"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBid(uint256,tuple(uint256,address,address,address,tuple),address)","name":"setBid","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"bid","description":"","recommendedTypes":[],"parameters":[{"name":"amount","description":"","type":"uint256"},{"name":"currency","description":"","type":"address"},{"name":"bidder","description":"","type":"address"},{"name":"recipient","description":"","type":"address"},{"name":"sellOnShare","description":"","type":"tuple"}]},{"name":"spender","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBidShares(uint256,tuple(tuple,tuple,tuple))","name":"setBidShares","description":"","parameterDecorators":[{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"bidShares","description":"","recommendedTypes":[],"parameters":[{"name":"prevOwner","description":"","type":"tuple"},{"name":"creator","description":"","type":"tuple"},{"name":"owner","description":"","type":"tuple"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"splitShare(tuple(uint256),uint256)","name":"splitShare","description":"return a % of the specified amount. This function is used to split a bid into shares for a media's shareholders.","parameterDecorators":[{"name":"sharePercentage","description":"","recommendedTypes":[],"parameters":[{"name":"value","description":"","type":"uint256"}]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}