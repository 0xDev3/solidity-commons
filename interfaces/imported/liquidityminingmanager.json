{"schema":"../schema.json","tags":["liquidity"],"name":"LiquidityMiningManager","description":"","eventDecorators":[{"signature":"PoolAdded(address,uint256)","name":"PoolAdded","description":"----------------------------------------------------------------------- Events -----------------------------------------------------------------------. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"pool","description":"","recommendedTypes":[],"indexed":true},{"name":"weight","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PoolRemoved(uint256,address)","name":"PoolRemoved","description":"----------------------------------------------------------------------- Events -----------------------------------------------------------------------. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"poolId","description":"","recommendedTypes":[],"indexed":true},{"name":"pool","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RewardsDistributed(address,uint256)","name":"RewardsDistributed","description":"----------------------------------------------------------------------- Events -----------------------------------------------------------------------. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"_from","description":"","recommendedTypes":[],"indexed":false},{"name":"_amount","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RewardsPerSecondSet(uint256)","name":"RewardsPerSecondSet","description":"----------------------------------------------------------------------- Events -----------------------------------------------------------------------. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"implementation","description":"representing the address of the upgraded implementation.","recommendedTypes":[],"indexed":false}]},{"signature":"RoleAdminChanged(bytes32,bytes32,bytes32)","name":"RoleAdminChanged","description":"----------------------------------------------------------------------- Events -----------------------------------------------------------------------. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"previousAdminRole","description":"","recommendedTypes":[],"indexed":true},{"name":"newAdminRole","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleGranted(bytes32,address,address)","name":"RoleGranted","description":"----------------------------------------------------------------------- Events -----------------------------------------------------------------------. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"RoleRevoked(bytes32,address,address)","name":"RoleRevoked","description":"----------------------------------------------------------------------- Events -----------------------------------------------------------------------. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[],"indexed":true},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"sender","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TokenSaved(address,address,address,uint256)","name":"TokenSaved","description":"----------------------------------------------------------------------- Events -----------------------------------------------------------------------. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"by","description":"","recommendedTypes":[],"indexed":true},{"name":"receiver","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WeightAdjusted(uint256,address,uint256)","name":"WeightAdjusted","description":"----------------------------------------------------------------------- Events -----------------------------------------------------------------------. This event will be emitted every time the implementation gets upgraded.","parameterDecorators":[{"name":"poolId","description":"","recommendedTypes":[],"indexed":true},{"name":"pool","description":"","recommendedTypes":[],"indexed":true},{"name":"newWeight","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"DEFAULT_ADMIN_ROLE()","name":"DEFAULT_ADMIN_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"GOV_ROLE()","name":"GOV_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"MAX_POOL_COUNT()","name":"MAX_POOL_COUNT","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"REWARD_DISTRIBUTOR_ROLE()","name":"REWARD_DISTRIBUTOR_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"TOKEN_SAVER_ROLE()","name":"TOKEN_SAVER_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"addPool(address,uint256)","name":"addPool","description":"","parameterDecorators":[{"name":"_poolContract","description":"","recommendedTypes":[]},{"name":"_weight","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"adjustWeight(uint256,uint256)","name":"adjustWeight","description":"","parameterDecorators":[{"name":"_poolId","description":"","recommendedTypes":[]},{"name":"_newWeight","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"distributeRewards()","name":"distributeRewards","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getPools()","name":"getPools","description":"","parameterDecorators":[],"returnDecorators":[{"name":"result","description":"","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleAdmin(bytes32)","name":"getRoleAdmin","description":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMember(bytes32,uint256)","name":"getRoleMember","description":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRoleMemberCount(bytes32)","name":"getRoleMemberCount","description":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"grantRole(bytes32,address)","name":"grantRole","description":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleGranted(bytes32,address,address)"],"readOnly":false},{"signature":"hasRole(bytes32,address)","name":"hasRole","description":"Returns `true` if `account` has been granted `role`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"lastDistribution()","name":"lastDistribution","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolAdded(address)","name":"poolAdded","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"pools(uint256)","name":"pools","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"poolContract","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"weight","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"removePool(uint256)","name":"removePool","description":"","parameterDecorators":[{"name":"_poolId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceRole(bytes32,address)","name":"renounceRole","description":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"revokeRole(bytes32,address)","name":"revokeRole","description":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.","parameterDecorators":[{"name":"role","description":"","recommendedTypes":[]},{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["RoleRevoked(bytes32,address,address)"],"readOnly":false},{"signature":"reward()","name":"reward","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardPerSecond()","name":"rewardPerSecond","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardSource()","name":"rewardSource","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"saveToken(address,address,uint256)","name":"saveToken","description":"","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]},{"name":"_receiver","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRewardPerSecond(uint256)","name":"setRewardPerSecond","description":"","parameterDecorators":[{"name":"_rewardPerSecond","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"totalWeight()","name":"totalWeight","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}