{
  "schema": "../schema.json",
  "tags": [],
  "name": "SimpleUpgrader",
  "description": "SimpleUpgrader. Temporary module used to add/remove other modules.",
  "eventDecorators": [
    {
      "signature": "ModuleCreated(bytes32)",
      "name": "ModuleCreated",
      "description": "event for token purchase logging. deprecated, backward compatibility, use `ConverterAnchorRemoved`.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ModuleInitialised(address)",
      "name": "ModuleInitialised",
      "description": "event for token purchase logging. deprecated, backward compatibility, use `ConverterAnchorRemoved`.",
      "parameterDecorators": [
        {
          "name": "wallet",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "init(address)",
      "name": "init",
      "description": "Perform the upgrade for a wallet. This method gets called when SimpleUpgrader is temporarily added as a module.",
      "parameterDecorators": [
        {
          "name": "_wallet",
          "description": "The target wallet.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addModule(address,address)",
      "name": "addModule",
      "description": "Adds a module to a wallet. First checks that the module is registered.",
      "parameterDecorators": [
        {
          "name": "_wallet",
          "description": "The target wallet.",
          "recommendedTypes": []
        },
        {
          "name": "_module",
          "description": "The modules to authorise.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "recoverToken(address)",
      "name": "recoverToken",
      "description": "Utility method enbaling anyone to recover ERC20 token sent to the module by mistake and transfer them to the Module Registry.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "The token to recover.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "toDisable(uint256)",
      "name": "toDisable",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "toEnable(uint256)",
      "name": "toEnable",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}