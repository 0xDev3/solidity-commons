{
  "schema": "../schema.json",
  "tags": [],
  "name": "FundingRound",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Contribution(address,uint256)",
      "name": "Contribution",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "_sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ContributionWithdrawn(address)",
      "name": "ContributionWithdrawn",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "_contributor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "FundsClaimed(uint256,address,uint256)",
      "name": "FundsClaimed",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "_voteOptionIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TallyPublished(string)",
      "name": "TallyPublished",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "_tallyHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "cancel()",
      "name": "cancel",
      "description": "Cancel funding round.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimFunds(uint256,uint256,uint256[][],uint256,uint256,uint256[][],uint256)",
      "name": "claimFunds",
      "description": "Claim allocated tokens.",
      "parameterDecorators": [
        {
          "name": "_voteOptionIndex",
          "description": "Vote option index.",
          "recommendedTypes": []
        },
        {
          "name": "_tallyResult",
          "description": "The result of vote tally for the recipient.",
          "recommendedTypes": []
        },
        {
          "name": "_tallyResultProof",
          "description": "Proof of correctness of the vote tally.",
          "recommendedTypes": []
        },
        {
          "name": "_tallyResultSalt",
          "description": "Salt.",
          "recommendedTypes": []
        },
        {
          "name": "_spent",
          "description": "The amount of voice credits spent on the recipient.",
          "recommendedTypes": []
        },
        {
          "name": "_spentProof",
          "description": "Proof of correctness for the amount of spent credits.",
          "recommendedTypes": []
        },
        {
          "name": "_spentSalt",
          "description": "Salt.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "contribute(tuple(uint256,uint256),uint256)",
      "name": "contribute",
      "description": "Contribute tokens to this funding round.",
      "parameterDecorators": [
        {
          "name": "pubKey",
          "description": "Contributor's public key.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "x",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "y",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "amount",
          "description": "Contribution amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "contributorCount()",
      "name": "contributorCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "coordinator()",
      "name": "coordinator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "finalize(uint256,uint256)",
      "name": "finalize",
      "description": "Get the total amount of votes from MACI, verify the total amount of spent voice credits across all recipients, and allow recipients to claim funds.",
      "parameterDecorators": [
        {
          "name": "_totalSpent",
          "description": "Total amount of spent voice credits.",
          "recommendedTypes": []
        },
        {
          "name": "_totalSpentSalt",
          "description": "The salt.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllocatedAmount(uint256,uint256)",
      "name": "getAllocatedAmount",
      "description": "Get allocated token amount (without verification).",
      "parameterDecorators": [
        {
          "name": "_tallyResult",
          "description": "The result of vote tally for the recipient.",
          "recommendedTypes": []
        },
        {
          "name": "_spent",
          "description": "The amount of voice credits spent on the recipient.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getVoiceCredits(address,bytes)",
      "name": "getVoiceCredits",
      "description": "Get the amount of voice credits for a given address. This function is a part of the InitialVoiceCreditProxy interface.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "Encoded address of a user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isCancelled()",
      "name": "isCancelled",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isFinalized()",
      "name": "isFinalized",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maci()",
      "name": "maci",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "matchingPoolSize()",
      "name": "matchingPoolSize",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nativeToken()",
      "name": "nativeToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "publishTallyHash(string)",
      "name": "publishTallyHash",
      "description": "Publish the IPFS hash of the vote tally. Only coordinator can publish.",
      "parameterDecorators": [
        {
          "name": "_tallyHash",
          "description": "IPFS hash of the vote tally.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "recipientRegistry()",
      "name": "recipientRegistry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "register(address,bytes)",
      "name": "register",
      "description": "Register user for voting. This function is part of SignUpGatekeeper interface.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "Encoded address of a contributor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaci(address)",
      "name": "setMaci",
      "description": "Link MACI instance to this funding round.",
      "parameterDecorators": [
        {
          "name": "_maci",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startBlock()",
      "name": "startBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "submitMessageBatch(tuple(uint256,uint256[10])[],tuple(uint256,uint256)[])",
      "name": "submitMessageBatch",
      "description": "Submit a batch of messages along with corresponding ephemeral public keys.",
      "parameterDecorators": [
        {
          "name": "_messages",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "iv",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "data",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "_encPubKeys",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "x",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "y",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tallyHash()",
      "name": "tallyHash",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSpent()",
      "name": "totalSpent",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalVotes()",
      "name": "totalVotes",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "userRegistry()",
      "name": "userRegistry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "voiceCreditFactor()",
      "name": "voiceCreditFactor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawContribution()",
      "name": "withdrawContribution",
      "description": "Withdraw contributed funds from the pool if the round has been cancelled.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}