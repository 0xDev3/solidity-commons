{"schema":"../schema.json","tags":["locking"],"name":"Unilocker","description":"","eventDecorators":[{"signature":"OnLockAmountIncreased(uint256,uint256)","name":"OnLockAmountIncreased","description":"Emitted when asset tokens are supplied to sponsor the yield source.","parameterDecorators":[{"name":"lockId","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]},{"signature":"OnLockDurationIncreased(uint256,uint256)","name":"OnLockDurationIncreased","description":"Emitted when asset tokens are supplied to sponsor the yield source.","parameterDecorators":[{"name":"lockId","description":"","recommendedTypes":[],"indexed":true},{"name":"newUnlockTime","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OnLockMigration(uint256,address)","name":"OnLockMigration","description":"Emitted when asset tokens are supplied to sponsor the yield source.","parameterDecorators":[{"name":"lockId","description":"","recommendedTypes":[],"indexed":true},{"name":"migrator","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OnLockOwnershipTransferred(uint256,address)","name":"OnLockOwnershipTransferred","description":"Emitted when asset tokens are supplied to sponsor the yield source.","parameterDecorators":[{"name":"lockId","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OnLockWithdrawal(uint256,uint256)","name":"OnLockWithdrawal","description":"Emitted when asset tokens are supplied to sponsor the yield source.","parameterDecorators":[{"name":"lockId","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]},{"signature":"OnTokenLock(uint256,address,address,uint256,uint256)","name":"OnTokenLock","description":"Emitted when asset tokens are supplied to sponsor the yield source.","parameterDecorators":[{"name":"lockId","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenAddress","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false},{"name":"unlockTime","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OnTokenUnlock(uint256)","name":"OnTokenUnlock","description":"Emitted when asset tokens are supplied to sponsor the yield source.","parameterDecorators":[{"name":"lockId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when asset tokens are supplied to sponsor the yield source.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"ethFeeAmount()","name":"ethFeeAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"extendLockTime(uint256,uint256)","name":"extendLockTime","description":"increase unlock time of already locked tokens.","parameterDecorators":[{"name":"lockId","description":"","recommendedTypes":[]},{"name":"newUnlockTime","description":"new unlock time (unix time in seconds).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"feeReceiver()","name":"feeReceiver","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"increaseAmountEthFeeAmount()","name":"increaseAmountEthFeeAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"increaseAmountUniFeeAmount()","name":"increaseAmountUniFeeAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"increaseLockAmount(uint256,uint256,uint8)","name":"increaseLockAmount","description":"add tokens to an existing lock.","parameterDecorators":[{"name":"lockId","description":"","recommendedTypes":[]},{"name":"amountToIncrement","description":"tokens amount to add.","recommendedTypes":[]},{"name":"feePaymentMode","description":"fee payment mode.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lockNonce()","name":"lockNonce","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lockTokens(address,uint256,uint256,address,uint8)","name":"lockTokens","description":"locks liquidity token until specified time.","parameterDecorators":[{"name":"lpToken","description":"token address to lock.","recommendedTypes":[]},{"name":"amount","description":"amount of tokens to lock.","recommendedTypes":[]},{"name":"unlockTime","description":"unix time in seconds after that tokens can be withdrawn.","recommendedTypes":[]},{"name":"withdrawer","description":"account that can withdraw tokens to it's balance.","recommendedTypes":[]},{"name":"feePaymentMode","description":"0 - pay fees in ETH 1 - pay fees in LP token 2 - pay fees in Uni.","recommendedTypes":[]}],"returnDecorators":[{"name":"lockId","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"lpFeePercent()","name":"lpFeePercent","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lpLockAt(address,uint256)","name":"lpLockAt","description":"get lp lock id at specified index.","parameterDecorators":[{"name":"lpToken","description":"lpToken address.","recommendedTypes":[]},{"name":"index","description":"index of lock id.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lpLocksLength(address)","name":"lpLocksLength","description":"get lp locks number.","parameterDecorators":[{"name":"lpToken","description":"lpToken address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"migrate(uint256,address)","name":"migrate","description":"migrates liquidity in case new update of dex was rolled out.","parameterDecorators":[{"name":"lockId","description":"id of the lock.","recommendedTypes":[]},{"name":"migratorContract","description":"address of migrator contract that will perform the migration (prevents frontrun attack if a locker owner changes the migrator contract before the migration function was mined).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"migrator()","name":"migrator","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setEthFeeAmount(uint256)","name":"setEthFeeAmount","description":"","parameterDecorators":[{"name":"fee","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setFeeReceiver(address)","name":"setFeeReceiver","description":"Sets the address that will receive lock fees. Callable only by the contract owner.","parameterDecorators":[{"name":"newFeeReceiver","description":"the address that will receive lock fees. Must not be zero address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setIncreaseAmountEthFeeAmount(uint256)","name":"setIncreaseAmountEthFeeAmount","description":"","parameterDecorators":[{"name":"fee","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setIncreaseAmountUniFeeAmount(uint256)","name":"setIncreaseAmountUniFeeAmount","description":"","parameterDecorators":[{"name":"fee","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setLpFeePercent(uint256)","name":"setLpFeePercent","description":"","parameterDecorators":[{"name":"percent","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMigrator(address)","name":"setMigrator","description":"Sets the migrator contract that will perform the migration in case a new update of dex was rolled out. Callable only by the owner of this contract.","parameterDecorators":[{"name":"newMigrator","description":"address of the migrator contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setUniFeeAmount(uint256)","name":"setUniFeeAmount","description":"","parameterDecorators":[{"name":"fee","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setUniToken(address)","name":"setUniToken","description":"","parameterDecorators":[{"name":"_uniToken","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tokenLocks(uint256)","name":"tokenLocks","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"lpToken","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"owner","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"tokenAmount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"unlockTime","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferLock(uint256,address)","name":"transferLock","description":"transfer lock ownership to another account.","parameterDecorators":[{"name":"lockId","description":"lock id to transfer.","recommendedTypes":[]},{"name":"newOwner","description":"account to transfer lock.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"uniFeeAmount()","name":"uniFeeAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"uniToken()","name":"uniToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"userLockAt(address,uint256)","name":"userLockAt","description":"get user lock id at specified index.","parameterDecorators":[{"name":"user","description":"user's address.","recommendedTypes":[]},{"name":"index","description":"index of lock id.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"userLocksLength(address)","name":"userLocksLength","description":"get user's locks number.","parameterDecorators":[{"name":"user","description":"user's address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256)","name":"withdraw","description":"withdraw all tokens from lock. Current time must be greater than unlock time.","parameterDecorators":[{"name":"lockId","description":"lock id to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawPartially(uint256,uint256)","name":"withdrawPartially","description":"withdraw specified amount of tokens from lock. Current time must be greater than unlock time.","parameterDecorators":[{"name":"lockId","description":"lock id to withdraw tokens from.","recommendedTypes":[]},{"name":"amount","description":"amount of tokens to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}