{
  "schema": "../schema.json",
  "tags": [],
  "name": "WatcherManager",
  "description": "This contract manages a set of watchers. This is meant to be used as a shared resource that contracts can inherit to make use of the same watcher set.",
  "eventDecorators": [
    {
      "signature": "OwnershipProposed(address)",
      "name": "OwnershipProposed",
      "description": "Emitted when a router is disapproved for Portal.",
      "parameterDecorators": [
        {
          "name": "proposedOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a router is disapproved for Portal.",
      "parameterDecorators": [
        {
          "name": "caller",
          "description": "- The account that called the function.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "router",
          "description": "- The address of the disapproved router.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "WatcherAdded(address)",
      "name": "WatcherAdded",
      "description": "Emitted when a router is disapproved for Portal.",
      "parameterDecorators": [
        {
          "name": "watcher",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WatcherRemoved(address)",
      "name": "WatcherRemoved",
      "description": "Emitted when a router is disapproved for Portal.",
      "parameterDecorators": [
        {
          "name": "watcher",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptProposedOwner()",
      "name": "acceptProposedOwner",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addWatcher(address)",
      "name": "addWatcher",
      "description": "Owner can enroll a watcher (abilities are defined by inheriting contracts).",
      "parameterDecorators": [
        {
          "name": "_watcher",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delay()",
      "name": "delay",
      "description": "Returns the delay period before a new owner can be accepted.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isWatcher(address)",
      "name": "isWatcher",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_watcher",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposeNewOwner(address)",
      "name": "proposeNewOwner",
      "description": "Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process.",
      "parameterDecorators": [
        {
          "name": "newlyProposed",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proposed()",
      "name": "proposed",
      "description": "Returns the address of the proposed owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposedTimestamp()",
      "name": "proposedTimestamp",
      "description": "Returns the address of the proposed owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeWatcher(address)",
      "name": "removeWatcher",
      "description": "Owner can unenroll a watcher (abilities are defined by inheriting contracts).",
      "parameterDecorators": [
        {
          "name": "_watcher",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Renounces ownership of the contract after a delay.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounced()",
      "name": "renounced",
      "description": "Indicates if the ownership has been renounced() by checking if current owner is address(0).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}