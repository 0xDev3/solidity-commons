{
  "schema": "../schema.json",
  "tags": [],
  "name": "SuSquaresUnderlay",
  "description": "Personalize your Su Squares that are unpersonalized on the main contract.",
  "eventDecorators": [
    {
      "signature": "PersonalizedUnderlay(uint256,bytes,string,string)",
      "name": "PersonalizedUnderlay",
      "description": "Event emitted when the owner changes via `#setOwner`. Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "squareId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "rgbData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "title",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "href",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "executiveOfficer()",
      "name": "executiveOfficer",
      "description": "The account that can only reassign officer accounts.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "financialOfficer()",
      "name": "financialOfficer",
      "description": "The account that can collect funds from this contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "personalizeSquareUnderlay(uint256,bytes,string,string)",
      "name": "personalizeSquareUnderlay",
      "description": "Update the contents of your Square on the underlay.",
      "parameterDecorators": [
        {
          "name": "squareId",
          "description": "Your Square number, the top-left is 1, to its right is 2, ..., top-right is 100 and then 101 is below 1... the last one at bottom-right is 10000.",
          "recommendedTypes": []
        },
        {
          "name": "rgbData",
          "description": "A 10x10 image for your square, in 8-bit RGB words ordered like the squares are ordered. See Imagemagick's command: convert -size 10x10 -depth 8 in.rgb out.png.",
          "recommendedTypes": []
        },
        {
          "name": "title",
          "description": "A description of your square (max 64 bytes UTF-8).",
          "recommendedTypes": []
        },
        {
          "name": "href",
          "description": "A hyperlink for your square (max 96 bytes).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "personalizeSquareUnderlayBatch(tuple(uint256,bytes,string,string)[])",
      "name": "personalizeSquareUnderlayBatch",
      "description": "Update the contents of Square on the underlay.",
      "parameterDecorators": [
        {
          "name": "personalizations",
          "description": "Each one is a the personalization for a single Square.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "squareId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "rgbData",
              "description": "",
              "type": "bytes"
            },
            {
              "name": "title",
              "description": "",
              "type": "string"
            },
            {
              "name": "href",
              "description": "",
              "type": "string"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pricePerSquare()",
      "name": "pricePerSquare",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setExecutiveOfficer(address)",
      "name": "setExecutiveOfficer",
      "description": "Reassign the executive officer role.",
      "parameterDecorators": [
        {
          "name": "newExecutiveOfficer",
          "description": "new officer address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFinancialOfficer(address)",
      "name": "setFinancialOfficer",
      "description": "Reassign the financial officer role.",
      "parameterDecorators": [
        {
          "name": "newFinancialOfficer",
          "description": "new officer address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "suSquares()",
      "name": "suSquares",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawBalance()",
      "name": "withdrawBalance",
      "description": "Collect funds from this contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}