{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "nft"
  ],
  "name": "NonfungibleTokenPositionDescriptor",
  "description": "Describes NFT token positions. Produces a string containing the data URI for a JSON metadata string.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "WETH9()",
      "name": "WETH9",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "flipRatio(address,address,uint256)",
      "name": "flipRatio",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "chainId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nativeCurrencyLabel()",
      "name": "nativeCurrencyLabel",
      "description": "Returns the native currency label as a string.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nativeCurrencyLabelBytes()",
      "name": "nativeCurrencyLabelBytes",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenRatioPriority(address,uint256)",
      "name": "tokenRatioPriority",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "chainId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenURI(address,uint256)",
      "name": "tokenURI",
      "description": "Produces the URI describing a particular token ID for a position manager. Note this URI may be a data: URI with the JSON contents directly inlined.",
      "parameterDecorators": [
        {
          "name": "positionManager",
          "description": "The position manager for which to describe the token.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "The ID of the token for which to produce a description, which may not be valid.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The URI of the ERC721-compliant metadata.",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}