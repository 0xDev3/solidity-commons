{
  "schema": "../schema.json",
  "tags": [],
  "name": "CryptopunksData",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "addAsset(uint8,bytes,string)",
      "name": "addAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "encoding",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addComposites(uint64,uint32,uint64,uint32,uint64,uint32,uint64,uint32)",
      "name": "addComposites",
      "description": "",
      "parameterDecorators": [
        {
          "name": "key1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "key2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "key3",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value3",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "key4",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value4",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addPunks(uint8,bytes)",
      "name": "addPunks",
      "description": "",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_punks",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "punkAttributes(uint16)",
      "name": "punkAttributes",
      "description": "The Cryptopunk attributes for the given index. The attributes are a comma-separated list in UTF-8 string format. The first entry listed is not technically an attribute, but the \"head type\" of the Cryptopunk.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "the punk index, 0 <= index < 10000.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "text",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "punkImage(uint16)",
      "name": "punkImage",
      "description": "The Cryptopunk image for the given index. The image is represented in a row-major byte array where each set of 4 bytes is a pixel in RGBA format.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "the punk index, 0 <= index < 10000.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "punkImageSvg(uint16)",
      "name": "punkImageSvg",
      "description": "The Cryptopunk image for the given index, in SVG format. In the SVG, each \"pixel\" is represented as a 1x1 rectangle.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "the punk index, 0 <= index < 10000.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "svg",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sealContract()",
      "name": "sealContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPalette(bytes)",
      "name": "setPalette",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_palette",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}