{
  "schema": "../schema.json",
  "tags": [],
  "name": "MVCStaking",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Claim(address,uint256)",
      "name": "Claim",
      "description": "To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Stake(address,uint256)",
      "name": "Stake",
      "description": "To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "add(uint16,uint16,uint256)",
      "name": "add",
      "description": "add new pool, only available for owner.",
      "parameterDecorators": [
        {
          "name": "_apy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lockPeriodInDays",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_endDate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "canUnstake(uint8,address)",
      "name": "canUnstake",
      "description": "check whether user can Unstake or not.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_addr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "{bool} Status of unstake.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claim(uint8)",
      "name": "claim",
      "description": "claim accumulated token reward for a single pool.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "{_pid} pool identifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "{bool} status of claim.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimAll()",
      "name": "claimAll",
      "description": "claim accumulated token reward from all pools Beware of gas fee!.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getPools()",
      "name": "getPools",
      "description": "get info of all pools.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "{PoolInfo[]} Pool info struct.",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "payout(uint8,address)",
      "name": "payout",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_addr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolInfo(uint256)",
      "name": "poolInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "apy",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        },
        {
          "name": "lockPeriodInDays",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        },
        {
          "name": "totalDeposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "startDate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endDate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolLength()",
      "name": "poolLength",
      "description": "get length of the pools.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "{uint256} length of the pools.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "set(uint256,uint16,uint16,uint256)",
      "name": "set",
      "description": "update the given pool's Info.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_apy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lockPeriodInDays",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_endDate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stake(uint8,uint256)",
      "name": "stake",
      "description": "depsoit tokens to staking for token allocation.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "{bool} Status of stake.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unStake(uint8,uint256)",
      "name": "unStake",
      "description": "withdraw tokens from Staking.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "{bool} Status of unstake.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateFeeValues(uint8,address)",
      "name": "updateFeeValues",
      "description": "update fee values.",
      "parameterDecorators": [
        {
          "name": "_feePercent",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_feeWallet",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "users(uint256,address)",
      "name": "users",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "total_invested",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "total_withdrawn",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastPayout",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "depositTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalClaimed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}