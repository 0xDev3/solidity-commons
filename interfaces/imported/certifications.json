{"schema":"../schema.json","tags":[],"name":"Certifications","description":"CampaignContract This contract is for the certifiers only. Certifier can generate certifications of the entity with this contract. Certification can be of 2 types:- Static and Dynamic.","eventDecorators":[{"signature":"CertifyStaticEntity(uint256,uint256,uint256)","name":"CertifyStaticEntity","description":"Emitted when certifier certifies static entity.","parameterDecorators":[{"name":"certificationID","description":"","recommendedTypes":[],"indexed":true},{"name":"entityID","description":"","recommendedTypes":[],"indexed":true},{"name":"certification","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"CreateDynamicCertification(uint256,string)","name":"CreateDynamicCertification","description":"Emitted when dynamic certificate is created by the certifier.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true},{"name":"apiLink","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"CreateStaticCertification(uint256,string,address)","name":"CreateStaticCertification","description":"Emitted when static certificate is created by the certifier.","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[],"indexed":true},{"name":"title","description":"","recommendedTypes":[],"indexed":true},{"name":"creator","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"DeleteCertification(uint256[],uint256[],address)","name":"DeleteCertification","description":"Emitted when certifiers deletes their certificate.","parameterDecorators":[{"name":"certificationID","description":"","recommendedTypes":[],"indexed":true},{"name":"deleted","description":"","recommendedTypes":[],"indexed":false},{"name":"CertificateCreator","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipNominated(address,address)","name":"OwnershipNominated","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SubscribeCertification(uint256,uint256)","name":"SubscribeCertification","description":"Emitted when user subscribe to a certification.","parameterDecorators":[{"name":"memberID","description":"","recommendedTypes":[],"indexed":true},{"name":"certificationID","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UnsubscribeCertification(uint256,uint256)","name":"UnsubscribeCertification","description":"Emitted when user unsubscribe to a certification.","parameterDecorators":[{"name":"memberID","description":"","recommendedTypes":[],"indexed":true},{"name":"certificationID","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UnsubscribeEntity(uint256,uint256)","name":"UnsubscribeEntity","description":"Emitted when entity or certification is deleted.","parameterDecorators":[{"name":"certificationId","description":"","recommendedTypes":[],"indexed":true},{"name":"entityId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UpdateDynamicEntity(uint256,string)","name":"UpdateDynamicEntity","description":"Emitted when certifier update dynamic certificate.","parameterDecorators":[{"name":"certificationID","description":"","recommendedTypes":[],"indexed":true},{"name":"apiLink","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"acceptOwnership()","name":"acceptOwnership","description":"Nominated Owner can accept the Ownership of the contract. Can only be called by the nominated owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"appliedCertifications(uint256)","name":"appliedCertifications","description":"","parameterDecorators":[{"name":"certificationID","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"applyCertification(uint256,uint256)","name":"applyCertification","description":"Seeker apply for the certification of the Entities.","parameterDecorators":[{"name":"certificationID","description":"ID of the certification.","recommendedTypes":[]},{"name":"entityID","description":"ID for the Entity.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"certificationExists(uint256)","name":"certificationExists","description":"return true if there is a certificate with id = `id`.","parameterDecorators":[{"name":"id","description":"Id of the certificate.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"certifications(address)","name":"certifications","description":"","parameterDecorators":[{"name":"certifierAdd","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"certifiedEntities(uint256)","name":"certifiedEntities","description":"","parameterDecorators":[{"name":"certificationId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"certifierAddress()","name":"certifierAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"createDynamicCertification(uint256,uint8,string,string,string,string)","name":"createDynamicCertification","description":"this function is for certifier only, to create dynamic certificates.","parameterDecorators":[{"name":"timestamp","description":"Current time in second/millisecond.","recommendedTypes":[]},{"name":"types","description":"Entity type (Company/Product/Campaign).","recommendedTypes":[]},{"name":"metadata","description":"Metadata Link of the certification.","recommendedTypes":[]},{"name":"title","description":"Title of the certification.","recommendedTypes":[]},{"name":"description","description":"Description of the certification.","recommendedTypes":[]},{"name":"apiLink","description":"Link for the dynamic certificate.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"certifiaction ID.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"createStaticCertification(uint256,uint8,string,string,string)","name":"createStaticCertification","description":"this function is for certifier only, to create static certificates.","parameterDecorators":[{"name":"timestamp","description":"Current time in second/millisecond.","recommendedTypes":[]},{"name":"types","description":"Entity type (Company/Product/Campaign).","recommendedTypes":[]},{"name":"metadata","description":"Metadata Link of the certification.","recommendedTypes":[]},{"name":"title","description":"Title of the certification.","recommendedTypes":[]},{"name":"description","description":"Description of the certification.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"certifiaction ID.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"deleteCertification(uint256[])","name":"deleteCertification","description":"","parameterDecorators":[{"name":"Id","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"editCertification(uint256,string,string,string)","name":"editCertification","description":"","parameterDecorators":[{"name":"id","description":"","recommendedTypes":[]},{"name":"title","description":"","recommendedTypes":[]},{"name":"description","description":"","recommendedTypes":[]},{"name":"metadata","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"entityAddress()","name":"entityAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"entityCertifications(uint256)","name":"entityCertifications","description":"","parameterDecorators":[{"name":"entityId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getAllCertifications()","name":"getAllCertifications","description":"Returns all IDs of Entities in existence.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getDynamicCertificateLink(uint256)","name":"getDynamicCertificateLink","description":"returns the api Link of the dynamic certificate having id = `certificationID`.","parameterDecorators":[{"name":"certificationID","description":"Id of the certificate.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"getDynamicCertification(uint256)","name":"getDynamicCertification","description":"returns the details(structure) of the Dynamic certification.","parameterDecorators":[{"name":"certificationID","description":"Id of the certificate.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getMemberSubscriptions(address)","name":"getMemberSubscriptions","description":"returns the certification subscribed by the `memberAddress`.","parameterDecorators":[{"name":"memberAddress","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getStaticCertificate(uint256,uint256)","name":"getStaticCertificate","description":"returns the certificate value of the entity having id = `entityID`. for the certification with Id = `certificationID`.","parameterDecorators":[{"name":"certificationID","description":"Id of the certificate.","recommendedTypes":[]},{"name":"entityID","description":"Id of the entity.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getStaticCertification(uint256)","name":"getStaticCertification","description":"returns the details(structure) of the static certification.","parameterDecorators":[{"name":"certificationID","description":"Id of the certificate.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getSubscribers(uint256)","name":"getSubscribers","description":"returns the subscriber of the `certificationID`.","parameterDecorators":[{"name":"certificationID","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"membershipAddress()","name":"membershipAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"nominateNewOwner(address)","name":"nominateNewOwner","description":"Nominate new Owner of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"subscribeCertification(uint256[])","name":"subscribeCertification","description":"This function help the user to subscribe the certification. If the `certificationId` exists, then caller can subscribe that certification.","parameterDecorators":[{"name":"certificationID","description":"Id of the certificate.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unsubscribeCertification(uint256[])","name":"unsubscribeCertification","description":"This function helps the user to unsubscribe the certification. If the `certificationId` exist, then the caller can unsubscribe that certification.","parameterDecorators":[{"name":"certificationId","description":"Id of the certificate.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unsubscribeEntity(uint256)","name":"unsubscribeEntity","description":"","parameterDecorators":[{"name":"entityId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateCertifierContract(address)","name":"updateCertifierContract","description":"","parameterDecorators":[{"name":"certifierContractAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateDynamicEntity(uint256,string)","name":"updateDynamicEntity","description":"updates the API Link of dynamic certificate with id = `certificationID`.","parameterDecorators":[{"name":"certificationID","description":"Id of the certification.","recommendedTypes":[]},{"name":"apiLink","description":"API Link that is to be updated.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"updateEntityContract(address)","name":"updateEntityContract","description":"","parameterDecorators":[{"name":"entityContractAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateMembershipContract(address)","name":"updateMembershipContract","description":"","parameterDecorators":[{"name":"membershipContractAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateStaticEntity(uint256,uint256[],uint256[])","name":"updateStaticEntity","description":"This function is used to certify Static Entity. It can be called by the owner of this certification only.","parameterDecorators":[{"name":"certificationId","description":"Id of the certification.","recommendedTypes":[]},{"name":"entityIds","description":"Id of the entities.","recommendedTypes":[]},{"name":"scores","description":"Value that is given to the entities.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false}]}