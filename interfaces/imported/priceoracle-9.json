{
  "schema": "../schema.json",
  "tags": [
    "oracles"
  ],
  "name": "PriceOracle",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CappedPricePosted(address,uint256,uint256,uint256)",
      "name": "CappedPricePosted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Failure(uint256,uint256,uint256)",
      "name": "Failure",
      "description": "",
      "parameterDecorators": [
        {
          "name": "error",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "info",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "detail",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewAnchorAdmin(address,address)",
      "name": "NewAnchorAdmin",
      "description": "",
      "parameterDecorators": [
        {
          "name": "oldAnchorAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newAnchorAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewPendingAnchor(address,address,uint256,uint256)",
      "name": "NewPendingAnchor",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewPendingAnchorAdmin(address,address)",
      "name": "NewPendingAnchorAdmin",
      "description": "",
      "parameterDecorators": [
        {
          "name": "oldPendingAnchorAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newPendingAnchorAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OracleFailure(address,address,uint256,uint256,uint256)",
      "name": "OracleFailure",
      "description": "",
      "parameterDecorators": [
        {
          "name": "msgSender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "error",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "info",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "detail",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PricePosted(address,uint256,uint256,uint256)",
      "name": "PricePosted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetPaused(bool)",
      "name": "SetPaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newState",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "_acceptAnchorAdmin()",
      "name": "_acceptAnchorAdmin",
      "description": "Accepts transfer of anchor admin rights. msg.sender must be pendingAnchorAdmin. Admin function for pending anchor admin to accept role and update anchor admin.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "_assetPrices(address)",
      "name": "_assetPrices",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "mantissa",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_setPaused(bool)",
      "name": "_setPaused",
      "description": "set `paused` to the specified state. Admin function to pause or resume the market.",
      "parameterDecorators": [
        {
          "name": "requestedState",
          "description": "value to assign to `paused`.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "_setPendingAnchor(address,uint256)",
      "name": "_setPendingAnchor",
      "description": "provides ability to override the anchor price for an asset. Admin function to set the anchor price for an asset.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "Asset for which to override the anchor price.",
          "recommendedTypes": []
        },
        {
          "name": "newScaledPrice",
          "description": "New anchor price.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "_setPendingAnchorAdmin(address)",
      "name": "_setPendingAnchorAdmin",
      "description": "Begins transfer of anchor admin rights. The newPendingAnchorAdmin must call `_acceptAnchorAdmin` to finalize the transfer. Admin function to begin change of anchor admin. The newPendingAnchorAdmin must call `_acceptAnchorAdmin` to finalize the transfer.",
      "parameterDecorators": [
        {
          "name": "newPendingAnchorAdmin",
          "description": "New pending anchor admin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "anchorAdmin()",
      "name": "anchorAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "anchors(address)",
      "name": "anchors",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "period",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "priceMantissa",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetPrices(address)",
      "name": "assetPrices",
      "description": "retrieves price of an asset. function to get price for an asset.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "Asset for which to get the price.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPrice(address)",
      "name": "getPrice",
      "description": "retrieves price of an asset. function to get price for an asset.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "Asset for which to get the price.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxSwing()",
      "name": "maxSwing",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "mantissa",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxSwingMantissa()",
      "name": "maxSwingMantissa",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "numBlocksPerPeriod()",
      "name": "numBlocksPerPeriod",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingAnchorAdmin()",
      "name": "pendingAnchorAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingAnchors(address)",
      "name": "pendingAnchors",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poster()",
      "name": "poster",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setPrice(address,uint256)",
      "name": "setPrice",
      "description": "entry point for updating prices. function to set price for an asset.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "Asset for which to set the price.",
          "recommendedTypes": []
        },
        {
          "name": "requestedPriceMantissa",
          "description": "requested new price, scaled by 10**18.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPrices(address[],uint256[])",
      "name": "setPrices",
      "description": "entry point for updating multiple prices. function to set prices for a variable number of assets.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "a list of up to assets for which to set a price. required: 0 < assets.length == requestedPriceMantissas.length.",
          "recommendedTypes": []
        },
        {
          "name": "requestedPriceMantissas",
          "description": "requested new prices for the assets, scaled by 10**18. required: 0 < assets.length == requestedPriceMantissas.length.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}