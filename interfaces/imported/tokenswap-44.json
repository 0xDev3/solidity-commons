{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "swaps"
  ],
  "name": "TokenSwap",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdminWalletUpdated(address)",
      "name": "AdminWalletUpdated",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LockIntervalUpdated(uint256)",
      "name": "LockIntervalUpdated",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "interval",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LockPercentageUpdated(uint256)",
      "name": "LockPercentageUpdated",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "percentage",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MinDepositUpdated(uint256)",
      "name": "MinDepositUpdated",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PhaseCreated(uint256,uint256,uint256)",
      "name": "PhaseCreated",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "swapRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PhaseTimeUpdated(uint256,uint256,uint256)",
      "name": "PhaseTimeUpdated",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "phaseId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SwapRateUpdated(uint256,uint256)",
      "name": "SwapRateUpdated",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "phaseId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "swapRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Swapped(uint256,address,uint256,uint256,uint256,uint256,string)",
      "name": "Swapped",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "phaseId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ethDeposit",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ethRefund",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenSwap",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenLock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "referralCode",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenClaimed(uint256,address,uint256)",
      "name": "TokenClaimed",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "phaseId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenWithdrawed(uint256)",
      "name": "TokenWithdrawed",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TotalTokenClaimed(address,uint256)",
      "name": "TotalTokenClaimed",
      "description": "Event when owner changes usdt rate. Emitted when `amount` reward tokens are taken from in this contract Note that `amount` may be zero.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "claimToken()",
      "name": "claimToken",
      "description": "Claims the remainning token after lock time end.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createPhase(uint256,uint256,uint256)",
      "name": "createPhase",
      "description": "Creates new phase.",
      "parameterDecorators": [
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "swapRate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getActivePhaseInfo()",
      "name": "getActivePhaseInfo",
      "description": "Returns current active phase information.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "startTime",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint128"
            },
            {
              "name": "endTime",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint128"
            },
            {
              "name": "swapRate",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBoughtPhases(address)",
      "name": "getBoughtPhases",
      "description": "Returns phases that user bought.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getContractInfo()",
      "name": "getContractInfo",
      "description": "Returns smart contract information.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param5",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param6",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param7",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLockedBalanceInfo(uint256,address)",
      "name": "getLockedBalanceInfo",
      "description": "Returns locked balance information.",
      "parameterDecorators": [
        {
          "name": "phaseId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint128"
            },
            {
              "name": "releaseTime",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint128"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPhaseInfo(uint256)",
      "name": "getPhaseInfo",
      "description": "Returns phase information.",
      "parameterDecorators": [
        {
          "name": "phaseId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "startTime",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint128"
            },
            {
              "name": "endTime",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint128"
            },
            {
              "name": "swapRate",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReferralCodeInfo(string)",
      "name": "getReferralCodeInfo",
      "description": "Returns referral code information.",
      "parameterDecorators": [
        {
          "name": "referralCode",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint128"
            },
            {
              "name": "numSwap",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint128"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenBalance(address)",
      "name": "getTokenBalance",
      "description": "Returns token balance of user in smart contract that includes claimable and unclaimable.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swap(uint256,string)",
      "name": "swap",
      "description": "Swaps ETH to token.",
      "parameterDecorators": [
        {
          "name": "phaseId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "referralCode",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateAdminWallet(address)",
      "name": "updateAdminWallet",
      "description": "Updates admin wallet address where contains ETH user deposited to smart contract for swapping.",
      "parameterDecorators": [
        {
          "name": "adminWallet",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateLockInterval(uint256)",
      "name": "updateLockInterval",
      "description": "Updates lock interval.",
      "parameterDecorators": [
        {
          "name": "lockInterval",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateLockPercentage(uint256)",
      "name": "updateLockPercentage",
      "description": "Updates lock percentage.",
      "parameterDecorators": [
        {
          "name": "lockPercentage",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateMinDeposit(uint256)",
      "name": "updateMinDeposit",
      "description": "Updates minimum deposit amount.",
      "parameterDecorators": [
        {
          "name": "minDeposit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePhaseTime(uint256,uint256,uint256)",
      "name": "updatePhaseTime",
      "description": "Updates phase time.",
      "parameterDecorators": [
        {
          "name": "phaseId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateSwapRate(uint256,uint256)",
      "name": "updateSwapRate",
      "description": "Updates swap rate.",
      "parameterDecorators": [
        {
          "name": "phaseId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "swapRate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawToken(uint256)",
      "name": "withdrawToken",
      "description": "Withdraws token out of this smart contract and transfer to admin wallet Admin can withdraw all tokens that includes locked token of user in case emergency.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}