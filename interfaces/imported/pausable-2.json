{
  "schema": "../schema.json",
  "tags": [],
  "name": "Pausable",
  "description": "Contract module which provides an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract.",
  "eventDecorators": [
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. Emitted when the pause is triggered by `account`.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. Emitted when the pause is lifted by `account`.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}