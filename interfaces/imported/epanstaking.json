{
  "schema": "../schema.json",
  "tags": [],
  "name": "EpanStaking",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event when owner changes usdt rate.",
      "parameterDecorators": [
        {
          "name": "newRate",
          "description": "new rate of usdt.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "prevRate",
          "description": "previous rate of usdt.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "aggregatedNormalizedStake()",
      "name": "aggregatedNormalizedStake",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "aggregatedNormalizedStakeTimeframe()",
      "name": "aggregatedNormalizedStakeTimeframe",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "compRateKeeper()",
      "name": "compRateKeeper",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "compRateKeeperTimeframe()",
      "name": "compRateKeeperTimeframe",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "epanToken()",
      "name": "epanToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBalance(bool)",
      "name": "getBalance",
      "description": "Returns the staking balance of the user.",
      "parameterDecorators": [
        {
          "name": "_isTimeframe",
          "description": "If true, return balance from timeframe structure.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRewardAmount(bool)",
      "name": "getRewardAmount",
      "description": "Get reward amount for sender address.",
      "parameterDecorators": [
        {
          "name": "_isTimeframe",
          "description": "If timeframe, calculate reward for user from timeframe structure.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "interestRate()",
      "name": "interestRate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "interestRateTimeframe()",
      "name": "interestRateTimeframe",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "monitorSecurityMargin()",
      "name": "monitorSecurityMargin",
      "description": "Get coefficient. Tokens on the contract / total stake + total reward to be paid.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setInterestRate(uint256)",
      "name": "setInterestRate",
      "description": "Set interest rate.",
      "parameterDecorators": [
        {
          "name": "_newInterestRate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setInterestRateTimeframe(uint256)",
      "name": "setInterestRateTimeframe",
      "description": "Set interest rate timeframe.",
      "parameterDecorators": [
        {
          "name": "_newInterestRate",
          "description": "New interest rate.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setInterestRates(uint256,uint256)",
      "name": "setInterestRates",
      "description": "Set interest rates.",
      "parameterDecorators": [
        {
          "name": "_newInterestRate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_newInterestRateTimeframe",
          "description": "New interest rate timeframe.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stake(uint256,bool)",
      "name": "stake",
      "description": "Stake tokens to user balance.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "Amount to stake.",
          "recommendedTypes": []
        },
        {
          "name": "_isTimeframe",
          "description": "If true, stake to timeframe structure.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supplyRewardPool(uint256)",
      "name": "supplyRewardPool",
      "description": "Add tokens to contract address to be spent as rewards.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "Token amount that will be added to contract as reward.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateCompoundAndStake(uint256,bool)",
      "name": "updateCompoundAndStake",
      "description": "Update compound rate and stake tokens to user balance.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "Amount to stake.",
          "recommendedTypes": []
        },
        {
          "name": "_isTimeframe",
          "description": "If true, stake to timeframe structure.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateCompoundAndWithdraw(uint256,bool)",
      "name": "updateCompoundAndWithdraw",
      "description": "Update compound rate and withdraw tokens from contract.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "Amount to stake.",
          "recommendedTypes": []
        },
        {
          "name": "_isTimeframe",
          "description": "If true, withdraw from timeframe structure.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateCompoundRate()",
      "name": "updateCompoundRate",
      "description": "Update compound rate.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateCompoundRateTimeframe()",
      "name": "updateCompoundRateTimeframe",
      "description": "Update compound rate timeframe.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateCompoundRates()",
      "name": "updateCompoundRates",
      "description": "Update both compound rates.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "userStakes(address)",
      "name": "userStakes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "normalizedAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "userStakesTimeframe(address)",
      "name": "userStakesTimeframe",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "normalizedAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastStakeTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256,bool)",
      "name": "withdraw",
      "description": "Withdraw tokens from user balance. Only for timeframe stake.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "Amount to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "_isTimeframe",
          "description": "If true, withdraws from timeframe structure.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}