{"schema":"../schema.json","tags":["tokens","swaps","uniswap"],"name":"OhLiquidatorV2","description":"Oh! Finance Liquidator V2. This version generalizes the router address. Contract to manage standard token liquidations on UniswapV2-like routers.","eventDecorators":[],"functionDecorators":[{"signature":"getSwapInfo(address,address)","name":"getSwapInfo","description":"Get the router and swap path for a token pair.","parameterDecorators":[{"name":"from","description":"The token that we have.","recommendedTypes":[]},{"name":"to","description":"The token that we want.","recommendedTypes":[]}],"returnDecorators":[{"name":"router","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"path","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"governance()","name":"governance","description":"Get the Governance address.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The current Governance address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"liquidate(address,address,address,uint256,uint256)","name":"liquidate","description":"Liquidate an amount of 'from' tokens to 'to' tokens from this address. Send proceeds to the caller, `msg.sender` will typically be a Strategy.","parameterDecorators":[{"name":"recipient","description":"The recipient of the swap.","recommendedTypes":[]},{"name":"from","description":"The token we have.","recommendedTypes":[]},{"name":"to","description":"The token we want to swap to.","recommendedTypes":[]},{"name":"amount","description":"The amount of 'from' tokens to swap.","recommendedTypes":[]},{"name":"minOut","description":"The minimum output amount accepted.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"The amount of 'to' tokens received.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"manager()","name":"manager","description":"Get the Manager address.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The current Manager address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"registry()","name":"registry","description":"Get the Registry address.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The current Registry address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setRegistry(address)","name":"setRegistry","description":"Set the Registry for the contract. Only callable by Governance. Requires sender to be Governance of the new Registry to avoid bricking.Ideally should not be used.","parameterDecorators":[{"name":"registry_","description":"The new registry.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setSwapRoutes(address,address,address,address[])","name":"setSwapRoutes","description":"Set liquidation route for a token pair on Uniswap.","parameterDecorators":[{"name":"router","description":"","recommendedTypes":[]},{"name":"from","description":"The token that we have.","recommendedTypes":[]},{"name":"to","description":"The token that we want.","recommendedTypes":[]},{"name":"path","description":"The swap path used to get the desired token.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"swapRoutes(address,address,address,uint256)","name":"swapRoutes","description":"mapping of router to source token to desired token to swap liquidation route.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenSwapRouter(address,address)","name":"tokenSwapRouter","description":"mapping of source token to desired token to router used for liquidation.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"weth()","name":"weth","description":"address of WETH.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}