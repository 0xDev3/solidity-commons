{
  "schema": "../schema.json",
  "tags": [],
  "name": "ConstantFlowAgreementV1",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CodeUpdated(bytes32,address)",
      "name": "CodeUpdated",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "uuid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "codeAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FlowUpdated(address,address,address,int96,int256,int256,bytes)",
      "name": "FlowUpdated",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "totalSenderFlowRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "totalReceiverFlowRate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "userData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "agreementType()",
      "name": "agreementType",
      "description": "ISuperAgreement.agreementType implementation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createFlow(address,address,int96,bytes)",
      "name": "createFlow",
      "description": "IConstantFlowAgreementV1.createFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deleteFlow(address,address,address,bytes)",
      "name": "deleteFlow",
      "description": "IConstantFlowAgreementV1.deleteFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAccountFlowInfo(address,address)",
      "name": "getAccountFlowInfo",
      "description": "IConstantFlowAgreementV1.getAccountFlowInfo implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        },
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owedDeposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCodeAddress()",
      "name": "getCodeAddress",
      "description": "Get current implementation code address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "codeAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDepositRequiredForFlowRate(address,int96)",
      "name": "getDepositRequiredForFlowRate",
      "description": "Get the deposit required for creating the flow.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowRate",
          "description": "Flow rate to be tested.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFlow(address,address,address)",
      "name": "getFlow",
      "description": "IConstantFlowAgreementV1.getFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        },
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owedDeposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFlowByID(address,bytes32)",
      "name": "getFlowByID",
      "description": "IConstantFlowAgreementV1.getFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        },
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owedDeposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMaximumFlowRateFromDeposit(address,uint256)",
      "name": "getMaximumFlowRateFromDeposit",
      "description": "IConstantFlowAgreementV1.createFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getNetFlow(address,address)",
      "name": "getNetFlow",
      "description": "IConstantFlowAgreementV1.getNetFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize()",
      "name": "initialize",
      "description": "Initialize the agreement contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "proxiableUUID()",
      "name": "proxiableUUID",
      "description": "Proxiable UUID marker function. This would help to avoid wrong logic contract to be used for upgrading.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "realtimeBalanceOf(address,address,uint256)",
      "name": "realtimeBalanceOf",
      "description": "ISuperAgreement.realtimeBalanceOf implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "time",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "dynamicBalance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        },
        {
          "name": "deposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owedDeposit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateCode(address)",
      "name": "updateCode",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateFlow(address,address,int96,bytes)",
      "name": "updateFlow",
      "description": "IConstantFlowAgreementV1.updateFlow implementation.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flowRate",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ctx",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "newCtx",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}