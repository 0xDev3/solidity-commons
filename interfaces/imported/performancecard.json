{
  "schema": "../schema.json",
  "tags": [],
  "name": "PerformanceCard",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdminAdded(address)",
      "name": "AdminAdded",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AdminRemoved(address)",
      "name": "AdminRemoved",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "GasPriceLimitChanged(address,uint256)",
      "name": "GasPriceLimitChanged",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ERC20_INITIAL_SUPPLY()",
      "name": "ERC20_INITIAL_SUPPLY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MATH_PRECISION()",
      "name": "MATH_PRECISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PLATFORM_CUT()",
      "name": "PLATFORM_CUT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addAdmin(address)",
      "name": "addAdmin",
      "description": "Add new admin. Can only be called by owner.",
      "parameterDecorators": [
        {
          "name": "_wallet",
          "description": "address of new admin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createCard(uint256,string,string,uint256,bytes32,bytes,uint256,bytes32,bytes)",
      "name": "createCard",
      "description": "Create Performance Card.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "card id.",
          "recommendedTypes": []
        },
        {
          "name": "_symbol",
          "description": "card symbol.",
          "recommendedTypes": []
        },
        {
          "name": "_name",
          "description": "card name.",
          "recommendedTypes": []
        },
        {
          "name": "_reserveAmount",
          "description": "creation value for the card.",
          "recommendedTypes": []
        },
        {
          "name": "_msgHash",
          "description": "hash of card parameters.",
          "recommendedTypes": []
        },
        {
          "name": "_signature",
          "description": "admin signature.",
          "recommendedTypes": []
        },
        {
          "name": "_expiration",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_orderId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_orderSignature",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "estimateLiquidate(uint256,uint256)",
      "name": "estimateLiquidate",
      "description": "Estimate Liquidation of a fractionable ERC721 for sTSX.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "tokenId to liquidate.",
          "recommendedTypes": []
        },
        {
          "name": "_liquidationAmount",
          "description": "wei amount for liquidate.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "expectedRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "slippageRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "estimatePurchase(uint256,uint256)",
      "name": "estimatePurchase",
      "description": "Estimate Purchase of a fractionable ERC721 using sTSX.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "tokenId to purchase.",
          "recommendedTypes": []
        },
        {
          "name": "_paymentAmount",
          "description": "wei payment amount in payment token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "expectedRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "slippageRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "estimateSwap(uint256,uint256,uint256)",
      "name": "estimateSwap",
      "description": "Estimate Swap between two fractionable ERC721 tokens.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "tokenId to liquidate.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "wei amount of liquidation in source token.",
          "recommendedTypes": []
        },
        {
          "name": "_destTokenId",
          "description": "tokenId to puurchase.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "expectedRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "slippageRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "executeRelayedTx(uint256,address,bytes,bytes)",
      "name": "executeRelayedTx",
      "description": "Executes a transaction that was relayed by a 3rd party.",
      "parameterDecorators": [
        {
          "name": "_nonce",
          "description": "tx nonce.",
          "recommendedTypes": []
        },
        {
          "name": "_signer",
          "description": "signer who's the original beneficiary.",
          "recommendedTypes": []
        },
        {
          "name": "_abiEncoded",
          "description": "function signature.",
          "recommendedTypes": []
        },
        {
          "name": "_orderHashSignature",
          "description": "keccak256(nonce, signer, function).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "gasPriceLimit()",
      "name": "gasPriceLimit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAdmin(address)",
      "name": "isAdmin",
      "description": "Check if the provided wallet has an admin role.",
      "parameterDecorators": [
        {
          "name": "_wallet",
          "description": "address of wallet to update.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "liquidate(uint256,uint256)",
      "name": "liquidate",
      "description": "Liquidate a fractionable ERC721 for sTSX.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "tokenId to liquidate.",
          "recommendedTypes": []
        },
        {
          "name": "_liquidationAmount",
          "description": "wei amount for liquidate.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "purchase(uint256,uint256,uint256,bytes32,bytes)",
      "name": "purchase",
      "description": "Purchase of a fractionable ERC721 using sTSX.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "tokenId to purchase.",
          "recommendedTypes": []
        },
        {
          "name": "_paymentAmount",
          "description": "wei payment amount in sTSX.",
          "recommendedTypes": []
        },
        {
          "name": "_expiration",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_orderId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_orderSignature",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeAdmin(address)",
      "name": "removeAdmin",
      "description": "Removes admin account. Can only be called by owner.",
      "parameterDecorators": [
        {
          "name": "_wallet",
          "description": "address revoke admin role.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceAdmin()",
      "name": "renounceAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGasPriceLimit(uint256)",
      "name": "setGasPriceLimit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swap(uint256,uint256,uint256)",
      "name": "swap",
      "description": "Swap two fractionable ERC721 tokens.",
      "parameterDecorators": [
        {
          "name": "_tokenId",
          "description": "tokenId to liquidate.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "wei amount of liquidation in source token.",
          "recommendedTypes": []
        },
        {
          "name": "_destTokenId",
          "description": "tokenId to puurchase.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}