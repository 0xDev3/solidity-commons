{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "vesting"
  ],
  "name": "Sale",
  "description": "Sale. Sale is a contract for managing a token sale, allowing investors to purchase tokens with ether or DAI.",
  "eventDecorators": [
    {
      "signature": "FundsForwarded(uint256,uint256)",
      "name": "FundsForwarded",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "eth",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "dai",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MemberFunded(address,uint256,bool)",
      "name": "MemberFunded",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "notStaked",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Reinstate(address)",
      "name": "Reinstate",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Revoke(address)",
      "name": "Revoke",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StakingRewardsReleased(uint256,address)",
      "name": "StakingRewardsReleased",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokensDeposited(uint256)",
      "name": "TokensDeposited",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokensPurchased(address,uint256,uint256,uint256,uint256)",
      "name": "TokensPurchased",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "eth",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "dai",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "vestedAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "instantAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokensWithdrawn(uint256)",
      "name": "TokensWithdrawn",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VestedPortionReleased(uint256,address)",
      "name": "VestedPortionReleased",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VestingFunded(uint256)",
      "name": "VestingFunded",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "CLIFF()",
      "name": "CLIFF",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DAI()",
      "name": "DAI",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DAIRaised()",
      "name": "DAIRaised",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "amount of DAI raised.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DURATION()",
      "name": "DURATION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "admin()",
      "name": "admin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "allocateUserMultiple(address[],uint256[],bool[])",
      "name": "allocateUserMultiple",
      "description": "allocate tokens to early investor or team member in a batch.",
      "parameterDecorators": [
        {
          "name": "beneficiary",
          "description": "- users who gets tokens allocated.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "- amounts of tokens being allocated.",
          "recommendedTypes": []
        },
        {
          "name": "notStaked",
          "description": "- flags if user is eligible for vesting rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyTokens(uint256)",
      "name": "buyTokens",
      "description": "Function to purchase tokens. It will be called either with DAI or ETH.",
      "parameterDecorators": [
        {
          "name": "DAIAmountContributed",
          "description": "Amount of DAI contributed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyTokens()",
      "name": "buyTokens",
      "description": "function to be called for ETH contributions.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculateDAIForEther(uint256)",
      "name": "calculateDAIForEther",
      "description": "find out ETH/DAI price.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "- amount of ether to be checked against DAI.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "amount of DAI.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateRewardsTotal(address)",
      "name": "calculateRewardsTotal",
      "description": "calculates rewards based on released amount.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "- user whose rewards are being calculated.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "amount of tokens for reward. Excludes team members who are not part of reward program.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cliff()",
      "name": "cliff",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "duration()",
      "name": "duration",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenAmount(uint256)",
      "name": "getTokenAmount",
      "description": "calculate amount of tokens for available DAI.",
      "parameterDecorators": [
        {
          "name": "DAIAmount",
          "description": "- amount of DAI.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "amount of tokens to be sent to contributor.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rate()",
      "name": "rate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the number of token units a buyer gets per DAI.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reinstate(address)",
      "name": "reinstate",
      "description": "owner can reinstate access to continue vesting of tokens.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "{address} of user to reinstate their right to vesting.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "release()",
      "name": "release",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "returnVestingSchedule()",
      "name": "returnVestingSchedule",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "revoke(address)",
      "name": "revoke",
      "description": "owner can revoke access to continue vesting of tokens.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "{address} of user to revoke their right to vesting.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakingRatio()",
      "name": "stakingRatio",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "startCountDown()",
      "name": "startCountDown",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the token being sold.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenHolders(address)",
      "name": "tokenHolders",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokensToSend",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "releasedAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "revoked",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "notStaked",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokensLeft()",
      "name": "tokensLeft",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "amount of tokens left.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalRedeemable()",
      "name": "totalRedeemable",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vestedAmount(uint256)",
      "name": "vestedAmount",
      "description": "this function will determine vested amount.",
      "parameterDecorators": [
        {
          "name": "_totalBalance",
          "description": "{uint} total balance of tokens assigned to this user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "{uint} amount of tokens available to transfer.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vestedAmountAvailable()",
      "name": "vestedAmountAvailable",
      "description": "Show amount of token still available for vesting.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "{uint} tokens still available for vesting.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "wallet()",
      "name": "wallet",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the address where funds are collected.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "weiRaised()",
      "name": "weiRaised",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the amount of wei raised.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "whiteList()",
      "name": "whiteList",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}