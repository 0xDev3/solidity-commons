{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "staking",
    "vaults",
    "synthetix"
  ],
  "name": "StakingMultiRewardsUpgradeable",
  "description": "Multi-reward staking pool. This reward is used for dsitributing the longAsset from the vault. This is a generalized version of the staking pool from synthetix. Additionally, users of the vault does not need to manually \"stake\" into this reward pool. They are automatically staked when they hold the vault tokens. See also: https://docs.synthetix.io/contracts/source/contracts/stakingrewards.",
  "eventDecorators": [
    {
      "signature": "Recovered(address,uint256)",
      "name": "Recovered",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardAdded(address)",
      "name": "RewardAdded",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardNotified(address,uint256)",
      "name": "RewardNotified",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardPaid(address,address,uint256)",
      "name": "RewardPaid",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "targetYield",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "reward",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardPayOut(address,uint256,address)",
      "name": "RewardPayOut",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "gained",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardRemoved(address)",
      "name": "RewardRemoved",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardsDurationUpdated(address,uint256)",
      "name": "RewardsDurationUpdated",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newDuration",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addReward(address,uint256,bool)",
      "name": "addReward",
      "description": "Add a new reward to the reward pool.",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "Address of the new reward token.",
          "recommendedTypes": []
        },
        {
          "name": "duration",
          "description": "Reward distribution duration.",
          "recommendedTypes": []
        },
        {
          "name": "isSelfCompoundingYield",
          "description": "If the new reward is the share of a self-compounding vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "earned(address,address)",
      "name": "earned",
      "description": "Calculate the amount of reward token earned by a user.",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "Address of the reward token.",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "Address of the user account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Return the amount of reward token earned.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "earnedUnwrapped(address,address)",
      "name": "earnedUnwrapped",
      "description": "Calculate the amount of reward token earned by a user. If the reward token is the share of a self-compounding vault, calculate the reward as the underlying bassetAsset.",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "Address of the reward token.",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "Address of the user account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Return the amount of reward token earned (as the baseAsset if the targetYield is a self-compound vault.).",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllRewards()",
      "name": "getAllRewards",
      "description": "Claim all the rewards. See getRewardFor for details.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllRewardsFor(address)",
      "name": "getAllRewardsFor",
      "description": "Claim all the rewards for a user. See getRewardFor for details.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "Address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getReward(address)",
      "name": "getReward",
      "description": "Claim the reward. See getRewardFor for details.",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "The address of the reward.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getRewardFor(address,address)",
      "name": "getRewardFor",
      "description": "Claim the reward for a user. If the reward is the share of self-compound asset, baseAsset of the vault would be withdrawed and sent to the user.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "Address of the user.",
          "recommendedTypes": []
        },
        {
          "name": "targetYield",
          "description": "The address of the reward.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "governance()",
      "name": "governance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,address,address,uint256,bool)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_store",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_rewardsDistribution",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_vaultAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_yieldToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_yieldDuration",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_isSelfCompounding",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_store",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isAdmin(address)",
      "name": "isAdmin",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_who",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOperator(address)",
      "name": "isOperator",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_who",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastTimeRewardApplicable(address)",
      "name": "lastTimeRewardApplicable",
      "description": "",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "notifyTargetRewardAmount(address,uint256)",
      "name": "notifyTargetRewardAmount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "reward",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registry()",
      "name": "registry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeReward(address)",
      "name": "removeReward",
      "description": "",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardPerToken(address)",
      "name": "rewardPerToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setRewardDistribution(address[],bool)",
      "name": "setRewardDistribution",
      "description": "Reward Distribution.",
      "parameterDecorators": [
        {
          "name": "_rewardDistributions",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_flag",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "storageFetchAddress(bytes32)",
      "name": "storageFetchAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "storageFetchAddressInArray(bytes32,uint256)",
      "name": "storageFetchAddressInArray",
      "description": "",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "storageFetchBool(bytes32)",
      "name": "storageFetchBool",
      "description": "",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "storageFetchBoolInArray(bytes32,uint256)",
      "name": "storageFetchBoolInArray",
      "description": "",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "storageFetchUint256(bytes32)",
      "name": "storageFetchUint256",
      "description": "",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "storageFetchUint256InArray(bytes32,uint256)",
      "name": "storageFetchUint256InArray",
      "description": "",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "store()",
      "name": "store",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "swapCenter()",
      "name": "swapCenter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSupply()",
      "name": "totalSupply",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "treasury()",
      "name": "treasury",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateAllRewards(address)",
      "name": "updateAllRewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "targetAccount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateReward(address,address)",
      "name": "updateReward",
      "description": "",
      "parameterDecorators": [
        {
          "name": "targetYield",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "targetAccount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vaultAddress()",
      "name": "vaultAddress",
      "description": "Address of vault associated with this reward pool.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "yieldInfo(address)",
      "name": "yieldInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "periodFinish",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "duration",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastUpdateTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardPerTokenStored",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "isSelfCompoudingYield",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}