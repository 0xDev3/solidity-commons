{"schema":"../schema.json","tags":[],"name":"WhaleBuyer","description":"","eventDecorators":[],"functionDecorators":[{"signature":"buy(uint256,uint256,uint256)","name":"buy","description":"Buy _num WHALE with $SOS using specified _maxExchangeRate to mitigate frontrunning. max exchange rate is a sqrt(sos/eth) Q64.96 value. Cost should be obtained with an offchain call to exchangeRate to prevent frontrunning.","parameterDecorators":[{"name":"_cost","description":"","recommendedTypes":[]},{"name":"_mintNum","description":"","recommendedTypes":[]},{"name":"_deadline","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getCost()","name":"getCost","description":"Get the price of a mint with 10% slippage tolerance.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC721Received(address,address,uint256,bytes)","name":"onERC721Received","description":"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false}]}