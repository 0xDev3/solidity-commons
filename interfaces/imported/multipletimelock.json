{
  "schema": "../schema.json",
  "tags": [
    "locking"
  ],
  "name": "MultipleTimelock",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Created(uint256,address,uint256,uint256)",
      "name": "Created",
      "description": "Event for token swap logging.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "releaseTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deleted(uint256)",
      "name": "Deleted",
      "description": "Event for token swap logging.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Released(uint256,address,uint256)",
      "name": "Released",
      "description": "Event for token swap logging.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Updated(uint256,address,uint256,uint256)",
      "name": "Updated",
      "description": "Event for token swap logging.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "releaseTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "change(uint256,address,uint256,uint256,bytes)",
      "name": "change",
      "description": "Change the designated lock. Compare between new amount and current amount, and then transfer the difference to the appropriate address. OnlyAdmin can execute the function.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newBeneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newReleaseTime",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lock(uint256,address,uint256,uint256,bytes)",
      "name": "lock",
      "description": "Create new lock. Arguments - id: identifier of the lock. Any locks must have different id. - beneficiary: address where the token will be transfered when the lock is released. - amount: amount of the token to be transfered - releaseTime: Until this time, lock cannot be released. Specify in unixtime.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "releaseTime",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lockOf(uint256)",
      "name": "lockOf",
      "description": "View the designated Lock.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "release(uint256)",
      "name": "release",
      "description": "Release the designated lock. Once release succeed, locked amount is transfered to the recipient which specified in the lock. Anyone can release any locks, but current timestamp must exceed the release time of the target lock.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "remove(uint256,bytes)",
      "name": "remove",
      "description": "Remove the designated lock. OnlyAdmin can execute the function.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAdminContoller(address,bytes)",
      "name": "setAdminContoller",
      "description": "Change the Admin Controller Contract. The target controller must implement IAdminController interface to check whether the caller is admin or not.",
      "parameterDecorators": [
        {
          "name": "adminController_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}