{
  "schema": "../schema.json",
  "tags": [],
  "name": "UniversalProfile",
  "description": "implementation of a LUKSO's Universal Profile based on LSP3. Implementation of the ERC725Account + LSP1 universalReceiver.",
  "eventDecorators": [
    {
      "signature": "ContractCreated(uint256,address,uint256)",
      "name": "ContractCreated",
      "description": "A processed deposit event.",
      "parameterDecorators": [
        {
          "name": "_operation",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_contractAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "DataChanged(bytes32,bytes)",
      "name": "DataChanged",
      "description": "A processed deposit event.",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Executed(uint256,address,uint256,bytes)",
      "name": "Executed",
      "description": "A processed deposit event.",
      "parameterDecorators": [
        {
          "name": "_operation",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "A processed deposit event.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "UniversalReceiver(address,bytes32,bytes,bytes)",
      "name": "UniversalReceiver",
      "description": "A processed deposit event.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "typeId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "returnedValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "receivedData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ValueReceived(address,uint256)",
      "name": "ValueReceived",
      "description": "A processed deposit event.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "allDataKeys()",
      "name": "allDataKeys",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dataKeys(uint256)",
      "name": "dataKeys",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "execute(uint256,address,uint256,bytes)",
      "name": "execute",
      "description": "Executes any other smart contract. Is only callable by the owner.",
      "parameterDecorators": [
        {
          "name": "_operation",
          "description": "the operation to execute: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4;.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "the smart contract or address to interact with. `_to` will be unused if a contract is created (operation 1 and 2).",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "the value of ETH to transfer.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "the call data, or the contract data to deploy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "result",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getData(bytes32[])",
      "name": "getData",
      "description": "Gets array of data at multiple given `key`.",
      "parameterDecorators": [
        {
          "name": "_keys",
          "description": "the keys which values to retrieve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "values",
          "description": "The array of data stored at multiple keys.",
          "recommendedTypes": [],
          "solidityType": "bytes[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isValidSignature(bytes32,bytes)",
      "name": "isValidSignature",
      "description": "Checks if an owner signed `_data`. ERC1271 interface.",
      "parameterDecorators": [
        {
          "name": "_hash",
          "description": "hash of the data signed//Arbitrary length data signed on the behalf of address(this).",
          "recommendedTypes": []
        },
        {
          "name": "_signature",
          "description": "owner's signature(s) of the data.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "magicValue",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setData(bytes32[],bytes[])",
      "name": "setData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_keys",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_values",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "universalReceiver(bytes32,bytes)",
      "name": "universalReceiver",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_typeId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "returnValue",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}