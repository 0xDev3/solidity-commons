{"schema":"../schema.json","tags":[],"name":"Zipzapper","description":"","eventDecorators":[{"signature":"DiamondCut(tuple[],address,bytes)","name":"DiamondCut","description":"","parameterDecorators":[{"name":"facetCuts","description":"","recommendedTypes":[],"indexed":false},{"name":"target","description":"","recommendedTypes":[],"indexed":false},{"name":"data","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"acceptOwnership()","name":"acceptOwnership","description":"accept transfer of contract ownership.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"diamondCut(tuple(address,uint8,bytes4[])[],address,bytes)","name":"diamondCut","description":"update diamond facets and optionally execute arbitrary initialization function.","parameterDecorators":[{"name":"facetCuts","description":"array of structured Diamond facet update data.","recommendedTypes":[],"parameters":[{"name":"target","description":"","type":"address"},{"name":"action","description":"","type":"uint8"},{"name":"selectors","description":"","type":"bytes4[]"}]},{"name":"target","description":"optional target of initialization delegatecall.","recommendedTypes":[]},{"name":"data","description":"optional initialization function call data.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"facetAddress(bytes4)","name":"facetAddress","description":"get the address of the facet associated with given selector.","parameterDecorators":[{"name":"selector","description":"function selector to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"facet","description":"facet address (zero address if not found).","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"facetAddresses()","name":"facetAddresses","description":"get addresses of all facets used by diamond.","parameterDecorators":[],"returnDecorators":[{"name":"addresses","description":"array of facet addresses.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"facetFunctionSelectors(address)","name":"facetFunctionSelectors","description":"get all selectors for given facet address.","parameterDecorators":[{"name":"facet","description":"address of facet to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"selectors","description":"array of function selectors.","recommendedTypes":[],"solidityType":"bytes4[]"}],"emittableEvents":[],"readOnly":true},{"signature":"facets()","name":"facets","description":"get all facets and their selectors.","parameterDecorators":[],"returnDecorators":[{"name":"diamondFacets","description":"array of structured facet data.","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getFallbackAddress()","name":"getFallbackAddress","description":"get the address of the fallback contract.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"fallback address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"nomineeOwner()","name":"nomineeOwner","description":"get the nominated owner who has permission to call acceptOwnership.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"get the ERC173 contract owner.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"conrtact owner.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setFallbackAddress(address)","name":"setFallbackAddress","description":"set the address of the fallback contract.","parameterDecorators":[{"name":"fallbackAddress","description":"fallback address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"query whether contract has registered support for given interface.","parameterDecorators":[{"name":"interfaceId","description":"interface id.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"bool whether interface is supported.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"transfer contract ownership to new account.","parameterDecorators":[{"name":"account","description":"address of new owner.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}