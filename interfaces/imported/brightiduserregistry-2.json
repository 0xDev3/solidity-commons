{"schema":"../schema.json","tags":[],"name":"BrightIdUserRegistry","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"event emitted when a user has unstaked a token. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SetBrightIdSettings(bytes32,address)","name":"SetBrightIdSettings","description":"event emitted when a user has unstaked a token. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"context","description":"","recommendedTypes":[],"indexed":false},{"name":"verifier","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Sponsor(address)","name":"Sponsor","description":"event emitted when a user has unstaked a token. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"addr","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"context()","name":"context","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"isVerifiedUser(address)","name":"isVerifiedUser","description":"Check a user is verified or not.","parameterDecorators":[{"name":"_user","description":"BrightID context id used for verifying users.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"register(bytes32,address[],uint256,uint8,bytes32,bytes32)","name":"register","description":"Register a user by BrightID verification.","parameterDecorators":[{"name":"_context","description":"The context used in the users verification.","recommendedTypes":[]},{"name":"_addrs","description":"The history of addresses used by this user in this context.","recommendedTypes":[]},{"name":"_timestamp","description":"The BrightID node's verification timestamp.","recommendedTypes":[]},{"name":"_v","description":"Component of signature.","recommendedTypes":[]},{"name":"_r","description":"Component of signature.","recommendedTypes":[]},{"name":"_s","description":"Component of signature.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setSettings(bytes32,address)","name":"setSettings","description":"Set BrightID settings.","parameterDecorators":[{"name":"_context","description":"BrightID context used for verifying users.","recommendedTypes":[]},{"name":"_verifier","description":"BrightID verifier address that signs BrightID verifications.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"sponsor(address)","name":"sponsor","description":"Sponsor a BrightID user by context id.","parameterDecorators":[{"name":"addr","description":"BrightID context id.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"verifications(address)","name":"verifications","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"time","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"isVerified","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"verifier()","name":"verifier","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}