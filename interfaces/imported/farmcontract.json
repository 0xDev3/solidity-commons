{
  "schema": "../schema.json",
  "tags": [],
  "name": "Farm_Contract",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Deposit(address,uint256)",
      "name": "Deposit",
      "description": "Emitted when a token is locked or the lock on a token is extended.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EmergencyWithdraw(address,uint256)",
      "name": "EmergencyWithdraw",
      "description": "Emitted when a token is locked or the lock on a token is extended.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a token is locked or the lock on a token is extended.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Withdraw(address,uint256)",
      "name": "Withdraw",
      "description": "Emitted when a token is locked or the lock on a token is extended.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "deposit(uint256)",
      "name": "deposit",
      "description": "deposit LP token function for msg.sender.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "the total deposit amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyWithdraw()",
      "name": "emergencyWithdraw",
      "description": "function to withdraw LP tokens and forego harvest rewards. Important to protect users LP tokens.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "farmInfo()",
      "name": "farmInfo",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "lpToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "rewardToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "startBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "blockReward",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "bonusEndBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "bonus",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastRewardBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "accRewardPerShare",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "farmableSupply",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "numFarmers",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMultiplier(uint256,uint256)",
      "name": "getMultiplier",
      "description": "Gets the reward multiplier over the given _from_block until _to block.",
      "parameterDecorators": [
        {
          "name": "_from_block",
          "description": "the start of the period to measure rewards for.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "the end of the period to measure rewards for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The weighted multiplier for the given period.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "init(address,uint256,address,uint256,uint256,uint256,uint256,uint256)",
      "name": "init",
      "description": "initialize farming contract, should be called only once.",
      "parameterDecorators": [
        {
          "name": "_rewardToken",
          "description": "token to be rewarded to the user (GFI).",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of tokens to be farmed in total.",
          "recommendedTypes": []
        },
        {
          "name": "_lpToken",
          "description": "ERC20 compatible (lp) token used for farming.",
          "recommendedTypes": []
        },
        {
          "name": "_blockReward",
          "description": "token rewards per blockReward.",
          "recommendedTypes": []
        },
        {
          "name": "_startBlock",
          "description": "blocknumber to start farming.",
          "recommendedTypes": []
        },
        {
          "name": "_endBlock",
          "description": "blocknumber to stop farming.",
          "recommendedTypes": []
        },
        {
          "name": "_bonusEndBlock",
          "description": "blocknumber to stop the bonus period.",
          "recommendedTypes": []
        },
        {
          "name": "_bonus",
          "description": "bonus multiplier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingReward(address)",
      "name": "pendingReward",
      "description": "get pending reward token for address.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "the user for whom unclaimed tokens will be shown.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total amount of withdrawable reward tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalStakedAmount()",
      "name": "totalStakedAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePool()",
      "name": "updatePool",
      "description": "updates pool information to be up to date to the current block.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "userInfo(address)",
      "name": "userInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardDebt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "withdraw LP token function for msg.sender.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "the total withdrawable amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawRewards(uint256)",
      "name": "withdrawRewards",
      "description": "Emergency withdraw reward tokens to owner in case of vulnerability or.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens to be sent.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}