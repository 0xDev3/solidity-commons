{"schema":"../schema.json","tags":[],"name":"OptionSellingContract","description":"","eventDecorators":[],"functionDecorators":[{"signature":"boughtAmount()","name":"boughtAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"buyerAddress()","name":"buyerAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"buyingTokenBalance()","name":"buyingTokenBalance","description":"Returns the amount of buying tokens on the smart contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"executeSell()","name":"executeSell","description":"Creates the trade, it sends the amount of buying tokens that are ont the smart contract to the seller and withdraws the appropriate amount of selling tokens to the buyer IMPORTANT: This method will only work if contract is initialised and if balance of buying token is at leats 0.1.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initializeContract()","name":"initializeContract","description":"This method thakes the predefined amount of selling tokens from the sellers account and initializes the contract which means that trading can start. IMPORTANT: This method will not work if allowance on the selling token is not set to the appropriate ammount.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isInitialised()","name":"isInitialised","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"salvageTokensFromContract(address,address,uint256)","name":"salvageTokensFromContract","description":"After the trading is complete and all the tokens are sent appropriatly the buyer gets the control of the smart contract so he can salvage wrongly sent tokens.","parameterDecorators":[{"name":"tokenAddress","description":"","recommendedTypes":[]},{"name":"to","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"sellerAddress()","name":"sellerAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"sellingTokenBalance()","name":"sellingTokenBalance","description":"Returns the amount of selling tokens on the smart contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"soldAmount()","name":"soldAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}