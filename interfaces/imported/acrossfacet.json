{
  "schema": "../schema.json",
  "tags": [],
  "name": "AcrossFacet",
  "description": "Provides functionality for bridging through Across Protocol.",
  "eventDecorators": [
    {
      "signature": "AcrossInitialized(address,address)",
      "name": "AcrossInitialized",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "weth",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "spokePool",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiFiTransferCompleted(bytes32,address,address,uint256,uint256)",
      "name": "LiFiTransferCompleted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "transactionId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "receivingAssetId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiFiTransferStarted(bytes32,string,string,string,address,address,address,address,uint256,uint256,bool,bool)",
      "name": "LiFiTransferStarted",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "transactionId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "bridge",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "bridgeData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "integrator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "referrer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sendingAssetId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "receivingAssetId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "destinationChainId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "hasSourceSwap",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "hasDestinationCall",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "initAcross(address,address)",
      "name": "initAcross",
      "description": "Initializes local variables for the Across facet.",
      "parameterDecorators": [
        {
          "name": "_weth",
          "description": "WETH contract address for the current chain.",
          "recommendedTypes": []
        },
        {
          "name": "_spokePool",
          "description": "Across spoke pool contract address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSpokePool(address)",
      "name": "setSpokePool",
      "description": "Sets spoke pool contract address.",
      "parameterDecorators": [
        {
          "name": "_spokePool",
          "description": "Across spoke pool contract address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWeth(address)",
      "name": "setWeth",
      "description": "Sets WETH contract address.",
      "parameterDecorators": [
        {
          "name": "_weth",
          "description": "the WETH contract address for the current chain.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startBridgeTokensViaAcross(tuple(bytes32,string,address,address,address,address,uint256,uint256),tuple(address,address,uint256,uint256,uint64,uint32))",
      "name": "startBridgeTokensViaAcross",
      "description": "Bridges tokens via Across.",
      "parameterDecorators": [
        {
          "name": "_lifiData",
          "description": "data used purely for tracking and analytics.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "transactionId",
              "description": "",
              "type": "bytes32"
            },
            {
              "name": "integrator",
              "description": "",
              "type": "string"
            },
            {
              "name": "referrer",
              "description": "",
              "type": "address"
            },
            {
              "name": "sendingAssetId",
              "description": "",
              "type": "address"
            },
            {
              "name": "receivingAssetId",
              "description": "",
              "type": "address"
            },
            {
              "name": "receiver",
              "description": "",
              "type": "address"
            },
            {
              "name": "destinationChainId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "amount",
              "description": "",
              "type": "uint256"
            }
          ]
        },
        {
          "name": "_acrossData",
          "description": "data specific to Across.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "recipient",
              "description": "",
              "type": "address"
            },
            {
              "name": "token",
              "description": "",
              "type": "address"
            },
            {
              "name": "amount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "destinationChainId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "relayerFeePct",
              "description": "",
              "type": "uint64"
            },
            {
              "name": "quoteTimestamp",
              "description": "",
              "type": "uint32"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapAndStartBridgeTokensViaAcross(tuple(bytes32,string,address,address,address,address,uint256,uint256),tuple(address,address,address,address,uint256,bytes)[],tuple(address,address,uint256,uint256,uint64,uint32))",
      "name": "swapAndStartBridgeTokensViaAcross",
      "description": "Performs a swap before bridging via Across.",
      "parameterDecorators": [
        {
          "name": "_lifiData",
          "description": "data used purely for tracking and analytics.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "transactionId",
              "description": "",
              "type": "bytes32"
            },
            {
              "name": "integrator",
              "description": "",
              "type": "string"
            },
            {
              "name": "referrer",
              "description": "",
              "type": "address"
            },
            {
              "name": "sendingAssetId",
              "description": "",
              "type": "address"
            },
            {
              "name": "receivingAssetId",
              "description": "",
              "type": "address"
            },
            {
              "name": "receiver",
              "description": "",
              "type": "address"
            },
            {
              "name": "destinationChainId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "amount",
              "description": "",
              "type": "uint256"
            }
          ]
        },
        {
          "name": "_swapData",
          "description": "an array of swap related data for performing swaps before bridging.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "callTo",
              "description": "",
              "type": "address"
            },
            {
              "name": "approveTo",
              "description": "",
              "type": "address"
            },
            {
              "name": "sendingAssetId",
              "description": "",
              "type": "address"
            },
            {
              "name": "receivingAssetId",
              "description": "",
              "type": "address"
            },
            {
              "name": "fromAmount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "callData",
              "description": "",
              "type": "bytes"
            }
          ]
        },
        {
          "name": "_acrossData",
          "description": "data specific to Across.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "recipient",
              "description": "",
              "type": "address"
            },
            {
              "name": "token",
              "description": "",
              "type": "address"
            },
            {
              "name": "amount",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "destinationChainId",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "relayerFeePct",
              "description": "",
              "type": "uint64"
            },
            {
              "name": "quoteTimestamp",
              "description": "",
              "type": "uint32"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}