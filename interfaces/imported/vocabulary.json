{
  "schema": "../schema.json",
  "tags": [],
  "name": "Vocabulary",
  "description": "Vocabulary. A simple distributed vocabulary.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "A processed deposit event. An event which is triggered when the owner is changed.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "The address of the previous owner.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "The address of the new owner.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "VocabularyImported(tuple[])",
      "name": "VocabularyImported",
      "description": "A processed deposit event. An event which is triggered when the owner is changed.",
      "parameterDecorators": [
        {
          "name": "newWords",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WordAdded(tuple)",
      "name": "WordAdded",
      "description": "A processed deposit event. An event which is triggered when the owner is changed.",
      "parameterDecorators": [
        {
          "name": "word",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addWord(tuple(string,string[],string[]))",
      "name": "addWord",
      "description": "Appends new word to the vocabulary.",
      "parameterDecorators": [
        {
          "name": "word",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "orig",
              "description": "",
              "type": "string"
            },
            {
              "name": "translations",
              "description": "",
              "type": "string[]"
            },
            {
              "name": "dependencies",
              "description": "",
              "type": "string[]"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addWords(tuple(string,string[],string[])[])",
      "name": "addWords",
      "description": "Appends several new words to the vocabulary.",
      "parameterDecorators": [
        {
          "name": "words",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "orig",
              "description": "",
              "type": "string"
            },
            {
              "name": "translations",
              "description": "",
              "type": "string[]"
            },
            {
              "name": "dependencies",
              "description": "",
              "type": "string[]"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "destruct()",
      "name": "destruct",
      "description": "Permanently deletes contract from blockchain with all words. Do not forget to export vocabulary before.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exportVocabulary()",
      "name": "exportVocabulary",
      "description": "Exports full vocabulary backup so you can use it if something goes wrong.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "words",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "importVocabulary(tuple(string,string[],string[])[])",
      "name": "importVocabulary",
      "description": "Imports and replaces excisting vocabulary with provided one.",
      "parameterDecorators": [
        {
          "name": "words",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "orig",
              "description": "",
              "type": "string"
            },
            {
              "name": "translations",
              "description": "",
              "type": "string[]"
            },
            {
              "name": "dependencies",
              "description": "",
              "type": "string[]"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "randWord()",
      "name": "randWord",
      "description": "Retrieves random word from the vocabulary. Uses fairless predictable randomness preferring simplicity.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}