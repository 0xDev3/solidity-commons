{
  "schema": "../schema.json",
  "tags": [],
  "name": "WaifuMultiPurpose",
  "description": "Multicall helper functions.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "deprecated, backward compatibility, use `ConverterAnchorRemoved`.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "batchTransferERC721(address,tuple(address,uint256)[])",
      "name": "batchTransferERC721",
      "description": "multicall implemenation to disperse ERC721 tokens to one or more addresses.",
      "parameterDecorators": [
        {
          "name": "nft",
          "description": "address of ERC721 contract.",
          "recommendedTypes": []
        },
        {
          "name": "transfers",
          "description": "array of ERC721Transfer structs denoting recipient and tokenId of ERC721 to disperse.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "recipient",
              "description": "",
              "type": "address"
            },
            {
              "name": "tokenId",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "disperseEther(tuple(address,uint256)[])",
      "name": "disperseEther",
      "description": "multicall implemenation to disperse non-unitform amounts of eth to multiple addresses.",
      "parameterDecorators": [
        {
          "name": "transfers",
          "description": "array of EthTransfers structs denoting recipient and amount of eth to disperse.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "recipient",
              "description": "",
              "type": "address"
            },
            {
              "name": "amount",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "disperseEther(address[])",
      "name": "disperseEther",
      "description": "multicall implemenation to disperse uniform amounts of eth to multiple addresses.",
      "parameterDecorators": [
        {
          "name": "recipients",
          "description": "array of addresses to disperse to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getERC721Balance(address,address[])",
      "name": "getERC721Balance",
      "description": "multicall implemenation to check ERC721 balances of multiple addresses in a single call.",
      "parameterDecorators": [
        {
          "name": "nft",
          "description": "address of ERC721 contract.",
          "recommendedTypes": []
        },
        {
          "name": "addresses",
          "description": "array of addresses to check.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "balances",
          "description": "array of ERC721 balances.",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEthBalances(address[])",
      "name": "getEthBalances",
      "description": "multicall implemenation to check eth balances in a single call.",
      "parameterDecorators": [
        {
          "name": "addresses",
          "description": "array of addresses to check.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "balances",
          "description": "array of balances.",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rescueERC721(address,uint256)",
      "name": "rescueERC721",
      "description": "in the off chance ERC721s winds up stuck in this contract.",
      "parameterDecorators": [
        {
          "name": "nft",
          "description": "the nft to rescue.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "the tokenId to rescue.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rescueEth()",
      "name": "rescueEth",
      "description": "in the off chance eth winds up stuck in this contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}