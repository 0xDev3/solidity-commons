{
  "schema": "../schema.json",
  "tags": [],
  "name": "Coinsino",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdminTokenRecovery(address,uint256)",
      "name": "AdminTokenRecovery",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LotteryClosed(uint256,uint256)",
      "name": "LotteryClosed",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "lotteryId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "firstTicketIdNextLottery",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LotteryInjection(uint256,uint256)",
      "name": "LotteryInjection",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "lotteryId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "injectedAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LotteryNumberDrawn(uint256,uint256,uint256)",
      "name": "LotteryNumberDrawn",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "lotteryId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "finalNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "countWinningTickets",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LotteryOpen(uint256,uint256,uint256,uint256,uint256,uint256)",
      "name": "LotteryOpen",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "lotteryId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "priceTicketInTelos",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "firstTicketId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "injectedAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewOperatorAndTreasuryAndInjectorAddresses(address,address,address)",
      "name": "NewOperatorAndTreasuryAndInjectorAddresses",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "treasury",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "injector",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewRandomNumberGenerator(address)",
      "name": "NewRandomNumberGenerator",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "randomGenerator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TicketsClaim(address,uint256,uint256,uint256)",
      "name": "TicketsClaim",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "claimer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "lotteryId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "numberTickets",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TicketsPurchase(address,uint256,uint256)",
      "name": "TicketsPurchase",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lotteryId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "numberTickets",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "MAX_LENGTH_LOTTERY()",
      "name": "MAX_LENGTH_LOTTERY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_TREASURY_FEE()",
      "name": "MAX_TREASURY_FEE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MIN_DISCOUNT_DIVISOR()",
      "name": "MIN_DISCOUNT_DIVISOR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MIN_LENGTH_LOTTERY()",
      "name": "MIN_LENGTH_LOTTERY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyTickets(uint256,uint32[])",
      "name": "buyTickets",
      "description": "Buy tickets for the current lottery. Callable by users.",
      "parameterDecorators": [
        {
          "name": "_lotteryId",
          "description": ": lotteryId.",
          "recommendedTypes": []
        },
        {
          "name": "_ticketNumbers",
          "description": ": array of ticket numbers between 1,000,000 and 1,999,999.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculateTotalPriceForBulkTickets(uint256,uint256,uint256)",
      "name": "calculateTotalPriceForBulkTickets",
      "description": "Calculate price of a set of tickets.",
      "parameterDecorators": [
        {
          "name": "_discountDivisor",
          "description": ": divisor for the discount.",
          "recommendedTypes": []
        },
        {
          "name": "_priceTicket",
          "description": "price of a ticket (in Telos).",
          "recommendedTypes": []
        },
        {
          "name": "_numberTickets",
          "description": "number of tickets to buy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeRandomGenerator(address,uint256,string,string,string)",
      "name": "changeRandomGenerator",
      "description": "Change the random generator. The calls to functions are used to verify the new generator implements them properly. It is necessary to wait for the response before starting a round. Callable only by the contract owner.",
      "parameterDecorators": [
        {
          "name": "_randomNumberGeneratorAddress",
          "description": ": address of the random number generator.",
          "recommendedTypes": []
        },
        {
          "name": "_round",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_randomness",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_signature",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_previousSignature",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimTickets(uint256,uint256[],uint32[])",
      "name": "claimTickets",
      "description": "Claim a set of winning tickets for a lottery. Callable by users only, not contract!.",
      "parameterDecorators": [
        {
          "name": "_lotteryId",
          "description": ": lottery id.",
          "recommendedTypes": []
        },
        {
          "name": "_ticketIds",
          "description": ": array of ticket ids.",
          "recommendedTypes": []
        },
        {
          "name": "_pools",
          "description": ": array of pools for the ticket ids.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "closeLottery(uint256,uint256)",
      "name": "closeLottery",
      "description": "Close lottery. Callable by operator.",
      "parameterDecorators": [
        {
          "name": "_lotteryId",
          "description": ": lottery id.",
          "recommendedTypes": []
        },
        {
          "name": "_round",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "currentLotteryId()",
      "name": "currentLotteryId",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currentTicketId()",
      "name": "currentTicketId",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "drawFinalNumberAndMakeLotteryClaimable(uint256,bool,uint256)",
      "name": "drawFinalNumberAndMakeLotteryClaimable",
      "description": "Draw the final number, calculate reward in Telos per group, and make lottery claimable. Callable by operator.",
      "parameterDecorators": [
        {
          "name": "_lotteryId",
          "description": ": lottery id.",
          "recommendedTypes": []
        },
        {
          "name": "_autoInjection",
          "description": ": reinjects funds into next lottery (vs. withdrawing all).",
          "recommendedTypes": []
        },
        {
          "name": "_round",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBalance()",
      "name": "getBalance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "injectFunds(uint256)",
      "name": "injectFunds",
      "description": "Inject funds. Callable by owner or injector address.",
      "parameterDecorators": [
        {
          "name": "_lotteryId",
          "description": ": lottery id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "injectorAddress()",
      "name": "injectorAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxNumberOfTicketsPerBuyOrClaim()",
      "name": "maxNumberOfTicketsPerBuyOrClaim",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxPriceTicketInTelos()",
      "name": "maxPriceTicketInTelos",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minPriceTicketInTelos()",
      "name": "minPriceTicketInTelos",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "operatorAddress()",
      "name": "operatorAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingInjectionNextLottery()",
      "name": "pendingInjectionNextLottery",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "randomNumberGenerator()",
      "name": "randomNumberGenerator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "recoverWrongTokens(address,uint256)",
      "name": "recoverWrongTokens",
      "description": "It allows the admin to recover wrong tokens sent to the contract. Only callable by owner.",
      "parameterDecorators": [
        {
          "name": "_tokenAddress",
          "description": ": the address of the token to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenAmount",
          "description": ": the number of token amount to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaxNumberTicketsPerBuy(uint256)",
      "name": "setMaxNumberTicketsPerBuy",
      "description": "Set max number of tickets. Only callable by owner.",
      "parameterDecorators": [
        {
          "name": "_maxNumberOfTicketsPerBuy",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMinAndMaxTicketPriceInTelos(uint256,uint256)",
      "name": "setMinAndMaxTicketPriceInTelos",
      "description": "Set Telos price ticket upper/lower limit. Only callable by owner.",
      "parameterDecorators": [
        {
          "name": "_minPriceTicketInTelos",
          "description": ": minimum price of a ticket in Telos.",
          "recommendedTypes": []
        },
        {
          "name": "_maxPriceTicketInTelos",
          "description": ": maximum price of a ticket in Telos.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOperatorAndTreasuryAndInjectorAddresses(address,address,address)",
      "name": "setOperatorAndTreasuryAndInjectorAddresses",
      "description": "Set operator, treasury, and injector addresses. Only callable by owner.",
      "parameterDecorators": [
        {
          "name": "_operatorAddress",
          "description": ": address of the operator.",
          "recommendedTypes": []
        },
        {
          "name": "_treasuryAddress",
          "description": ": address of the treasury.",
          "recommendedTypes": []
        },
        {
          "name": "_injectorAddress",
          "description": ": address of the injector.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startLottery(uint256,uint256,uint256,uint256[6],uint256)",
      "name": "startLottery",
      "description": "Start the lottery. Callable by operator.",
      "parameterDecorators": [
        {
          "name": "_endTime",
          "description": ": endTime of the lottery.",
          "recommendedTypes": []
        },
        {
          "name": "_priceTicketInTelos",
          "description": ": price of a ticket in Telos.",
          "recommendedTypes": []
        },
        {
          "name": "_discountDivisor",
          "description": ": the divisor to calculate the discount magnitude for bulks.",
          "recommendedTypes": []
        },
        {
          "name": "_rewardsBreakdown",
          "description": ": breakdown of rewards per pool (must sum to 10,000).",
          "recommendedTypes": []
        },
        {
          "name": "_treasuryFee",
          "description": ": treasury fee (10,000 = 100%, 100 = 1%).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "treasuryAddress()",
      "name": "treasuryAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "viewCurrentLotteryId()",
      "name": "viewCurrentLotteryId",
      "description": "View current lottery id.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "viewLottery(uint256)",
      "name": "viewLottery",
      "description": "View lottery information.",
      "parameterDecorators": [
        {
          "name": "_lotteryId",
          "description": ": lottery id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "status",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint8"
            },
            {
              "name": "startTime",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "endTime",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "priceTicketInTelos",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "discountDivisor",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "rewardsBreakdown",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256[6]"
            },
            {
              "name": "treasuryFee",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "telosPerPool",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256[6]"
            },
            {
              "name": "countWinnersPerPool",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256[6]"
            },
            {
              "name": "firstTicketId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "firstTicketIdNextLottery",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "amountCollectedInTelos",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "finalNumber",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint32"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "viewNumbersAndStatusesForTicketIds(uint256[])",
      "name": "viewNumbersAndStatusesForTicketIds",
      "description": "View ticket statuses and numbers for an array of ticket ids.",
      "parameterDecorators": [
        {
          "name": "_ticketIds",
          "description": ": array of _ticketId.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32[]"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "viewRewardsForTicketId(uint256,uint256,uint32)",
      "name": "viewRewardsForTicketId",
      "description": "View rewards for a given ticket, providing a pool, and lottery id.",
      "parameterDecorators": [
        {
          "name": "_lotteryId",
          "description": ": lottery id.",
          "recommendedTypes": []
        },
        {
          "name": "_ticketId",
          "description": ": ticket id.",
          "recommendedTypes": []
        },
        {
          "name": "_pool",
          "description": ": pool for the ticketId to verify the claim and calculate rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "viewUserInfoForLotteryId(address,uint256,uint256,uint256)",
      "name": "viewUserInfoForLotteryId",
      "description": "View ticket ids, numbers, and statuses of user for a given lottery.",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": ": user address.",
          "recommendedTypes": []
        },
        {
          "name": "_lotteryId",
          "description": ": lottery id.",
          "recommendedTypes": []
        },
        {
          "name": "_cursor",
          "description": ": cursor to start where to retrieve the tickets.",
          "recommendedTypes": []
        },
        {
          "name": "_size",
          "description": ": the number of tickets to retrieve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32[]"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool[]"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw()",
      "name": "withdraw",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}