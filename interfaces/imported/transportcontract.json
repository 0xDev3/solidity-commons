{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "TransportContract",
  "description": "Both can claim the tokens if they send a valid signed message.",
  "eventDecorators": [
    {
      "signature": "DoneStuff(address,address,address,uint256,bytes,bytes)",
      "name": "DoneStuff",
      "description": "Emitted when a new Vault is deployed.",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "userData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "operatorData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "newTransport(uint256)",
      "name": "newTransport",
      "description": "Emitted when a new Vault is deployed.",
      "parameterDecorators": [
        {
          "name": "transportID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "orderDeposited(string,uint256)",
      "name": "orderDeposited",
      "description": "Emitted when a new Vault is deployed.",
      "parameterDecorators": [
        {
          "name": "underlying",
          "description": "The underlying token the new Vault accepts.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "vault",
          "description": "The newly deployed Vault contract.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "supplierDeposited(uint256,bool)",
      "name": "supplierDeposited",
      "description": "Emitted when a new Vault is deployed.",
      "parameterDecorators": [
        {
          "name": "underlying",
          "description": "The underlying token the new Vault accepts.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "vault",
          "description": "The newly deployed Vault contract.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "carrierDeposited(uint256,bool)",
      "name": "carrierDeposited",
      "description": "Emitted when a new Vault is deployed.",
      "parameterDecorators": [
        {
          "name": "underlying",
          "description": "The underlying token the new Vault accepts.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "vault",
          "description": "The newly deployed Vault contract.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SensorRegistered(bool)",
      "name": "SensorRegistered",
      "description": "Emitted when a new Vault is deployed.",
      "parameterDecorators": [
        {
          "name": "_transportEnded",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransportEnded(bool)",
      "name": "TransportEnded",
      "description": "Emitted when a new Vault is deployed.",
      "parameterDecorators": [
        {
          "name": "_transportEnded",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "tokensReceived(address,address,address,uint256,bytes,bytes)",
      "name": "tokensReceived",
      "description": "Code from https://forum.openzeppelin.com/t/simple-erc777-token-example/746.",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "userData",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "operatorData",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bytesToUint(bytes)",
      "name": "bytesToUint",
      "description": "",
      "parameterDecorators": [
        {
          "name": "userData",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "number",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "clientQuitsTransport(uint256)",
      "name": "clientQuitsTransport",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_transportID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTransportResults(bytes,int256,int256)",
      "name": "setTransportResults",
      "description": "",
      "parameterDecorators": [
        {
          "name": "userData",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_minTemp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_maxTemp",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "canImplementInterfaceForAddress(bytes32,address)",
      "name": "canImplementInterfaceForAddress",
      "description": "See {IERC1820Implementer-canImplementInterfaceForAddress}.",
      "parameterDecorators": [
        {
          "name": "interfaceHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registerDeposit(uint256,address,uint256)",
      "name": "registerDeposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_transportID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amountReceived",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "carrierQuitsTransport(uint256)",
      "name": "carrierQuitsTransport",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_transportID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supplierQuitsTransport(uint256)",
      "name": "supplierQuitsTransport",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_transportID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transportID()",
      "name": "transportID",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "defineTransport(string,uint256,address,address,int256,int256,uint256,uint256)",
      "name": "defineTransport",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_sessionUuid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_orderID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_client_address",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_carrier_address",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_depositTempLow",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_depositTempHigh",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_transportDeposit",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_temperatureDeposit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "TOKENS_SENDER_INTERFACE_HASH()",
      "name": "TOKENS_SENDER_INTERFACE_HASH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "smartysToken()",
      "name": "smartysToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokensToSend(address,address,address,uint256,bytes,bytes)",
      "name": "tokensToSend",
      "description": "",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "userData",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "operatorData",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transportIDs(uint256)",
      "name": "transportIDs",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uintToBytes(uint256)",
      "name": "uintToBytes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "x",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "b",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transports(uint256)",
      "name": "transports",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "sessionUuid",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "orderID",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "client",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "supplier",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "carrier",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "sensorID",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "conditions",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "depositTempLow",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "int256"
            },
            {
              "name": "depositTempHigh",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "int256"
            },
            {
              "name": "transportDeposit",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "temperatureDeposit",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "minTemp",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "int256"
            },
            {
              "name": "maxTemp",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "int256"
            }
          ],
          "solidityType": "tuple"
        },
        {
          "name": "step",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "transportDepositPaid",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "temperatureDepositPaid",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "goodsReceived",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "transportEnded",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "sensorRegistered",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "clientQuits",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "supplierQuits",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "carrierQuits",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "senderFor(address)",
      "name": "senderFor",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTransportIDs()",
      "name": "getTransportIDs",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}