{"schema":"../schema.json","tags":[],"name":"PublicResolver","description":"A simple resolver anyone can use; only allows the owner of a node to set its address.","eventDecorators":[{"signature":"ABIChanged(bytes32,uint256)","name":"ABIChanged","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"contentType","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"AddrChanged(bytes32,address)","name":"AddrChanged","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"a","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AddressChanged(bytes32,uint256,bytes)","name":"AddressChanged","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"coinType","description":"","recommendedTypes":[],"indexed":false},{"name":"newAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AuthorisationChanged(bytes32,address,address,bool)","name":"AuthorisationChanged","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"target","description":"","recommendedTypes":[],"indexed":true},{"name":"isAuthorised","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ContenthashChanged(bytes32,bytes)","name":"ContenthashChanged","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"hash","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DNSRecordChanged(bytes32,bytes,uint16,bytes)","name":"DNSRecordChanged","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"name","description":"","recommendedTypes":[],"indexed":false},{"name":"resource","description":"","recommendedTypes":[],"indexed":false},{"name":"record","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DNSRecordDeleted(bytes32,bytes,uint16)","name":"DNSRecordDeleted","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"name","description":"","recommendedTypes":[],"indexed":false},{"name":"resource","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DNSZoneCleared(bytes32)","name":"DNSZoneCleared","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"DNSZonehashChanged(bytes32,bytes,bytes)","name":"DNSZonehashChanged","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"lastzonehash","description":"","recommendedTypes":[],"indexed":false},{"name":"zonehash","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"InterfaceChanged(bytes32,bytes4,address)","name":"InterfaceChanged","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"interfaceID","description":"","recommendedTypes":[],"indexed":true},{"name":"implementer","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NameChanged(bytes32,string)","name":"NameChanged","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"name","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PubkeyChanged(bytes32,bytes32,bytes32)","name":"PubkeyChanged","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"x","description":"","recommendedTypes":[],"indexed":false},{"name":"y","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TextChanged(bytes32,string,string)","name":"TextChanged","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[],"indexed":true},{"name":"indexedKey","description":"","recommendedTypes":[],"indexed":true},{"name":"key","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"ABI(bytes32,uint256)","name":"ABI","description":"Returns the ABI associated with an ENS node. Defined in EIP205.","parameterDecorators":[{"name":"node","description":"The ENS node to query.","recommendedTypes":[]},{"name":"contentTypes","description":"A bitwise OR of the ABI formats accepted by the caller.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"addr(bytes32)","name":"addr","description":"Returns the address associated with an ENS node.","parameterDecorators":[{"name":"node","description":"The ENS node to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"addr(bytes32,uint256)","name":"addr","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[]},{"name":"coinType","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"authorisations(bytes32,address,address)","name":"authorisations","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"clearDNSZone(bytes32)","name":"clearDNSZone","description":"Clear all information for a DNS zone.","parameterDecorators":[{"name":"node","description":"the namehash of the node for which to clear the zone.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"contenthash(bytes32)","name":"contenthash","description":"Returns the contenthash associated with an ENS node.","parameterDecorators":[{"name":"node","description":"The ENS node to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"dnsRecord(bytes32,bytes32,uint16)","name":"dnsRecord","description":"Obtain a DNS record.","parameterDecorators":[{"name":"node","description":"the namehash of the node for which to fetch the record.","recommendedTypes":[]},{"name":"name","description":"the keccak-256 hash of the fully-qualified name for which to fetch the record.","recommendedTypes":[]},{"name":"resource","description":"the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"hasDNSRecords(bytes32,bytes32)","name":"hasDNSRecords","description":"Check if a given node has records.","parameterDecorators":[{"name":"node","description":"the namehash of the node for which to check the records.","recommendedTypes":[]},{"name":"name","description":"the namehash of the node for which to check the records.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"interfaceImplementer(bytes32,bytes4)","name":"interfaceImplementer","description":"Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP165 and returns `true` for the specified interfaceID, its address will be returned.","parameterDecorators":[{"name":"node","description":"The ENS node to query.","recommendedTypes":[]},{"name":"interfaceID","description":"The EIP 165 interface ID to check for.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"multicall(bytes[])","name":"multicall","description":"","parameterDecorators":[{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"results","description":"","recommendedTypes":[],"solidityType":"bytes[]"}],"emittableEvents":[],"readOnly":false},{"signature":"name(bytes32)","name":"name","description":"Returns the name associated with an ENS node, for reverse records. Defined in EIP181.","parameterDecorators":[{"name":"node","description":"The ENS node to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"pubkey(bytes32)","name":"pubkey","description":"Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619.","parameterDecorators":[{"name":"node","description":"The ENS node to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"x","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"y","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"setABI(bytes32,uint256,bytes)","name":"setABI","description":"Sets the ABI associated with an ENS node. Nodes may have one ABI of each content type. To remove an ABI, set it to the empty string.","parameterDecorators":[{"name":"node","description":"The node to update.","recommendedTypes":[]},{"name":"contentType","description":"The content type of the ABI.","recommendedTypes":[]},{"name":"data","description":"The ABI data.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAddr(bytes32,uint256,bytes)","name":"setAddr","description":"","parameterDecorators":[{"name":"node","description":"","recommendedTypes":[]},{"name":"coinType","description":"","recommendedTypes":[]},{"name":"a","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAddr(bytes32,address)","name":"setAddr","description":"Sets the address associated with an ENS node. May only be called by the owner of that node in the ENS registry.","parameterDecorators":[{"name":"node","description":"The node to update.","recommendedTypes":[]},{"name":"a","description":"The address to set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAuthorisation(bytes32,address,bool)","name":"setAuthorisation","description":"Sets or clears an authorisation. Authorisations are specific to the caller. Any account can set an authorisation for any name, but the authorisation that is checked will be that of the current owner of a name. Thus, transferring a name effectively clears any existing authorisations, and new authorisations can be set in advance of an ownership transfer if desired.","parameterDecorators":[{"name":"node","description":"The name to change the authorisation on.","recommendedTypes":[]},{"name":"target","description":"The address that is to be authorised or deauthorised.","recommendedTypes":[]},{"name":"isAuthorised","description":"True if the address should be authorised, or false if it should be deauthorised.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setContenthash(bytes32,bytes)","name":"setContenthash","description":"Sets the contenthash associated with an ENS node. May only be called by the owner of that node in the ENS registry.","parameterDecorators":[{"name":"node","description":"The node to update.","recommendedTypes":[]},{"name":"hash","description":"The contenthash to set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setDNSRecords(bytes32,bytes)","name":"setDNSRecords","description":"Set one or more DNS records. Records are supplied in wire-format. Records with the same node/name/resource must be supplied one after the other to ensure the data is updated correctly. For example, if the data was supplied: a.example.com IN A 1.2.3.4 a.example.com IN A 5.6.7.8 www.example.com IN CNAME a.example.com. then this would store the two A records for a.example.com correctly as a single RRSET, however if the data was supplied: a.example.com IN A 1.2.3.4 www.example.com IN CNAME a.example.com. a.example.com IN A 5.6.7.8 then this would store the first A record, the CNAME, then the second A record which would overwrite the first.","parameterDecorators":[{"name":"node","description":"the namehash of the node for which to set the records.","recommendedTypes":[]},{"name":"data","description":"the DNS wire format records to set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setInterface(bytes32,bytes4,address)","name":"setInterface","description":"Sets an interface associated with a name. Setting the address to 0 restores the default behaviour of querying the contract at `addr()` for interface support.","parameterDecorators":[{"name":"node","description":"The node to update.","recommendedTypes":[]},{"name":"interfaceID","description":"The EIP 165 interface ID.","recommendedTypes":[]},{"name":"implementer","description":"The address of a contract that implements this interface for this node.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setName(bytes32,string)","name":"setName","description":"Sets the name associated with an ENS node, for reverse records. May only be called by the owner of that node in the ENS registry.","parameterDecorators":[{"name":"node","description":"The node to update.","recommendedTypes":[]},{"name":"name","description":"The name to set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPubkey(bytes32,bytes32,bytes32)","name":"setPubkey","description":"Sets the SECP256k1 public key associated with an ENS node.","parameterDecorators":[{"name":"node","description":"The ENS node to query.","recommendedTypes":[]},{"name":"x","description":"the X coordinate of the curve point for the public key.","recommendedTypes":[]},{"name":"y","description":"the Y coordinate of the curve point for the public key.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setText(bytes32,string,string)","name":"setText","description":"Sets the text data associated with an ENS node and key. May only be called by the owner of that node in the ENS registry.","parameterDecorators":[{"name":"node","description":"The node to update.","recommendedTypes":[]},{"name":"key","description":"The key to set.","recommendedTypes":[]},{"name":"value","description":"The text data value to set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setZonehash(bytes32,bytes)","name":"setZonehash","description":"setZonehash sets the hash for the zone. May only be called by the owner of that node in the ENS registry.","parameterDecorators":[{"name":"node","description":"The node to update.","recommendedTypes":[]},{"name":"hash","description":"The zonehash to set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"","parameterDecorators":[{"name":"interfaceID","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"text(bytes32,string)","name":"text","description":"Returns the text data associated with an ENS node and key.","parameterDecorators":[{"name":"node","description":"The ENS node to query.","recommendedTypes":[]},{"name":"key","description":"The text data key to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"zonehash(bytes32)","name":"zonehash","description":"zonehash obtains the hash for the zone.","parameterDecorators":[{"name":"node","description":"The ENS node to query.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true}]}