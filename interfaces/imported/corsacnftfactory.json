{
  "schema": "../schema.json",
  "tags": [
    "nft"
  ],
  "name": "CorsacNFTFactory",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AcceptOffer(address,uint256,tuple)",
      "name": "AcceptOffer",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "winner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "saleId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ti",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AuctionResult(address,uint256,uint256,uint256,tuple)",
      "name": "AuctionResult",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "winner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "totalPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "serviceFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "saleId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "saleInfo",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Buy(address,uint256,tuple)",
      "name": "Buy",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "saleId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "saleInfo",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CollectionAdded(uint8,address)",
      "name": "CollectionAdded",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "collectionType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "CreatedCorsacERC1155(address,address)",
      "name": "CreatedCorsacERC1155",
      "description": "event when a new ERC1155 contract is created. Do not remove this event even if it is not used. Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "factory",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newContract",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "CreatedCorsacERC721(address,address)",
      "name": "CreatedCorsacERC721",
      "description": "event when a new ERC721 contract is created. Do not remove this event even if it is not used. Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "factory",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newContract",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ListedOnSale(uint256,tuple)",
      "name": "ListedOnSale",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "saleId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "saleInfo",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MakeOffer(address,uint256,tuple)",
      "name": "MakeOffer",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "saleId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ti",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewCollectionCreated(uint8,address)",
      "name": "NewCollectionCreated",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "collectionType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PaymentTokenSet(uint256,address)",
      "name": "PaymentTokenSet",
      "description": "event when a new payment token set. Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PlaceBid(address,uint256,uint256,tuple)",
      "name": "PlaceBid",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "bidPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "saleId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "saleInfo",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RemoveFromSale(uint256,tuple)",
      "name": "RemoveFromSale",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "saleId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "saleInfo",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetCreatorForFactory(address,bool)",
      "name": "SetCreatorForFactory",
      "description": "event that marks the creator has been permitted by an owner(admin). Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "set",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetDefaultFeeRatio(address,uint256)",
      "name": "SetDefaultFeeRatio",
      "description": "event when an owner sets default fee ratio. Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newFeeRatio",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetDefaultRoyaltyRatio(address,uint256)",
      "name": "SetDefaultRoyaltyRatio",
      "description": "event when an owner sets default royalty ratio. Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newRoyaltyRatio",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Trade(uint256,tuple,uint256,uint256,address,address,uint256,uint256,address,uint256)",
      "name": "Trade",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "saleId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sale",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "paySeller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "winner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "royalty",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "devAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "devFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferNFTs(address,address,address,uint256[],uint256[])",
      "name": "TransferNFTs",
      "description": "event when NFT are transferred. Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "collection",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ids",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amounts",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdateDeployers(address,address)",
      "name": "UpdateDeployers",
      "description": "event when deployers are updated. Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "singleCollectionDeployer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "multipleCollectionDeployer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DELAY_PERIOD()",
      "name": "DELAY_PERIOD",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "acceptOffer(uint256)",
      "name": "acceptOffer",
      "description": "this function puts an end to offer sale.",
      "parameterDecorators": [
        {
          "name": "saleId",
          "description": "- index of the sale of offer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addCollection(address)",
      "name": "addCollection",
      "description": "this function adds a collection of ERC721, ERC1155 to the factory.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "- address of NFT collection contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buy(uint256)",
      "name": "buy",
      "description": "this function lets a buyer buy NFTs on sale.",
      "parameterDecorators": [
        {
          "name": "saleId",
          "description": "- index of the sale.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createNewCollection(uint8,string,string,string)",
      "name": "createNewCollection",
      "description": "this function creates a new collection of ERC721, ERC1155 to the factory.",
      "parameterDecorators": [
        {
          "name": "collectionType",
          "description": "- ERC721 = 0, ERC1155 = 1.",
          "recommendedTypes": []
        },
        {
          "name": "_name",
          "description": "- collection name.",
          "recommendedTypes": []
        },
        {
          "name": "_symbol",
          "description": "- collection symbol.",
          "recommendedTypes": []
        },
        {
          "name": "_uri",
          "description": "- base uri of NFT token metadata.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createSale(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      "name": "createSale",
      "description": "this function sets default royalty ratio.",
      "parameterDecorators": [
        {
          "name": "sc",
          "description": "- address of NFT collection contract.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "- token index in 'sc'.",
          "recommendedTypes": []
        },
        {
          "name": "payment",
          "description": "- payment method for buyer/bidder/offerer/auctioner, 0: BNB, 1: BUSD, 2: Corsac, ...",
          "recommendedTypes": []
        },
        {
          "name": "copy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "method",
          "description": "- method of sale, 0: fixed price, 1: timed auction, 2: offer.",
          "recommendedTypes": []
        },
        {
          "name": "duration",
          "description": "- duration of sale in seconds.",
          "recommendedTypes": []
        },
        {
          "name": "basePrice",
          "description": "- price in 'payment' coin.",
          "recommendedTypes": []
        },
        {
          "name": "feeRatio",
          "description": "- fee ratio (1/10000) for transaction.",
          "recommendedTypes": []
        },
        {
          "name": "royaltyRatio",
          "description": "- royalty ratio (1/10000) for transaction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "defaultFeeRatio()",
      "name": "defaultFeeRatio",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "defaultRoyaltyRatio()",
      "name": "defaultRoyaltyRatio",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "devAddress()",
      "name": "devAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "endPendingCreator(address)",
      "name": "endPendingCreator",
      "description": "end the process of adding a creator to be enabled/disabled.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "finalizeAuction(uint256)",
      "name": "finalizeAuction",
      "description": "this function puts an end to timed-auction sale.",
      "parameterDecorators": [
        {
          "name": "saleId",
          "description": "- index of the sale of timed-auction.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getCollection(uint256)",
      "name": "getCollection",
      "description": "this function returns collection by index.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "- index of collection.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCollections()",
      "name": "getCollections",
      "description": "this function retrieves array of all collections registered to the factory.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPaymentToken()",
      "name": "getPaymentToken",
      "description": "This function gets token addresses for payment.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRecentCollection()",
      "name": "getRecentCollection",
      "description": "this function returns last collection.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSaleInfo(uint256,uint256)",
      "name": "getSaleInfo",
      "description": "this function returns all items on sale.",
      "parameterDecorators": [
        {
          "name": "startIdx",
          "description": "- starting index in all items on sale.",
          "recommendedTypes": []
        },
        {
          "name": "count",
          "description": "- count to be retrieved, the returned array will be less items than count because some items are invalid.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "saleId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "creator",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "seller",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "sc",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "tokenId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "copy",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "payment",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "basePrice",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "method",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "startTime",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "endTime",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "feeRatio",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "royaltyRatio",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenId(address)",
      "name": "getTokenId",
      "description": "this function returns token ID from collection.",
      "parameterDecorators": [
        {
          "name": "collectionAddr",
          "description": "- collection address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "makeOffer(address,uint256,address,uint256,uint256,uint256,uint256)",
      "name": "makeOffer",
      "description": "this function sets default royalty ratio.",
      "parameterDecorators": [
        {
          "name": "sc",
          "description": "- address of NFT collection contract.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "- token index in 'sc'.",
          "recommendedTypes": []
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "copy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "payment",
          "description": "- payment method for buyer/bidder/offerer/auctioner, 0: BNB, 1: BUSD, 2: Corsac, ...",
          "recommendedTypes": []
        },
        {
          "name": "unitPrice",
          "description": "- price in 'payment' coin.",
          "recommendedTypes": []
        },
        {
          "name": "duration",
          "description": "- duration of sale in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "mintTo(address,address,string)",
      "name": "mintTo",
      "description": "this function creates/mints new NFT.",
      "parameterDecorators": [
        {
          "name": "collectionAddr",
          "description": "- collection.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "- to account.",
          "recommendedTypes": []
        },
        {
          "name": "uri",
          "description": "- uri for NFT.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "placeBid(uint256,uint256)",
      "name": "placeBid",
      "description": "this function places an bid from a user.",
      "parameterDecorators": [
        {
          "name": "saleId",
          "description": "- index of the sale.",
          "recommendedTypes": []
        },
        {
          "name": "price",
          "description": "- index of the sale.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeSale(uint256)",
      "name": "removeSale",
      "description": "this function removes an existing sale.",
      "parameterDecorators": [
        {
          "name": "saleId",
          "description": "- index of the sale.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "saleCount()",
      "name": "saleCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setDefaultFeeRatio(uint256)",
      "name": "setDefaultFeeRatio",
      "description": "this function sets default fee ratio.",
      "parameterDecorators": [
        {
          "name": "newFeeRatio",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDefaultRoyaltyRatio(uint256)",
      "name": "setDefaultRoyaltyRatio",
      "description": "this function sets default royalty ratio.",
      "parameterDecorators": [
        {
          "name": "newRoyaltyRatio",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDevAddr(address)",
      "name": "setDevAddr",
      "description": "set developer address.",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPaymentToken(uint256,address)",
      "name": "setPaymentToken",
      "description": "This function modifies or adds a new payment token.",
      "parameterDecorators": [
        {
          "name": "tId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAddr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startPendingCreator(address,bool)",
      "name": "startPendingCreator",
      "description": "start the process of adding a creator to be enabled/disabled.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "set",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateDeployers(address,address)",
      "name": "updateDeployers",
      "description": "this function updates the deployers for ERC721, ERC1155.",
      "parameterDecorators": [
        {
          "name": "singleCollectionDeployer",
          "description": "- deployer for ERC721.",
          "recommendedTypes": []
        },
        {
          "name": "multipleCollectionDeployer",
          "description": "- deployer for ERC1155.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}