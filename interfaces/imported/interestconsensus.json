{
  "schema": "../schema.json",
  "tags": [
    "lending"
  ],
  "name": "InterestConsensus",
  "description": "This contract processes the node responses to get consensus in the lender interest.",
  "eventDecorators": [
    {
      "signature": "InterestAccepted(address,uint256,uint256,uint256)",
      "name": "InterestAccepted",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "lender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "requestNonce",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "interest",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "InterestSubmitted(address,address,uint256,uint256,uint256)",
      "name": "InterestSubmitted",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "signer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "requestNonce",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "interest",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SignerAdded(address)",
      "name": "SignerAdded",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SignerRemoved(address)",
      "name": "SignerRemoved",
      "description": "Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addSigner(address)",
      "name": "addSigner",
      "description": "It adds a new account as a signer. The sender must be the owner.It throws a require error if the sender is not the owner.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "address to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addSigners(address[])",
      "name": "addSigners",
      "description": "It adds a list of account as signers. The sender must be the owner.It throws a require error if the sender is not the owner.",
      "parameterDecorators": [
        {
          "name": "accounts",
          "description": "addresses to add.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "callerAddress()",
      "name": "callerAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasSubmitted(address,address,uint256)",
      "name": "hasSubmitted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize()",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address,address,address)",
      "name": "initialize",
      "description": "It initializes this consensus contract. The caller address must be the loans contract for LoanTermsConsensus, and the lenders contract for InterestConsensus.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "the owner address.",
          "recommendedTypes": []
        },
        {
          "name": "aCallerAddress",
          "description": "the contract that will call it.",
          "recommendedTypes": []
        },
        {
          "name": "aSettingAddress",
          "description": "the settings contract address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "Initializes the contract setting the deployer as the initial owner.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialized()",
      "name": "initialized",
      "description": "Gets if the contract is initialized.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "interestSubmissions(address,uint256)",
      "name": "interestSubmissions",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "count",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "max",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "min",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "sum",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSigner(address)",
      "name": "isSigner",
      "description": "Gets whether an account address is a signer or not.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "address to test.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "processRequest(tuple(address,address,uint256,uint256,uint256,uint256),tuple(address,address,uint256,uint256,tuple)[])",
      "name": "processRequest",
      "description": "",
      "parameterDecorators": [
        {
          "name": "request",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "lender",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "consensusAddress",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "requestNonce",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "startTime",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "endTime",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "requestTime",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "responses",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "signer",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "consensusAddress",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "responseTime",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "interest",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "signature",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeSigner(address)",
      "name": "removeSigner",
      "description": "It removes an account as signer. The sender must be the owner.It throws a require error if the sender is not the owner.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "address to remove.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "requestNonceTaken(address,uint256)",
      "name": "requestNonceTaken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "settings()",
      "name": "settings",
      "description": "The gets the settings contract address from the SETTINGS_SLOT. This address should NOT change over the time. See details in the _setSettings(...) function.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "signerNonceTaken(address,uint256)",
      "name": "signerNonceTaken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}