{
  "schema": "../schema.json",
  "tags": [],
  "name": "SuperfluidGovernanceII",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CFAv1LiquidationPeriodChanged(address,address,bool,uint256)",
      "name": "CFAv1LiquidationPeriodChanged",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "isKeySet",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "liquidationPeriod",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CodeUpdated(bytes32,address)",
      "name": "CodeUpdated",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "uuid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "codeAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ConfigChanged(address,address,bytes32,bool,uint256)",
      "name": "ConfigChanged",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "key",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isKeySet",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PPPConfigurationChanged(address,address,bool,uint256,uint256)",
      "name": "PPPConfigurationChanged",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "isKeySet",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "liquidationPeriod",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "patricianPeriod",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardAddressChanged(address,address,bool,address)",
      "name": "RewardAddressChanged",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "isKeySet",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "rewardAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SuperTokenMinimumDepositChanged(address,address,bool,uint256)",
      "name": "SuperTokenMinimumDepositChanged",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "isKeySet",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "minimumDeposit",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TrustedForwarderChanged(address,address,bool,address,bool)",
      "name": "TrustedForwarderChanged",
      "description": "Emitted when an account withdraws funds from RelayHub.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "isKeySet",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "forwarder",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "enabled",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "authorizeAppFactory(address,address)",
      "name": "authorizeAppFactory",
      "description": "allows the given factory to register new apps without requiring onetime keys.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "factory",
          "description": "must be an initialized contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "batchUpdateSuperTokenLogic(address,address[])",
      "name": "batchUpdateSuperTokenLogic",
      "description": "Update supertoken logic contract to the latest that is managed by the super token factory.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "batchUpdateSuperTokenMinimumDeposit(address,address[],uint256[])",
      "name": "batchUpdateSuperTokenMinimumDeposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "minimumDeposits",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "clearConfig(address,address,bytes32)",
      "name": "clearConfig",
      "description": "Clear configuration.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "clearPPPConfig(address,address)",
      "name": "clearPPPConfig",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "clearRewardAddress(address,address)",
      "name": "clearRewardAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "clearSuperTokenMinimumDeposit(address,address)",
      "name": "clearSuperTokenMinimumDeposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "clearTrustedForwarder(address,address,address)",
      "name": "clearTrustedForwarder",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "forwarder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "disableTrustedForwarder(address,address,address)",
      "name": "disableTrustedForwarder",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "forwarder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enableTrustedForwarder(address,address,address)",
      "name": "enableTrustedForwarder",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "forwarder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getCodeAddress()",
      "name": "getCodeAddress",
      "description": "Get current implementation code address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "codeAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getConfigAsAddress(address,address,bytes32)",
      "name": "getConfigAsAddress",
      "description": "Get configuration as address value.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getConfigAsUint256(address,address,bytes32)",
      "name": "getConfigAsUint256",
      "description": "Get configuration as uint256 value.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "period",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPPPConfig(address,address)",
      "name": "getPPPConfig",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "liquidationPeriod",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "patricianPeriod",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRewardAddress(address,address)",
      "name": "getRewardAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSuperTokenMinimumDeposit(address,address)",
      "name": "getSuperTokenMinimumDeposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAuthorizedAppFactory(address,address)",
      "name": "isAuthorizedAppFactory",
      "description": "tells if the given factory is authorized to register apps.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "factory",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isTrustedForwarder(address,address,address)",
      "name": "isTrustedForwarder",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "forwarder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proxiableUUID()",
      "name": "proxiableUUID",
      "description": "Proxiable UUID marker function, this would help to avoid wrong logic contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard, where it is equivalent of _IMPLEMENTATION_SLOT.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registerAgreementClass(address,address)",
      "name": "registerAgreementClass",
      "description": "Register a new agreement class.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "agreementClass",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "replaceGovernance(address,address)",
      "name": "replaceGovernance",
      "description": "Replace the current governance with a new governance.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newGov",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setConfig(address,address,bytes32,address)",
      "name": "setConfig",
      "description": "Set configuration as address value.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setConfig(address,address,bytes32,uint256)",
      "name": "setConfig",
      "description": "Set configuration as uint256 value.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPPPConfig(address,address,uint256,uint256)",
      "name": "setPPPConfig",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "liquidationPeriod",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "patricianPeriod",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardAddress(address,address,address)",
      "name": "setRewardAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "rewardAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSuperTokenMinimumDeposit(address,address,uint256)",
      "name": "setSuperTokenMinimumDeposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unauthorizeAppFactory(address,address)",
      "name": "unauthorizeAppFactory",
      "description": "withdraws authorization from a factory to register new apps. Doesn't affect apps previously registered by the factory.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "factory",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateCode(address)",
      "name": "updateCode",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateContracts(address,address,address[],address)",
      "name": "updateContracts",
      "description": "Update logics of the contracts NOTE: - Because they might have inter-dependencies, it is good to have one single function to update them all.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "hostNewLogic",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "agreementClassNewLogics",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "superTokenFactoryNewLogic",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "whiteListNewApp(address,bytes32)",
      "name": "whiteListNewApp",
      "description": "Whitelist a new app using a onetime key.",
      "parameterDecorators": [
        {
          "name": "host",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "key",
          "description": "is a deployer specific hash key which can be used once to register an app NOTE: To generate the key, use the SuperfluidGovernanceConfigs.getAppRegistrationConfigKey offchain.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}