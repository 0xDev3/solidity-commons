{"schema":"../schema.json","tags":["airdrops"],"name":"Airdrop","description":"Contract for administering the Airdrop of xPNG to PNG holders. Arbitrary amount PNG will be made available in the airdrop. After the Airdrop period is over, all unclaimed PNG will be transferred to the community treasury.","eventDecorators":[{"signature":"ClaimingAllowed()","name":"ClaimingAllowed","description":"An event emitted when dVIX is burned and removed of stake.","parameterDecorators":[]},{"signature":"ClaimingOver()","name":"ClaimingOver","description":"An event emitted when dVIX is burned and removed of stake.","parameterDecorators":[]},{"signature":"PngClaimed(address,uint256)","name":"PngClaimed","description":"An event emitted when dVIX is burned and removed of stake.","parameterDecorators":[{"name":"claimer","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"airdropSupply()","name":"airdropSupply","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"allowClaiming()","name":"allowClaiming","description":"Enable the claiming period and allow user to claim PNG. Before activation, this contract must have a PNG balance equal to airdropSupply All claimable PNG tokens must be whitelisted before claiming is enabled. Only callable by the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claim()","name":"claim","description":"Withdraw your PNG. In order to qualify for a withdrawal, the caller's address must be whitelisted. All PNG must be claimed at once. Only the full amount can be claimed and only one claim is allowed per user.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimingAllowed()","name":"claimingAllowed","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"endClaiming()","name":"endClaiming","description":"End the claiming period. All unclaimed PNG will be transferred to the address specified by remainderDestination. Can only be called by the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"png()","name":"png","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"remainderDestination()","name":"remainderDestination","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setAirdropSupply(uint256)","name":"setAirdropSupply","description":"","parameterDecorators":[{"name":"supply","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setOwner(address)","name":"setOwner","description":"Changes the contract owner. Can only be set by the contract owner.","parameterDecorators":[{"name":"owner_","description":"new contract owner address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRemainderDestination(address)","name":"setRemainderDestination","description":"Changes the address that receives the remaining PNG at the end of the claiming period. Can only be set by the contract owner.","parameterDecorators":[{"name":"remainderDestination_","description":"address to transfer remaining PNG to when claiming ends.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setWhitelister(address)","name":"setWhitelister","description":"Optionally set a secondary address to manage whitelisting (e.g. a bot).","parameterDecorators":[{"name":"addr","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalAllocated()","name":"totalAllocated","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"whitelistAddresses(address[],uint256[])","name":"whitelistAddresses","description":"Whitelist multiple addresses in one call. All parameters are arrays. Each array must be the same length. Each index corresponds to one (address, png) tuple. Callable by the owner or whitelister.","parameterDecorators":[{"name":"addrs","description":"","recommendedTypes":[]},{"name":"pngOuts","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"whitelister()","name":"whitelister","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawAmount(address)","name":"withdrawAmount","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}