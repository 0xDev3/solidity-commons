{"schema":"../schema.json","tags":[],"name":"EthItemFactory","description":"","eventDecorators":[{"signature":"ERC1155WrapperModel(address)","name":"ERC1155WrapperModel","description":"event for token purchase logging.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ERC20WrapperModel(address)","name":"ERC20WrapperModel","description":"event for token purchase logging.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ERC721WrapperModel(address)","name":"ERC721WrapperModel","description":"event for token purchase logging.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"NativeModel(address)","name":"NativeModel","description":"event for token purchase logging.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"NewNativeCreated(uint256,uint256,uint256,address)","name":"NewNativeCreated","description":"event for token purchase logging.","parameterDecorators":[{"name":"standardVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"wrappedItemModelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"modelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenCreated","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewNativeCreated(address,uint256,address,address)","name":"NewNativeCreated","description":"event for token purchase logging.","parameterDecorators":[{"name":"model","description":"","recommendedTypes":[],"indexed":true},{"name":"modelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenCreated","description":"","recommendedTypes":[],"indexed":true},{"name":"creator","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewWrappedERC1155Created(uint256,uint256,uint256,address)","name":"NewWrappedERC1155Created","description":"event for token purchase logging.","parameterDecorators":[{"name":"standardVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"wrappedItemModelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"modelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenCreated","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewWrappedERC1155Created(address,uint256,address,address)","name":"NewWrappedERC1155Created","description":"event for token purchase logging.","parameterDecorators":[{"name":"model","description":"","recommendedTypes":[],"indexed":true},{"name":"modelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenCreated","description":"","recommendedTypes":[],"indexed":true},{"name":"creator","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewWrappedERC20Created(uint256,uint256,uint256,address)","name":"NewWrappedERC20Created","description":"event for token purchase logging.","parameterDecorators":[{"name":"standardVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"wrappedItemModelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"modelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenCreated","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewWrappedERC20Created(address,uint256,address,address)","name":"NewWrappedERC20Created","description":"event for token purchase logging.","parameterDecorators":[{"name":"model","description":"","recommendedTypes":[],"indexed":true},{"name":"modelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenCreated","description":"","recommendedTypes":[],"indexed":true},{"name":"creator","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewWrappedERC721Created(uint256,uint256,uint256,address)","name":"NewWrappedERC721Created","description":"event for token purchase logging.","parameterDecorators":[{"name":"standardVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"wrappedItemModelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"modelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenCreated","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewWrappedERC721Created(address,uint256,address,address)","name":"NewWrappedERC721Created","description":"event for token purchase logging.","parameterDecorators":[{"name":"model","description":"","recommendedTypes":[],"indexed":true},{"name":"modelVersion","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenCreated","description":"","recommendedTypes":[],"indexed":true},{"name":"creator","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addERC1155WrapperModel(address)","name":"addERC1155WrapperModel","description":"","parameterDecorators":[{"name":"erc1155WrapperModelAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addERC20WrapperModel(address)","name":"addERC20WrapperModel","description":"","parameterDecorators":[{"name":"erc20WrapperModelAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addERC721WrapperModel(address)","name":"addERC721WrapperModel","description":"","parameterDecorators":[{"name":"erc721WrapperModelAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addNativeModel(address)","name":"addNativeModel","description":"","parameterDecorators":[{"name":"nativeModelAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"burnFeePercentage()","name":"burnFeePercentage","description":"GET - The elements (numerator and denominator) useful to calculate the percentage fee to be transfered to the DFO for every Burned EthItem.","parameterDecorators":[],"returnDecorators":[{"name":"burnFeePercentageNumerator","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"burnFeePercentageDenominator","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateBurnFee(uint256)","name":"calculateBurnFee","description":"","parameterDecorators":[{"name":"amountInDecimals","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"burnFee","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"dfoWalletAddress","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"calculateMintFee(uint256)","name":"calculateMintFee","description":"","parameterDecorators":[{"name":"amountInDecimals","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"mintFee","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"dfoWalletAddress","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"createNative(address,bytes)","name":"createNative","description":"Business Logic to create a brand-new EthItem. It raises the 'NewNativeCreated' events.","parameterDecorators":[{"name":"modelAddress","description":"","recommendedTypes":[]},{"name":"modelInitCallPayload","description":"The ABI-encoded input parameters to be passed to the model to phisically create the NFT. It changes according to the Model Version.","recommendedTypes":[]}],"returnDecorators":[{"name":"newNativeAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"modelInitCallResponse","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"createWrappedERC1155(address,bytes)","name":"createWrappedERC1155","description":"Business Logic to wrap already existing ERC1155 Tokens to obtain a new NFT-Based EthItem. It raises the 'NewWrappedERC1155Created' events.","parameterDecorators":[{"name":"modelAddress","description":"","recommendedTypes":[]},{"name":"modelInitCallPayload","description":"The ABI-encoded input parameters to be passed to the model to phisically create the NFT. It changes according to the Model Version.","recommendedTypes":[]}],"returnDecorators":[{"name":"newERC1155WrapperAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"modelInitCallResponse","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"createWrappedERC20(bytes)","name":"createWrappedERC20","description":"Business Logic to wrap already existing ERC20 Tokens to obtain a new NFT-Based EthItem. It raises the 'NewWrappedERC20Created' events.","parameterDecorators":[{"name":"modelInitCallPayload","description":"The ABI-encoded input parameters to be passed to the model to phisically create the NFT. It changes according to the Model Version.","recommendedTypes":[]}],"returnDecorators":[{"name":"newERC20Address","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"modelInitCallResponse","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"createWrappedERC721(address,bytes)","name":"createWrappedERC721","description":"Business Logic to wrap already existing ERC721 Tokens to obtain a new NFT-Based EthItem. It raises the 'NewWrappedERC721Created' events.","parameterDecorators":[{"name":"modelAddress","description":"","recommendedTypes":[]},{"name":"modelInitCallPayload","description":"The ABI-encoded input parameters to be passed to the model to phisically create the NFT. It changes according to the Model Version.","recommendedTypes":[]}],"returnDecorators":[{"name":"newERC721Address","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"modelInitCallResponse","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"doubleProxy()","name":"doubleProxy","description":"GET - The DoubleProxy of the DFO linked to this Contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"erc1155WrapperModel()","name":"erc1155WrapperModel","description":"GET - The address of the Smart Contract whose code will serve as a model for all the Wrapped ERC1155 EthItems. Every EthItem will have its own address, but the code will be cloned from this one.","parameterDecorators":[],"returnDecorators":[{"name":"erc1155WrapperModelAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"erc1155WrapperModelVersion","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"erc20WrapperModel()","name":"erc20WrapperModel","description":"GET - The address of the Smart Contract whose code will serve as a model for all the Wrapped ERC20 EthItems.","parameterDecorators":[],"returnDecorators":[{"name":"erc20WrapperModelAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"erc20WrapperModelVersion","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"erc721WrapperModel()","name":"erc721WrapperModel","description":"GET - The address of the Smart Contract whose code will serve as a model for all the Wrapped ERC721 EthItems.","parameterDecorators":[],"returnDecorators":[{"name":"erc721WrapperModelAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"erc721WrapperModelVersion","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"ethItemInteroperableInterfaceModel()","name":"ethItemInteroperableInterfaceModel","description":"GET - The address of the Smart Contract whose code will serve as a model for all the EthItemERC20Wrappers (please see the eth-item-token-standard for further information).","parameterDecorators":[],"returnDecorators":[{"name":"ethItemInteroperableInterfaceModelAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"ethItemInteroperableInterfaceModelVersion","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"isAuthorizedOrchestrator(address)","name":"isAuthorizedOrchestrator","description":"","parameterDecorators":[{"name":"operator","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isModel(address)","name":"isModel","description":"","parameterDecorators":[{"name":"modelAddress","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"mintFeePercentage()","name":"mintFeePercentage","description":"GET - The elements (numerator and denominator) useful to calculate the percentage fee to be transfered to the DFO for every new Minted EthItem.","parameterDecorators":[],"returnDecorators":[{"name":"mintFeePercentageNumerator","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"mintFeePercentageDenominator","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nativeModel()","name":"nativeModel","description":"GET - The address of the Smart Contract whose code will serve as a model for all the Native EthItems. Every EthItem will have its own address, but the code will be cloned from this one.","parameterDecorators":[],"returnDecorators":[{"name":"nativeModelAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"nativeModelVersion","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setBurnFeePercentage(uint256,uint256)","name":"setBurnFeePercentage","description":"SET - The element useful to calculate the Percentage fee It can be done only by the Factory controller.","parameterDecorators":[{"name":"burnFeePercentageNumerator","description":"","recommendedTypes":[]},{"name":"burnFeePercentageDenominator","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setDoubleProxy(address)","name":"setDoubleProxy","description":"SET - The DoubleProxy of the DFO linked to this Contract It can be done only by the Factory controller.","parameterDecorators":[{"name":"newDoubleProxy","description":"the new DoubleProxy address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setERC1155WrapperModel(address)","name":"setERC1155WrapperModel","description":"SET - The address of the ERC1155 NFT-Based EthItem model. It can be done only by the Factory controller.","parameterDecorators":[{"name":"erc1155WrapperModelAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setERC20WrapperModel(address)","name":"setERC20WrapperModel","description":"SET - The address of the Smart Contract whose code will serve as a model for all the Wrapped ERC20 EthItems. It can be done only by the Factory controller.","parameterDecorators":[{"name":"erc20WrapperModelAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setERC721WrapperModel(address)","name":"setERC721WrapperModel","description":"SET - The address of the Smart Contract whose code will serve as a model for all the Wrapped ERC721 EthItems. It can be done only by the Factory controller.","parameterDecorators":[{"name":"erc721WrapperModelAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setEthItemInteroperableInterfaceModel(address)","name":"setEthItemInteroperableInterfaceModel","description":"SET - The address of the Smart Contract whose code will serve as a model for all the EthItemERC20Wrappers (please see the eth-item-token-standard for further information). It can be done only by the Factory controller.","parameterDecorators":[{"name":"ethItemInteroperableInterfaceModelAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMintFeePercentage(uint256,uint256)","name":"setMintFeePercentage","description":"SET - The element useful to calculate the Percentage fee It can be done only by the Factory controller.","parameterDecorators":[{"name":"mintFeePercentageNumerator","description":"","recommendedTypes":[]},{"name":"mintFeePercentageDenominator","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setNativeModel(address)","name":"setNativeModel","description":"SET - The address of the Native EthItem model. It can be done only by the Factory controller.","parameterDecorators":[{"name":"nativeModelAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true}]}