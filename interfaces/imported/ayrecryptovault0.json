{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "AyreCryptoVault0",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Approval(address,address,uint256)",
      "name": "Approval",
      "description": "",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "spender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DelegateChanged(address,address,address)",
      "name": "DelegateChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "delegator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fromDelegate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toDelegate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "DelegateVotesChanged(address,uint256,uint256)",
      "name": "DelegateVotesChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "delegate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousBalance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newBalance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Transfer(address,address,uint256)",
      "name": "Transfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DELEGATION_TYPEHASH()",
      "name": "DELEGATION_TYPEHASH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DOMAIN_TYPEHASH()",
      "name": "DOMAIN_TYPEHASH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PERMIT_TYPEHASH()",
      "name": "PERMIT_TYPEHASH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "allowance(address,address)",
      "name": "allowance",
      "description": "Get the number of tokens `spender` is approved to spend on behalf of `account`.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address of the account holding the funds.",
          "recommendedTypes": []
        },
        {
          "name": "spender",
          "description": "The address of the account spending the funds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approve(address,uint256)",
      "name": "approve",
      "description": "Approve `spender` to transfer up to `amount` from `src`. This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve).",
      "parameterDecorators": [
        {
          "name": "spender",
          "description": "The address of the account which may transfer tokens.",
          "recommendedTypes": []
        },
        {
          "name": "rawAmount",
          "description": "The number of tokens that are approved (2^256-1 means infinite).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "available()",
      "name": "available",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balance()",
      "name": "balance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOf(address)",
      "name": "balanceOf",
      "description": "Get the number of tokens held by the `account`.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address of the account to get the balance of.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkpoints(address,uint32)",
      "name": "checkpoints",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "fromBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "votes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "controller()",
      "name": "controller",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "decimals()",
      "name": "decimals",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "delegate(address)",
      "name": "delegate",
      "description": "Delegate votes from `msg.sender` to `delegatee`.",
      "parameterDecorators": [
        {
          "name": "delegatee",
          "description": "The address to delegate votes to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
      "name": "delegateBySig",
      "description": "Delegates votes from signatory to `delegatee`.",
      "parameterDecorators": [
        {
          "name": "delegatee",
          "description": "The address to delegate votes to.",
          "recommendedTypes": []
        },
        {
          "name": "nonce",
          "description": "The contract state required to match the signature.",
          "recommendedTypes": []
        },
        {
          "name": "expiry",
          "description": "The time at which to expire the signature.",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "The recovery byte of the signature.",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "Half of the ECDSA signature pair.",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "Half of the ECDSA signature pair.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delegates(address)",
      "name": "delegates",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(uint256)",
      "name": "deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositAll()",
      "name": "depositAll",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "earn()",
      "name": "earn",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getCurrentVotes(address)",
      "name": "getCurrentVotes",
      "description": "Gets the current votes balance for `account`.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address to get votes balance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPricePerFullShare()",
      "name": "getPricePerFullShare",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPriorVotes(address,uint256)",
      "name": "getPriorVotes",
      "description": "Determine the prior number of votes for an account as of a block number. Block number must be a finalized block or else this function will revert to prevent misinformation.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address of the account to check.",
          "recommendedTypes": []
        },
        {
          "name": "blockNumber",
          "description": "The block number to get the vote balance at.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governance()",
      "name": "governance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "harvest(address,uint256)",
      "name": "harvest",
      "description": "",
      "parameterDecorators": [
        {
          "name": "reserve",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "max()",
      "name": "max",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "min()",
      "name": "min",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nonces(address)",
      "name": "nonces",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "numCheckpoints(address)",
      "name": "numCheckpoints",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
      "name": "permit",
      "description": "Triggers an approval from owner to spends.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "The address to approve from.",
          "recommendedTypes": []
        },
        {
          "name": "spender",
          "description": "The address to be approved.",
          "recommendedTypes": []
        },
        {
          "name": "rawAmount",
          "description": "The number of tokens that are approved (2^256-1 means infinite).",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "The time at which to expire the signature.",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "The recovery byte of the signature.",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "Half of the ECDSA signature pair.",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "Half of the ECDSA signature pair.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setController(address)",
      "name": "setController",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_controller",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGovernance(address)",
      "name": "setGovernance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_governance",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMin(uint256)",
      "name": "setMin",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_min",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "symbol()",
      "name": "symbol",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSupply()",
      "name": "totalSupply",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_shares",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawAll()",
      "name": "withdrawAll",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}