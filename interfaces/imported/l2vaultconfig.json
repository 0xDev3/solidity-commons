{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "L2VaultConfig",
  "description": "",
  "eventDecorators": [
    {
      "signature": "FeeAddressChanged(address)",
      "name": "FeeAddressChanged",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "feeAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LockupTimeChanged(address,uint256,uint256,string)",
      "name": "LockupTimeChanged",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_oldVal",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newVal",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "valType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MaxFeeChanged(uint256)",
      "name": "MaxFeeChanged",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "newMaxFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MaxLiquidityBlockChanged(uint256)",
      "name": "MaxLiquidityBlockChanged",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "newMaxLimitLiquidityBlocks",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MinFeeChanged(uint256)",
      "name": "MinFeeChanged",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "newMinFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MinLiquidityBlockChanged(uint256)",
      "name": "MinLiquidityBlockChanged",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "newMinLimitLiquidityBlocks",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ThresholdFeeChanged(uint256)",
      "name": "ThresholdFeeChanged",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "newFeeThreshold",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenAdded(address,address,uint256)",
      "name": "TokenAdded",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "erc20",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "remoteTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "remoteNetworkID",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TokenReceiptCreated(address)",
      "name": "TokenReceiptCreated",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "underlyingToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenRemoved(address,address,uint256)",
      "name": "TokenRemoved",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "erc20",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "remoteTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "remoteNetworkID",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addSupportedAMM(uint256,address)",
      "name": "addSupportedAMM",
      "description": "Public function to add address of the AMM used to swap tokens. AMM should be a wrapper created by us over the AMM implementation.",
      "parameterDecorators": [
        {
          "name": "ammID",
          "description": "the integer constant for the AMM.",
          "recommendedTypes": []
        },
        {
          "name": "ammAddress",
          "description": "Address of the AMM.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addWhitelistedToken(address,address,uint256,uint256,uint256)",
      "name": "addWhitelistedToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAddressRemote",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "remoteNetworkID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "minTransferAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "maxTransferAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calculateFeePercentage(address,uint256)",
      "name": "calculateFeePercentage",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "feeAddress()",
      "name": "feeAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "feeThreshold()",
      "name": "feeThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "generateId()",
      "name": "generateId",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getComposableHolding()",
      "name": "getComposableHolding",
      "description": "Get ComposableHolding.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentTokenLiquidity(address)",
      "name": "getCurrentTokenLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSupportedAMM(uint256)",
      "name": "getSupportedAMM",
      "description": "",
      "parameterDecorators": [
        {
          "name": "networkId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenBalance(address)",
      "name": "getTokenBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUnderlyingReceiptAddress(address)",
      "name": "getUnderlyingReceiptAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "inTokenTransferLimits(address,uint256)",
      "name": "inTokenTransferLimits",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lockedTransferFunds(address)",
      "name": "lockedTransferFunds",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxFee()",
      "name": "maxFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxLimitLiquidityBlocks()",
      "name": "maxLimitLiquidityBlocks",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minFee()",
      "name": "minFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minLimitLiquidityBlocks()",
      "name": "minLimitLiquidityBlocks",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "remoteTokenAddress(uint256,address)",
      "name": "remoteTokenAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeSupportedAMM(uint256)",
      "name": "removeSupportedAMM",
      "description": "Public function to remove address of the AMM.",
      "parameterDecorators": [
        {
          "name": "ammID",
          "description": "the integer constant for the AMM.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeWhitelistedToken(address,uint256)",
      "name": "removeWhitelistedToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "remoteNetworkID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFeeAddress(address)",
      "name": "setFeeAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newFeeAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLockedTransferFunds(address,uint256)",
      "name": "setLockedTransferFunds",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaxFee(uint256)",
      "name": "setMaxFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newMaxFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMaxLimitLiquidityBlocks(uint256)",
      "name": "setMaxLimitLiquidityBlocks",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newMaxLimitLiquidityBlocks",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMinFee(uint256)",
      "name": "setMinFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newMinFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMinLimitLiquidityBlocks(uint256)",
      "name": "setMinLimitLiquidityBlocks",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newMinLimitLiquidityBlocks",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setReceiptTokenFactoryAddress(address)",
      "name": "setReceiptTokenFactoryAddress",
      "description": "External function used to set the Receipt Token Factory Address. Address of the factory need to be set after the initialization in order to use the vault.",
      "parameterDecorators": [
        {
          "name": "receiptTokenFactoryAddress",
          "description": "Address of the already deployed Receipt Token Factory.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setThresholdFee(uint256)",
      "name": "setThresholdFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newThresholdFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTransferLockupTime(uint256)",
      "name": "setTransferLockupTime",
      "description": "",
      "parameterDecorators": [
        {
          "name": "lockupTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setVault(address)",
      "name": "setVault",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_vault",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWethAddress(address)",
      "name": "setWethAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_weth",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferLockupTime()",
      "name": "transferLockupTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vault()",
      "name": "vault",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "wethAddress()",
      "name": "wethAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "whitelistedTokens(address)",
      "name": "whitelistedTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "minTransferAllowed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "maxTransferAllowed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "underlyingReceiptAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}