{"schema":"../schema.json","tags":["tokens","swaps","vesting","merkle proofs","dao","uniswap","balancer"],"name":"MerkleDistributor","description":"MerkleDistributor contract. Inspired by: - https://github.com/pie-dao/vested-token-migration-app - https://github.com/Uniswap/merkle-distributor - https://github.com/balancer-labs/erc20-redeemableAllows an owner to distribute any reward ERC20 to claimants according to Merkle roots. The owner can specify multiple Merkle roots distributions with customized reward currencies.","eventDecorators":[{"signature":"Claimed(address,uint256,address,uint256,uint256,address)","name":"Claimed","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"caller","description":"","recommendedTypes":[],"indexed":true},{"name":"windowIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"accountIndex","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false},{"name":"rewardToken","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"CreatedWindow(uint256,uint256,address,address)","name":"CreatedWindow","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":false},{"name":"purchaser","description":"who paid for the tokens.","recommendedTypes":[],"indexed":true},{"name":"value","description":"weis paid for purchase.","recommendedTypes":[],"indexed":false}]},{"signature":"DeleteWindow(uint256,address)","name":"DeleteWindow","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"windowIndex","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"WithdrawRewards(address,uint256)","name":"WithdrawRewards","description":"To call when there is consensus on final result.","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"claim(tuple(uint256,uint256,uint256,address,bytes32[]))","name":"claim","description":"","parameterDecorators":[{"name":"_claim","description":"","recommendedTypes":[],"parameters":[{"name":"windowIndex","description":"","type":"uint256"},{"name":"amount","description":"","type":"uint256"},{"name":"accountIndex","description":"","type":"uint256"},{"name":"account","description":"","type":"address"},{"name":"merkleProof","description":"","type":"bytes32[]"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimMulti(tuple(uint256,uint256,uint256,address,bytes32[])[])","name":"claimMulti","description":"","parameterDecorators":[{"name":"claims","description":"","recommendedTypes":[],"parameters":[{"name":"windowIndex","description":"","type":"uint256"},{"name":"amount","description":"","type":"uint256"},{"name":"accountIndex","description":"","type":"uint256"},{"name":"account","description":"","type":"address"},{"name":"merkleProof","description":"","type":"bytes32[]"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deleteWindow(uint256)","name":"deleteWindow","description":"","parameterDecorators":[{"name":"windowIndex","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isClaimed(uint256,uint256)","name":"isClaimed","description":"","parameterDecorators":[{"name":"windowIndex","description":"","recommendedTypes":[]},{"name":"accountIndex","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"lastCreatedIndex()","name":"lastCreatedIndex","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"merkleWindows(uint256)","name":"merkleWindows","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"merkleRoot","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"rewardToken","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"ipfsHash","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setWindow(uint256,address,bytes32,string)","name":"setWindow","description":"","parameterDecorators":[{"name":"rewardsToDeposit","description":"","recommendedTypes":[]},{"name":"rewardToken","description":"","recommendedTypes":[]},{"name":"merkleRoot","description":"","recommendedTypes":[]},{"name":"ipfsHash","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"verifyClaim(tuple(uint256,uint256,uint256,address,bytes32[]))","name":"verifyClaim","description":"","parameterDecorators":[{"name":"_claim","description":"","recommendedTypes":[],"parameters":[{"name":"windowIndex","description":"","type":"uint256"},{"name":"amount","description":"","type":"uint256"},{"name":"accountIndex","description":"","type":"uint256"},{"name":"account","description":"","type":"address"},{"name":"merkleProof","description":"","type":"bytes32[]"}]}],"returnDecorators":[{"name":"valid","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawRewards(address,uint256)","name":"withdrawRewards","description":"","parameterDecorators":[{"name":"rewardCurrency","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}