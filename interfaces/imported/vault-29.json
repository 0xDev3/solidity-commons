{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "swaps",
    "locking",
    "liquidity",
    "vaults",
    "uniswap"
  ],
  "name": "Vault",
  "description": "Clash Token's Liquidity Vault Simple smart contract to decentralize the uniswap liquidity, providing proof of liquidity indefinitely. Timelock for team tokens. Original smart contract: MrBlobby (UniPower), modified by George. https://www.spiritclash.com/.",
  "eventDecorators": [
    {
      "signature": "liquidityMigrationStarted(address,uint256)",
      "name": "liquidityMigrationStarted",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "unlockTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "VaultCreation()",
      "name": "VaultCreation",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastWithdrawal()",
      "name": "lastWithdrawal",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "migrationLock()",
      "name": "migrationLock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "migrationRecipient()",
      "name": "migrationRecipient",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "processMigration()",
      "name": "processMigration",
      "description": "Moves liquidity to new location, assuming the 14 days lockup has passed -preventing abuse.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startLiquidityMigration(address)",
      "name": "startLiquidityMigration",
      "description": "This function allows liquidity to be moved, after a 14 days lockup -preventing abuse.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawClashToken(address,uint256)",
      "name": "withdrawClashToken",
      "description": "ClashToken tokens locked in this Vault can be withdrawn 3 months after its creation.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawLiquidity(address,uint256)",
      "name": "withdrawLiquidity",
      "description": "Withdraw liquidity Has a hardcap of 1% per 48 hours.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}