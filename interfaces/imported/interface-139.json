{
  "schema": "../schema.json",
  "tags": [],
  "name": "VersionControlLogicV1",
  "description": "Logic code smart contract for proper versioning of proxies. Logic code, to be casted on the proxy.",
  "eventDecorators": [
    {
      "signature": "VCCAddedVersion(uint256,address)",
      "name": "VCCAddedVersion",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newCode",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VCChangedVersion(uint256,address,address)",
      "name": "VCChangedVersion",
      "description": "Validator's status changed. Event emitted for each executed trade.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "oldCode",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newCode",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "code(uint256)",
      "name": "code",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "codeLength()",
      "name": "codeLength",
      "description": "Expose the length of the code array. Useful to know the index of the last inserted code element.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The lenght of the code array.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "controller()",
      "name": "controller",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pushVersion(address)",
      "name": "pushVersion",
      "description": "Push a new address in the versioning Ledger. Must be approved by the senate.",
      "parameterDecorators": [
        {
          "name": "_code",
          "description": "The new code address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The number of Cryptographs owned by `_owner`, possibly zero.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "senate()",
      "name": "senate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setSenate(address)",
      "name": "setSenate",
      "description": "Push a new address in the versioning Ledger. Can be set up once only.",
      "parameterDecorators": [
        {
          "name": "_senate",
          "description": "The new code address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setVersion(uint256,address)",
      "name": "setVersion",
      "description": "Set the code address of a specific version to the new specified code address. To be overhauled with voting in the future.",
      "parameterDecorators": [
        {
          "name": "_version",
          "description": "The version that is stored by the smart contract you want to change the logic code of.",
          "recommendedTypes": []
        },
        {
          "name": "_code",
          "description": "The new code address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}