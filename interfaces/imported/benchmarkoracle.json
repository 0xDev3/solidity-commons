{"schema":"../schema.json","tags":["oracles"],"name":"BenchmarkOracle","description":"","eventDecorators":[],"functionDecorators":[{"signature":"bm()","name":"bm","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"confirmRebasement(bool,int256)","name":"confirmRebasement","description":"Confirms and executes a pending rebasement proposal. Prohibits further proposals for 15 hours. Distribute Standard rewards and sync liquidity pools.","parameterDecorators":[{"name":"_overrule","description":"True if Chainlink Oracle should be ignored.","recommendedTypes":[]},{"name":"_currentVxx","description":"Manually provide current VXX value if Chainlink Oracle is ignored.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"denyRebasement()","name":"denyRebasement","description":"Denies a pending rebasement proposal and allows the creation of a new proposal.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getOracleVxx()","name":"getOracleVxx","description":"Returns the latest price.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"initiateRebasement(int256,int256)","name":"initiateRebasement","description":"Initiates a rebasement proposal that has to be confirmed by another owner of the contract to be executed. Can't be called while another proposal is pending.","parameterDecorators":[{"name":"_rebaseOne","description":"Divergence from the target price.","recommendedTypes":[]},{"name":"_rebaseTwo","description":"VXX difference.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lastOracleVxx()","name":"lastOracleVxx","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"int256"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingRebasement()","name":"pendingRebasement","description":"","parameterDecorators":[],"returnDecorators":[{"name":"initiator","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"rebaseOne","description":"","recommendedTypes":[],"solidityType":"int256"},{"name":"rebaseTwo","description":"","recommendedTypes":[],"solidityType":"int256"},{"name":"executed","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"setStandardRewards(uint256)","name":"setStandardRewards","description":"Change Standard staking rewards.","parameterDecorators":[{"name":"_standardRewards","description":"New amount.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setSyncContract(address)","name":"setSyncContract","description":"Change the contract for pool synchronization.","parameterDecorators":[{"name":"_sync","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"standard()","name":"standard","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"standardRewards()","name":"standardRewards","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"sync()","name":"sync","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"verifyRebasement(bool)","name":"verifyRebasement","description":"View Supply delta and sign for rebasement verification.","parameterDecorators":[{"name":"_overrule","description":"True if Chainlink Oracle should be ignored.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawMark()","name":"withdrawMark","description":"Remove all MARK deposited on this contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}