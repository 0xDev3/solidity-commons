{
  "schema": "../schema.json",
  "tags": [
    "liquidity"
  ],
  "name": "LiquidityPoolManager",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdminFeeChanged(uint256)",
      "name": "AdminFeeChanged",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "newAdminFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AdminFeeWithdraw(address,address,uint256)",
      "name": "AdminFeeWithdraw",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AssetSent(address,uint256,uint256,address,bytes)",
      "name": "AssetSent",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "transferredAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "depositHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposit(address,address,address,uint256,uint256)",
      "name": "Deposit",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toChainId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EthReceived(address,uint256)",
      "name": "EthReceived",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "GasFeeWithdraw(address,address,uint256)",
      "name": "GasFeeWithdraw",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "LiquidityAdded(address,address,address,uint256)",
      "name": "LiquidityAdded",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityRemoved(address,uint256,address)",
      "name": "LiquidityRemoved",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PauserChanged(address,address)",
      "name": "PauserChanged",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "previousPauser",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newPauser",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Received(address,uint256)",
      "name": "Received",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TrustedForwarderChanged(address)",
      "name": "TrustedForwarderChanged",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "forwarderAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "fundsWithdraw(address,address,uint256)",
      "name": "fundsWithdraw",
      "description": "Event emitted when a Uniswap V3 LP token has been unstaked.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addNativeLiquidity()",
      "name": "addNativeLiquidity",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addSupportedToken(address,uint256,uint256)",
      "name": "addSupportedToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "minCapLimit",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "maxCapLimit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addTokenLiquidity(address,uint256)",
      "name": "addTokenLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "adminFee()",
      "name": "adminFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "adminFeeAccumulatedByToken(address)",
      "name": "adminFeeAccumulatedByToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "baseGas()",
      "name": "baseGas",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeAdminFee(uint256)",
      "name": "changeAdminFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newAdminFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changePauser(address)",
      "name": "changePauser",
      "description": "Allows the current pauser to transfer control of the contract to a newPauser.",
      "parameterDecorators": [
        {
          "name": "newPauser",
          "description": "The address to transfer pauserShip to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "checkHashStatus(address,uint256,address,bytes)",
      "name": "checkHashStatus",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "depositHash",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "hashSendTransaction",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "depositErc20(address,address,uint256,uint256)",
      "name": "depositErc20",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toChainId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositNative(address,uint256)",
      "name": "depositNative",
      "description": "",
      "parameterDecorators": [
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toChainId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "gasFeeAccumulatedByToken(address)",
      "name": "gasFeeAccumulatedByToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAdminFee()",
      "name": "getAdminFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getExecutorManager()",
      "name": "getExecutorManager",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLiquidity(address,address)",
      "name": "getLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "liquidityProviderAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOwner()",
      "name": "getOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the address of the owner.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPauser()",
      "name": "getPauser",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the address of the owner.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if `msg.sender` is the owner of the contract.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPaused()",
      "name": "isPaused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPauser()",
      "name": "isPauser",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if `msg.sender` is the owner of the contract.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isTrustedForwarder(address)",
      "name": "isTrustedForwarder",
      "description": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.",
      "parameterDecorators": [
        {
          "name": "forwarder",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "Triggers stopped state. Requirements: - The contract must not be paused.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "permitAndDepositErc20(address,address,uint256,uint256,tuple(uint256,uint256,bool,uint8,bytes32,bytes32))",
      "name": "permitAndDepositErc20",
      "description": "DAI permit and Deposit.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toChainId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "permitOptions",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "nonce",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "expiry",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "allowed",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "v",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "r",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "s",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "permitEIP2612AndDepositErc20(address,address,uint256,uint256,tuple(uint256,uint256,bool,uint8,bytes32,bytes32))",
      "name": "permitEIP2612AndDepositErc20",
      "description": "EIP2612 and Deposit.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toChainId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "permitOptions",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "nonce",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "expiry",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "allowed",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "v",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "r",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "s",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "processedHash(bytes32)",
      "name": "processedHash",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeNativeLiquidity(uint256)",
      "name": "removeNativeLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeSupportedToken(address)",
      "name": "removeSupportedToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeTokenLiquidity(address,uint256)",
      "name": "removeTokenLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore. Allows the current owner to relinquish control of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renouncePauser()",
      "name": "renouncePauser",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sendFundsToUser(address,uint256,address,bytes,uint256)",
      "name": "sendFundsToUser",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "depositHash",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenGasPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBaseGas(uint128)",
      "name": "setBaseGas",
      "description": "",
      "parameterDecorators": [
        {
          "name": "gas",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setExecutorManager(address)",
      "name": "setExecutorManager",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_executorManagerAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTokenTransferOverhead(address,uint256)",
      "name": "setTokenTransferOverhead",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "gasOverhead",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTrustedForwarder(address)",
      "name": "setTrustedForwarder",
      "description": "",
      "parameterDecorators": [
        {
          "name": "forwarderAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokensInfo(address)",
      "name": "tokensInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "transferOverhead",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "supportedToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "minCap",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "maxCap",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidity",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "trustedForwarder()",
      "name": "trustedForwarder",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "Returns to normal state. Requirements: - The contract must be paused.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateTokenCap(address,uint256,uint256)",
      "name": "updateTokenCap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "minCapLimit",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "maxCapLimit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "versionRecipient()",
      "name": "versionRecipient",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawErc20(address)",
      "name": "withdrawErc20",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawErc20AdminFee(address,address)",
      "name": "withdrawErc20AdminFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawErc20GasFee(address,address)",
      "name": "withdrawErc20GasFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawNative()",
      "name": "withdrawNative",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawNativeAdminFee(address)",
      "name": "withdrawNativeAdminFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawNativeGasFee(address)",
      "name": "withdrawNativeGasFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}