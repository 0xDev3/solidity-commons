{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "QiTokenSaleDistributor",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Claim(address,uint256)",
      "name": "Claim",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "admin()",
      "name": "admin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "becomeImplementation(address)",
      "name": "becomeImplementation",
      "description": "Accept this contract as the implementation for a proxy.",
      "parameterDecorators": [
        {
          "name": "proxy",
          "description": "QiTokenSaleDistributorProxy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claim()",
      "name": "claim",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimedTokens(address,uint256)",
      "name": "claimedTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "completedPurchaseRounds(address)",
      "name": "completedPurchaseRounds",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dataAdmin()",
      "name": "dataAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getClaimableTokenAmount()",
      "name": "getClaimableTokenAmount",
      "description": "Get the amount of QI tokens available for the caller to claim.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Number of QI tokens available for claiming.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getClaimedTokenAmount()",
      "name": "getClaimedTokenAmount",
      "description": "Get the total number of claimed tokens by the user.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Number of claimed QI tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoundClaimableTokenAmount(uint256)",
      "name": "getRoundClaimableTokenAmount",
      "description": "Get the amount of QI tokens available for the caller to claim from the given purchase round.",
      "parameterDecorators": [
        {
          "name": "round",
          "description": "Purchase round number.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Number of QI tokens available for claiming from the given round.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoundClaimedTokenAmount(uint256)",
      "name": "getRoundClaimedTokenAmount",
      "description": "Get the number of claimed tokens in a specific round by the user.",
      "parameterDecorators": [
        {
          "name": "round",
          "description": "Purchase round number.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Number of claimed QI tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "implementation()",
      "name": "implementation",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialReleasePercentages(address,uint256)",
      "name": "initialReleasePercentages",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingAdmin()",
      "name": "pendingAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingImplementation()",
      "name": "pendingImplementation",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "purchasedTokens(address,uint256)",
      "name": "purchasedTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "qiContractAddress()",
      "name": "qiContractAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "releasePeriodLength()",
      "name": "releasePeriodLength",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "releasePeriods(address,uint256)",
      "name": "releasePeriods",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "resetPurchasedTokensByUser(address[])",
      "name": "resetPurchasedTokensByUser",
      "description": "Reset all data for the given addresses.",
      "parameterDecorators": [
        {
          "name": "recipients",
          "description": "Addresses whose data to reset.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDataAdmin(address)",
      "name": "setDataAdmin",
      "description": "Set the data admin.",
      "parameterDecorators": [
        {
          "name": "newDataAdmin",
          "description": "New data admin address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPurchasedTokensByUser(address[],uint256[],uint256[],uint256[],uint256[])",
      "name": "setPurchasedTokensByUser",
      "description": "Set the amount of purchased QI tokens per user.",
      "parameterDecorators": [
        {
          "name": "recipients",
          "description": "QI token recipients.",
          "recommendedTypes": []
        },
        {
          "name": "rounds",
          "description": "Purchase round number.",
          "recommendedTypes": []
        },
        {
          "name": "tokenInitialReleasePercentages",
          "description": "Initial token release percentages.",
          "recommendedTypes": []
        },
        {
          "name": "tokenReleasePeriods",
          "description": "Number of token release periods.",
          "recommendedTypes": []
        },
        {
          "name": "amounts",
          "description": "Purchased token amounts.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setQiContractAddress(address)",
      "name": "setQiContractAddress",
      "description": "Set the QI token contract address.",
      "parameterDecorators": [
        {
          "name": "newQiContractAddress",
          "description": "New address of the QI token contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vestingScheduleEpoch()",
      "name": "vestingScheduleEpoch",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawQi(uint256)",
      "name": "withdrawQi",
      "description": "Withdraw deposited QI tokens from the contract.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "QI amount to withdraw from the contract balance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}