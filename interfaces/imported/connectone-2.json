{
  "schema": "../schema.json",
  "tags": [],
  "name": "ConnectOne",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "connectorID()",
      "name": "connectorID",
      "description": "Connector Details.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "model",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sell(address,address,uint256,uint256,uint256,uint256)",
      "name": "sell",
      "description": "Sell ETH/ERC20_Token using 1proto.",
      "parameterDecorators": [
        {
          "name": "buyAddr",
          "description": "buying token address.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).",
          "recommendedTypes": []
        },
        {
          "name": "sellAddr",
          "description": "selling token address.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).",
          "recommendedTypes": []
        },
        {
          "name": "sellAmt",
          "description": "selling token amount.",
          "recommendedTypes": []
        },
        {
          "name": "unitAmt",
          "description": "unit amount of buyAmt/sellAmt with slippage.",
          "recommendedTypes": []
        },
        {
          "name": "getId",
          "description": "Get token amount at this ID from `InstaMemory` Contract.",
          "recommendedTypes": []
        },
        {
          "name": "setId",
          "description": "Set token amount at this ID in `InstaMemory` Contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sellMulti(address[],uint256,uint256,uint256[],uint256[],uint256,uint256)",
      "name": "sellMulti",
      "description": "Sell ETH/ERC20_Token using 1proto using muliple token.",
      "parameterDecorators": [
        {
          "name": "tokens",
          "description": "array of tokens.",
          "recommendedTypes": []
        },
        {
          "name": "sellAmt",
          "description": "selling token amount.",
          "recommendedTypes": []
        },
        {
          "name": "unitAmt",
          "description": "unit amount of buyAmt/sellAmt with slippage.",
          "recommendedTypes": []
        },
        {
          "name": "distribution",
          "description": "distribution of swap across different dex.",
          "recommendedTypes": []
        },
        {
          "name": "disableDexes",
          "description": "disable a dex. (To disable none: 0).",
          "recommendedTypes": []
        },
        {
          "name": "getId",
          "description": "Get token amount at this ID from `InstaMemory` Contract.",
          "recommendedTypes": []
        },
        {
          "name": "setId",
          "description": "Set token amount at this ID in `InstaMemory` Contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sellThree(address,address,uint256,uint256,bytes,uint256)",
      "name": "sellThree",
      "description": "Sell ETH/ERC20_Token using 1inch.",
      "parameterDecorators": [
        {
          "name": "buyAddr",
          "description": "buying token address.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).",
          "recommendedTypes": []
        },
        {
          "name": "sellAddr",
          "description": "selling token amount.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).",
          "recommendedTypes": []
        },
        {
          "name": "sellAmt",
          "description": "selling token amount.",
          "recommendedTypes": []
        },
        {
          "name": "unitAmt",
          "description": "unit amount of buyAmt/sellAmt with slippage.",
          "recommendedTypes": []
        },
        {
          "name": "callData",
          "description": "Data from 1inch API.",
          "recommendedTypes": []
        },
        {
          "name": "setId",
          "description": "Set token amount at this ID in `InstaMemory` Contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sellTwo(address,address,uint256,uint256,uint256[],uint256,uint256,uint256)",
      "name": "sellTwo",
      "description": "Sell ETH/ERC20_Token using 1proto using off-chain calculation.",
      "parameterDecorators": [
        {
          "name": "buyAddr",
          "description": "buying token address.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).",
          "recommendedTypes": []
        },
        {
          "name": "sellAddr",
          "description": "selling token address.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).",
          "recommendedTypes": []
        },
        {
          "name": "sellAmt",
          "description": "selling token amount.",
          "recommendedTypes": []
        },
        {
          "name": "unitAmt",
          "description": "unit amount of buyAmt/sellAmt with slippage.",
          "recommendedTypes": []
        },
        {
          "name": "distribution",
          "description": "distribution of swap across different dex.",
          "recommendedTypes": []
        },
        {
          "name": "disableDexes",
          "description": "disable a dex. (To disable none: 0).",
          "recommendedTypes": []
        },
        {
          "name": "getId",
          "description": "Get token amount at this ID from `InstaMemory` Contract.",
          "recommendedTypes": []
        },
        {
          "name": "setId",
          "description": "Set token amount at this ID in `InstaMemory` Contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}