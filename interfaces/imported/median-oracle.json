{
  "schema": "../schema.json",
  "tags": [
    "oracles"
  ],
  "name": "MedianOracle",
  "description": "Median Oracle.",
  "eventDecorators": [
    {
      "signature": "ProviderAdded(address)",
      "name": "ProviderAdded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProviderRemoved(address)",
      "name": "ProviderRemoved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ReportTimestampOutOfRange(address)",
      "name": "ReportTimestampOutOfRange",
      "description": "",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProviderReportPushed(address,uint256,uint256)",
      "name": "ProviderReportPushed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "payload",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "reportDelaySec()",
      "name": "reportDelaySec",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pushReport(uint256)",
      "name": "pushReport",
      "description": "Pushes a report for the calling provider.",
      "parameterDecorators": [
        {
          "name": "payload",
          "description": "is expected to be 18 decimal fixed point number.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getData()",
      "name": "getData",
      "description": "Computes median of provider reports whose timestamps are in the valid timestamp range.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addProvider(address)",
      "name": "addProvider",
      "description": "Authorizes a provider.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "Address of the provider.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "providers(uint256)",
      "name": "providers",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore. Allows the current owner to relinquish control of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeProvider(address)",
      "name": "removeProvider",
      "description": "Revokes provider authorization.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "Address of the provider.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minimumProviders()",
      "name": "minimumProviders",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "purgeReports()",
      "name": "purgeReports",
      "description": "Invalidates the reports of the calling provider.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setReportDelaySec(uint256)",
      "name": "setReportDelaySec",
      "description": "Sets the time period since reporting that has to pass before a report is usable.",
      "parameterDecorators": [
        {
          "name": "reportDelaySec_",
          "description": "The new delay period in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "providersSize()",
      "name": "providersSize",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reportExpirationTimeSec()",
      "name": "reportExpirationTimeSec",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setMinimumProviders(uint256)",
      "name": "setMinimumProviders",
      "description": "Sets the minimum number of providers with valid reports to consider the aggregate report valid.",
      "parameterDecorators": [
        {
          "name": "minimumProviders_",
          "description": "The new minimum number of providers.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "providerReports(address,uint256)",
      "name": "providerReports",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "payload",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setReportExpirationTimeSec(uint256)",
      "name": "setReportExpirationTimeSec",
      "description": "Sets the report expiration period.",
      "parameterDecorators": [
        {
          "name": "reportExpirationTimeSec_",
          "description": "The number of seconds after which the report is deemed expired.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}