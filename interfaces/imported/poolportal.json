{
  "schema": "../schema.json",
  "tags": [],
  "name": "PoolPortal",
  "description": "",
  "eventDecorators": [
    {
      "signature": "BuyPool(address,uint256,address)",
      "name": "BuyPool",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "poolToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "trader",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SellPool(address,uint256,address)",
      "name": "SellPool",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "poolToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "trader",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BancorEtherToken()",
      "name": "BancorEtherToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bancorRatio()",
      "name": "bancorRatio",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bancorRegistry()",
      "name": "bancorRegistry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyPool(uint256,uint256,address)",
      "name": "buyPool",
      "description": "buy Bancor or Uniswap pool.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "amount of pool token.",
          "recommendedTypes": []
        },
        {
          "name": "_type",
          "description": "pool type.",
          "recommendedTypes": []
        },
        {
          "name": "_poolToken",
          "description": "pool token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBacorConverterAddressByRelay(address)",
      "name": "getBacorConverterAddressByRelay",
      "description": "helper for get bancor converter by bancor relay addrses.",
      "parameterDecorators": [
        {
          "name": "_relay",
          "description": "address of bancor relay.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "converter",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBancorConnectorsAmountByRelayAmount(uint256,address)",
      "name": "getBancorConnectorsAmountByRelayAmount",
      "description": "helper for get amount for both Bancor connectors for input amount of pool.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "relay amount.",
          "recommendedTypes": []
        },
        {
          "name": "_relay",
          "description": "address of bancor relay.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "bancorAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "connectorAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBancorConnectorsByRelay(address)",
      "name": "getBancorConnectorsByRelay",
      "description": "helper for get Bancor ERC20 connectors addresses.",
      "parameterDecorators": [
        {
          "name": "_relay",
          "description": "address of bancor relay.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "BNTConnector",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "ERCConnector",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBancorRatio(address,address,uint256)",
      "name": "getBancorRatio",
      "description": "helper for get ratio between assets in bancor newtork.",
      "parameterDecorators": [
        {
          "name": "_from",
          "description": "token or relay address.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "token or relay address.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount from.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenByUniswapExchange(address)",
      "name": "getTokenByUniswapExchange",
      "description": "return ERC20 address from Uniswap exchange address.",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "address of uniswap exchane.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUniswapConnectorsAmountByPoolAmount(uint256,address)",
      "name": "getUniswapConnectorsAmountByPoolAmount",
      "description": "helper for get amounts for both Uniswap connectors for input amount of pool.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "relay amount.",
          "recommendedTypes": []
        },
        {
          "name": "_exchange",
          "description": "address of uniswap exchane.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "ethAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "ercAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUniswapTokenAmountByETH(address,uint256)",
      "name": "getUniswapTokenAmountByETH",
      "description": "return token amount by ETH input ratio.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "address of ERC20 token.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "ETH amount (in wei).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sellPool(uint256,uint256,address)",
      "name": "sellPool",
      "description": "sell Bancor or Uniswap pool.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "amount of pool token.",
          "recommendedTypes": []
        },
        {
          "name": "_type",
          "description": "pool type.",
          "recommendedTypes": []
        },
        {
          "name": "_poolToken",
          "description": "pool token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokensTypes()",
      "name": "tokensTypes",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniswapFactory()",
      "name": "uniswapFactory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}