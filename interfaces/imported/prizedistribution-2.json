{"schema":"../schema.json","tags":[],"name":"PrizeDistribution","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event for UNIAPPTokens purchase logging.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"cancelCompetition(uint256)","name":"cancelCompetition","description":"The owner of a competition can cancel it if it has not started.","parameterDecorators":[{"name":"_competitionId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"commissionRate()","name":"commissionRate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"competitionCount()","name":"competitionCount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"competitions(uint256)","name":"competitions","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"title","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"owner","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"externalReference","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"entryFee","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"startBlock","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"endBlock","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"valid","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"canceled","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"commissionPaid","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"prizesPaid","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"commissionRate","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"stakeToPrizeRatio","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"createCompetition(string,string,uint256,uint256,uint256)","name":"createCompetition","description":"Anybody can create new competitions, and they will be deemed to be the owner of the competition.","parameterDecorators":[{"name":"_title","description":"","recommendedTypes":[]},{"name":"_externalReference","description":"","recommendedTypes":[]},{"name":"_entryFee","description":"","recommendedTypes":[]},{"name":"_startBlock","description":"","recommendedTypes":[]},{"name":"_endBlock","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"enterCompetition(uint256)","name":"enterCompetition","description":"Anyone can enter a competition provided it is not full, has not already started, has not been canceled, and they pay the required entrance fee.","parameterDecorators":[{"name":"_competitionId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getCommission(uint256)","name":"getCommission","description":"Calculates the commission charged on a competition prize pool.","parameterDecorators":[{"name":"_competitionId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCommissionRate()","name":"getCommissionRate","description":"Returns the commission that is charged by the smart contract on prize pools. A number between 0 and 1000, where 1000 = 100%. * The commission is redeemable by the owner of the contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCompetition(uint256)","name":"getCompetition","description":"Returns a competition by ID.","parameterDecorators":[{"name":"_competitionId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param5","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param6","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"param7","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param8","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param9","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param10","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCompetitionCount()","name":"getCompetitionCount","description":"Returns the number of created competitions.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getPrizeDistribution(uint256)","name":"getPrizeDistribution","description":"Returns the prize distribution for a given competition.","parameterDecorators":[{"name":"_competitionId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getPrizePoolLessCommission(uint256)","name":"getPrizePoolLessCommission","description":"","parameterDecorators":[{"name":"_competitionId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"isCompetitionCanceled(uint256)","name":"isCompetitionCanceled","description":"Returns true if competition has been canceled by owner.","parameterDecorators":[{"name":"_competitionId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isCompetitionPaid(uint256)","name":"isCompetitionPaid","description":"Returns try if the prizes have been paid.","parameterDecorators":[{"name":"_competitionId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"maxPlayers()","name":"maxPlayers","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"submitPlayersByRank(uint256,address[])","name":"submitPlayersByRank","description":"The owner of the smart contract can call this function to submit the rank of each player once the competition has finished. * Note: the owner does not need to necessarily be a sigle actor. The owner of the contract could be a Multisig wallet with multiple signatories required, resulting in this function performing the role of an oracle.","parameterDecorators":[{"name":"_competitionId","description":"","recommendedTypes":[]},{"name":"_players","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateCommissionRate(uint256)","name":"updateCommissionRate","description":"Updates the commission rate used for competitions.","parameterDecorators":[{"name":"_commissionRate","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawCommission(uint256)","name":"withdrawCommission","description":"Anybody can withdraw unpaid commission to the contract owner.","parameterDecorators":[{"name":"_competitionId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawPrizes(uint256)","name":"withdrawPrizes","description":"If the the player ranks have been set by the owner, then anybody can call this function and the prizes will be distributed to the original depositors according the prize distribution and player ranks.","parameterDecorators":[{"name":"_competitionId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}