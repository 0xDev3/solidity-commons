{
  "schema": "../schema.json",
  "tags": [],
  "name": "TaskExecutor",
  "description": "Handles FL taking and executes actions.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "DEFISAVER_LOGGER()",
      "name": "DEFISAVER_LOGGER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "FACTORY_ADDRESS()",
      "name": "FACTORY_ADDRESS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "REGISTRY_ADDR()",
      "name": "REGISTRY_ADDR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_executeActionsFromFL(tuple(string,bytes[][],bytes[][],bytes32[],uint8[][]),bytes32)",
      "name": "_executeActionsFromFL",
      "description": "This is the callback function that FL actions call. FL function must be the first action and repayment is done last.",
      "parameterDecorators": [
        {
          "name": "_currTask",
          "description": "Task to be executed.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "name",
              "description": "",
              "type": "string"
            },
            {
              "name": "callData",
              "description": "",
              "type": "bytes[][]"
            },
            {
              "name": "subData",
              "description": "",
              "type": "bytes[][]"
            },
            {
              "name": "actionIds",
              "description": "",
              "type": "bytes32[]"
            },
            {
              "name": "paramMapping",
              "description": "",
              "type": "uint8[][]"
            }
          ]
        },
        {
          "name": "_flAmount",
          "description": "Result value from FL action.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "adminVault()",
      "name": "adminVault",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "executeStrategyTask(uint256,bytes[][])",
      "name": "executeStrategyTask",
      "description": "Called through the Strategy contract to execute a task.",
      "parameterDecorators": [
        {
          "name": "_strategyId",
          "description": "Id of the strategy we want to execute.",
          "recommendedTypes": []
        },
        {
          "name": "_actionCallData",
          "description": "All the data related to the strategies Task.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executeTask(tuple(string,bytes[][],bytes[][],bytes32[],uint8[][]))",
      "name": "executeTask",
      "description": "Called directly through DsProxy to execute a task. This is the main entry point for Recipes/Tasks executed manually.",
      "parameterDecorators": [
        {
          "name": "_currTask",
          "description": "Task to be executed.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "name",
              "description": "",
              "type": "string"
            },
            {
              "name": "callData",
              "description": "",
              "type": "bytes[][]"
            },
            {
              "name": "subData",
              "description": "",
              "type": "bytes[][]"
            },
            {
              "name": "actionIds",
              "description": "",
              "type": "bytes32[]"
            },
            {
              "name": "paramMapping",
              "description": "",
              "type": "uint8[][]"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "givePermission(address)",
      "name": "givePermission",
      "description": "Called in the context of DSProxy to authorize an address.",
      "parameterDecorators": [
        {
          "name": "_contractAddr",
          "description": "Address which will be authorized.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "kill()",
      "name": "kill",
      "description": "Destroy the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registry()",
      "name": "registry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removePermission(address)",
      "name": "removePermission",
      "description": "Called in the context of DSProxy to remove authority of an address.",
      "parameterDecorators": [
        {
          "name": "_contractAddr",
          "description": "Auth address which will be removed from authority list.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawStuckFunds(address,address,uint256)",
      "name": "withdrawStuckFunds",
      "description": "withdraw stuck funds.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}