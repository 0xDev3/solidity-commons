{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "CarbonCreditTokenFactory",
  "description": "A Carbon Credit Token Factory.",
  "eventDecorators": [
    {
      "signature": "InstanceCreated(address)",
      "name": "InstanceCreated",
      "description": "Emitted after a new token has been created by this factory.",
      "parameterDecorators": [
        {
          "name": "instanceAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SwappedImplementationContract(address)",
      "name": "SwappedImplementationContract",
      "description": "Emitted after the implementation contract has been swapped.",
      "parameterDecorators": [
        {
          "name": "contractAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "carbonCreditBundleTokenFactory()",
      "name": "carbonCreditBundleTokenFactory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createCarbonCreditToken(string,string,tuple(string,string,uint16),address,address)",
      "name": "createCarbonCreditToken",
      "description": "Deploy a new carbon credit token.",
      "parameterDecorators": [
        {
          "name": "name_",
          "description": "- The name of the new token, should be unique within the Flow Carbon Ecosystem.",
          "recommendedTypes": []
        },
        {
          "name": "symbol_",
          "description": "- The token symbol of the ERC-20, should be unique within the Flow Carbon Ecosystem.",
          "recommendedTypes": []
        },
        {
          "name": "details_",
          "description": "- Token details to define the fungibillity characteristics of this token.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "methodology",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "creditType",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "vintage",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "permissionList_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "owner_",
          "description": "- The owner of the new token, able to mint and finalize offsets.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The address of the newly created token.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deployedContractAt(uint256)",
      "name": "deployedContractAt",
      "description": "The contract deployed at a specific index. The ordering may change upon adding / removing.",
      "parameterDecorators": [
        {
          "name": "index_",
          "description": "- The index into the set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deployedContractsCount()",
      "name": "deployedContractsCount",
      "description": "The number of contracts deployed by this factory.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasContractDeployedAt(address)",
      "name": "hasContractDeployedAt",
      "description": "Check if a contract as been released by this factory.",
      "parameterDecorators": [
        {
          "name": "address_",
          "description": "- The address of the contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether this contract has been deployed by this factory.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "implementationContract()",
      "name": "implementationContract",
      "description": "The implementation contract used to create new instances.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Overridden to disable renouncing ownership.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCarbonCreditBundleTokenFactory(address)",
      "name": "setCarbonCreditBundleTokenFactory",
      "description": "Set the carbon credit bundle token factory which is passed to token instances.",
      "parameterDecorators": [
        {
          "name": "carbonCreditBundleTokenFactory_",
          "description": "- The factory instance associated with new tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapImplementationContract(address)",
      "name": "swapImplementationContract",
      "description": "The owner is able to swap out the underlying token implementation.",
      "parameterDecorators": [
        {
          "name": "implementationContract_",
          "description": "- The contract to be used from now on.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}