{"schema":"../schema.json","tags":["vaults"],"name":"VaultAdmin","description":"OUSD Vault Admin Contract. The VaultAdmin contract makes configuration and admin calls on the vault.","eventDecorators":[{"signature":"AssetSupported(address)","name":"AssetSupported","description":"","parameterDecorators":[{"name":"_asset","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AssetDefaultStrategyUpdated(address,address)","name":"AssetDefaultStrategyUpdated","description":"","parameterDecorators":[{"name":"_asset","description":"","recommendedTypes":[],"indexed":false},{"name":"_strategy","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StrategyApproved(address)","name":"StrategyApproved","description":"","parameterDecorators":[{"name":"_addr","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StrategyRemoved(address)","name":"StrategyRemoved","description":"","parameterDecorators":[{"name":"_addr","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Mint(address,uint256)","name":"Mint","description":"","parameterDecorators":[{"name":"_addr","description":"","recommendedTypes":[],"indexed":false},{"name":"_value","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Redeem(address,uint256)","name":"Redeem","description":"","parameterDecorators":[{"name":"_addr","description":"","recommendedTypes":[],"indexed":false},{"name":"_value","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"CapitalPaused()","name":"CapitalPaused","description":"","parameterDecorators":[]},{"signature":"CapitalUnpaused()","name":"CapitalUnpaused","description":"","parameterDecorators":[]},{"signature":"RebasePaused()","name":"RebasePaused","description":"","parameterDecorators":[]},{"signature":"RebaseUnpaused()","name":"RebaseUnpaused","description":"","parameterDecorators":[]},{"signature":"VaultBufferUpdated(uint256)","name":"VaultBufferUpdated","description":"","parameterDecorators":[{"name":"_vaultBuffer","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RedeemFeeUpdated(uint256)","name":"RedeemFeeUpdated","description":"","parameterDecorators":[{"name":"_redeemFeeBps","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PriceProviderUpdated(address)","name":"PriceProviderUpdated","description":"","parameterDecorators":[{"name":"_priceProvider","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AllocateThresholdUpdated(uint256)","name":"AllocateThresholdUpdated","description":"","parameterDecorators":[{"name":"_threshold","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RebaseThresholdUpdated(uint256)","name":"RebaseThresholdUpdated","description":"","parameterDecorators":[{"name":"_threshold","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UniswapUpdated(address)","name":"UniswapUpdated","description":"","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StrategistUpdated(address)","name":"StrategistUpdated","description":"","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MaxSupplyDiffChanged(uint256)","name":"MaxSupplyDiffChanged","description":"","parameterDecorators":[{"name":"maxSupplyDiff","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"YieldDistribution(address,uint256,uint256)","name":"YieldDistribution","description":"","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false},{"name":"purchaser","description":"who paid for the tokens.","recommendedTypes":[],"indexed":false},{"name":"value","description":"weis paid for purchase.","recommendedTypes":[],"indexed":false}]},{"signature":"TrusteeFeeBpsChanged(uint256)","name":"TrusteeFeeBpsChanged","description":"","parameterDecorators":[{"name":"_basis","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TrusteeAddressChanged(address)","name":"TrusteeAddressChanged","description":"","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"PendingGovernorshipTransfer(address,address)","name":"PendingGovernorshipTransfer","description":"","parameterDecorators":[{"name":"previousGovernor","description":"","recommendedTypes":[],"indexed":true},{"name":"newGovernor","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"GovernorshipTransferred(address,address)","name":"GovernorshipTransferred","description":"","parameterDecorators":[{"name":"previousGovernor","description":"","recommendedTypes":[],"indexed":true},{"name":"newGovernor","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"unpauseRebase()","name":"unpauseRebase","description":"Set the deposit paused flag to true to allow rebasing.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"redeemFeeBps()","name":"redeemFeeBps","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setTrusteeFeeBps(uint256)","name":"setTrusteeFeeBps","description":"Sets the TrusteeFeeBps to the percentage of yield that should be received in basis points.","parameterDecorators":[{"name":"_basis","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"governor()","name":"governor","description":"Returns the address of the current Governor.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"harvest(address)","name":"harvest","description":"Collect reward tokens for a specific strategy and swap for supported stablecoin via Uniswap. Called from the vault.","parameterDecorators":[{"name":"_strategyAddr","description":"Address of the strategy to collect rewards from.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":false},{"signature":"transferToken(address,uint256)","name":"transferToken","description":"Transfer token to governor. Intended for recovering tokens stuck in contract, i.e. mistaken sends.","parameterDecorators":[{"name":"_asset","description":"Address for the asset.","recommendedTypes":[]},{"name":"_amount","description":"Amount of the asset to transfer.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"uniswapAddr()","name":"uniswapAddr","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeStrategy(address)","name":"removeStrategy","description":"Remove a strategy from the Vault. Removes all invested assets and returns them to the Vault.","parameterDecorators":[{"name":"_addr","description":"Address of the strategy to remove.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"vaultBuffer()","name":"vaultBuffer","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"trusteeFeeBps()","name":"trusteeFeeBps","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"priceUSDRedeem(string)","name":"priceUSDRedeem","description":"Returns the total price in 18 digit USD for a given asset. Using Max since max is what we use for redeem pricing.","parameterDecorators":[{"name":"symbol","description":"String symbol of the asset.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setTrusteeAddress(address)","name":"setTrusteeAddress","description":"Sets the trusteeAddress that can receive a portion of yield. Setting to the zero address disables this feature.","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPriceProvider(address)","name":"setPriceProvider","description":"Set address of price provider.","parameterDecorators":[{"name":"_priceProvider","description":"Address of price provider.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"approveStrategy(address)","name":"approveStrategy","description":"Add a strategy to the Vault.","parameterDecorators":[{"name":"_addr","description":"Address of the strategy to add.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"pauseCapital()","name":"pauseCapital","description":"Set the deposit paused flag to true to prevent capital movement.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"harvest()","name":"harvest","description":"Collect reward tokens from all strategies and swap for supported stablecoin via Uniswap.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"trusteeAddress()","name":"trusteeAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"supportAsset(address)","name":"supportAsset","description":"Add a supported asset to the contract, i.e. one that can be to mint OUSD.","parameterDecorators":[{"name":"_asset","description":"Address of asset.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rebaseThreshold()","name":"rebaseThreshold","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rebasePaused()","name":"rebasePaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"strategistAddr()","name":"strategistAddr","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"claimGovernance()","name":"claimGovernance","description":"Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMaxSupplyDiff(uint256)","name":"setMaxSupplyDiff","description":"Sets the maximum allowable difference between total supply and backing assets' value.","parameterDecorators":[{"name":"_maxSupplyDiff","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"priceUSDMint(string)","name":"priceUSDMint","description":"Returns the total price in 18 digit USD for a given asset. Using Min since min is what we use for mint pricing.","parameterDecorators":[{"name":"symbol","description":"String symbol of the asset.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setStrategistAddr(address)","name":"setStrategistAddr","description":"Set address of Strategist.","parameterDecorators":[{"name":"_address","description":"Address of Strategist.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"reallocate(address,address,address[],uint256[])","name":"reallocate","description":"Move assets from one Strategy to another.","parameterDecorators":[{"name":"_strategyFromAddress","description":"Address of Strategy to move assets from.","recommendedTypes":[]},{"name":"_strategyToAddress","description":"Address of Strategy to move assets to.","recommendedTypes":[]},{"name":"_assets","description":"Array of asset address that will be moved.","recommendedTypes":[]},{"name":"_amounts","description":"Array of amounts of each corresponding asset to move.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"maxSupplyDiff()","name":"maxSupplyDiff","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setVaultBuffer(uint256)","name":"setVaultBuffer","description":"Set a buffer of assets to keep in the Vault to handle most redemptions without needing to spend gas unwinding assets from a Strategy.","parameterDecorators":[{"name":"_vaultBuffer","description":"Percentage using 18 decimals. 100% = 1e18.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpauseCapital()","name":"unpauseCapital","description":"Set the deposit paused flag to false to enable capital movement.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"autoAllocateThreshold()","name":"autoAllocateThreshold","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"assetDefaultStrategies(address)","name":"assetDefaultStrategies","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setUniswapAddr(address)","name":"setUniswapAddr","description":"Set address of Uniswap for performing liquidation of strategy reward tokens.","parameterDecorators":[{"name":"_address","description":"Address of Uniswap.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAutoAllocateThreshold(uint256)","name":"setAutoAllocateThreshold","description":"Sets the minimum amount of OUSD in a mint to trigger an automatic allocation of funds afterwords.","parameterDecorators":[{"name":"_threshold","description":"OUSD amount with 18 fixed decimals.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"priceProvider()","name":"priceProvider","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setRebaseThreshold(uint256)","name":"setRebaseThreshold","description":"Set a minimum amount of OUSD in a mint or redeem that triggers a rebase.","parameterDecorators":[{"name":"_threshold","description":"OUSD amount with 18 fixed decimals.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAssetDefaultStrategy(address,address)","name":"setAssetDefaultStrategy","description":"Set the default Strategy for an asset, i.e. the one which the asset will be automatically allocated to and withdrawn from.","parameterDecorators":[{"name":"_asset","description":"Address of the asset.","recommendedTypes":[]},{"name":"_strategy","description":"Address of the Strategy.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"pauseRebase()","name":"pauseRebase","description":"Set the deposit paused flag to true to prevent rebasing.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isGovernor()","name":"isGovernor","description":"Returns true if the caller is the current Governor.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"transferGovernance(address)","name":"transferGovernance","description":"Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete.","parameterDecorators":[{"name":"_newGovernor","description":"Address of the new Governor.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"capitalPaused()","name":"capitalPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"setRedeemFeeBps(uint256)","name":"setRedeemFeeBps","description":"Set a fee in basis points to be charged for a redeem.","parameterDecorators":[{"name":"_redeemFeeBps","description":"Basis point fee to be charged.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAdminImpl(address)","name":"setAdminImpl","description":"set the implementation for the admin, this needs to be in a base class else we cannot set it.","parameterDecorators":[{"name":"newImpl","description":"address of the implementation.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}