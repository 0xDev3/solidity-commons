{"schema":"../schema.json","tags":["tokens","locking"],"name":"MasterChefAxialV3","description":"The (older) MasterChefAxialV2 contract gives out a constant number of AXIAL tokens per block. It is the only address with minting rights for AXIAL. The idea for this MasterChefAxialV3 (MCJV3) contract is therefore to be the owner of a dummy token that is deposited into the MasterChefAxialV2 (MCJV2) contract. The allocation point for this pool on MCJV3 is the total allocation point for all pools that receive double incentives.","eventDecorators":[{"signature":"Add(uint256,uint256,address,address)","name":"Add","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"allocPoint","description":"","recommendedTypes":[],"indexed":false},{"name":"lpToken","description":"","recommendedTypes":[],"indexed":true},{"name":"rewarder","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Deposit(address,uint256,uint256)","name":"Deposit","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyWithdraw(address,uint256,uint256)","name":"EmergencyWithdraw","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Harvest(address,uint256,uint256)","name":"Harvest","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Init()","name":"Init","description":"** EVENTS ** ///.","parameterDecorators":[]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Set(uint256,uint256,address,bool)","name":"Set","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"allocPoint","description":"","recommendedTypes":[],"indexed":false},{"name":"rewarder","description":"","recommendedTypes":[],"indexed":true},{"name":"overwrite","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UpdatePool(uint256,uint256,uint256,uint256)","name":"UpdatePool","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"lastRewardTimestamp","description":"","recommendedTypes":[],"indexed":false},{"name":"lpSupply","description":"","recommendedTypes":[],"indexed":false},{"name":"accAxialPerShare","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdraw(address,uint256,uint256)","name":"Withdraw","description":"** EVENTS ** ///.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"AXIAL()","name":"AXIAL","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"MASTER_CHEF_V2()","name":"MASTER_CHEF_V2","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"MASTER_PID()","name":"MASTER_PID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"add(uint256,address,address)","name":"add","description":"Add a new LP to the pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do.","parameterDecorators":[{"name":"allocPoint","description":"AP of the new pool.","recommendedTypes":[]},{"name":"_lpToken","description":"Address of the LP ERC-20 token.","recommendedTypes":[]},{"name":"_rewarder","description":"Address of the rewarder delegate.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"axialPerSec()","name":"axialPerSec","description":"Calculates and returns the `amount` of AXIAL per block.","parameterDecorators":[],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit(uint256,uint256)","name":"deposit","description":"Deposit LP tokens to MCJV3 for AXIAL allocation.","parameterDecorators":[{"name":"pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]},{"name":"amount","description":"LP token amount to deposit.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyWithdraw(uint256)","name":"emergencyWithdraw","description":"Withdraw without caring about rewards. EMERGENCY ONLY.","parameterDecorators":[{"name":"pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"harvestFromMasterChef()","name":"harvestFromMasterChef","description":"Harvests AXIAL from `MASTER_CHEF_V2` MCJV2 and pool `MASTER_PID` to this MCJV3 contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"init(address)","name":"init","description":"Deposits a dummy token to `MASTER_CHEF_V2` MCJV2. This is required because MCJV2 holds the minting rights for AXIAL. Any balance of transaction sender in `dummyToken` is transferred. The allocation point for the pool on MCJV2 is the total allocation point for all pools that receive double incentives.","parameterDecorators":[{"name":"dummyToken","description":"The address of the ERC-20 token to deposit into MCJV2.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"massUpdatePools(uint256[])","name":"massUpdatePools","description":"Update reward variables for all pools. Be careful of gas spending!.","parameterDecorators":[{"name":"pids","description":"Pool IDs of all to be updated. Make sure to update all active pools.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingTokens(uint256,address)","name":"pendingTokens","description":"View function to see pending AXIAL on frontend.","parameterDecorators":[{"name":"_pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]},{"name":"_user","description":"Address of user.","recommendedTypes":[]}],"returnDecorators":[{"name":"pendingAxial","description":"AXIAL reward for a given user.","recommendedTypes":[],"solidityType":"uint256"},{"name":"bonusTokenAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"bonusTokenSymbol","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"pendingBonusToken","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolInfo(uint256)","name":"poolInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"lpToken","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"accAxialPerShare","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastRewardTimestamp","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"allocPoint","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewarder","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"poolLength()","name":"poolLength","description":"Returns the number of MCJV3 pools.","parameterDecorators":[],"returnDecorators":[{"name":"pools","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"set(uint256,uint256,address,bool)","name":"set","description":"Update the given pool's AXIAL allocation point and `IRewarder` contract. Can only be called by the owner.","parameterDecorators":[{"name":"_pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]},{"name":"_allocPoint","description":"New AP of the pool.","recommendedTypes":[]},{"name":"_rewarder","description":"Address of the rewarder delegate.","recommendedTypes":[]},{"name":"overwrite","description":"True if _rewarder should be `set`. Otherwise `_rewarder` is ignored.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalAllocPoint()","name":"totalAllocPoint","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updatePool(uint256)","name":"updatePool","description":"Update reward variables of the given pool.","parameterDecorators":[{"name":"pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userInfo(uint256,address)","name":"userInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewardDebt","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256,uint256)","name":"withdraw","description":"Withdraw LP tokens from MCJV3.","parameterDecorators":[{"name":"pid","description":"The index of the pool. See `poolInfo`.","recommendedTypes":[]},{"name":"amount","description":"LP token amount to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}