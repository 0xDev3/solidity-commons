{
  "schema": "../schema.json",
  "tags": [
    "aave"
  ],
  "name": "JAave",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Events ///. Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TrancheATokenMinted(uint256,address,uint256,uint256)",
      "name": "TrancheATokenMinted",
      "description": "Events ///. Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "trancheNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "taAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TrancheATokenRedemption(uint256,address,uint256,uint256,uint256)",
      "name": "TrancheATokenRedemption",
      "description": "Events ///. Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "trancheNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "burner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "userAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "feesAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TrancheAddedToProtocol(uint256,address,address)",
      "name": "TrancheAddedToProtocol",
      "description": "Events ///. Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "trancheNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "trancheA",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "trancheB",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TrancheBTokenMinted(uint256,address,uint256,uint256)",
      "name": "TrancheBTokenMinted",
      "description": "Events ///. Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "trancheNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tbAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TrancheBTokenRedemption(uint256,address,uint256,uint256,uint256)",
      "name": "TrancheBTokenRedemption",
      "description": "Events ///. Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "trancheNum",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "burner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "userAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "feesAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "AAVE_REFERRAL_CODE()",
      "name": "AAVE_REFERRAL_CODE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ETH_ADDR()",
      "name": "ETH_ADDR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PERCENT_DIVIDER()",
      "name": "PERCENT_DIVIDER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "aaveIncentiveControllerAddress()",
      "name": "aaveIncentiveControllerAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addTrancheToProtocol(address,address,string,string,string,string,uint256,uint8)",
      "name": "addTrancheToProtocol",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_buyerCoinAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_aTokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_nameA",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_symbolA",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_nameB",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_symbolB",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fixedRpb",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_underlyingDec",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "adminToolsAddress()",
      "name": "adminToolsAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyTrancheAToken(uint256,uint256)",
      "name": "buyTrancheAToken",
      "description": "buy Tranche A Tokens.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of stable coins sent by buyer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyTrancheBToken(uint256,uint256)",
      "name": "buyTrancheBToken",
      "description": "buy Tranche B Tokens.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of stable coins sent by buyer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calcRPBFromPercentage(uint256)",
      "name": "calcRPBFromPercentage",
      "description": "get Tranche A exchange rate (tokens with 18 decimals).",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "tranche A token current price.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimAaveRewards(address,uint256)",
      "name": "claimAaveRewards",
      "description": "claim token rewards from all assets in protocol and transfer them to fees collector.",
      "parameterDecorators": [
        {
          "name": "_rewardToken",
          "description": "reward token address.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of rewards token to claim (set it to 0 if you want to claim for all tokens).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "feesCollectorAddress()",
      "name": "feesCollectorAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAaveReserveData(uint256)",
      "name": "getAaveReserveData",
      "description": "get Aave reserve Data for an asset liquidityRate is the return percentage for that asset (multiply by 10^27).",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "availableLiquidity",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalStableDebt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalVariableDebt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidityRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "variableBorrowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "stableBorrowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "averageStableBorrowRate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidityIndex",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "variableBorrowIndex",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastUpdateTimestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint40"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAaveUnclaimedRewards()",
      "name": "getAaveUnclaimedRewards",
      "description": "get token rewards amount.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "amount of unclaimed tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllATokens()",
      "name": "getAllATokens",
      "description": "get Aave all tokens.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllReservesTokens()",
      "name": "getAllReservesTokens",
      "description": "get Aave all reserved tokens.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDataProvider()",
      "name": "getDataProvider",
      "description": "get Aave Pool Address Provider starting from lending pool address provider.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEthBalance()",
      "name": "getEthBalance",
      "description": "get eth balance on this contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLendingPool()",
      "name": "getLendingPool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenBalance(address)",
      "name": "getTokenBalance",
      "description": "get every token balance in this contract.",
      "parameterDecorators": [
        {
          "name": "_tokenContract",
          "description": "token contract address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalValue(uint256)",
      "name": "getTotalValue",
      "description": "get Tranche total value in underlying tokens.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "tranche total value in underlying tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTrAValue(uint256)",
      "name": "getTrAValue",
      "description": "get Tranche A value in underlying tokens.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "trANormValue",
          "description": "tranche A value in underlying tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTrBValue(uint256)",
      "name": "getTrBValue",
      "description": "get Tranche B value in underlying tokens.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "tranche B value in underlying tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTrancheACurrentRPB(uint256)",
      "name": "getTrancheACurrentRPB",
      "description": "get RPB for a given percentage (expressed in 1e18).",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "RPB for a fixed percentage.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTrancheAExchangeRate(uint256)",
      "name": "getTrancheAExchangeRate",
      "description": "get Tranche A exchange rate.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "tranche A token current price.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTrancheBExchangeRate(uint256,uint256)",
      "name": "getTrancheBExchangeRate",
      "description": "get Tranche B exchange rate.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        },
        {
          "name": "_newAmount",
          "description": "new amount entering tranche B (underlying token decimals).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tbPrice",
          "description": "tranche B token current price.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,address,address,address,uint256)",
      "name": "initialize",
      "description": "contract initializer.",
      "parameterDecorators": [
        {
          "name": "_adminTools",
          "description": "price oracle address.",
          "recommendedTypes": []
        },
        {
          "name": "_feesCollector",
          "description": "fees collector contract address.",
          "recommendedTypes": []
        },
        {
          "name": "_tranchesDepl",
          "description": "tranches deployer contract address.",
          "recommendedTypes": []
        },
        {
          "name": "_aaveIncentiveController",
          "description": "Aave incentive controller address (mainnet: 0xd784927Ff2f95ba542BfC824c8a8a98F3495f6b5).",
          "recommendedTypes": []
        },
        {
          "name": "_wethAddress",
          "description": "weth / wmatic contract address.",
          "recommendedTypes": []
        },
        {
          "name": "_blocksPerYear",
          "description": "blocks / year.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lastActivity(address)",
      "name": "lastActivity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lendingPoolAddressProvider()",
      "name": "lendingPoolAddressProvider",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "redeemTimeout()",
      "name": "redeemTimeout",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "redeemTrancheAToken(uint256,uint256)",
      "name": "redeemTrancheAToken",
      "description": "redeem Tranche A Tokens.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of stable coins sent by buyer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeemTrancheBToken(uint256,uint256)",
      "name": "redeemTrancheBToken",
      "description": "redeem Tranche B Tokens.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of stable coins sent by buyer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAaveIncentiveControllerAddress(address)",
      "name": "setAaveIncentiveControllerAddress",
      "description": "set Aave Pool Address Provider.",
      "parameterDecorators": [
        {
          "name": "_aaveIncentiveController",
          "description": "aave incentive controller address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAavePoolAddressProvider(address)",
      "name": "setAavePoolAddressProvider",
      "description": "set Aave Pool Address Provider.",
      "parameterDecorators": [
        {
          "name": "_addressProviderContract",
          "description": "aave lending pool address provider contract address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBlocksPerYear(uint256)",
      "name": "setBlocksPerYear",
      "description": "set how many blocks will be produced per year on the blockchain.",
      "parameterDecorators": [
        {
          "name": "_newValue",
          "description": "new value.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDecimals(uint256,uint8)",
      "name": "setDecimals",
      "description": "set decimals on the underlying token of a tranche.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        },
        {
          "name": "_underlyingDec",
          "description": "underlying token decimals.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setNewEnvironment(address,address,address)",
      "name": "setNewEnvironment",
      "description": "set new addresses for price oracle, fees collector and tranche deployer.",
      "parameterDecorators": [
        {
          "name": "_adminTools",
          "description": "price oracle address.",
          "recommendedTypes": []
        },
        {
          "name": "_feesCollector",
          "description": "fees collector contract address.",
          "recommendedTypes": []
        },
        {
          "name": "_tranchesDepl",
          "description": "tranches deployer contract address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRedemptionTimeout(uint32)",
      "name": "setRedemptionTimeout",
      "description": "set redemption timeout.",
      "parameterDecorators": [
        {
          "name": "_blockNum",
          "description": "timeout (in block numbers).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTrancheAFixedPercentage(uint256,uint256)",
      "name": "setTrancheAFixedPercentage",
      "description": "set tranche redemption percentage scaled by 1e18.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        },
        {
          "name": "_newTrAPercentage",
          "description": "new tranche A RPB.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTrancheRedemptionPercentage(uint256,uint16)",
      "name": "setTrancheRedemptionPercentage",
      "description": "set tranche redemption percentage.",
      "parameterDecorators": [
        {
          "name": "_trancheNum",
          "description": "tranche number.",
          "recommendedTypes": []
        },
        {
          "name": "_redeemPercent",
          "description": "user redemption percent.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWETHGatewayAddress(address)",
      "name": "setWETHGatewayAddress",
      "description": "set Weth Gateway contract address.",
      "parameterDecorators": [
        {
          "name": "_wethGatewayAddress",
          "description": "weth gateway contract address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalBlocksPerYear()",
      "name": "totalBlocksPerYear",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "trancheAddresses(uint256)",
      "name": "trancheAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "buyerCoinAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "aTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "ATrancheAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "BTrancheAddress",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tranchePairsCounter()",
      "name": "tranchePairsCounter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "trancheParameters(uint256)",
      "name": "trancheParameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "trancheAFixedPercentage",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "trancheALastActionBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "storedTrancheAPrice",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "trancheACurrentRPB",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "redemptionPercentage",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        },
        {
          "name": "underlyingDecimals",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tranchesDeployerAddress()",
      "name": "tranchesDeployerAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferTokenToFeesCollector(address,uint256)",
      "name": "transferTokenToFeesCollector",
      "description": "transfer tokens in this contract to fees collector contract.",
      "parameterDecorators": [
        {
          "name": "_tokenContract",
          "description": "token contract address.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "token amount to be transferred.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "wethGatewayAddress()",
      "name": "wethGatewayAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawEthToFeesCollector(uint256)",
      "name": "withdrawEthToFeesCollector",
      "description": "transfer ethers in this contract to fees collector contract.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "ethers amount to be transferred.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "wrappedEthAddress()",
      "name": "wrappedEthAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}