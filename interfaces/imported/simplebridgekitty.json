{"schema":"../schema.json","tags":["bridges"],"name":"SimpleBridgeKitty","description":"","eventDecorators":[{"signature":"Death(uint256)","name":"Death","description":"Emitted when a new WPC speed is calculated for a market.","parameterDecorators":[{"name":"kittyId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Transfer(address,address,uint256)","name":"Transfer","description":"Emitted when a new WPC speed is calculated for a market.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":false},{"name":"to","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Approval(address,address,uint256)","name":"Approval","description":"Emitted when a new WPC speed is calculated for a market.","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":false},{"name":"approved","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Birth(address,uint256,uint256,uint256,uint256)","name":"Birth","description":"Emitted when a new WPC speed is calculated for a market.","parameterDecorators":[{"name":"owner","description":"","recommendedTypes":[],"indexed":false},{"name":"kittyId","description":"","recommendedTypes":[],"indexed":false},{"name":"matronId","description":"","recommendedTypes":[],"indexed":false},{"name":"sireId","description":"","recommendedTypes":[],"indexed":false},{"name":"genes","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"Introspection interface as per ERC-165 (https://github.com/ethereum/EIPs/issues/165). Returns true for any standardized interfaces implemented by this contract. We implement ERC-165 (obviously!) and ERC-721.","parameterDecorators":[{"name":"_interfaceID","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenMetadata(uint256,string)","name":"tokenMetadata","description":"Returns a URI pointing to a metadata package for this token conforming to ERC-721 (https://github.com/ethereum/EIPs/issues/721).","parameterDecorators":[{"name":"_tokenId","description":"The ID number of the Kitty whose metadata should be returned.","recommendedTypes":[]},{"name":"_preferredTransport","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"createKitty(uint256,address)","name":"createKitty","description":"we can create promo kittens, up to a limit.","parameterDecorators":[{"name":"_genes","description":"the encoded genes of the kitten to be created, any value is accepted.","recommendedTypes":[]},{"name":"_owner","description":"the future owner of the created kittens.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"name()","name":"name","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"approve(address,uint256)","name":"approve","description":"Grant another address the right to transfer a specific Kitty via transferFrom(). This is the preferred flow for transfering NFTs to contracts. Required for ERC-721 compliance.","parameterDecorators":[{"name":"_to","description":"The address to be granted transfer approval. Pass address(0) to clear all approvals.","recommendedTypes":[]},{"name":"_tokenId","description":"The ID of the Kitty that can be transferred if this call succeeds.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalSupply()","name":"totalSupply","description":"Returns the total number of Kitties currently in existence. Required for ERC-721 compliance.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferBridgeRole(address)","name":"transferBridgeRole","description":"","parameterDecorators":[{"name":"newBridge","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferFrom(address,address,uint256)","name":"transferFrom","description":"Transfer a Kitty owned by another address, for which the calling address has previously been granted transfer approval by the owner. Required for ERC-721 compliance.","parameterDecorators":[{"name":"_from","description":"The address that owns the Kitty to be transfered.","recommendedTypes":[]},{"name":"_to","description":"The address that should take ownership of the Kitty. Can be any address, including the caller.","recommendedTypes":[]},{"name":"_tokenId","description":"The ID of the Kitty to be transferred.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"mint(uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)","name":"mint","description":"","parameterDecorators":[{"name":"_tokenId","description":"","recommendedTypes":[]},{"name":"_isReady","description":"","recommendedTypes":[]},{"name":"_cooldownIndex","description":"","recommendedTypes":[]},{"name":"_nextActionAt","description":"","recommendedTypes":[]},{"name":"_siringWithId","description":"","recommendedTypes":[]},{"name":"_birthTime","description":"","recommendedTypes":[]},{"name":"_matronId","description":"","recommendedTypes":[]},{"name":"_sireId","description":"","recommendedTypes":[]},{"name":"_generation","description":"","recommendedTypes":[]},{"name":"_genes","description":"","recommendedTypes":[]},{"name":"_owner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"burn(uint256)","name":"burn","description":"","parameterDecorators":[{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"kittyIndexToApproved(uint256)","name":"kittyIndexToApproved","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ownerOf(uint256)","name":"ownerOf","description":"Returns the address currently assigned ownership of a given Kitty. Required for ERC-721 compliance.","parameterDecorators":[{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"owner","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOf(address)","name":"balanceOf","description":"Returns the number of Kitties owned by a specific address. Required for ERC-721 compliance.","parameterDecorators":[{"name":"_owner","description":"The owner address to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"count","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"tokensOfOwner(address)","name":"tokensOfOwner","description":"Returns a list of all Kitty IDs assigned to an address. This method MUST NEVER be called by smart contract code. First, it's fairly expensive (it walks the entire Kitty array looking for cats belonging to owner), but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.","parameterDecorators":[{"name":"_owner","description":"The owner whose Kitties we are interested in.","recommendedTypes":[]}],"returnDecorators":[{"name":"ownerTokens","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"symbol()","name":"symbol","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"kittyIndexToOwner(uint256)","name":"kittyIndexToOwner","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transfer(address,uint256)","name":"transfer","description":"Transfers a Kitty to another address. If transferring to a smart contract be VERY CAREFUL to ensure that it is aware of ERC-721 (or CryptoKitties specifically) or your Kitty may be lost forever. Seriously. Required for ERC-721 compliance.","parameterDecorators":[{"name":"_to","description":"The address of the recipient, can be a user or contract.","recommendedTypes":[]},{"name":"_tokenId","description":"The ID of the Kitty to transfer.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tokenURI(uint256)","name":"tokenURI","description":"","parameterDecorators":[{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"bridge()","name":"bridge","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getKitty(uint256)","name":"getKitty","description":"Returns all the relevant information about a specific kitty.","parameterDecorators":[{"name":"_id","description":"The ID of the kitty of interest.","recommendedTypes":[]}],"returnDecorators":[{"name":"isGestating","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"isReady","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"cooldownIndex","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"nextActionAt","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"siringWithId","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"birthTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"matronId","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"sireId","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"generation","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"genes","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Allows the current owner to transfer control of the contract to a newOwner.","parameterDecorators":[{"name":"newOwner","description":"The address to transfer ownership to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}