{"schema":"../schema.json","tags":[],"name":"MuCitadelMarketPlace","description":"","eventDecorators":[{"signature":"Ask(address,uint256,uint256,tuple[],uint256)","name":"Ask","description":"event for funds received.","parameterDecorators":[{"name":"seller","description":"","recommendedTypes":[],"indexed":true},{"name":"order","description":"","recommendedTypes":[],"indexed":true},{"name":"ethPrice","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenPrices","description":"","recommendedTypes":[],"indexed":true},{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"CancelSellToken(address,uint256)","name":"CancelSellToken","description":"event for funds received.","parameterDecorators":[{"name":"seller","description":"","recommendedTypes":[],"indexed":true},{"name":"order","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"FeeAddressTransferred(address,address)","name":"FeeAddressTransferred","description":"event for funds received.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"event for funds received.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SetMakerFeePercent(address,uint256,uint256)","name":"SetMakerFeePercent","description":"event for funds received.","parameterDecorators":[{"name":"setBy","description":"","recommendedTypes":[],"indexed":true},{"name":"oldFeePercent","description":"","recommendedTypes":[],"indexed":false},{"name":"newFeePercent","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetPriorityToken(string)","name":"SetPriorityToken","description":"event for funds received.","parameterDecorators":[{"name":"depositor","description":"who deposited value.","recommendedTypes":[],"indexed":false}]},{"signature":"SetTakerFeeFeePercent(address,uint256,uint256)","name":"SetTakerFeeFeePercent","description":"event for funds received.","parameterDecorators":[{"name":"setBy","description":"","recommendedTypes":[],"indexed":true},{"name":"oldFeePercent","description":"","recommendedTypes":[],"indexed":false},{"name":"newFeePercent","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Trade(address,address,uint256,bool,string,uint256,uint256,uint256)","name":"Trade","description":"event for funds received.","parameterDecorators":[{"name":"seller","description":"","recommendedTypes":[],"indexed":true},{"name":"buyer","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenId","description":"","recommendedTypes":[],"indexed":false},{"name":"byToken","description":"","recommendedTypes":[],"indexed":false},{"name":"symbol","description":"","recommendedTypes":[],"indexed":false},{"name":"quantity","description":"","recommendedTypes":[],"indexed":false},{"name":"price","description":"","recommendedTypes":[],"indexed":false},{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"setPrices(address,uint256,uint256,tuple[])","name":"setPrices","description":"event for funds received.","parameterDecorators":[{"name":"seller","description":"","recommendedTypes":[],"indexed":true},{"name":"order","description":"","recommendedTypes":[],"indexed":true},{"name":"ethPrice","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenPrices","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"ERC20Handler()","name":"ERC20Handler","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"PERCENTS_DIVIDER()","name":"PERCENTS_DIVIDER","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"PRIORITY_TOKEN()","name":"PRIORITY_TOKEN","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"buyToken(uint256,string,uint256)","name":"buyToken","description":"","parameterDecorators":[{"name":"_order","description":"","recommendedTypes":[]},{"name":"symbol","description":"","recommendedTypes":[]},{"name":"_quantity","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"cancelSellToken(uint256)","name":"cancelSellToken","description":"","parameterDecorators":[{"name":"_order","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"feeAddr()","name":"feeAddr","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getAskLength()","name":"getAskLength","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getAsks()","name":"getAsks","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getAsksByUser(address)","name":"getAsksByUser","description":"","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getOrder(uint256)","name":"getOrder","description":"","parameterDecorators":[{"name":"_order","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getOrdersKeyFromUser(address)","name":"getOrdersKeyFromUser","description":"","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"makerFee()","name":"makerFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nft()","name":"nft","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)","name":"onERC1155BatchReceived","description":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","parameterDecorators":[{"name":"operator","description":"The address which initiated the batch transfer (i.e. msg.sender).","recommendedTypes":[]},{"name":"from","description":"The address which previously owned the token.","recommendedTypes":[]},{"name":"ids","description":"An array containing ids of each token being transferred (order and length must match values array).","recommendedTypes":[]},{"name":"values","description":"An array containing amounts of each token being transferred (order and length must match ids array).","recommendedTypes":[]},{"name":"data","description":"Additional data with no specified format.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"onERC1155Received(address,address,uint256,uint256,bytes)","name":"onERC1155Received","description":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","parameterDecorators":[{"name":"operator","description":"The address which initiated the transfer (i.e. msg.sender).","recommendedTypes":[]},{"name":"from","description":"The address which previously owned the token.","recommendedTypes":[]},{"name":"id","description":"The ID of the token being transferred.","recommendedTypes":[]},{"name":"value","description":"The amount of tokens being transferred.","recommendedTypes":[]},{"name":"data","description":"Additional data with no specified format.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"priorityToken()","name":"priorityToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"readyToSellToken(uint256,uint256,uint256,string[],uint256[])","name":"readyToSellToken","description":"","parameterDecorators":[{"name":"_tokenId","description":"","recommendedTypes":[]},{"name":"_quantity","description":"","recommendedTypes":[]},{"name":"ethPrice","description":"","recommendedTypes":[]},{"name":"_symbols","description":"","recommendedTypes":[]},{"name":"_prices","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCurrentPrice(uint256,uint256,string[],uint256[])","name":"setCurrentPrice","description":"","parameterDecorators":[{"name":"_order","description":"","recommendedTypes":[]},{"name":"ethPrice","description":"","recommendedTypes":[]},{"name":"_symbols","description":"","recommendedTypes":[]},{"name":"_prices","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setFeeTakerFee(uint256)","name":"setFeeTakerFee","description":"","parameterDecorators":[{"name":"_takerPercent","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMakerFee(uint256)","name":"setMakerFee","description":"","parameterDecorators":[{"name":"_makerPercent","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPriorityToken(address)","name":"setPriorityToken","description":"","parameterDecorators":[{"name":"Addrs","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"takerFee()","name":"takerFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferFeeAddress(address)","name":"transferFeeAddress","description":"","parameterDecorators":[{"name":"_feeAddr","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}