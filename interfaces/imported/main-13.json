{
  "schema": "../schema.json",
  "tags": [],
  "name": "Main",
  "description": "",
  "eventDecorators": [
    {
      "signature": "BuyNFTEvent(address,address,uint256,uint256)",
      "name": "BuyNFTEvent",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MintEvent(address,uint256,uint256)",
      "name": "MintEvent",
      "description": "Emitted every time an order is broadcasted.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "buyNFT(address,address,uint256,uint256)",
      "name": "buyNFT",
      "description": "This method is used buy NFT.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "Owner Address.",
          "recommendedTypes": []
        },
        {
          "name": "buyer",
          "description": "Buyer Address.",
          "recommendedTypes": []
        },
        {
          "name": "tokenId",
          "description": "Token Id.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAvailableNfts()",
      "name": "getAvailableNfts",
      "description": "This method is used end any auction only auction creator can call.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "NftAvailableInfo Structure of any traded info.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "owner",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "tokenId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "nftSellPrice",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "uri",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOwnedNFTs(address)",
      "name": "getOwnedNFTs",
      "description": "This method is used to get owned nft of any owner.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "Any owner address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "TokenInfo Token Details.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "tokenId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "uri",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenUri(uint256)",
      "name": "getTokenUri",
      "description": "This method is used to get uri of any token.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "Any owner address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "string Token uri.",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mintNFT(address,uint256,uint256,string)",
      "name": "mintNFT",
      "description": "This method is used to Mint a new Token.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "nftSellPrice",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "uri",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint256 Token Id of the Minted Token.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "nftPrice(uint256)",
      "name": "nftPrice",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}