{"schema":"../schema.json","tags":[],"name":"MultiwalletContract","description":"This contract is for the Multiwallet. It keeps record of the available rewards for everyone, which can be checked and claimed when available.","eventDecorators":[{"signature":"OwnershipNominated(address,address)","name":"OwnershipNominated","description":"Emitted when a grant's owner is changed.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when a grant's owner is changed.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"acceptOwnership()","name":"acceptOwnership","description":"Nominated Owner can accept the Ownership of the contract. Can only be called by the nominated owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"accessibleBy(address)","name":"accessibleBy","description":"","parameterDecorators":[{"name":"add","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"campaignContract()","name":"campaignContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"claim(uint8)","name":"claim","description":"Function to transfer claimable amount to Recipient who calls this function.","parameterDecorators":[{"name":"recipientType","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimableBalance(uint8,address)","name":"claimableBalance","description":"","parameterDecorators":[{"name":"recipient","description":"","recommendedTypes":[]},{"name":"add","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"deMultiwallet(address,uint8,uint256)","name":"deMultiwallet","description":"Function to make amount claimable in multiwallet.","parameterDecorators":[{"name":"mAddress","description":"Address of the person whose multiwallet is to be updated.","recommendedTypes":[]},{"name":"mType","description":"Recipient Type of the person.","recommendedTypes":[]},{"name":"amount","description":"Amount to be deMultiwalleted(made claimable).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"governanceTokenAddress()","name":"governanceTokenAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"multiwallet(address,uint8,uint256)","name":"multiwallet","description":"Function to add values in multiwallet for Member, Certifier and AttentionSeeker.","parameterDecorators":[{"name":"mAddress","description":"Address of the person in whose multiwallet amount is to be added.","recommendedTypes":[]},{"name":"mType","description":"RecipientType of the person..","recommendedTypes":[]},{"name":"amount","description":"Amount to be added to multiwallet.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"multiwalletBalance(uint8,address)","name":"multiwalletBalance","description":"","parameterDecorators":[{"name":"recipient","description":"","recommendedTypes":[]},{"name":"add","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"multiwalletTransfer(address,uint8,address,uint8,uint256)","name":"multiwalletTransfer","description":"Function to transfer amount within multiwallet and make it claimable.","parameterDecorators":[{"name":"fromAddress","description":"Address of the person from whom multiwallet amount is to be transferred.","recommendedTypes":[]},{"name":"fromType","description":"Recipient Type of the person from whom multiwallet amount is to be transferred.","recommendedTypes":[]},{"name":"toAddress","description":"Address of the person from whom multiwallet amount is to be transferred.","recommendedTypes":[]},{"name":"toType","description":"Recipient Type of the person from whom multiwallet amount is to be transferred.","recommendedTypes":[]},{"name":"amount","description":"Amount to be deMultiwalleted.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"nominateNewOwner(address)","name":"nominateNewOwner","description":"Nominate new Owner of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setAllowance(address,bool)","name":"setAllowance","description":"","parameterDecorators":[{"name":"allow","description":"","recommendedTypes":[]},{"name":"value","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCampaignContract(address)","name":"setCampaignContract","description":"","parameterDecorators":[{"name":"campaign","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setGovernanceToken(address)","name":"setGovernanceToken","description":"","parameterDecorators":[{"name":"govTokenAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unMultiwallet(address,uint8,uint256)","name":"unMultiwallet","description":"Function to directly transfer back amount, instead of making it claimable.","parameterDecorators":[{"name":"mAddress","description":"Address of the person whose multiwallet is to be updated.","recommendedTypes":[]},{"name":"mType","description":"Recipient Type of the person.","recommendedTypes":[]},{"name":"amount","description":"Amount to be deMultiwalleted(made claimable).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}