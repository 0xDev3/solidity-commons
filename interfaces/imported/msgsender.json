{
  "schema": "../schema.json",
  "tags": [],
  "name": "MsgSender",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CallInitiated(address,uint256)",
      "name": "CallInitiated",
      "description": "event emitted when a cross chain call is initiated.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "remoteNetworkId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ForwardCall(address,bytes32,uint256,address,bytes)",
      "name": "ForwardCall",
      "description": "event emitted when a call si forwarded.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "chainId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "destinationContract",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "methodData",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FundsSaved(address,address,address,uint256)",
      "name": "FundsSaved",
      "description": "event emitted when airdropped tokens are saved from the contract.",
      "parameterDecorators": [
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NetworkAddedToWhitelist(address,uint256)",
      "name": "NetworkAddedToWhitelist",
      "description": "event emitted when a new remote chain id is added to the whitelist.",
      "parameterDecorators": [
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "chainId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NetworkRemovedFromWhitelist(address,uint256)",
      "name": "NetworkRemovedFromWhitelist",
      "description": "event emitted when an existing remote chain id is removed from the whitelist.",
      "parameterDecorators": [
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "chainId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PauseNetwork(address,uint256)",
      "name": "PauseNetwork",
      "description": "event emitted when an whitelisted remote chain id is paused.",
      "parameterDecorators": [
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "networkID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UnpauseNetwork(address,uint256)",
      "name": "UnpauseNetwork",
      "description": "event emitted when an whitelisted remote chain id is unpaused.",
      "parameterDecorators": [
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "networkID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addNetwork(uint256)",
      "name": "addNetwork",
      "description": "adds a remote chain id to the whitelist.",
      "parameterDecorators": [
        {
          "name": "_chainId",
          "description": "network id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "hasBeenForwarded(bytes32)",
      "name": "hasBeenForwarded",
      "description": "true when a call was successfully initiated.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize()",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lastForwardedCall()",
      "name": "lastForwardedCall",
      "description": "last initiated call.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nonce()",
      "name": "nonce",
      "description": "used for generating the unique id.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "pauses the contract entirely.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pauseNetwork(uint256)",
      "name": "pauseNetwork",
      "description": "pauses a whitelisted remote chain id.",
      "parameterDecorators": [
        {
          "name": "_chainId",
          "description": "network id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pausedNetwork(uint256)",
      "name": "pausedNetwork",
      "description": "pausable per network.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registerCrossFunctionCall(uint256,address,bytes)",
      "name": "registerCrossFunctionCall",
      "description": "initiates a new cross function call; fees will be taken on the destination layer to avoid rebalancing and user has to pre-fund his MsgReceiver contract.",
      "parameterDecorators": [
        {
          "name": "_chainId",
          "description": "destination chain id.",
          "recommendedTypes": []
        },
        {
          "name": "_destinationContract",
          "description": "contract you need to call on the other layer.",
          "recommendedTypes": []
        },
        {
          "name": "_methodData",
          "description": "encoded data used to call the contract on the other layer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeNetwork(uint256)",
      "name": "removeNetwork",
      "description": "removes a remote chain id from the whitelist.",
      "parameterDecorators": [
        {
          "name": "_chainId",
          "description": "network id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "saveAirdroppedFunds(address,address)",
      "name": "saveAirdroppedFunds",
      "description": "used to retrieve airdropped tokens from the contract.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "token address.",
          "recommendedTypes": []
        },
        {
          "name": "_receiver",
          "description": "funds receiver.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "unpauses the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpauseNetwork(uint256)",
      "name": "unpauseNetwork",
      "description": "unpauses a whitelisted remote chain id.",
      "parameterDecorators": [
        {
          "name": "_chainId",
          "description": "network id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "whitelistedNeworks(uint256)",
      "name": "whitelistedNeworks",
      "description": "networks that the contract is able to interact with.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}