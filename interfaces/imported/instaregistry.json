{
  "schema": "../schema.json",
  "tags": [],
  "name": "InstaRegistry",
  "description": "InstaRegistry. Initializing Registry.",
  "eventDecorators": [
    {
      "signature": "Created(address,address,address)",
      "name": "Created",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "implementation",
          "description": "The new subToken implementation*.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "proxy",
          "description": "The variable debt token proxy address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogDisableLogic(address)",
      "name": "LogDisableLogic",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "logicAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogEnableLogic(address)",
      "name": "LogEnableLogic",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "logicAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogEnableStaticLogic(address)",
      "name": "LogEnableStaticLogic",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "logicAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogRecord(address,address,address)",
      "name": "LogRecord",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "implementation",
          "description": "The new subToken implementation*.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "proxy",
          "description": "The variable debt token proxy address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogSetAddress(string,address)",
      "name": "LogSetAddress",
      "description": "Emitted when an update to `requestTokensRemoved` is made. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "build()",
      "name": "build",
      "description": "Deploys a new proxy instance and sets custom owner of proxy Throws if the owner already have a UserWallet.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "proxy",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "build(address)",
      "name": "build",
      "description": "update the proxy record whenever owner changed on any proxy Throws if msg.sender is not a proxy contract created via this contract.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "proxy",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "disableLogic(address)",
      "name": "disableLogic",
      "description": "Disable logic proxy address.",
      "parameterDecorators": [
        {
          "name": "_logicAddress",
          "description": "(address).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enableLogic(address)",
      "name": "enableLogic",
      "description": "Enable logic proxy address.",
      "parameterDecorators": [
        {
          "name": "_logicAddress",
          "description": "(address).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enableStaticLogic(address)",
      "name": "enableStaticLogic",
      "description": "Sets the static logic proxy to true static proxies mostly contains the logic for withdrawal of assets and can never be false to freely let user withdraw their assets.",
      "parameterDecorators": [
        {
          "name": "_logicAddress",
          "description": "(address).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAddress(string)",
      "name": "getAddress",
      "description": "Get the address from system registry.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "(string).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "logic(address)",
      "name": "logic",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_logicAddress",
          "description": "(address).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "logicProxies(address)",
      "name": "logicProxies",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "logicProxiesStatic(address)",
      "name": "logicProxiesStatic",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "logicStatic(address)",
      "name": "logicStatic",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_logicAddress",
          "description": "(address).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proxies(address)",
      "name": "proxies",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "record(address,address)",
      "name": "record",
      "description": "Transafers ownership.",
      "parameterDecorators": [
        {
          "name": "_currentOwner",
          "description": "(address) Current Owner.",
          "recommendedTypes": []
        },
        {
          "name": "_nextOwner",
          "description": "(address) Next Owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAddress(string,address)",
      "name": "setAddress",
      "description": "Set new address in system registry.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "(string) Role name.",
          "recommendedTypes": []
        },
        {
          "name": "_userAddress",
          "description": "(string) User Address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}