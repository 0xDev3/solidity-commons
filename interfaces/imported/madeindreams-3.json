{"schema":"../schema.json","tags":[],"name":"MadeInDreams","description":"","eventDecorators":[{"signature":"Nodes(uint256,address)","name":"Nodes","description":"Emitted when pendingControllerImplementation is changed. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"nodeId","description":"","recommendedTypes":[],"indexed":false},{"name":"nodeAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when pendingControllerImplementation is changed. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Trade(uint256,uint256)","name":"Trade","description":"Emitted when pendingControllerImplementation is changed. Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"nodeId","description":"","recommendedTypes":[],"indexed":false},{"name":"orderId","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"executeTrade(uint256,uint256)","name":"executeTrade","description":"this function get called when an action is made on the protocol by a node. This is the function that get's called.","parameterDecorators":[{"name":"_nodeId","description":"The id of the node contract.","recommendedTypes":[]},{"name":"_orderId","description":"The id of order to fill.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"mid()","name":"mid","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"nodeCount()","name":"nodeCount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nodes(uint256)","name":"nodes","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"nodeId","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"nodeAddress","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"orderCount()","name":"orderCount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"registerNode()","name":"registerNode","description":"This will make your DEX contract available to trade on the protocol. msg.sender is the contract that call the register.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"topNode(address)","name":"topNode","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"topTrader(address)","name":"topTrader","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"tradeCount()","name":"tradeCount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unregisteredFees()","name":"unregisteredFees","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}