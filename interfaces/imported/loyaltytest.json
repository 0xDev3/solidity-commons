{"schema":"../schema.json","tags":[],"name":"LoyaltyTest","description":"","eventDecorators":[{"signature":"BaseFeeUpdated(address,uint256)","name":"BaseFeeUpdated","description":"event emitted when a user has unstaked a token.","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[],"indexed":true},{"name":"_baseFee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Deposit(address,uint256,uint256)","name":"Deposit","description":"event emitted when a user has unstaked a token.","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[],"indexed":true},{"name":"_id","description":"","recommendedTypes":[],"indexed":false},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DiscountMultiplierUpdated(address,uint256)","name":"DiscountMultiplierUpdated","description":"event emitted when a user has unstaked a token.","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[],"indexed":true},{"name":"_multiplier","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LoyaltyUpdated(address,uint256,uint256)","name":"LoyaltyUpdated","description":"event emitted when a user has unstaked a token.","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[],"indexed":true},{"name":"_tranche","description":"","recommendedTypes":[],"indexed":false},{"name":"_points","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ProtocolFeeUpdated(address,uint256)","name":"ProtocolFeeUpdated","description":"event emitted when a user has unstaked a token.","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[],"indexed":true},{"name":"_protocolFee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TrancheUpdated(uint256,uint256)","name":"TrancheUpdated","description":"event emitted when a user has unstaked a token.","parameterDecorators":[{"name":"_tranche","description":"","recommendedTypes":[],"indexed":false},{"name":"_points","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdraw(address,uint256,uint256)","name":"Withdraw","description":"event emitted when a user has unstaked a token.","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[],"indexed":true},{"name":"_id","description":"","recommendedTypes":[],"indexed":false},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"baseFee()","name":"baseFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"blacklistToken(uint256)","name":"blacklistToken","description":"","parameterDecorators":[{"name":"_id","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deposit(uint256,uint256)","name":"deposit","description":"","parameterDecorators":[{"name":"_id","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"discountMultiplier()","name":"discountMultiplier","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getBoost(address)","name":"getBoost","description":"","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getLoyaltyStats(address)","name":"getLoyaltyStats","description":"","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_stats","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getProtocolFee(uint256)","name":"getProtocolFee","description":"","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalFee(address,uint256)","name":"getTotalFee","description":"","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalShares(address,uint256)","name":"getTotalShares","description":"","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"loyaltyTranches(uint256)","name":"loyaltyTranches","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)","name":"onERC1155BatchReceived","description":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","parameterDecorators":[{"name":"operator","description":"The address which initiated the batch transfer (i.e. msg.sender).","recommendedTypes":[]},{"name":"from","description":"The address which previously owned the token.","recommendedTypes":[]},{"name":"ids","description":"An array containing ids of each token being transferred (order and length must match values array).","recommendedTypes":[]},{"name":"values","description":"An array containing amounts of each token being transferred (order and length must match ids array).","recommendedTypes":[]},{"name":"data","description":"Additional data with no specified format.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"onERC1155Received(address,address,uint256,uint256,bytes)","name":"onERC1155Received","description":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","parameterDecorators":[{"name":"operator","description":"The address which initiated the transfer (i.e. msg.sender).","recommendedTypes":[]},{"name":"from","description":"The address which previously owned the token.","recommendedTypes":[]},{"name":"id","description":"The ID of the token being transferred.","recommendedTypes":[]},{"name":"value","description":"The amount of tokens being transferred.","recommendedTypes":[]},{"name":"data","description":"Additional data with no specified format.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"protocolFee()","name":"protocolFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setBaseFee(uint256)","name":"setBaseFee","description":"","parameterDecorators":[{"name":"_newFee","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setDiscountMultiplier(uint256)","name":"setDiscountMultiplier","description":"","parameterDecorators":[{"name":"_newMultiplier","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setLoyaltyPoint(address,uint256)","name":"setLoyaltyPoint","description":"","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[]},{"name":"_points","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setLoyaltyTranche(uint256,uint256)","name":"setLoyaltyTranche","description":"","parameterDecorators":[{"name":"_tranche","description":"","recommendedTypes":[]},{"name":"_points","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setProtocolFee(uint256)","name":"setProtocolFee","description":"","parameterDecorators":[{"name":"_newFee","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"staked(uint256,address)","name":"staked","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"updatePoints(address)","name":"updatePoints","description":"","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateTranche(address)","name":"updateTranche","description":"","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userLoyalty(address)","name":"userLoyalty","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"points","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"tranche","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"boost","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"staked","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"whitelistToken(uint256)","name":"whitelistToken","description":"","parameterDecorators":[{"name":"_id","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"whitelistedTokens(uint256)","name":"whitelistedTokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256,uint256)","name":"withdraw","description":"","parameterDecorators":[{"name":"_id","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}