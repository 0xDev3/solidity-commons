{
  "schema": "../schema.json",
  "tags": [],
  "name": "MultiSign",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "UpgradeCreated(address,address,address,uint256)",
      "name": "UpgradeCreated",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "implementation",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "proxyId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpgradeDelete(address,uint256)",
      "name": "UpgradeDelete",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "proxyId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpgradeFunds(address,address,address,uint256)",
      "name": "UpgradeFunds",
      "description": "Emitted when a Bank's capital is rebalanced.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "implementation",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "proxyId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addManager(address)",
      "name": "addManager",
      "description": "",
      "parameterDecorators": [
        {
          "name": "manager",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeProxyAdmin(address,address)",
      "name": "changeProxyAdmin",
      "description": "Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`.",
      "parameterDecorators": [
        {
          "name": "proxy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newAdmin",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deleteUpgrades(uint256)",
      "name": "deleteUpgrades",
      "description": "",
      "parameterDecorators": [
        {
          "name": "proxyId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getProxyAdmin(address)",
      "name": "getProxyAdmin",
      "description": "Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`.",
      "parameterDecorators": [
        {
          "name": "proxy",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProxyImplementation(address)",
      "name": "getProxyImplementation",
      "description": "Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`.",
      "parameterDecorators": [
        {
          "name": "proxy",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proxyUpgrade(address,address)",
      "name": "proxyUpgrade",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_implementation",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeManager(address)",
      "name": "removeManager",
      "description": "",
      "parameterDecorators": [
        {
          "name": "manager",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "signUpgrade(uint256)",
      "name": "signUpgrade",
      "description": "",
      "parameterDecorators": [
        {
          "name": "proxyId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgrade(address,address)",
      "name": "upgrade",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_proxy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_implementation",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeAndCall(address,address,bytes)",
      "name": "upgradeAndCall",
      "description": "Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`.",
      "parameterDecorators": [
        {
          "name": "proxy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "implementation",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeTo(address,address,address)",
      "name": "upgradeTo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "implementation",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}