{
  "schema": "../schema.json",
  "tags": [
    "strategies"
  ],
  "name": "StabilizeStrategyDiggV1",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Harvest(uint256,uint256)",
      "name": "Harvest",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "harvested",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NoTrade(uint256)",
      "name": "NoTrade",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "blocknumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetController(address)",
      "name": "SetController",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "controller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetGovernance(address)",
      "name": "SetGovernance",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetPerformanceFeeGovernance(uint256)",
      "name": "SetPerformanceFeeGovernance",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "performanceFeeGovernance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetPerformanceFeeStrategist(uint256)",
      "name": "SetPerformanceFeeStrategist",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "performanceFeeStrategist",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetStrategist(address)",
      "name": "SetStrategist",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "strategist",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetWithdrawalFee(uint256)",
      "name": "SetWithdrawalFee",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "withdrawalFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Tend(uint256)",
      "name": "Tend",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "tended",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TradeState(uint256,int256,uint256,uint256,uint256,uint256)",
      "name": "TradeState",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "soldAmountNormalized",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "percentPriceChange",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "soldPercent",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "oldSupply",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newSupply",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "blocknumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdraw(uint256)",
      "name": "Withdraw",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawAll(uint256)",
      "name": "WithdrawAll",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawOther(address,uint256)",
      "name": "WithdrawOther",
      "description": "Emitted when IDLE rate is changed. To be emitted when a withdrawal occurs.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "MAX_FEE()",
      "name": "MAX_FEE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "__BaseStrategy_init(address,address,address,address,address)",
      "name": "__BaseStrategy_init",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_governance",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_strategist",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_controller",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_keeper",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_guardian",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceOf()",
      "name": "balanceOf",
      "description": "Get the total balance of want realized in the strategy, whether idle or active in Strategy positions.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOfPool()",
      "name": "balanceOfPool",
      "description": "Not used.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOfWant()",
      "name": "balanceOfWant",
      "description": "Get the balance of want held idle in the Strategy.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "baseStrategyVersion()",
      "name": "baseStrategyVersion",
      "description": "===== View Functions =====.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "controller()",
      "name": "controller",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit()",
      "name": "deposit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "diggExchangeTreasury()",
      "name": "diggExchangeTreasury",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "diggInExpansion()",
      "name": "diggInExpansion",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "diggSupplyChangeFactor()",
      "name": "diggSupplyChangeFactor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "executeTradeBatch()",
      "name": "executeTradeBatch",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getDiggPrice()",
      "name": "getDiggPrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDiggUSDPrice()",
      "name": "getDiggUSDPrice",
      "description": "===== View Functions =====.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getName()",
      "name": "getName",
      "description": "User-friendly name for this strategy for purposes of convenient reading.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProtectedTokens()",
      "name": "getProtectedTokens",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenAddress(uint256)",
      "name": "getTokenAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWBTCUSDPrice()",
      "name": "getWBTCUSDPrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governance()",
      "name": "governance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governancePullSomeCollateral(uint256)",
      "name": "governancePullSomeCollateral",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "guardian()",
      "name": "guardian",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,address,address,address,uint256,address[2],uint256[4])",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_governance",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_strategist",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_controller",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_keeper",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_guardian",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lockedUntil",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_vaultConfig",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_feeConfig",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isTendable()",
      "name": "isTendable",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "keeper()",
      "name": "keeper",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastDiggPrice()",
      "name": "lastDiggPrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastDiggTotalSupply()",
      "name": "lastDiggTotalSupply",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxGainedDiggSellPercent()",
      "name": "maxGainedDiggSellPercent",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxOracleLag()",
      "name": "maxOracleLag",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxWBTCSellPercent()",
      "name": "maxWBTCSellPercent",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "===== Permissioned Actions: Authoized Contract Pausers =====.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "performanceFeeGovernance()",
      "name": "performanceFeeGovernance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "performanceFeeStrategist()",
      "name": "performanceFeeStrategist",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rebalance()",
      "name": "rebalance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setController(address)",
      "name": "setController",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_controller",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDiggExchangeTreasury(address)",
      "name": "setDiggExchangeTreasury",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_treasury",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGovernance(address)",
      "name": "setGovernance",
      "description": "Change governance addressCan only be changed by governance itself.",
      "parameterDecorators": [
        {
          "name": "_governance",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGuardian(address)",
      "name": "setGuardian",
      "description": "===== Permissioned Actions: Governance =====.",
      "parameterDecorators": [
        {
          "name": "_guardian",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setKeeper(address)",
      "name": "setKeeper",
      "description": "Change keeper addressCan only be changed by governance itself.",
      "parameterDecorators": [
        {
          "name": "_keeper",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOracleLagTime(uint256)",
      "name": "setOracleLagTime",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_time",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPerformanceFeeGovernance(uint256)",
      "name": "setPerformanceFeeGovernance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_performanceFeeGovernance",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPerformanceFeeStrategist(uint256)",
      "name": "setPerformanceFeeStrategist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_performanceFeeStrategist",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSellFactorsAndPercents(uint256,uint256,uint256,uint256,uint256)",
      "name": "setSellFactorsAndPercents",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_dFactor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_wFactor",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_wAmplifier",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_mPDigg",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_mPWBTC",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setStabilizeFee(uint256)",
      "name": "setStabilizeFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setStabilizeVault(address)",
      "name": "setStabilizeVault",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_vault",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setStrategist(address)",
      "name": "setStrategist",
      "description": "Change strategist addressCan only be changed by governance itself.",
      "parameterDecorators": [
        {
          "name": "_strategist",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTradingBatchSize(uint256)",
      "name": "setTradingBatchSize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_size",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWithdrawalFee(uint256)",
      "name": "setWithdrawalFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_withdrawalFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWithdrawalMaxDeviationThreshold(uint256)",
      "name": "setWithdrawalMaxDeviationThreshold",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_threshold",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stabilizeFee()",
      "name": "stabilizeFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stabilizeVault()",
      "name": "stabilizeVault",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "strategist()",
      "name": "strategist",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "strategyLockedUntil()",
      "name": "strategyLockedUntil",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tradeAmountLeft()",
      "name": "tradeAmountLeft",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tradeBatchSize()",
      "name": "tradeBatchSize",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniswap()",
      "name": "uniswap",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "version()",
      "name": "version",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "want()",
      "name": "want",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "wbtcSellAmplificationFactor()",
      "name": "wbtcSellAmplificationFactor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "wbtcSupplyChangeFactor()",
      "name": "wbtcSupplyChangeFactor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "Withdraw partial funds from the strategy, unrolling from strategy positions as necessaryProcesses withdrawal fee if present. If it fails to recover sufficient funds (defined by withdrawalMaxDeviationThreshold), the withdrawal should fail so that this unexpected behavior can be investigated.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawAll()",
      "name": "withdrawAll",
      "description": "Controller-only function to Withdraw partial funds, normally used with a vault withdrawal.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawOther(address)",
      "name": "withdrawOther",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawalFee()",
      "name": "withdrawalFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawalMaxDeviationThreshold()",
      "name": "withdrawalMaxDeviationThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}