{
  "schema": "../schema.json",
  "tags": [],
  "name": "MCR",
  "description": "",
  "eventDecorators": [
    {
      "signature": "MCREvent(uint256,uint256,bytes4[],uint256[],uint256,uint256,uint256)",
      "name": "MCREvent",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "date",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "allCurr",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "allCurrRates",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "mcrEtherx100",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "mcrPercx100",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "vFull",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addMCRData(uint256,uint256,uint256,bytes4[],uint256[],uint64)",
      "name": "addMCRData",
      "description": "Adds new MCR data.",
      "parameterDecorators": [
        {
          "name": "mcrP",
          "description": "Minimum Capital Requirement in percentage.",
          "recommendedTypes": []
        },
        {
          "name": "mcrE",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "vF",
          "description": "Pool fund value in Ether used in the last full daily calculation of the Capital model.",
          "recommendedTypes": []
        },
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_threeDayAvg",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "onlyDate",
          "description": "Date(yyyymmdd) at which MCR details are getting added.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeDependentContractAddress()",
      "name": "changeDependentContractAddress",
      "description": "Iupgradable Interface to update dependent contract address.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMasterAddress(address)",
      "name": "changeMasterAddress",
      "description": "change master address.",
      "parameterDecorators": [
        {
          "name": "_masterAddress",
          "description": "is the new address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "dynamicMincapIncrementx100()",
      "name": "dynamicMincapIncrementx100",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dynamicMincapThresholdx100()",
      "name": "dynamicMincapThresholdx100",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllSumAssurance()",
      "name": "getAllSumAssurance",
      "description": "Gets total sum assured (in ETH).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLastMCREther()",
      "name": "getLastMCREther",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getThresholdValues(uint256,uint256,uint256,uint256)",
      "name": "getThresholdValues",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vtp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "vF",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "totalSA",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "minCap",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "lowerThreshold",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "upperThreshold",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUintParameters(bytes8)",
      "name": "getUintParameters",
      "description": "Gets Uint Parameters of a code.",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "whose details we want.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "codeVal",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes8"
        },
        {
          "name": "val",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mr()",
      "name": "mr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ms()",
      "name": "ms",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nxMasterAddress()",
      "name": "nxMasterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pd()",
      "name": "pd",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pool()",
      "name": "pool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalCategory()",
      "name": "proposalCategory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "qd()",
      "name": "qd",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "td()",
      "name": "td",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tk()",
      "name": "tk",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateUintParameters(bytes8,uint256)",
      "name": "updateUintParameters",
      "description": "Updates Uint Parameters of a code.",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "whose details we want to update.",
          "recommendedTypes": []
        },
        {
          "name": "val",
          "description": "value to set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "variableMincap()",
      "name": "variableMincap",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}