{
  "schema": "../schema.json",
  "tags": [
    "vesting",
    "strategies",
    "compound"
  ],
  "name": "CompoundStrategy",
  "description": "OUSD Compound Strategy. Investment strategy for investing stablecoins via Compound.",
  "eventDecorators": [
    {
      "signature": "SkippedWithdrawal(address,uint256)",
      "name": "SkippedWithdrawal",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PTokenAdded(address,address)",
      "name": "PTokenAdded",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_pToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PTokenRemoved(address,address)",
      "name": "PTokenRemoved",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_pToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deposit(address,address,uint256)",
      "name": "Deposit",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_pToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdrawal(address,address,uint256)",
      "name": "Withdrawal",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_pToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardTokenCollected(address,uint256)",
      "name": "RewardTokenCollected",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PendingGovernorshipTransfer(address,address)",
      "name": "PendingGovernorshipTransfer",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "previousGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "GovernorshipTransferred(address,address)",
      "name": "GovernorshipTransferred",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "previousGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newGovernor",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "collectRewardToken()",
      "name": "collectRewardToken",
      "description": "Collect accumulated reward token (COMP) and send to Vault.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "governor()",
      "name": "governor",
      "description": "Returns the address of the current Governor.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setPTokenAddress(address,address)",
      "name": "setPTokenAddress",
      "description": "Provide support for asset by passing its pToken address. This method can only be called by the system Governor.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "Address for the asset.",
          "recommendedTypes": []
        },
        {
          "name": "_pToken",
          "description": "Address for the corresponding platform token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "assetToPToken(address)",
      "name": "assetToPToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferToken(address,uint256)",
      "name": "transferToken",
      "description": "Transfer token to governor. Intended for recovering tokens stuck in strategy contracts, i.e. mistaken sends.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "Address for the asset.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Amount of the asset to transfer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardTokenAddress()",
      "name": "rewardTokenAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vaultAddress()",
      "name": "vaultAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(address,uint256)",
      "name": "deposit",
      "description": "Deposit asset into Compound.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "Address of asset to deposit.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Amount of asset to deposit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardLiquidationThreshold()",
      "name": "rewardLiquidationThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimGovernance()",
      "name": "claimGovernance",
      "description": "Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "checkBalance(address)",
      "name": "checkBalance",
      "description": "Get the total asset value held in the platform This includes any interest that was generated since depositing Compound exchange rate between the cToken and asset gradually increases, causing the cToken to be worth more corresponding asset.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "Address of the asset.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,address,address[],address[])",
      "name": "initialize",
      "description": "Internal initialize function, to set up initial internal state.",
      "parameterDecorators": [
        {
          "name": "_platformAddress",
          "description": "jGeneric platform address.",
          "recommendedTypes": []
        },
        {
          "name": "_vaultAddress",
          "description": "Address of the Vault.",
          "recommendedTypes": []
        },
        {
          "name": "_rewardTokenAddress",
          "description": "Address of reward token for platform.",
          "recommendedTypes": []
        },
        {
          "name": "_assets",
          "description": "Addresses of initial supported assets.",
          "recommendedTypes": []
        },
        {
          "name": "_pTokens",
          "description": "Platform Token corresponding addresses.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawAll()",
      "name": "withdrawAll",
      "description": "Remove all assets from platform and send them to Vault contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removePToken(uint256)",
      "name": "removePToken",
      "description": "Remove a supported asset by passing its index. This method can only be called by the system Governor.",
      "parameterDecorators": [
        {
          "name": "_assetIndex",
          "description": "Index of the asset to be removed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardTokenAddress(address)",
      "name": "setRewardTokenAddress",
      "description": "Set the reward token address.",
      "parameterDecorators": [
        {
          "name": "_rewardTokenAddress",
          "description": "Address of the reward token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsAsset(address)",
      "name": "supportsAsset",
      "description": "Retuns bool indicating whether asset is supported by strategy.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "Address of the asset.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "safeApproveAllTokens()",
      "name": "safeApproveAllTokens",
      "description": "Approve the spending of all assets by their corresponding cToken, if for some reason is it necessary.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isGovernor()",
      "name": "isGovernor",
      "description": "Returns true if the caller is the current Governor.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setRewardLiquidationThreshold(uint256)",
      "name": "setRewardLiquidationThreshold",
      "description": "Set the reward token liquidation threshold.",
      "parameterDecorators": [
        {
          "name": "_threshold",
          "description": "Threshold amount in decimals of reward token that will cause the Vault to claim and withdrawAll on allocate() calls.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferGovernance(address)",
      "name": "transferGovernance",
      "description": "Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete.",
      "parameterDecorators": [
        {
          "name": "_newGovernor",
          "description": "Address of the new Governor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(address,address,uint256)",
      "name": "withdraw",
      "description": "Withdraw asset from Compound.",
      "parameterDecorators": [
        {
          "name": "_recipient",
          "description": "Address to receive withdrawn asset.",
          "recommendedTypes": []
        },
        {
          "name": "_asset",
          "description": "Address of asset to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Amount of asset to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "platformAddress()",
      "name": "platformAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}