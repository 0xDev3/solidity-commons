{
  "schema": "../schema.json",
  "tags": [],
  "name": "PWN",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event for token purchase logging. Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptOffer(bytes32)",
      "name": "acceptOffer",
      "description": "acceptOffer. through this function a borrower can accept an existing offera UI should do an off-chain balance check on the lender side to make sure the call won't throw.",
      "parameterDecorators": [
        {
          "name": "_offer",
          "description": "Identifier of the offer to be accepted.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if successful.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimDeed(uint256)",
      "name": "claimDeed",
      "description": "claim Deed. The current Deed owner can call this function if the Deed is expired or payed back.",
      "parameterDecorators": [
        {
          "name": "_did",
          "description": "Deed ID of the deed to be claimed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if successful.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createDeed(address,uint8,uint32,uint256,uint256)",
      "name": "createDeed",
      "description": "createDeed - sets & locks collateral. for UI integrations is this the function enabling creation of a new Deed token.",
      "parameterDecorators": [
        {
          "name": "_assetAddress",
          "description": "Address of the asset contract.",
          "recommendedTypes": []
        },
        {
          "name": "_assetCategory",
          "description": "Category of the asset - see { MultiToken.sol }.",
          "recommendedTypes": []
        },
        {
          "name": "_duration",
          "description": "Loan duration in seconds.",
          "recommendedTypes": []
        },
        {
          "name": "_assetId",
          "description": "ID of an ERC721 or ERC1155 token || 0 in case the token doesn't have IDs.",
          "recommendedTypes": []
        },
        {
          "name": "_assetAmount",
          "description": "Amount of an ERC20 or ERC1155 token || 0 in case of NFTs.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "a Deed ID of the newly created Deed.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deed()",
      "name": "deed",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "makeOffer(address,uint256,uint256,uint256)",
      "name": "makeOffer",
      "description": "makeOffer. this is the function used by lenders to cast their offersthis function doesn't assume the asset is approved yet for PWNVaultthis function requires lender to have a sufficient balance.",
      "parameterDecorators": [
        {
          "name": "_assetAddress",
          "description": "Address of the asset contract.",
          "recommendedTypes": []
        },
        {
          "name": "_assetAmount",
          "description": "Amount of an ERC20 token to be offered as loan.",
          "recommendedTypes": []
        },
        {
          "name": "_did",
          "description": "ID of the Deed the offer should be bound to.",
          "recommendedTypes": []
        },
        {
          "name": "_toBePaid",
          "description": "Amount to be paid back by the borrower.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "a hash of the newly created offer.",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "repayLoan(uint256)",
      "name": "repayLoan",
      "description": "repayLoan. the borrower can pay back the funds through this functionthe function assumes the asset (and amount to be paid back) to be returned is approved for PWNVaultthe function assumes the borrower has the full amount to be paid back in their account.",
      "parameterDecorators": [
        {
          "name": "_did",
          "description": "Deed ID of the deed being paid back.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if successful.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeDeed(uint256)",
      "name": "revokeDeed",
      "description": "revokeDeed. through this function the borrower can delete the Deed token given no offer was accepted.",
      "parameterDecorators": [
        {
          "name": "_did",
          "description": "Deed ID specifying the concrete Deed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeOffer(bytes32)",
      "name": "revokeOffer",
      "description": "revokeOffer. this is the function lenders can use to remove their offers on Deeds they are in the stage of getting offers.",
      "parameterDecorators": [
        {
          "name": "_offer",
          "description": "Identifier of the offer to be revoked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vault()",
      "name": "vault",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}