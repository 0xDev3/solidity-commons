{
  "schema": "../schema.json",
  "tags": [
    "lending",
    "aave"
  ],
  "name": "LendingPoolAddressesProviderRegistry",
  "description": "LendingPoolAddressesProviderRegistry contract. Main registry of LendingPoolAddressesProvider of multiple Aave protocol's markets - Used for indexing purposes of Aave protocol's markets - The id assigned to a LendingPoolAddressesProvider refers to the market it is connected with, for example with `0` for the Aave main market and `1` for the next created.",
  "eventDecorators": [
    {
      "signature": "AddressesProviderRegistered(address)",
      "name": "AddressesProviderRegistered",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": [
        {
          "name": "newAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AddressesProviderUnregistered(address)",
      "name": "AddressesProviderUnregistered",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": [
        {
          "name": "newAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "getAddressesProviderIdByAddress(address)",
      "name": "getAddressesProviderIdByAddress",
      "description": "Returns the id on a registered LendingPoolAddressesProvider.",
      "parameterDecorators": [
        {
          "name": "addressesProvider",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The id or 0 if the LendingPoolAddressesProvider is not registered.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAddressesProvidersList()",
      "name": "getAddressesProvidersList",
      "description": "Returns the list of registered addresses provider.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The list of addresses provider, potentially containing address(0) elements*.",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registerAddressesProvider(address,uint256)",
      "name": "registerAddressesProvider",
      "description": "Registers an addresses provider.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "The address of the new LendingPoolAddressesProvider.",
          "recommendedTypes": []
        },
        {
          "name": "id",
          "description": "The id for the new LendingPoolAddressesProvider, referring to the market it belongs to*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unregisterAddressesProvider(address)",
      "name": "unregisterAddressesProvider",
      "description": "Removes a LendingPoolAddressesProvider from the list of registered addresses provider.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "The LendingPoolAddressesProvider address*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}