{
  "schema": "../schema.json",
  "tags": [],
  "name": "Barn",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SheepClaimed(uint256,uint256,bool)",
      "name": "SheepClaimed",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "earned",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "unstaked",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenStaked(address,uint256,uint256)",
      "name": "TokenStaked",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WolfClaimed(uint256,uint256,bool)",
      "name": "WolfClaimed",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "earned",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "unstaked",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DAILY_WOOL_RATE()",
      "name": "DAILY_WOOL_RATE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAXIMUM_GLOBAL_WOOL()",
      "name": "MAXIMUM_GLOBAL_WOOL",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAX_ALPHA()",
      "name": "MAX_ALPHA",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MINIMUM_TO_EXIT()",
      "name": "MINIMUM_TO_EXIT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WOOL_CLAIM_TAX_PERCENTAGE()",
      "name": "WOOL_CLAIM_TAX_PERCENTAGE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addManyToBarnAndPack(address,uint16[])",
      "name": "addManyToBarnAndPack",
      "description": "adds Sheep and Wolves to the Barn and Pack.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "the address of the staker.",
          "recommendedTypes": []
        },
        {
          "name": "tokenIds",
          "description": "the IDs of the Sheep and Wolves to stake.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "barn(uint256)",
      "name": "barn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint80"
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimManyFromBarnAndPack(uint16[],bool)",
      "name": "claimManyFromBarnAndPack",
      "description": "realize $avaWOOL earnings and optionally unstake tokens from the Barn / Pack to unstake a Sheep it will require it has 2 days worth of $avaWOOL unclaimed.",
      "parameterDecorators": [
        {
          "name": "tokenIds",
          "description": "the IDs of the tokens to claim earnings from.",
          "recommendedTypes": []
        },
        {
          "name": "unstake",
          "description": "whether or not to unstake ALL of the tokens listed in tokenIds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getRealOwner(uint256)",
      "name": "getRealOwner",
      "description": "return the true owner of a sheep.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "the ID of the token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "owner",
          "description": "- whether or not a token is a Sheep.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isSheep(uint256)",
      "name": "isSheep",
      "description": "checks if a token is a Sheep.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "the ID of the token to check.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "sheep",
          "description": "- whether or not a token is a Sheep.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastClaimTimestamp()",
      "name": "lastClaimTimestamp",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onERC721Received(address,address,uint256,bytes)",
      "name": "onERC721Received",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pack(uint256,uint256)",
      "name": "pack",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint80"
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "packIndices(uint256)",
      "name": "packIndices",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "randomWolfOwner(uint256)",
      "name": "randomWolfOwner",
      "description": "chooses a random Wolf thief when a newly minted token is stolen.",
      "parameterDecorators": [
        {
          "name": "seed",
          "description": "a random value to choose a Wolf from.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the owner of the randomly selected Wolf thief.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rescue(uint256[])",
      "name": "rescue",
      "description": "emergency unstake tokens.",
      "parameterDecorators": [
        {
          "name": "tokenIds",
          "description": "the IDs of the tokens to claim earnings from.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rescueEnabled()",
      "name": "rescueEnabled",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setBarnValuesForMigration(tuple(uint16,uint80,address)[])",
      "name": "setBarnValuesForMigration",
      "description": "adds Sheep and Wolves to the Barn and Pack.",
      "parameterDecorators": [
        {
          "name": "_data",
          "description": "the datas.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "tokenId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "value",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "owner",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setLastClaimTimestamp(uint256)",
      "name": "setLastClaimTimestamp",
      "description": "update lastClaimTimestamp after migration.",
      "parameterDecorators": [
        {
          "name": "_lastClaimTimestamp",
          "description": "the _lastClaimTimestamp.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPaused(bool)",
      "name": "setPaused",
      "description": "enables owner to pause / unpause minting.",
      "parameterDecorators": [
        {
          "name": "_paused",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRescueEnabled(bool)",
      "name": "setRescueEnabled",
      "description": "allows owner to enable \"rescue mode\" simplifies accounting, prioritizes tokens out in emergency.",
      "parameterDecorators": [
        {
          "name": "_enabled",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTotalSheepStaked(uint256)",
      "name": "setTotalSheepStaked",
      "description": "update sheep stackeds after migration.",
      "parameterDecorators": [
        {
          "name": "_totalSheepStacked",
          "description": "the _totalSheepStacked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTotalWoolEarned(uint256)",
      "name": "setTotalWoolEarned",
      "description": "update totalWoolEarned after migration.",
      "parameterDecorators": [
        {
          "name": "_totalWoolEarned",
          "description": "the _totalWoolEarned.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalAlphaStaked()",
      "name": "totalAlphaStaked",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSheepStaked()",
      "name": "totalSheepStaked",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalWoolEarned()",
      "name": "totalWoolEarned",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unaccountedRewards()",
      "name": "unaccountedRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "woolPerAlpha()",
      "name": "woolPerAlpha",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}