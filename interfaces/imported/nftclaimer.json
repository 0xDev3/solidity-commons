{"schema":"../schema.json","tags":["tokens","nft"],"name":"NFTClaimer","description":"NFTClaimer. transfer tokens & store claimer.","eventDecorators":[{"signature":"Claimed(address,address)","name":"Claimed","description":"","parameterDecorators":[{"name":"_claimer","description":"","recommendedTypes":[],"indexed":false},{"name":"_tokenAddress","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"_transferFrom(address,address,uint256)","name":"_transferFrom","description":"manual transfer of token. this will be removed before deployment on mainnet.","parameterDecorators":[{"name":"_nftAddress","description":"","recommendedTypes":[]},{"name":"_to","description":"","recommendedTypes":[]},{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeOwner(address)","name":"changeOwner","description":"change ownership of this contract.","parameterDecorators":[{"name":"_newOwner","description":"- new owner of the contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claim(address)","name":"claim","description":"requires msg.sender has not been registered as a claimer of the requested nft in claimersrequires there is a supply of the requested nft left in this contract. claim an nft.","parameterDecorators":[{"name":"_nftAddress","description":"- the type of token the sender wants to claim.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimedBy(address,address)","name":"claimedBy","description":"check if the claimers mapping contains a mapping for the supplied address.","parameterDecorators":[{"name":"_address","description":"- wallet address to check for.","recommendedTypes":[]},{"name":"_nftAddress","description":"- nft address to check for.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getCurrentSupply(address)","name":"getCurrentSupply","description":"get the current supply of a type of nft in this contract.","parameterDecorators":[{"name":"_nftAddress","description":"- the type of nft you want to get the supply for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"available supply of nft.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCurrentTokenIndex(address)","name":"getCurrentTokenIndex","description":"get current token index for specific nft.","parameterDecorators":[{"name":"_nftAddress","description":"- the type of nft you want to get the token index for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"token index for type of nft.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalClaimCount(address)","name":"getTotalClaimCount","description":"get total claim count of a type of nft in this contract.","parameterDecorators":[{"name":"_nftAddress","description":"- the type of nft you want to get the total claim count for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"total claim count of type of nft.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setCurrentClaimCount(address,uint256)","name":"setCurrentClaimCount","description":"administational function used to reset the claim count for a new batch of nfts.","parameterDecorators":[{"name":"_nftAddress","description":"- nft address to set the claim count for.","recommendedTypes":[]},{"name":"_claimCount","description":"- claim count of the current batch, usually 0.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setSupply(address,uint256)","name":"setSupply","description":"administational function used to set the amount of nfts in a new batch.","parameterDecorators":[{"name":"_nftAddress","description":"- nft address to set the supply for.","recommendedTypes":[]},{"name":"_supply","description":"- amount of nfts in the batch.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTokenIndex(address,uint256)","name":"setTokenIndex","description":"administational function used to set the tokenIndex for a new batch of nfts.","parameterDecorators":[{"name":"_nftAddress","description":"- nft address to set the id for.","recommendedTypes":[]},{"name":"_index","description":"- tokenId of the first nft in the batch.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setValues(address,uint256,uint256,uint256)","name":"setValues","description":"administational function used to all above values (tokenIndex, supply and claim count) for a new batch of nfts.","parameterDecorators":[{"name":"_nftAddress","description":"- nft address to set the id for.","recommendedTypes":[]},{"name":"_tokenIndex","description":"- tokenId of the first nft in the batch.","recommendedTypes":[]},{"name":"_supply","description":"- amount of nfts in the batch.","recommendedTypes":[]},{"name":"_claimCount","description":"- claim count of the current batch, usually 0.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}