{
  "schema": "../schema.json",
  "tags": [],
  "name": "SynthereumFixedRateWrapper",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ContractPaused()",
      "name": "ContractPaused",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": []
    },
    {
      "signature": "ContractResumed()",
      "name": "ContractResumed",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": []
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Unwrap(uint256,address)",
      "name": "Unwrap",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": [
        {
          "name": "amountCollateral",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Wrap(uint256,address)",
      "name": "Wrap",
      "description": "Funds have been received. activate liquidity.",
      "parameterDecorators": [
        {
          "name": "amountTokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAINTAINER_ROLE()",
      "name": "MAINTAINER_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PRECISION()",
      "name": "PRECISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collateralToken()",
      "name": "collateralToken",
      "description": "Checks the address of the peg collateral token registered in the wrapper.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "collateralCurrency",
          "description": "The address of the peg collateral token registered.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "conversionRate()",
      "name": "conversionRate",
      "description": "Check the conversion rate between peg-collateral and fixed-rate synthetic token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Coversion rate.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleMember(bytes32,uint256)",
      "name": "getRoleMember",
      "description": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleMemberCount(bytes32)",
      "name": "getRoleMemberCount",
      "description": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Overload {grantRole} to track enumerable memberships.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isPaused()",
      "name": "isPaused",
      "description": "Check if wrap can be performed or not.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "True if minting is paused, otherwise false.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isTrustedForwarder(address)",
      "name": "isTrustedForwarder",
      "description": "Check if an address is the trusted forwarder.",
      "parameterDecorators": [
        {
          "name": "forwarder",
          "description": "Address to check.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "True is the input address is the trusted forwarder, otherwise false.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pauseContract()",
      "name": "pauseContract",
      "description": "Allows the maintainer to pause the contract in case of emergency which blocks minting of new fixed rate synthetic tokens.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Overload {renounceRole} to track enumerable memberships.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "resumeContract()",
      "name": "resumeContract",
      "description": "Allows the maintainer to resume the contract functionalities unblocking the minting of new fixed rate synthetic tokens.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Overload {revokeRole} to track enumerable memberships.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "synthereumFinder()",
      "name": "synthereumFinder",
      "description": "Checks the SynthereumFinder associated with the fixed rate wrapper contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The address of the SynthereumFinder.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "syntheticToken()",
      "name": "syntheticToken",
      "description": "Checks the address of the fixed rate synthetic token registered in the wrapper.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The address of the fixed rate synthetic token associated with the wrapper.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "syntheticTokenSymbol()",
      "name": "syntheticTokenSymbol",
      "description": "Checks the symbol of the fixed rate synthetic token registered in the wrapper.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The symbol of the fixed rate synthetic token associated with the wrapper.",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalPegCollateral()",
      "name": "totalPegCollateral",
      "description": "Amount of peg collateral stored in the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "totalDeposited peg collateral deposited.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSyntheticTokensMinted()",
      "name": "totalSyntheticTokensMinted",
      "description": "Amount of synthetic tokens minted through the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "totalSyntheticTokens synthetic tokens minted.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "typology()",
      "name": "typology",
      "description": "Return typology of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unwrap(uint256,address)",
      "name": "unwrap",
      "description": "Burns an amount of fixed rate synthetic tokens and releases peg collateral tokens based on the conversion rate.",
      "parameterDecorators": [
        {
          "name": "_tokenAmount",
          "description": "The amount of fixed rate synthetic tokens to be burned.",
          "recommendedTypes": []
        },
        {
          "name": "_recipient",
          "description": "Address of the recipient to receive the peg collateral tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountCollateral",
          "description": "The amount of peg collateral tokens received.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "version()",
      "name": "version",
      "description": "Checks the version of the fixed rate wrapper contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The version of the fixed rate wrapper contract.",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "wrap(uint256,address)",
      "name": "wrap",
      "description": "Receives an amount of peg collateral tokens and mints new synthetic tokens based on the rate.",
      "parameterDecorators": [
        {
          "name": "_collateral",
          "description": "The amount of peg collateral tokens to be wrapped.",
          "recommendedTypes": []
        },
        {
          "name": "_recipient",
          "description": "Address of the recipient to receive the newly minted fixed rate synthetic tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountTokens",
          "description": "The amount of newly minted fixed rate synthetic tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}