{
  "schema": "../schema.json",
  "tags": [],
  "name": "Stix",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Approval(address,address,uint256)",
      "name": "Approval",
      "description": "The standard EIP-20 approval event.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "spender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DelegateChanged(address,address,address)",
      "name": "DelegateChanged",
      "description": "An event thats emitted when an account changes its delegate.",
      "parameterDecorators": [
        {
          "name": "delegator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fromDelegate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "toDelegate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "DelegateVotesChanged(address,uint256,uint256)",
      "name": "DelegateVotesChanged",
      "description": "An event thats emitted when a delegate account's vote balance changes.",
      "parameterDecorators": [
        {
          "name": "delegate",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousBalance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newBalance",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MinterChanged(address,address)",
      "name": "MinterChanged",
      "description": "An event thats emitted when the minter address is changed.",
      "parameterDecorators": [
        {
          "name": "minter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newMinter",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Transfer(address,address,uint256)",
      "name": "Transfer",
      "description": "The standard EIP-20 transfer event.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DELEGATION_TYPEHASH()",
      "name": "DELEGATION_TYPEHASH",
      "description": "The EIP-712 typehash for the delegation struct used by the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DOMAIN_TYPEHASH()",
      "name": "DOMAIN_TYPEHASH",
      "description": "The EIP-712 typehash for the contract's domain.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PERMIT_TYPEHASH()",
      "name": "PERMIT_TYPEHASH",
      "description": "The EIP-712 typehash for the permit struct used by the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approve(address,uint256)",
      "name": "approve",
      "description": "Approve `spender` to transfer up to `amount` from `src`. This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve).",
      "parameterDecorators": [
        {
          "name": "spender",
          "description": "The address of the account which may transfer tokens.",
          "recommendedTypes": []
        },
        {
          "name": "rawAmount",
          "description": "The number of tokens that are approved (2^256-1 means infinite).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether or not the approval succeeded.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceOf(address)",
      "name": "balanceOf",
      "description": "Get the number of tokens held by the `account`.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address of the account to get the balance of.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The number of tokens held.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkpoints(address,uint32)",
      "name": "checkpoints",
      "description": "A record of votes checkpoints for each account, by index.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "fromBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        },
        {
          "name": "votes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "decimals()",
      "name": "decimals",
      "description": "EIP-20 token decimals for this token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "delegate(address)",
      "name": "delegate",
      "description": "Delegate votes from `msg.sender` to `delegatee`.",
      "parameterDecorators": [
        {
          "name": "delegatee",
          "description": "The address to delegate votes to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
      "name": "delegateBySig",
      "description": "Delegates votes from signatory to `delegatee`.",
      "parameterDecorators": [
        {
          "name": "delegatee",
          "description": "The address to delegate votes to.",
          "recommendedTypes": []
        },
        {
          "name": "nonce",
          "description": "The contract state required to match the signature.",
          "recommendedTypes": []
        },
        {
          "name": "expiry",
          "description": "The time at which to expire the signature.",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "The recovery byte of the signature.",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "Half of the ECDSA signature pair.",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "Half of the ECDSA signature pair.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delegates(address)",
      "name": "delegates",
      "description": "A record of each accounts delegate.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurrentVotes(address)",
      "name": "getCurrentVotes",
      "description": "Gets the current votes balance for `account`.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address to get votes balance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The number of current votes for `account`.",
          "recommendedTypes": [],
          "solidityType": "uint96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPriorVotes(address,uint256)",
      "name": "getPriorVotes",
      "description": "Determine the prior number of votes for an account as of a block number. Block number must be a finalized block or else this function will revert to prevent misinformation.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address of the account to check.",
          "recommendedTypes": []
        },
        {
          "name": "blockNumber",
          "description": "The block number to get the vote balance at.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The number of votes the account had as of the given block.",
          "recommendedTypes": [],
          "solidityType": "uint96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isMinter(address)",
      "name": "isMinter",
      "description": "List of minters of stix token.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxSupply()",
      "name": "maxSupply",
      "description": "Maximum supply of stix tokens which can be minted.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mint(address,uint256)",
      "name": "mint",
      "description": "Mint the specified amount to the address, given we are not minting more than the fixed max supply.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "The address where the new stix are being minted to.",
          "recommendedTypes": []
        },
        {
          "name": "rawAmount",
          "description": "The amount of new stix being minted.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "EIP-20 token name for this token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nonces(address)",
      "name": "nonces",
      "description": "A record of states for signing / validating signatures.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "numCheckpoints(address)",
      "name": "numCheckpoints",
      "description": "The number of checkpoints for each account.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
      "name": "permit",
      "description": "Triggers an approval from owner to spends.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "The address to approve from.",
          "recommendedTypes": []
        },
        {
          "name": "spender",
          "description": "The address to be approved.",
          "recommendedTypes": []
        },
        {
          "name": "rawAmount",
          "description": "The number of tokens that are approved (2^256-1 means infinite).",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "The time at which to expire the signature.",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "The recovery byte of the signature.",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "Half of the ECDSA signature pair.",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "Half of the ECDSA signature pair.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMinter(address,bool)",
      "name": "setMinter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "minter",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "flag",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "symbol()",
      "name": "symbol",
      "description": "EIP-20 token symbol for this token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSupply()",
      "name": "totalSupply",
      "description": "Total number of tokens in circulation.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transfer(address,uint256)",
      "name": "transfer",
      "description": "Transfer `amount` tokens from `msg.sender` to `dst`.",
      "parameterDecorators": [
        {
          "name": "dst",
          "description": "The address of the destination account.",
          "recommendedTypes": []
        },
        {
          "name": "rawAmount",
          "description": "The number of tokens to transfer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether or not the transfer succeeded.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferFrom(address,address,uint256)",
      "name": "transferFrom",
      "description": "Transfer `amount` tokens from `src` to `dst`.",
      "parameterDecorators": [
        {
          "name": "src",
          "description": "The address of the source account.",
          "recommendedTypes": []
        },
        {
          "name": "dst",
          "description": "The address of the destination account.",
          "recommendedTypes": []
        },
        {
          "name": "rawAmount",
          "description": "The number of tokens to transfer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether or not the transfer succeeded.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}