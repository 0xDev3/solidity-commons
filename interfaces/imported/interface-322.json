{
  "schema": "../schema.json",
  "tags": [],
  "name": "ReceiverStorage",
  "description": "ReceiverStorage This contract helps receive and decode Tellor's data from Ethereum on Matic's Network.",
  "eventDecorators": [
    {
      "signature": "ValueRecieved(uint256,uint256,address,uint256,uint256)",
      "name": "ValueRecieved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stateId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_requestID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_dataProvider",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "dataProvider(uint256,uint256)",
      "name": "dataProvider",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onStateReceive(uint256,bytes)",
      "name": "onStateReceive",
      "description": "This function allows Matic validators to provide Tellor's data.",
      "parameterDecorators": [
        {
          "name": "stateId",
          "description": "is used by Matic validators to uniquely identify the state when the byte data was provided ???.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "is the byte data with the specified output from an event on Ethereum.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "retrieveData(uint256,uint256)",
      "name": "retrieveData",
      "description": "This function returns data saved on this contract that is received through onStateReceive to be read by centralized contract on Matic.",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "is Tellor's requestId to retrieve.",
          "recommendedTypes": []
        },
        {
          "name": "_timestamp",
          "description": "of value to retrieve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "retrieveLatestValue(uint256)",
      "name": "retrieveLatestValue",
      "description": "This function the latest timestamp and value for the specified requestId.",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "is Tellor's requestId to retrieve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "set(uint256,uint256)",
      "name": "set",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "timestamps(uint256,uint256)",
      "name": "timestamps",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "values(uint256,uint256)",
      "name": "values",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}