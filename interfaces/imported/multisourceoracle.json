{
  "schema": "../schema.json",
  "tags": [
    "oracles"
  ],
  "name": "MultiSourceOracle",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CanPause(address,bool)",
      "name": "CanPause",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "_pauser",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_enabled",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Paused()",
      "name": "Paused",
      "description": "event for token purchase logging.",
      "parameterDecorators": []
    },
    {
      "signature": "Started()",
      "name": "Started",
      "description": "event for token purchase logging.",
      "parameterDecorators": []
    }
  ],
  "functionDecorators": [
    {
      "signature": "VERSION()",
      "name": "VERSION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "baseToken()",
      "name": "baseToken",
      "description": "3 or 4 letters symbol of the currency, Ej: ETH.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "canPause(address)",
      "name": "canPause",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currency()",
      "name": "currency",
      "description": "Defined by the RCN RateOracle interface.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "decimals()",
      "name": "decimals",
      "description": "Defined by the RCN RateOracle interface.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ibase()",
      "name": "ibase",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestTimestamp()",
      "name": "latestTimestamp",
      "description": "If the sample rate is get from many oracles , the latest timestamp returns the older one. Reads the last timestamp when the oracle was updated.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "timestamp",
          "description": "last updated.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maintainer()",
      "name": "maintainer",
      "description": "Defined by the RCN RateOracle interface.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "Defined by the RCN RateOracle interface.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "oracleAdapter()",
      "name": "oracleAdapter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "path(uint256)",
      "name": "path",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pausedProvided()",
      "name": "pausedProvided",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "readSample(bytes)",
      "name": "readSample",
      "description": "Reads the rate provided by the Oracle this being the result of the resolved path by the oracle-adapter.",
      "parameterDecorators": [
        {
          "name": "_oracleData",
          "description": "Oracle auxiliar data defined in the RCN Oracle spec not used for this oracle, but forwarded in case of upgrade.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_tokens",
          "description": "_equivalent `_equivalent` is the median of the values provided by the signer `_tokens` are equivalent to `_equivalent` in the currency of the Oracle.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_equivalent",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "readSample()",
      "name": "readSample",
      "description": "This Oracle accepts reading the sample without auxiliary data. Reads the rate provided by the Oracle this being the result of the resolved path by the oracle-adapter.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_tokens",
          "description": "_equivalent `_equivalent` is the median of the values provided by the signer `_tokens` are equivalent to `_equivalent` in the currency of the Oracle.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_equivalent",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setMetadata(string,uint256,string,address,bytes32[])",
      "name": "setMetadata",
      "description": "Updates the medatada of the oracle.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "Name of the oracle currency.",
          "recommendedTypes": []
        },
        {
          "name": "_decimals",
          "description": "Decimals for the common representation of the currency.",
          "recommendedTypes": []
        },
        {
          "name": "_maintainer",
          "description": "Name of the maintainer entity of the Oracle.",
          "recommendedTypes": []
        },
        {
          "name": "_token",
          "description": ", token address of the currency provided by this oracle.",
          "recommendedTypes": []
        },
        {
          "name": "_path",
          "description": ", path to get the currency rate.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPauser(address,bool)",
      "name": "setPauser",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_pauser",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_enabled",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setUpgrade(address)",
      "name": "setUpgrade",
      "description": "If the `upgrade` address is set to the address `0` the Oracle is considered not upgraded. Updates the Oracle contract, all subsequent calls to `readSample` will be forwareded to `_upgrade`.",
      "parameterDecorators": [
        {
          "name": "_upgrade",
          "description": "Contract address of the new updated oracle.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "start()",
      "name": "start",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "symbol()",
      "name": "symbol",
      "description": "Defined by the RCN RateOracle interface.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "Defined by the RCN RateOracle interface.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgrade()",
      "name": "upgrade",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "url()",
      "name": "url",
      "description": "Defined by the RCN RateOracle interface. Returns the URL required to retrieve the auxiliary data as specified by the RateOracle spec, no auxiliary data is required so it returns an empty string.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "An empty string, because the auxiliary data is not required.",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}