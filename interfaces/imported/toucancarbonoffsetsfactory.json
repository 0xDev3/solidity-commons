{"schema":"../schema.json","tags":["nft","locking"],"name":"ToucanCarbonOffsetsFactory","description":"This TCO2 factory creates project-vintage-specific ERC20 contracts for Batch-NFT fractionalization Locks in received ERC721 Batch-NFTs and can mint corresponding quantity of ERC20s Permissionless, anyone can deploy new ERC20s unless they do not yet exist and pid exists.","eventDecorators":[{"signature":"AdminChanged(address,address)","name":"AdminChanged","description":"Notifies when found an error decoding request result.","parameterDecorators":[{"name":"amount","description":"Unstake amount.","recommendedTypes":[],"indexed":false},{"name":"holder","description":"Address of the holder.","recommendedTypes":[],"indexed":false}]},{"signature":"BeaconUpgraded(address)","name":"BeaconUpgraded","description":"Notifies when found an error decoding request result.","parameterDecorators":[{"name":"beacon","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Initialized(uint8)","name":"Initialized","description":"Notifies when found an error decoding request result.","parameterDecorators":[{"name":"version","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Notifies when found an error decoding request result.","parameterDecorators":[{"name":"amount","description":"Unstake amount.","recommendedTypes":[],"indexed":true},{"name":"holder","description":"Address of the holder.","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"Notifies when found an error decoding request result.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokenCreated(uint256,address)","name":"TokenCreated","description":"Notifies when found an error decoding request result.","parameterDecorators":[{"name":"amount","description":"Unstake amount.","recommendedTypes":[],"indexed":false},{"name":"holder","description":"Address of the holder.","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"Notifies when found an error decoding request result.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Upgraded(address)","name":"Upgraded","description":"Notifies when found an error decoding request result.","parameterDecorators":[{"name":"implementation","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"beacon()","name":"beacon","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"bridgeFeeBurnAddress()","name":"bridgeFeeBurnAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"bridgeFeeBurnPercentageInBase()","name":"bridgeFeeBurnPercentageInBase","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"bridgeFeeDivider()","name":"bridgeFeeDivider","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"bridgeFeePercentageInBase()","name":"bridgeFeePercentageInBase","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"bridgeFeeReceiver()","name":"bridgeFeeReceiver","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"bridgeFeeReceiverAddress()","name":"bridgeFeeReceiverAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"contractRegistry()","name":"contractRegistry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"deployFromVintage(uint256)","name":"deployFromVintage","description":"Deploys a TCO2 contract based on a project vintage.","parameterDecorators":[{"name":"projectVintageTokenId","description":"numeric tokenId from vintage in `CarbonProjectVintages`.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deployedContracts(uint256)","name":"deployedContracts","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getBridgeFeeAndBurnAmount(uint256)","name":"getBridgeFeeAndBurnAmount","description":"","parameterDecorators":[{"name":"_quantity","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getContracts()","name":"getContracts","description":"Returns all addresses of deployed TCO2 contracts.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"increaseTotalRetired(uint256)","name":"increaseTotalRetired","description":"","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialize(address)","name":"initialize","description":"","parameterDecorators":[{"name":"_contractRegistry","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"Emergency function to disable contract's core functionality. wraps _pause(), only Admin.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"proxiableUUID()","name":"proxiableUUID","description":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"pvIdtoERC20(uint256)","name":"pvIdtoERC20","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBeacon(address)","name":"setBeacon","description":"sets the Beacon that tracks the current implementation logic of the TCO2s.","parameterDecorators":[{"name":"_beacon","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBridgeFeeBurnAddress(address)","name":"setBridgeFeeBurnAddress","description":"Update the bridge fee burn address.","parameterDecorators":[{"name":"_bridgeFeeBurnAddress","description":"address to transfer the fees to burn.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBridgeFeeBurnPercentage(uint256)","name":"setBridgeFeeBurnPercentage","description":"Update the bridge fee burning percentage.","parameterDecorators":[{"name":"_bridgeFeeBurnPercentageInBase","description":"percentage of bridge fee in base.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBridgeFeePercentage(uint256)","name":"setBridgeFeePercentage","description":"Update the bridge fee percentage.","parameterDecorators":[{"name":"_bridgeFeePercentageInBase","description":"percentage of bridge fee in base.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBridgeFeeReceiver(address)","name":"setBridgeFeeReceiver","description":"Update the bridge fee receiver.","parameterDecorators":[{"name":"_bridgeFeeReceiver","description":"address to transfer the fees.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setToucanContractRegistry(address)","name":"setToucanContractRegistry","description":"set the registry contract to be tracked.","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalRetired()","name":"totalRetired","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpause()","name":"unpause","description":"unpause the system, wraps _unpause(), only Admin.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"upgradeTo(address)","name":"upgradeTo","description":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.","parameterDecorators":[{"name":"newImplementation","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["Upgraded(address)"],"readOnly":false},{"signature":"upgradeToAndCall(address,bytes)","name":"upgradeToAndCall","description":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.","parameterDecorators":[{"name":"newImplementation","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":["Upgraded(address)"],"readOnly":false},{"signature":"version()","name":"version","description":"Returns the current version of the smart contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true}]}