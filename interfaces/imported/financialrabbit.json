{
  "schema": "../schema.json",
  "tags": [],
  "name": "FinancialRabbit",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Burn(address,uint256)",
      "name": "Burn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Claimed(address,uint256,uint256)",
      "name": "Claimed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "DivestToken(address,address,uint256)",
      "name": "DivestToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "payee",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "MetaInfo()",
      "name": "MetaInfo",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "isOpen",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "burn(uint256)",
      "name": "burn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenId_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "divestToken(address,address,uint256)",
      "name": "divestToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "payee_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getActivateRabbit()",
      "name": "getActivateRabbit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getERC20BalanceOf(address,address)",
      "name": "getERC20BalanceOf",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReserves(tuple(address,address,uint256))",
      "name": "getReserves",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pairInfo_",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "token",
              "description": "",
              "type": "address"
            },
            {
              "name": "pair",
              "description": "",
              "type": "address"
            },
            {
              "name": "amount",
              "description": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWalletPrice()",
      "name": "getWalletPrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "uBalances",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[5]"
        },
        {
          "name": "tBalances",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[5]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onERC721Received(address,address,uint256,bytes)",
      "name": "onERC721Received",
      "description": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rabbits(uint256)",
      "name": "rabbits",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOpen(bool)",
      "name": "setOpen",
      "description": "",
      "parameterDecorators": [
        {
          "name": "isOpen_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "walletInfo()",
      "name": "walletInfo",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "Bitcoin",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        },
        {
          "name": "Ethereum",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        },
        {
          "name": "Cardano",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        },
        {
          "name": "Solana",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        },
        {
          "name": "Litecoin",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}