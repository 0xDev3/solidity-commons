{
  "schema": "../schema.json",
  "tags": [],
  "name": "Quotation",
  "description": "",
  "eventDecorators": [
    {
      "signature": "RefundEvent(address,bool,uint256,bytes32)",
      "name": "RefundEvent",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "status",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "holdedCoverID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "reason",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "changeDependentContractAddress()",
      "name": "changeDependentContractAddress",
      "description": "Iupgradable Interface to update dependent contract address.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMasterAddress(address)",
      "name": "changeMasterAddress",
      "description": "change master address.",
      "parameterDecorators": [
        {
          "name": "_masterAddress",
          "description": "is the new address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "checkCoverExpired(uint256)",
      "name": "checkCoverExpired",
      "description": "Checks if a cover should get expired/closed or not.",
      "parameterDecorators": [
        {
          "name": "_cid",
          "description": "Cover Index.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "expire",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "expireCover(uint256)",
      "name": "expireCover",
      "description": "Expires a cover after a set period of time. Changes the status of the Cover and reduces the current sum assured of all areas in which the quotation lies Unlocks the CN tokens of the cover. Updates the Total Sum Assured value.",
      "parameterDecorators": [
        {
          "name": "_cid",
          "description": "Cover Id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getOrderHash(uint256[],uint16,bytes4,address)",
      "name": "getOrderHash",
      "description": "Gets order hash for given cover details.",
      "parameterDecorators": [
        {
          "name": "coverDetails",
          "description": "details realted to cover.",
          "recommendedTypes": []
        },
        {
          "name": "coverPeriod",
          "description": "validity of cover.",
          "recommendedTypes": []
        },
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "smaratCA",
          "description": "smarat contract address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRecentHoldedCoverIdStatus(address)",
      "name": "getRecentHoldedCoverIdStatus",
      "description": "to get the status of recently holded coverID.",
      "parameterDecorators": [
        {
          "name": "userAdd",
          "description": "is the user address in concern.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initiateMembershipAndCover(address,bytes4,uint256[],uint16,uint8,bytes32,bytes32)",
      "name": "initiateMembershipAndCover",
      "description": "to initiate the membership and the cover.",
      "parameterDecorators": [
        {
          "name": "smartCAdd",
          "description": "is the smart contract address to make cover on.",
          "recommendedTypes": []
        },
        {
          "name": "coverCurr",
          "description": "is the currency used to make cover.",
          "recommendedTypes": []
        },
        {
          "name": "coverDetails",
          "description": "list of details related to cover like cover amount, expire time, coverCurrPrice and priceSOTE.",
          "recommendedTypes": []
        },
        {
          "name": "coverPeriod",
          "description": "is cover period for which cover is being bought.",
          "recommendedTypes": []
        },
        {
          "name": "_v",
          "description": "argument from vrs hash.",
          "recommendedTypes": []
        },
        {
          "name": "_r",
          "description": "argument from vrs hash.",
          "recommendedTypes": []
        },
        {
          "name": "_s",
          "description": "argument from vrs hash.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isValidSignature(bytes32,uint8,bytes32,bytes32)",
      "name": "isValidSignature",
      "description": "Verifies signature.",
      "parameterDecorators": [
        {
          "name": "hash",
          "description": "order hash.",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "argument from vrs hash.",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "argument from vrs hash.",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "argument from vrs hash.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "kycVerdict(address,bool)",
      "name": "kycVerdict",
      "description": "to get the verdict of kyc process.",
      "parameterDecorators": [
        {
          "name": "_add",
          "description": "is the address of member.",
          "recommendedTypes": []
        },
        {
          "name": "status",
          "description": "is the kyc status.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "makeCoverUsingSOTETokens(uint256[],uint16,bytes4,address,uint8,bytes32,bytes32)",
      "name": "makeCoverUsingSOTETokens",
      "description": "Makes Cover funded via SOTE tokens.",
      "parameterDecorators": [
        {
          "name": "coverDetails",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "coverPeriod",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "coverCurr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "smartCAdd",
          "description": "Smart Contract Address.",
          "recommendedTypes": []
        },
        {
          "name": "_v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ms()",
      "name": "ms",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeSAFromCSA(uint256,uint256)",
      "name": "removeSAFromCSA",
      "description": "Updates the Sum Assured Amount of all the quotation.",
      "parameterDecorators": [
        {
          "name": "_cid",
          "description": "Cover id.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "that will get subtracted Current Sum Assured amount that comes under a quotation.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sendEther()",
      "name": "sendEther",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "soteMasterAddress()",
      "name": "soteMasterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferAssetsToNewContract(address)",
      "name": "transferAssetsToNewContract",
      "description": "transfering Ethers to newly created quotation contract.",
      "parameterDecorators": [
        {
          "name": "newAdd",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "verifyCoverDetails(address,address,bytes4,uint256[],uint16,uint8,bytes32,bytes32)",
      "name": "verifyCoverDetails",
      "description": "Verifies cover details signed off chain.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "address of funder.",
          "recommendedTypes": []
        },
        {
          "name": "scAddress",
          "description": "Smart Contract Address.",
          "recommendedTypes": []
        },
        {
          "name": "coverCurr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "coverDetails",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "coverPeriod",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "verifySign(uint256[],uint16,bytes4,address,uint8,bytes32,bytes32)",
      "name": "verifySign",
      "description": "Verifies signature.",
      "parameterDecorators": [
        {
          "name": "coverDetails",
          "description": "details related to cover.",
          "recommendedTypes": []
        },
        {
          "name": "coverPeriod",
          "description": "validity of cover.",
          "recommendedTypes": []
        },
        {
          "name": "curr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "smaratCA",
          "description": "smarat contract address.",
          "recommendedTypes": []
        },
        {
          "name": "_v",
          "description": "argument from vrs hash.",
          "recommendedTypes": []
        },
        {
          "name": "_r",
          "description": "argument from vrs hash.",
          "recommendedTypes": []
        },
        {
          "name": "_s",
          "description": "argument from vrs hash.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}