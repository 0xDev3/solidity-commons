{"schema":"../schema.json","tags":[],"name":"FIDRewardsReserve","description":"The FID Rewards Reserve. Provides a rewarding mechanism to the associated pool.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"This emits when ownership of a contract changes.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"This emits when ownership of a contract changes.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"This emits when ownership of a contract changes.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"checkUpkeep(bytes)","name":"checkUpkeep","description":"Checks whether the upkeep should be run.","parameterDecorators":[{"name":"checkData","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"upkeepNeeded","description":"True if the upkeep time has elapsed, false otherwise.","recommendedTypes":[],"solidityType":"bool"},{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"getPool()","name":"getPool","description":"Get the pool address.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The pool address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getRate()","name":"getRate","description":"Get the reward rate.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The reward rate.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"keeperTimestamp()","name":"keeperTimestamp","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"Pause the Rewards Reserve.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"performUpkeep(bytes)","name":"performUpkeep","description":"Perform the upkeep if required. The reward could be calculated off-chain using checkUpkeep and passed as performData but this would require a number of extra checks which are labour-intensive just to compute the reward. Instead, compute the reward during performUpkeep as it is relatively inexpensive.","parameterDecorators":[{"name":"performData","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRate(uint256)","name":"setRate","description":"Set the reward rate to `newRate`. Rate is set to 18 demical places, I.e. _rate / 1e18.","parameterDecorators":[{"name":"newRate","description":"The new reward rate.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpause()","name":"unpause","description":"Unpause the Rewards Reserve.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawRewards(uint256)","name":"withdrawRewards","description":"","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}