{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "swaps",
    "balancer"
  ],
  "name": "CRPFactory",
  "description": "Configurable Rights Pool Factory - create parameterized smart pools.",
  "eventDecorators": [
    {
      "signature": "LogNewCrp(address,address)",
      "name": "LogNewCrp",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "isCrp(address)",
      "name": "isCrp",
      "description": "Check to see if a given address is a CRP.",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "- address to check.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "boolean indicating whether it is a CRP.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "newCrp(address,tuple(string,string,address[],uint256[],uint256[],uint256),tuple(bool,bool,bool,bool,bool,bool))",
      "name": "newCrp",
      "description": "Create a new CRP. emits a LogNewCRP event.",
      "parameterDecorators": [
        {
          "name": "factoryAddress",
          "description": "- the BFactory instance used to create the underlying pool.",
          "recommendedTypes": []
        },
        {
          "name": "poolParams",
          "description": "- struct containing the names, tokens, weights, balances, and swap fee.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "poolTokenSymbol",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "poolTokenName",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "constituentTokens",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenBalances",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenWeights",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "swapFee",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "rights",
          "description": "- struct of permissions, configuring this CRP instance (see above for definitions).",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "canPauseSwapping",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "canChangeSwapFee",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "canChangeWeights",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "canAddRemoveTokens",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "canWhitelistLPs",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "canChangeCap",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}