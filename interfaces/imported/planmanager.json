{"schema":"../schema.json","tags":["borrowing"],"name":"PlanManager","description":"Separating this off to specifically doKeep track of a borrower's plans.*.","eventDecorators":[{"signature":"PlanUpdate(address,address[],uint256[],uint256)","name":"PlanUpdate","description":"Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"protocols","description":"","recommendedTypes":[],"indexed":false},{"name":"amounts","description":"","recommendedTypes":[],"indexed":false},{"name":"endTime","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"adjustMarkup(uint256)","name":"adjustMarkup","description":"Owner (DAO) can adjust the markup buyers pay for coverage.","parameterDecorators":[{"name":"_newMarkup","description":"The new markup that will be used. 100 == 100% (no markup).*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"adjustPercents(uint256,uint256,uint256)","name":"adjustPercents","description":"Owner (DAO) can adjust the percent of coverage allowed for each product.","parameterDecorators":[{"name":"_newCorePercent","description":"New percent of coverage for general arCore users.","recommendedTypes":[]},{"name":"_newArShieldPercent","description":"New percent of coverage for arShields.","recommendedTypes":[]},{"name":"_newArShieldPlusPercent","description":"New percent of coverage for arShield Plus.*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"adjustShields(address[],uint256[])","name":"adjustShields","description":"Owner (DAO) can adjust shields on the contract.","parameterDecorators":[{"name":"_shieldAddress","description":"Array of addresses we're adjusting.","recommendedTypes":[]},{"name":"_shieldType","description":"Type of shield: 1 for arShield, 2 for arShield Plus.*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"arShieldCover(address)","name":"arShieldCover","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"arShieldPercent()","name":"arShieldPercent","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"arShieldPlusCover(address)","name":"arShieldPlusCover","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"arShieldPlusPercent()","name":"arShieldPlusPercent","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"arShields(address)","name":"arShields","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"changeMaster(address)","name":"changeMaster","description":"","parameterDecorators":[{"name":"_newMaster","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changePrice(address,uint256)","name":"changePrice","description":"Armor has the ability to change the price that a user is paying for their insurance.","parameterDecorators":[{"name":"_protocol","description":"The protocol whose arNFT price is being updated.","recommendedTypes":[]},{"name":"_newPrice","description":"the new price PER SECOND that the user will be paying.*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"checkCoverage(address,address,uint256,uint256)","name":"checkCoverage","description":"Used by ClaimManager to check how much coverage the user had at the time of a hack.","parameterDecorators":[{"name":"_user","description":"The user to check coverage for.","recommendedTypes":[]},{"name":"_protocol","description":"The address of the protocol that was hacked. (Address used according to arNFT).","recommendedTypes":[]},{"name":"_hackTime","description":"The timestamp of when a hack happened.","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"index of plan for hackTime.","recommendedTypes":[],"solidityType":"uint256"},{"name":"check","description":"whether amount is allowed*.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"coreCover(address)","name":"coreCover","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"corePercent()","name":"corePercent","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"coverageLeft(address)","name":"coverageLeft","description":"Determine the amount of coverage left for a specific protocol.","parameterDecorators":[{"name":"_protocol","description":"The address of the protocol we're determining coverage left for.*.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCurrentPlan(address)","name":"getCurrentPlan","description":"","parameterDecorators":[{"name":"_user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"start","description":"","recommendedTypes":[],"solidityType":"uint128"},{"name":"end","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address)","name":"initialize","description":"","parameterDecorators":[{"name":"_armorMaster","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"markup()","name":"markup","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nftCoverPrice(address)","name":"nftCoverPrice","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"planRedeemed(address,uint256,address)","name":"planRedeemed","description":"ClaimManager redeems the plan if it has been claimed. Sets claim amount to 0 so it cannot be claimed again.","parameterDecorators":[{"name":"_user","description":"User that is redeeming this plan.","recommendedTypes":[]},{"name":"_planIndex","description":"The index in the user's Plan array that we're checking.","recommendedTypes":[]},{"name":"_protocol","description":"Address of the protocol that a claim is being redeemed for.*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"plans(address,uint256)","name":"plans","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"startTime","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"endTime","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"length","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"protocolPlan(bytes32)","name":"protocolPlan","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"protocolId","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint192"}],"emittableEvents":[],"readOnly":true},{"signature":"totalUsedCover(address)","name":"totalUsedCover","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"updateExpireTime(address,uint256)","name":"updateExpireTime","description":"BalanceManager calls to update expire time of a plan when a deposit/withdrawal happens.","parameterDecorators":[{"name":"_user","description":"Address whose balance was updated.","recommendedTypes":[]},{"name":"_expiry","description":"New time plans expire.*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updatePlan(address[],uint256[])","name":"updatePlan","description":"","parameterDecorators":[{"name":"_protocols","description":"","recommendedTypes":[]},{"name":"_coverAmounts","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}