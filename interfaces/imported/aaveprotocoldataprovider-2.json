{
  "schema": "../schema.json",
  "tags": [
    "aave"
  ],
  "name": "AaveProtocolDataProvider",
  "description": "AaveProtocolDataProvider. Peripherial contract to gather and extract information from the Pool.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "ADDRESSES_PROVIDER()",
      "name": "ADDRESSES_PROVIDER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getATokenTotalSupply(address)",
      "name": "getATokenTotalSupply",
      "description": "Returns the total supply of aTokens for a given asset.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The total supply of the aToken*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllATokens()",
      "name": "getAllATokens",
      "description": "Returns the list of the existing ATokens in the pool.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The list of ATokens, pairs of symbols and addresses.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "symbol",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "tokenAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllReservesTokens()",
      "name": "getAllReservesTokens",
      "description": "Returns the list of the existing reserves in the pool. Handling MKR and ETH in a different way since they do not have standard `symbol` functions.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The list of reserves, pairs of symbols and addresses.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "symbol",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "tokenAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDebtCeiling(address)",
      "name": "getDebtCeiling",
      "description": "Returns the debt ceiling of the reserve.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The debt ceiling of the reserve*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDebtCeilingDecimals()",
      "name": "getDebtCeilingDecimals",
      "description": "Returns the debt ceiling decimals.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The debt ceiling decimals*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInterestRateStrategyAddress(address)",
      "name": "getInterestRateStrategyAddress",
      "description": "Returns the address of the Interest Rate strategy.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "irStrategyAddress",
          "description": "The address of the Interest Rate strategy.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLiquidationProtocolFee(address)",
      "name": "getLiquidationProtocolFee",
      "description": "Returns the protocol fee on the liquidation bonus.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The protocol fee on liquidation*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPaused(address)",
      "name": "getPaused",
      "description": "Returns if the pool is paused.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "isPaused",
          "description": "True if the pool is paused, false otherwise*.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReserveCaps(address)",
      "name": "getReserveCaps",
      "description": "Returns the caps paramters of the reserve.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "borrowCap",
          "description": "The borrow cap of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "supplyCap",
          "description": "The supply cap of the reserve*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReserveConfigurationData(address)",
      "name": "getReserveConfigurationData",
      "description": "Returns the configuration data of the reserve. Not returning borrow and supply caps for compatibility, nor pause flag.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "decimals",
          "description": "The number of decimals of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "ltv",
          "description": "The ltv of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidationThreshold",
          "description": "The liquidationThreshold of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidationBonus",
          "description": "The liquidationBonus of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "reserveFactor",
          "description": "The reserveFactor of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "usageAsCollateralEnabled",
          "description": "True if the usage as collateral is enabled, false otherwise.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "borrowingEnabled",
          "description": "True if borrowing is enabled, false otherwise.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "stableBorrowRateEnabled",
          "description": "True if stable rate borrowing is enabled, false otherwise.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "isActive",
          "description": "True if it is active, false otherwise.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "isFrozen",
          "description": "True if it is frozen, false otherwise*.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReserveData(address)",
      "name": "getReserveData",
      "description": "Returns the reserve data.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "unbacked",
          "description": "The amount of unbacked tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "accruedToTreasuryScaled",
          "description": "The scaled amount of tokens accrued to treasury that is to be minted.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalAToken",
          "description": "The total supply of the aToken.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalStableDebt",
          "description": "The total stable debt of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalVariableDebt",
          "description": "The total variable debt of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidityRate",
          "description": "The liquidity rate of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "variableBorrowRate",
          "description": "The variable borrow rate of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "stableBorrowRate",
          "description": "The stable borrow rate of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "averageStableBorrowRate",
          "description": "The average stable borrow rate of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidityIndex",
          "description": "The liquidity index of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "variableBorrowIndex",
          "description": "The variable borrow index of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastUpdateTimestamp",
          "description": "The timestamp of the last update of the reserve*.",
          "recommendedTypes": [],
          "solidityType": "uint40"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReserveEModeCategory(address)",
      "name": "getReserveEModeCategory",
      "description": "Returns the efficiency mode category of the reserve.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The eMode id of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReserveTokensAddresses(address)",
      "name": "getReserveTokensAddresses",
      "description": "Returns the token addresses of the reserve.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "aTokenAddress",
          "description": "The AToken address of the reserve.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "stableDebtTokenAddress",
          "description": "The StableDebtToken address of the reserve.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "variableDebtTokenAddress",
          "description": "The VariableDebtToken address of the reserve.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUnbackedMintCap(address)",
      "name": "getUnbackedMintCap",
      "description": "Returns the unbacked mint cap of the reserve.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The unbacked mint cap of the reserve*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserReserveData(address,address)",
      "name": "getUserReserveData",
      "description": "Returns the user data in a reserve.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the underlying asset of the reserve.",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "The address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "currentATokenBalance",
          "description": "The current AToken balance of the user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "currentStableDebt",
          "description": "The current stable debt of the user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "currentVariableDebt",
          "description": "The current variable debt of the user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "principalStableDebt",
          "description": "The principal stable debt of the user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "scaledVariableDebt",
          "description": "The scaled variable debt of the user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "stableBorrowRate",
          "description": "The stable borrow rate of the user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidityRate",
          "description": "The liquidity rate of the reserve.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "stableRateLastUpdated",
          "description": "The timestamp of the last update of the user stable rate.",
          "recommendedTypes": [],
          "solidityType": "uint40"
        },
        {
          "name": "usageAsCollateralEnabled",
          "description": "True if the user is using the asset as collateral, false otherwise*.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}