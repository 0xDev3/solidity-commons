{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "CustomToken",
  "description": "Custom Token implementation note: debug messages in `require` calls could be omitted, but are kept for clarity even if their storage uses more gas.",
  "eventDecorators": [
    {
      "signature": "Price(uint256)",
      "name": "Price",
      "description": "Event emitted when an ownership transfer request is accepted by the pending owner.",
      "parameterDecorators": [
        {
          "name": "price",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Purchase(address,uint256)",
      "name": "Purchase",
      "description": "Event emitted when an ownership transfer request is accepted by the pending owner.",
      "parameterDecorators": [
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Sell(address,uint256)",
      "name": "Sell",
      "description": "Event emitted when an ownership transfer request is accepted by the pending owner.",
      "parameterDecorators": [
        {
          "name": "seller",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Transfer(address,address,uint256)",
      "name": "Transfer",
      "description": "Event emitted when an ownership transfer request is accepted by the pending owner.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "buyToken(uint256)",
      "name": "buyToken",
      "description": "a function via which a user purchases `amount` number of tokens by paying the equivalent price in wei; if the purchase is successful, the function returns a boolean value (true) and emits an event Purchase with the buyer's address and the purchased amount.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The number of tokens to purchase.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changePrice(uint256)",
      "name": "changePrice",
      "description": "a function via which the contract's creator can change the tokenPrice; if the action is successful, the function returns a boolean value (true) and emits an event Price with the new price.",
      "parameterDecorators": [
        {
          "name": "price",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBalance()",
      "name": "getBalance",
      "description": "a view that returns the amount of tokens that the user owns.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns the number of tokens that the user owns.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "sellToken(uint256)",
      "name": "sellToken",
      "description": "a function via which a user sells amount number of tokens and receives from the contract tokenPrice wei for each sold token; if the sell is successful, the sold tokens are destroyed, the function returns a boolean value (true) and emits an event Sell with the seller's address and the sold amount of tokens.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenPrice()",
      "name": "tokenPrice",
      "description": "Token price in wei.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transfer(address,uint256)",
      "name": "transfer",
      "description": "a function that transfers amount number of tokens from the account of the transaction's sender to the recipient; if the transfer is successful, the function returns a boolean value (true) and emits an event Transfer, with the sender's and receiver's addresses and the transferred amount >> Note: it's possible to transfer your own tokens to yourself. *Why* you would want to do that is a different question.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}