{"schema":"../schema.json","tags":[],"name":"MultiSig","description":"","eventDecorators":[{"signature":"AttestationAdded(address,uint8,bytes32)","name":"AttestationAdded","description":"Emitted when any of the add attestation/voting functions is called.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"actionCode","description":"","recommendedTypes":[],"indexed":true},{"name":"hash","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"AttestationRevoked(address,uint8,bytes32)","name":"AttestationRevoked","description":"Emitted when any of the revoke attestation/voting functions is called.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"actionCode","description":"","recommendedTypes":[],"indexed":true},{"name":"hash","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"KeyholderAdded(address)","name":"KeyholderAdded","description":"Emitted when the `addKeyholder` function is called and completes successfully.","parameterDecorators":[{"name":"newKeyholder","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"KeyholderLimitChanged(uint256)","name":"KeyholderLimitChanged","description":"Emitted when the `changeKeyholderLimit` function is called and completes successfully.","parameterDecorators":[{"name":"keyholderLimit","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"KeyholderRemoved(address)","name":"KeyholderRemoved","description":"Emitted when the `removeKeyholder` function is called and completes successfully.","parameterDecorators":[{"name":"keyholderRemoved","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"addKeyholder(address)","name":"addKeyholder","description":"Adds a keyholder if a slot is open.The owner of the contract can add keyholders until they lock themselves out or fill all slots.After the owner is locked out only keyholders can add if a slot is open and they all vote.Will void all attestations voting for this addition if the addition is completed successfully.","parameterDecorators":[{"name":"person","description":"The address to add as a keyholder.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"allButOneKeyholdersAttest(uint8,address)","name":"allButOneKeyholdersAttest","description":"Checks that all but one keyholders attested to an entry with the `code` and `user`.","parameterDecorators":[{"name":"code","description":"The ActionCode of the entry to look for.","recommendedTypes":[]},{"name":"user","description":"The data in the entry to look for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"If all but one keyholders have attested to an entry with the `code` and `user`.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"allButOneKeyholdersAttest(uint8,string)","name":"allButOneKeyholdersAttest","description":"Checks that all but one keyholders attested to an entry with the `code` and `user`.","parameterDecorators":[{"name":"code","description":"The ActionCode of the entry to look for.","recommendedTypes":[]},{"name":"data","description":"The data in the entry to look for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"If all but one keyholders have attested to an entry with the `code` and `user`.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"allKeyholdersAttest(uint8,uint256)","name":"allKeyholdersAttest","description":"Checks that all keyholders attested to an entry with the `code` and `data`.","parameterDecorators":[{"name":"code","description":"The ActionCode of the entry to look for.","recommendedTypes":[]},{"name":"data","description":"The data in the entry to look for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"If all keyholders have attested to an entry with the `code` and `data`.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"allKeyholdersAttest(uint8,string)","name":"allKeyholdersAttest","description":"Checks that all keyholders attested to an entry with the `code` and `data`.","parameterDecorators":[{"name":"code","description":"The ActionCode of the entry to look for.","recommendedTypes":[]},{"name":"data","description":"The data in the entry to look for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"If all keyholders have attested to an entry with the `code` and `data`.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"allKeyholdersAttest(uint8,address)","name":"allKeyholdersAttest","description":"Checks that all keyholders attested to an entry with the `code` and `user`.","parameterDecorators":[{"name":"code","description":"The ActionCode of the entry to look for.","recommendedTypes":[]},{"name":"user","description":"The data in the entry to look for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"If all keyholders have attested to an entry with the `code` and `user`.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"attestToData(string)","name":"attestToData","description":"Adds an attestation log associated with the sender's address with the `data` and action code ATTEST_TO_DATA.","parameterDecorators":[{"name":"data","description":"The string to be hashed and stored.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeKeyholderLimit(uint256)","name":"changeKeyholderLimit","description":"Changes the limit of keyholders if all keyholders vote to change it. Cannot set the limit lower than the amount of current keyholders.","parameterDecorators":[{"name":"newLimit","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getKeyholders()","name":"getKeyholders","description":"Gets all keyholders. May be lower than the limit but cannot be higher.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"An array of the addresses of all keyholders.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"isKeyholder(address)","name":"isKeyholder","description":"Checks if an address is a keyholder.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"If an address is a keyholder.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"keyholderLimit()","name":"keyholderLimit","description":"The limit of keyholders the multsig can have. Can be expanded with a vote of all active keyholders.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeKeyholder(address)","name":"removeKeyholder","description":"Removes a keyholder if all but one current keyholders vote to remove them.Will void all attestations voting for this removal if the addition is completed successfully.","parameterDecorators":[{"name":"keyholder","description":"The address of the keyholder to remove.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"retractAttestationForData(string)","name":"retractAttestationForData","description":"Retracts an attestation log associated with the sender's address with the `data` and action code ATTEST_TO_DATA.","parameterDecorators":[{"name":"data","description":"The string to be hashed, found in the `attestations` map, and removed.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"retractVoteToAddKeyholder(address)","name":"retractVoteToAddKeyholder","description":"Retracts an attestation log associated with the sender's address with the `keyholder` and action code VOTE_TO_ADD_KEYHOLDER.","parameterDecorators":[{"name":"person","description":"The address the person calling was voting to add as a keyholder and wants retracted.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"retractVoteToChangeKeyholderLimit(uint256)","name":"retractVoteToChangeKeyholderLimit","description":"Retracts an attestation log associated with the sender's address with the `limit` and action code VOTE_TO_CHANGE_KEYHOLDER_LIMIT.","parameterDecorators":[{"name":"limit","description":"The amount the caller was voting to change the limit to and wants retracted.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"retractVoteToRemoveKeyholder(address)","name":"retractVoteToRemoveKeyholder","description":"Retracts an attestation log associated with the sender's address with the `keyholder` and action code VOTE_TO_REMOVE_KEYHOLDER.","parameterDecorators":[{"name":"keyholder","description":"The address the person calling was voting to remove as a keyholder and wants retracted.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"voidAttestations(uint8,string)","name":"voidAttestations","description":"Removes a string attestation/action from the map.","parameterDecorators":[{"name":"code","description":"The action code of the entry to void.","recommendedTypes":[]},{"name":"data","description":"data of the entry to void.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"voteToAddKeyholder(address)","name":"voteToAddKeyholder","description":"Adds an attestation log associated with the sender's address with the `person` and action code VOTE_TO_ADD_KEYHOLDER.","parameterDecorators":[{"name":"person","description":"The address the caller is voting to add as a keyholder.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"voteToChangeKeyholderLimit(uint256)","name":"voteToChangeKeyholderLimit","description":"Adds an attestation log associated with the sender's address with the `limit` and action code VOTE_TO_CHANGE_KEYHOLDER_LIMIT.","parameterDecorators":[{"name":"limit","description":"The amount the caller is voting to change the limit to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"voteToRemoveKeyholder(address)","name":"voteToRemoveKeyholder","description":"Adds an attestation log associated with the sender's address with the `keyholder` and action code VOTE_TO_REMOVE_KEYHOLDER.","parameterDecorators":[{"name":"keyholder","description":"The address the caller is voting to remove as a keyholder.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}