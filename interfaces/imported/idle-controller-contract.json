{"schema":"../schema.json","tags":["compound"],"name":"IdleController","description":"Idle Controller Contract.","eventDecorators":[{"signature":"DistributedIdle(address,address,uint256,uint256)","name":"DistributedIdle","description":"Emitted when IDLE is distributed to a supplier.","parameterDecorators":[{"name":"idleToken","description":"","recommendedTypes":[],"indexed":true},{"name":"supplier","description":"","recommendedTypes":[],"indexed":true},{"name":"idleDelta","description":"","recommendedTypes":[],"indexed":false},{"name":"idleSupplyIndex","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"IdleSpeedUpdated(address,uint256)","name":"IdleSpeedUpdated","description":"Emitted when a new IDLE speed is calculated for a market.","parameterDecorators":[{"name":"idleToken","description":"","recommendedTypes":[],"indexed":true},{"name":"newSpeed","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketIdled(address,bool)","name":"MarketIdled","description":"Emitted when market idled status is changed.","parameterDecorators":[{"name":"idleToken","description":"","recommendedTypes":[],"indexed":false},{"name":"isIdled","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketListed(address)","name":"MarketListed","description":"Emitted when an admin supports a market.","parameterDecorators":[{"name":"idleToken","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewIdleOracle(address,address)","name":"NewIdleOracle","description":"Emitted when oracle is changed.","parameterDecorators":[{"name":"oldIdleOracle","description":"","recommendedTypes":[],"indexed":false},{"name":"newIdleOracle","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewIdleRate(uint256,uint256)","name":"NewIdleRate","description":"Emitted when IDLE rate is changed.","parameterDecorators":[{"name":"oldIdleRate","description":"","recommendedTypes":[],"indexed":false},{"name":"newIdleRate","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"_addIdleMarkets(address[])","name":"_addIdleMarkets","description":"Add markets to idleMarkets, allowing them to earn IDLE in the flywheel.","parameterDecorators":[{"name":"idleTokens","description":"The addresses of the markets to add.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_become(address)","name":"_become","description":"","parameterDecorators":[{"name":"_unitroller","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_dropIdleMarket(address)","name":"_dropIdleMarket","description":"Remove a market from idleMarkets, preventing it from earning IDLE in the flywheel.","parameterDecorators":[{"name":"idleToken","description":"The address of the market to drop.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_resetMarkets()","name":"_resetMarkets","description":"Remove all markets from idleMarkets. This should only be called in case of emergency.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setBonusDistribution(uint256)","name":"_setBonusDistribution","description":"","parameterDecorators":[{"name":"_bonusMultiplier","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setIdleAddress(address)","name":"_setIdleAddress","description":"","parameterDecorators":[{"name":"_idleAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setIdleRate(uint256)","name":"_setIdleRate","description":"Set the amount of IDLE distributed per block.","parameterDecorators":[{"name":"idleRate_","description":"The amount of IDLE wei per block to distribute.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setPriceOracle(address)","name":"_setPriceOracle","description":"","parameterDecorators":[{"name":"priceOracle_","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_supportMarkets(address[])","name":"_supportMarkets","description":"Add the market to the markets mapping and set it as listed. Admin function to set isListed and add support for the market.","parameterDecorators":[{"name":"idleTokens","description":"The array of addresses of the markets (token) to list.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See enum Error for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"admin()","name":"admin","description":"Administrator for this contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"allMarkets(uint256)","name":"allMarkets","description":"A list of all markets.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"bonusEnd()","name":"bonusEnd","description":"Itimestamp to limit bonus distribution on the first month.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"bonusMultiplier()","name":"bonusMultiplier","description":"timestamp for bonus end.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"claimIdle(address[],address[])","name":"claimIdle","description":"Claim all idle accrued by the holders.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"idleTokens","description":"The list of markets to claim IDLE in.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"comptrollerImplementation()","name":"comptrollerImplementation","description":"Active brains of Unitroller.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getAllMarkets()","name":"getAllMarkets","description":"Return all of the markets. The automatic getter may be used to access an individual market.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The list of market addresses.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"idleAccrued(address)","name":"idleAccrued","description":"The IDLE accrued but not yet transferred to each user.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"idleAddress()","name":"idleAddress","description":"IDLE governance token address.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"idleClaimThreshold()","name":"idleClaimThreshold","description":"The threshold above which the flywheel transfers IDLE, in wei.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"idleInitialIndex()","name":"idleInitialIndex","description":"The initial IDLE index for a market.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"idleRate()","name":"idleRate","description":"The rate at which the flywheel distributes IDLE, per block.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"idleSpeeds(address)","name":"idleSpeeds","description":"The portion of compRate that each market currently receives.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"idleSupplierIndex(address,address)","name":"idleSupplierIndex","description":"The IDLE supply index for each market for each supplier as of the last time they accrued IDLE.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"idleSupplyState(address)","name":"idleSupplyState","description":"The IDLE market supply state for each market.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"block","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"markets(address)","name":"markets","description":"Official mapping of idleTokens -> Market metadata.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"isListed","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"isIdled","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"oracle()","name":"oracle","description":"Oracle which gives the price of any given asset.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingAdmin()","name":"pendingAdmin","description":"Pending administrator for this contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingComptrollerImplementation()","name":"pendingComptrollerImplementation","description":"Pending brains of Unitroller.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"refreshIdleSpeeds()","name":"refreshIdleSpeeds","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}