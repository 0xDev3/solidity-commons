{"schema":"../schema.json","tags":["strategies"],"name":"CRVStrategyStableTestnet","description":"Adds the mainnet addresses to the CRVStrategyStable.","eventDecorators":[],"functionDecorators":[{"signature":"__curve()","name":"__curve","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"__ycrv()","name":"__ycrv","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"__ycrvVault()","name":"__ycrvVault","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"arbTolerance()","name":"arbTolerance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"bundle()","name":"bundle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"controller()","name":"controller","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"convertor()","name":"convertor","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"curve()","name":"curve","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"curvePriceCheckpoint()","name":"curvePriceCheckpoint","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"dai()","name":"dai","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"depositArbCheck()","name":"depositArbCheck","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"doHardWork()","name":"doHardWork","description":"The hard work only invests all underlying assets, and then tells the controller to call hard work on the yCRV vault.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getBundle()","name":"getBundle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getUnderlying()","name":"getUnderlying","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"governance()","name":"governance","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"investActivated()","name":"investActivated","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"investedUnderlyingBalance()","name":"investedUnderlyingBalance","description":"Returns the underlying invested balance. This is the amount of yCRV that we are entitled to from the yCRV vault (based on the number of shares we currently have), converted to the underlying assets by the Curve protocol, plus the current balance of the underlying assets.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"salvage(address,address,uint256)","name":"salvage","description":"Salvages a token. We cannot salvage the shares in the yCRV pool, yCRV tokens, or underlying assets.","parameterDecorators":[{"name":"recipient","description":"","recommendedTypes":[]},{"name":"token","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setArbTolerance(uint256)","name":"setArbTolerance","description":"","parameterDecorators":[{"name":"tolerance","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setConvertor(address)","name":"setConvertor","description":"Replaces the price convertor.","parameterDecorators":[{"name":"_convertor","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setInvestActivated(bool)","name":"setInvestActivated","description":"","parameterDecorators":[{"name":"_investActivated","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setStorage(address)","name":"setStorage","description":"","parameterDecorators":[{"name":"_store","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"store()","name":"store","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tusd()","name":"tusd","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"underlying()","name":"underlying","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"underlyingValueFromYCrv(uint256)","name":"underlyingValueFromYCrv","description":"Returns the value of yCRV in y-token (e.g., yCRV -> yDai) accounting for slippage and fees.","parameterDecorators":[{"name":"ycrvBalance","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"unsalvagableTokens(address)","name":"unsalvagableTokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"usdc()","name":"usdc","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"usdt()","name":"usdt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawAllToBundle()","name":"withdrawAllToBundle","description":"Withdraws all assets from the vault. We ask the yCRV vault to give us our entire yCRV balance and then convert it to the underlying asset using the Curve protocol.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawPartialYCRVShares(uint256)","name":"withdrawPartialYCRVShares","description":"Allows Governance to withdraw partial shares to reduce slippage incurred and facilitate migration / withdrawal / strategy switch.","parameterDecorators":[{"name":"shares","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawToBundle(uint256)","name":"withdrawToBundle","description":"Withdraws an underlying asset from the strategy to the vault in the specified amount by asking the yCRV vault for yCRV (currently all of it), and then removing imbalanced liquidity from the Curve protocol. The rest is deposited back to the yCRV vault. If the amount requested cannot be obtained, the method will get as much as we have.","parameterDecorators":[{"name":"amountUnderlying","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"yTokenValueFromUnderlying(uint256)","name":"yTokenValueFromUnderlying","description":"Returns the value of the underlying token in yToken.","parameterDecorators":[{"name":"amountUnderlying","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"yTokenValueFromYCrv(uint256)","name":"yTokenValueFromYCrv","description":"Returns the value of yCRV in underlying token accounting for slippage and fees.","parameterDecorators":[{"name":"ycrvBalance","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"yVault()","name":"yVault","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"yVaults(address)","name":"yVaults","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ycrv()","name":"ycrv","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ycrvUnit()","name":"ycrvUnit","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"ycrvVault()","name":"ycrvVault","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ydai()","name":"ydai","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ytusd()","name":"ytusd","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"yusdc()","name":"yusdc","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"yusdt()","name":"yusdt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}