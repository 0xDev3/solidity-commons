{
  "schema": "../schema.json",
  "tags": [],
  "name": "CarbonPool",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AcceptCctTradeRequestEvent(address,address,uint256,uint256)",
      "name": "AcceptCctTradeRequestEvent",
      "description": "Emitted when a vehicle is removed.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "cctTradingPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AddCctTradeRequestEvent(address,address,uint256,uint256)",
      "name": "AddCctTradeRequestEvent",
      "description": "Emitted when a vehicle is removed.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "cctTradingPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BuyCctEvent(address,uint256)",
      "name": "BuyCctEvent",
      "description": "Emitted when a vehicle is removed.",
      "parameterDecorators": [
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MintCctEvent(uint256,address,uint256)",
      "name": "MintCctEvent",
      "description": "Emitted when a vehicle is removed.",
      "parameterDecorators": [
        {
          "name": "nftTokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RejectCctTradeRequestEvent(address,address,uint256,uint256)",
      "name": "RejectCctTradeRequestEvent",
      "description": "Emitted when a vehicle is removed.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "buyer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "cctTradingPrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RetireCctEvent(address,uint256)",
      "name": "RetireCctEvent",
      "description": "Emitted when a vehicle is removed.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "Emitted when a vehicle is removed.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "Emitted when a vehicle is removed.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "Emitted when a vehicle is removed.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ADMIN_ROLE()",
      "name": "ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "acceptCctTradeRequest(address,address,uint256,uint256)",
      "name": "acceptCctTradeRequest",
      "description": "This method is used to accept CCT Trade Request.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "address of owner.",
          "recommendedTypes": []
        },
        {
          "name": "buyer",
          "description": "address of buyer.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "amount of CCT to accept.",
          "recommendedTypes": []
        },
        {
          "name": "cctValue",
          "description": "cct price*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addAdminAddress(address)",
      "name": "addAdminAddress",
      "description": "This method is add new Admin Address.",
      "parameterDecorators": [
        {
          "name": "newAdmin",
          "description": "address needs to be added as an admin*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addCctTradeRequest(address,address,uint256)",
      "name": "addCctTradeRequest",
      "description": "This method is used to add CCT Trade Request.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "address of owner.",
          "recommendedTypes": []
        },
        {
          "name": "buyer",
          "description": "address of buyer.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "amount of CCT to buy*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addWhitelistedAddress(address)",
      "name": "addWhitelistedAddress",
      "description": "This method is add new whitelisted address.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "address needs to be whitelisted*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyCCT(address,uint256)",
      "name": "buyCCT",
      "description": "This method is used to buy CCTs.",
      "parameterDecorators": [
        {
          "name": "buyer",
          "description": "address of buyer.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "amount of CCT to buy*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "configureMainCaller(address)",
      "name": "configureMainCaller",
      "description": "This method is used to configure only main contract can call certain functions.",
      "parameterDecorators": [
        {
          "name": "_mainContractAddress",
          "description": "address of the main contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deposit()",
      "name": "deposit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllCctInfo()",
      "name": "getAllCctInfo",
      "description": "This method is used to get all CCT's Info.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "CctOwner All the CCTs info*.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "ownerId",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "owner",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCctPrice()",
      "name": "getCctPrice",
      "description": "This method is used to get all CCT's Info.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "cctPrice Current CCT Price*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCctTradeRequestInfo(address)",
      "name": "getCctTradeRequestInfo",
      "description": "This method is used to get all CCT Trade Request Info.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "address of owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "CctTradeRequestInfo all the trade request info*.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "owner",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "buyer",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "cctPrice",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mintCCT(uint256,address,uint256,uint256)",
      "name": "mintCCT",
      "description": "This method is used to retire NFTs.",
      "parameterDecorators": [
        {
          "name": "nftTokenId",
          "description": "NFT Token Id.",
          "recommendedTypes": []
        },
        {
          "name": "owner",
          "description": "Owner of the corresponding NFT Token.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of CCT token needs to be mint.",
          "recommendedTypes": []
        },
        {
          "name": "cctBuyingPrice",
          "description": "CCT Buying Price.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)",
      "name": "onERC1155BatchReceived",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onERC1155Received(address,address,uint256,uint256,bytes)",
      "name": "onERC1155Received",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rejectCctTradeRequest(address,address,uint256,uint256)",
      "name": "rejectCctTradeRequest",
      "description": "This method is used to reject CCT Trade Request.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "address of owner.",
          "recommendedTypes": []
        },
        {
          "name": "buyer",
          "description": "address of buyer.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "amount of CCT to reject.",
          "recommendedTypes": []
        },
        {
          "name": "cctValue",
          "description": "cct price*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "retireCCT(address,uint256)",
      "name": "retireCCT",
      "description": "This method is used to retire CCTs.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "address of owner.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "amount of CCT to retire*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "setCctPrice(uint256)",
      "name": "setCctPrice",
      "description": "This method is used to set CCT Price.",
      "parameterDecorators": [
        {
          "name": "_cctPrice",
          "description": "CCT Price.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}