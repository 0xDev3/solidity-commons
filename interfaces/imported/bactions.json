{
  "schema": "../schema.json",
  "tags": [],
  "name": "BActions",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "applyAddToken(address,address,uint256)",
      "name": "applyAddToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "crp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAmountIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "commitAddToken(address,address,uint256,uint256)",
      "name": "commitAddToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "crp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "denormalizedWeight",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "create(address,address[],uint256[],uint256[],uint256,bool)",
      "name": "create",
      "description": "",
      "parameterDecorators": [
        {
          "name": "factory",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "balances",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "weights",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "swapFee",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "finalize",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createSmartPool(address,address,tuple(string,string,address[],uint256[],uint256[],uint256),tuple(uint256,uint256,uint256),tuple(bool,bool,bool,bool,bool,bool))",
      "name": "createSmartPool",
      "description": "",
      "parameterDecorators": [
        {
          "name": "factory",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "bFactory",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "poolParams",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "poolTokenSymbol",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "poolTokenName",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "constituentTokens",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenBalances",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenWeights",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "swapFee",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "crpParams",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "initialSupply",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minimumWeightChangeBlockPeriod",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "addTokenTimeLockInBlocks",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "rights",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "canPauseSwapping",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "canChangeSwapFee",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "canChangeWeights",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "canAddRemoveTokens",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "canWhitelistLPs",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "canChangeCap",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "crp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "decreaseWeight(address,address,uint256,uint256)",
      "name": "decreaseWeight",
      "description": "",
      "parameterDecorators": [
        {
          "name": "crp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newWeight",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "poolAmountIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "finalize(address)",
      "name": "finalize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "increaseWeight(address,address,uint256,uint256)",
      "name": "increaseWeight",
      "description": "",
      "parameterDecorators": [
        {
          "name": "crp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newWeight",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAmountIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "joinPool(address,uint256,uint256[])",
      "name": "joinPool",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "poolAmountOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "maxAmountsIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "joinSmartPool(address,uint256,uint256[])",
      "name": "joinSmartPool",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "poolAmountOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "maxAmountsIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "joinswapExternAmountIn(address,address,uint256,uint256)",
      "name": "joinswapExternAmountIn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAmountIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "minPoolAmountOut",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeToken(address,address,uint256)",
      "name": "removeToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "crp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "poolAmountIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeWhitelistedLiquidityProvider(address,address)",
      "name": "removeWhitelistedLiquidityProvider",
      "description": "",
      "parameterDecorators": [
        {
          "name": "crp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCap(address,uint256)",
      "name": "setCap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "crp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newCap",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setController(address,address)",
      "name": "setController",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newController",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPublicSwap(address,bool)",
      "name": "setPublicSwap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "publicSwap",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSwapFee(address,uint256)",
      "name": "setSwapFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTokens(address,address[],uint256[],uint256[])",
      "name": "setTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "balances",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "denorms",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateWeightsGradually(address,uint256[],uint256,uint256)",
      "name": "updateWeightsGradually",
      "description": "",
      "parameterDecorators": [
        {
          "name": "crp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "newWeights",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "startBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endBlock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "whitelistLiquidityProvider(address,address)",
      "name": "whitelistLiquidityProvider",
      "description": "",
      "parameterDecorators": [
        {
          "name": "crp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}