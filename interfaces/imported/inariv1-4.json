{
  "schema": "../schema.json",
  "tags": [],
  "name": "InariV1",
  "description": "Contract that batches SUSHI staking and DeFi strategies - V1 'iroirona'.",
  "eventDecorators": [
    {
      "signature": "ZapIn(address,address,uint256)",
      "name": "ZapIn",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "pool",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokensRec",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "aaveToBento(address,address,uint256)",
      "name": "aaveToBento",
      "description": "Migrate AAVE `aToken` underlying `amount` into BENTO for benefit of `to` by batching calls to `aave` and `bento`.",
      "parameterDecorators": [
        {
          "name": "aToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "aaveToCompound(address,address,address,uint256)",
      "name": "aaveToCompound",
      "description": "Migrate AAVE `aToken` underlying `amount` into COMP/CREAM `cToken` for benefit of `to` by batching calls to `aave` and `cToken`.",
      "parameterDecorators": [
        {
          "name": "aToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "assetBalanceFromKashi(address,address)",
      "name": "assetBalanceFromKashi",
      "description": "",
      "parameterDecorators": [
        {
          "name": "kashiPair",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "share",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "assetBalanceToKashi(address,address,bool)",
      "name": "assetBalanceToKashi",
      "description": "",
      "parameterDecorators": [
        {
          "name": "kashiPair",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "skim",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "fraction",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceFromAave(address,address)",
      "name": "balanceFromAave",
      "description": "",
      "parameterDecorators": [
        {
          "name": "aToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceFromBento(address,address)",
      "name": "balanceFromBento",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceFromCompound(address)",
      "name": "balanceFromCompound",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceToAave(address,address)",
      "name": "balanceToAave",
      "description": "",
      "parameterDecorators": [
        {
          "name": "underlying",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceToBento(address,address)",
      "name": "balanceToBento",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "shareOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceToCompound(address)",
      "name": "balanceToCompound",
      "description": "",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "balanceToMasterChefv2(address,uint256,address)",
      "name": "balanceToMasterChefv2",
      "description": "",
      "parameterDecorators": [
        {
          "name": "lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "batch(bytes[],bool)",
      "name": "batch",
      "description": "Allows batched call to self (this contract).",
      "parameterDecorators": [
        {
          "name": "calls",
          "description": "An array of inputs for each call.",
          "recommendedTypes": []
        },
        {
          "name": "revertOnFail",
          "description": "If True then reverts after a failed call and stops doing further calls.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "successes",
          "description": "An array indicating the success of a call, mapped one-to-one to `calls`.",
          "recommendedTypes": [],
          "solidityType": "bool[]"
        },
        {
          "name": "results",
          "description": "An array with the returned data of each function call, mapped one-to-one to `calls`.",
          "recommendedTypes": [],
          "solidityType": "bytes[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bentoToAave(address,address,uint256)",
      "name": "bentoToAave",
      "description": "Migrate `underlying` `amount` from BENTO into AAVE for benefit of `to` by batching calls to `bento` and `aave`.",
      "parameterDecorators": [
        {
          "name": "underlying",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bentoToCompound(address,address,uint256)",
      "name": "bentoToCompound",
      "description": "Migrate `cToken` `underlyingAmount` from BENTO into COMP/CREAM for benefit of `to` by batching calls to `bento` and `cToken`.",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "underlyingAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bridgeToken(address[],address[])",
      "name": "bridgeToken",
      "description": "Helper function to approve this contract to spend tokens and enable strategies.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "callZenko(address[],uint256[],bytes[])",
      "name": "callZenko",
      "description": "Arbitrary call batching through Inari `zenko` contract.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "compoundToAave(address,address,uint256)",
      "name": "compoundToAave",
      "description": "Migrate COMP/CREAM `cToken` underlying `amount` into AAVE for benefit of `to` by batching calls to `cToken` and `aave`.",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "compoundToBento(address,address,uint256)",
      "name": "compoundToBento",
      "description": "Migrate COMP/CREAM `cToken` `cTokenAmount` into underlying and BENTO for benefit of `to` by batching calls to `cToken` and `bento`.",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cTokenAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositBalanceToWETH()",
      "name": "depositBalanceToWETH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositETH()",
      "name": "depositETH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositToken(address,uint256)",
      "name": "depositToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ethToBento(address)",
      "name": "ethToBento",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "shareOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "permitDai(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)",
      "name": "permitDai",
      "description": "Call wrapper that performs `ERC20.permit` on `dai` using EIP 2612 primitive. Lookup `IDaiPermit.permit`.",
      "parameterDecorators": [
        {
          "name": "holder",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "spender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "nonce",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "expiry",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "allowed",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)",
      "name": "permitToken",
      "description": "Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMasterChefv2(address)",
      "name": "setMasterChefv2",
      "description": "Admin function to set `masterChefv2` and burn `governance` role.",
      "parameterDecorators": [
        {
          "name": "_masterChefv2",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiBalance(address)",
      "name": "stakeSushiBalance",
      "description": "Stake SUSHI local balance into xSushi for benefit of `to` by call to `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToAave(address,uint256)",
      "name": "stakeSushiToAave",
      "description": "Stake SUSHI `amount` into aXSUSHI for benefit of `to` by batching calls to `sushiBar` and `aave`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToBento(address,uint256)",
      "name": "stakeSushiToBento",
      "description": "Stake SUSHI `amount` into BENTO xSUSHI for benefit of `to` by batching calls to `sushiBar` and `bento`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToCream(address,uint256)",
      "name": "stakeSushiToCream",
      "description": "Stake SUSHI `amount` into crXSUSHI for benefit of `to` by batching calls to `sushiBar` and `crXSushiToken`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToCreamToBento(address,uint256)",
      "name": "stakeSushiToCreamToBento",
      "description": "Stake SUSHI `amount` into crXSUSHI and BENTO for benefit of `to` by batching calls to `sushiBar`, `crXSushiToken` and `bento`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sushiFromCreamFromBento(address,uint256)",
      "name": "sushiFromCreamFromBento",
      "description": "Unstake crSUSHI `cTokenAmount` into SUSHI from BENTO for benefit of `to` by batching calls to `bento` and `crSushiToken`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cTokenAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sushiToCreamToBento(address,uint256)",
      "name": "sushiToCreamToBento",
      "description": "Stake SUSHI `amount` into crSUSHI and BENTO for benefit of `to` by batching calls to `crSushiToken` and `bento`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swap(address,address,address,uint256)",
      "name": "swap",
      "description": "SushiSwap `fromToken` `amountIn` to `toToken` for benefit of `to` - if `fromToken` is `wETH`, convert `msg.value` to `wETH`.",
      "parameterDecorators": [
        {
          "name": "fromToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amountIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapBalance(address,address,address)",
      "name": "swapBalance",
      "description": "SushiSwap local `fromToken` balance in this contract to `toToken` for benefit of `to`.",
      "parameterDecorators": [
        {
          "name": "fromToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromAave(address,uint256)",
      "name": "unstakeSushiFromAave",
      "description": "Unstake aXSUSHI `amount` into SUSHI for benefit of `to` by batching calls to `aave` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromBento(address,uint256)",
      "name": "unstakeSushiFromBento",
      "description": "Unstake xSUSHI `amount` from BENTO into SUSHI for benefit of `to` by batching calls to `bento` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromCream(address,uint256)",
      "name": "unstakeSushiFromCream",
      "description": "Unstake crXSUSHI `cTokenAmount` into SUSHI for benefit of `to` by batching calls to `crXSushiToken` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cTokenAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromCreamFromBento(address,uint256)",
      "name": "unstakeSushiFromCreamFromBento",
      "description": "Unstake crXSUSHI `cTokenAmount` into SUSHI from BENTO for benefit of `to` by batching calls to `bento`, `crXSushiToken` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cTokenAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawBalanceFromWETH(address)",
      "name": "withdrawBalanceFromWETH",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawETHBalance(address)",
      "name": "withdrawETHBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawTokenBalance(address,address)",
      "name": "withdrawTokenBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "zapFromBento(address,address,uint256)",
      "name": "zapFromBento",
      "description": "Liquidity zap from BENTO.",
      "parameterDecorators": [
        {
          "name": "pair",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amount1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "zapIn(address,address,address,uint256,uint256,address,bytes)",
      "name": "zapIn",
      "description": "This function is used to invest in given SushiSwap pair through ETH/ERC20 Tokens.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "Address to receive LP tokens.",
          "recommendedTypes": []
        },
        {
          "name": "_FromTokenContractAddress",
          "description": "The ERC20 token used for investment (address(0x00) if ether).",
          "recommendedTypes": []
        },
        {
          "name": "_pairAddress",
          "description": "The SushiSwap pair address.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "The amount of fromToken to invest.",
          "recommendedTypes": []
        },
        {
          "name": "_minPoolTokens",
          "description": "Reverts if less tokens received than this.",
          "recommendedTypes": []
        },
        {
          "name": "_swapTarget",
          "description": "Excecution target for the first swap.",
          "recommendedTypes": []
        },
        {
          "name": "swapData",
          "description": "Dex quote data.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Amount of LP bought.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "zapOut(address,address,uint256)",
      "name": "zapOut",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pair",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amount1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "zapOutBalance(address,address)",
      "name": "zapOutBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pair",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "amount1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "zapToBento(address,address,address,uint256,uint256,address,bytes)",
      "name": "zapToBento",
      "description": "Liquidity zap into BENTO.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_FromTokenContractAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_pairAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_minPoolTokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_swapTarget",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "swapData",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}