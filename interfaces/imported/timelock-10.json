{
  "schema": "../schema.json",
  "tags": [
    "locking"
  ],
  "name": "Timelock",
  "description": "",
  "eventDecorators": [
    {
      "signature": "CancelTransaction(bytes32,address,uint256,string,bytes,uint256)",
      "name": "CancelTransaction",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "txHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "signature",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "eta",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EmergencyPause(address)",
      "name": "EmergencyPause",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "proxy",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ExecuteTransaction(bytes32,address,uint256,string,bytes,uint256)",
      "name": "ExecuteTransaction",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "txHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "signature",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "eta",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewAdmin(address)",
      "name": "NewAdmin",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "newAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NewDelay(uint256)",
      "name": "NewDelay",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "newDelay",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NewPauser(address)",
      "name": "NewPauser",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "newPauser",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NewPendingAdmin(address)",
      "name": "NewPendingAdmin",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "newPendingAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "QueueTransaction(bytes32,address,uint256,string,bytes,uint256)",
      "name": "QueueTransaction",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "txHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "signature",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "eta",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "GRACE_PERIOD()",
      "name": "GRACE_PERIOD",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAXIMUM_DELAY()",
      "name": "MAXIMUM_DELAY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MINIMUM_DELAY()",
      "name": "MINIMUM_DELAY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "acceptAdmin()",
      "name": "acceptAdmin",
      "description": "Accept the pendingAdmin as the admin address.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "admin()",
      "name": "admin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "admin_initialized()",
      "name": "admin_initialized",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cancelTransaction(address,uint256,string,bytes,uint256)",
      "name": "cancelTransaction",
      "description": "Cancel one single proposal transaction.",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "The target address for call to be made during proposal execution.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "The value to be passed to the calls made during proposal execution.",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "The function signature to be passed during execution.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "The data to be passed to the individual function call.",
          "recommendedTypes": []
        },
        {
          "name": "eta",
          "description": "The current timestamp plus the timelock delay.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimOwnership()",
      "name": "claimOwnership",
      "description": "Allows the pendingOwner address to finalize the transfer.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "delay()",
      "name": "delay",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "emergencyPause(address)",
      "name": "emergencyPause",
      "description": "",
      "parameterDecorators": [
        {
          "name": "proxy",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executeTransaction(address,uint256,string,bytes,uint256)",
      "name": "executeTransaction",
      "description": "Execute one single proposal transaction.",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "The target address for call to be made during proposal execution.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "The value to be passed to the calls made during proposal execution.",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "The function signature to be passed during execution.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "The data to be passed to the individual function call.",
          "recommendedTypes": []
        },
        {
          "name": "eta",
          "description": "The current timestamp plus the timelock delay.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address,uint256)",
      "name": "initialize",
      "description": "Initialize sets the addresses of admin and the delay timestamp.",
      "parameterDecorators": [
        {
          "name": "admin_",
          "description": "The address of admin.",
          "recommendedTypes": []
        },
        {
          "name": "delay_",
          "description": "The timestamp of delay for timelock contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pauser()",
      "name": "pauser",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingAdmin()",
      "name": "pendingAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingOwner()",
      "name": "pendingOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "queueTransaction(address,uint256,string,bytes,uint256)",
      "name": "queueTransaction",
      "description": "Queue one single proposal transaction.",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "The target address for call to be made during proposal execution.",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "The value to be passed to the calls made during proposal execution.",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "The function signature to be passed during execution.",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "The data to be passed to the individual function call.",
          "recommendedTypes": []
        },
        {
          "name": "eta",
          "description": "The current timestamp plus the timelock delay.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "queuedTransactions(bytes32)",
      "name": "queuedTransactions",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setDelay(uint256)",
      "name": "setDelay",
      "description": "Set the timelock delay to a new timestamp.",
      "parameterDecorators": [
        {
          "name": "delay_",
          "description": "The timestamp of delay for timelock contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPauser(address)",
      "name": "setPauser",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_pauser",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPendingAdmin(address)",
      "name": "setPendingAdmin",
      "description": "Set the pendingAdmin address to a new address.",
      "parameterDecorators": [
        {
          "name": "pendingAdmin_",
          "description": "The address of the new pendingAdmin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to set the pendingOwner address.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}