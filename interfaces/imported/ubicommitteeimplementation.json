{
  "schema": "../schema.json",
  "tags": [],
  "name": "UBICommitteeImplementation",
  "description": "",
  "eventDecorators": [
    {
      "signature": "MemberAdded(address)",
      "name": "MemberAdded",
      "description": "An event emitted when a member is added.",
      "parameterDecorators": [
        {
          "name": "member",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MemberRemoved(address)",
      "name": "MemberRemoved",
      "description": "An event emitted when a member is removed.",
      "parameterDecorators": [
        {
          "name": "member",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewImplementation(address,address)",
      "name": "NewImplementation",
      "description": "Emitted when implementation is changed.",
      "parameterDecorators": [
        {
          "name": "oldImplementation",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newImplementation",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ProposalCanceled(uint256)",
      "name": "ProposalCanceled",
      "description": "An event emitted when a proposal has been canceled.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalCreated(uint256,address,string[],bytes[],uint256,string)",
      "name": "ProposalCreated",
      "description": "An event emitted when a new proposal is created.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "proposer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "signatures",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "calldatas",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "endBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "description",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalExecuted(uint256)",
      "name": "ProposalExecuted",
      "description": "An event emitted when a proposal has been executed in the Timelock.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "QuorumVotesSet(uint256,uint256)",
      "name": "QuorumVotesSet",
      "description": "An event emitted when the quorum votes is set.",
      "parameterDecorators": [
        {
          "name": "oldQuorumVotes",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newQuorumVotes",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferERC20(address,address,uint256)",
      "name": "TransferERC20",
      "description": "Triggered when an amount of an ERC20 has been transferred from this contract to an address.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "ERC20 token address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "Address of the receiver.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "Amount of the transaction.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VoteCast(address,uint256,uint8,uint256,string)",
      "name": "VoteCast",
      "description": "An event emitted when a vote has been cast on a proposal.",
      "parameterDecorators": [
        {
          "name": "voter",
          "description": "The address which casted a vote.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "proposalId",
          "description": "The proposal id which was voted on.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "support",
          "description": "Support value for the vote. 0=against, 1=for, 2=abstain.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "votes",
          "description": "Number of votes which were cast by the voter.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "reason",
          "description": "The reason given for the vote by the voter.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "MAX_VOTING_PERIOD()",
      "name": "MAX_VOTING_PERIOD",
      "description": "The max setable voting period.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PROPOSAL_MAX_OPERATIONS()",
      "name": "PROPOSAL_MAX_OPERATIONS",
      "description": "The maximum number of actions that can be included in a proposal.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addMember(address)",
      "name": "addMember",
      "description": "Function used to add new members to the committee.",
      "parameterDecorators": [
        {
          "name": "_member",
          "description": "Member address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cancel(uint256)",
      "name": "cancel",
      "description": "Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "The id of the proposal to cancel.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "castVote(uint256,uint8)",
      "name": "castVote",
      "description": "Cast a vote for a proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "The id of the proposal to vote on.",
          "recommendedTypes": []
        },
        {
          "name": "_support",
          "description": "The support value for the vote. 0=against, 1=for, 2=abstain.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "communityAdmin()",
      "name": "communityAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "communityProxyAdmin()",
      "name": "communityProxyAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "execute(uint256)",
      "name": "execute",
      "description": "Executes a queued proposal if eta has passed.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "The id of the proposal to execute.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getActions(uint256)",
      "name": "getActions",
      "description": "Gets actions of a proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "Proposal to query.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "signatures",
          "description": "Function signatures for proposal calls.",
          "recommendedTypes": [],
          "solidityType": "string[]"
        },
        {
          "name": "calldatas",
          "description": "Calldatas for proposal calls.",
          "recommendedTypes": [],
          "solidityType": "bytes[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReceipt(uint256,address)",
      "name": "getReceipt",
      "description": "Gets the receipt for a voter on a given proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the id of proposal.",
          "recommendedTypes": []
        },
        {
          "name": "_voter",
          "description": "The address of the voter.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The voting receipt.",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(uint256,address,address[])",
      "name": "initialize",
      "description": "Used to initialize the contract during delegator contructor.",
      "parameterDecorators": [
        {
          "name": "_quorumVotes",
          "description": "The initial quorum votes.",
          "recommendedTypes": []
        },
        {
          "name": "_communityAdmin",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_members",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "latestProposalIds(address)",
      "name": "latestProposalIds",
      "description": "The latest proposal for each proposer.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "members(address)",
      "name": "members",
      "description": "The committee members.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalCalldatas(uint256,uint256)",
      "name": "proposalCalldatas",
      "description": "The official each proposal's calldatas: An ordered list of calldata to be passed to each call.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalCount()",
      "name": "proposalCount",
      "description": "The total number of proposals.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalReceipts(uint256,address)",
      "name": "proposalReceipts",
      "description": "The official each proposal's receipts: Receipts of ballots for the entire set of voters.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "hasVoted",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "support",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "votes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint96"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalSignatures(uint256,uint256)",
      "name": "proposalSignatures",
      "description": "The official each proposal's signatures: An ordered list of function signatures to be called.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposals(uint256)",
      "name": "proposals",
      "description": "The official record of all proposals ever proposed.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "proposer",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "endBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "forVotes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "againstVotes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "abstainVotes",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "canceled",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "executed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "propose(string[],bytes[],string)",
      "name": "propose",
      "description": "Function used to propose a new proposal. Sender must have delegates above the proposal threshold.",
      "parameterDecorators": [
        {
          "name": "_signatures",
          "description": "Function signatures for proposal calls.",
          "recommendedTypes": []
        },
        {
          "name": "_calldatas",
          "description": "Calldatas for proposal calls.",
          "recommendedTypes": []
        },
        {
          "name": "_description",
          "description": "String description of the proposal.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Proposal id of new proposal.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "quorumVotes()",
      "name": "quorumVotes",
      "description": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeMember(address)",
      "name": "removeMember",
      "description": "Function used to remove members from the committee.",
      "parameterDecorators": [
        {
          "name": "_member",
          "description": "Member address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setQuorumVotes(uint256)",
      "name": "setQuorumVotes",
      "description": "Owner function for setting the quorum votes.",
      "parameterDecorators": [
        {
          "name": "_newQuorumVotes",
          "description": "new quorum votes.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "state(uint256)",
      "name": "state",
      "description": "Gets the state of a proposal.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "The id of the proposal.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Proposal state.",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}