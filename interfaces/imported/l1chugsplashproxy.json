{"schema":"../schema.json","tags":[],"name":"L1ChugSplashProxy","description":"L1ChugSplashProxy.","eventDecorators":[],"functionDecorators":[{"signature":"getImplementation()","name":"getImplementation","description":"Queries the implementation address. Can only be called by the owner OR by making an eth_call and setting the \"from\" address to address(0).","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Implementation address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"getOwner()","name":"getOwner","description":"Queries the owner of the proxy contract. Can only be called by the owner OR by making an eth_call and setting the \"from\" address to address(0).","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Owner address.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"setCode(bytes)","name":"setCode","description":"Sets the code that should be running behind this proxy. Note that this scheme is a bit different from the standard proxy scheme where one would typically deploy the code separately and then set the implementation address. We're doing it this way because it gives us a lot more freedom on the client side. Can only be triggered by the contract owner.","parameterDecorators":[{"name":"_code","description":"New contract code to run inside this contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setOwner(address)","name":"setOwner","description":"Changes the owner of the proxy contract. Only callable by the owner.","parameterDecorators":[{"name":"_owner","description":"New owner of the proxy contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setStorage(bytes32,bytes32)","name":"setStorage","description":"Modifies some storage slot within the proxy contract. Gives us a lot of power to perform upgrades in a more transparent way. Only callable by the owner.","parameterDecorators":[{"name":"_key","description":"Storage key to modify.","recommendedTypes":[]},{"name":"_value","description":"New value for the storage key.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}