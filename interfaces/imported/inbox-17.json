{"schema":"../schema.json","tags":[],"name":"Inbox","description":"","eventDecorators":[{"signature":"InboxMessageDelivered(uint256,bytes)","name":"InboxMessageDelivered","description":"Must be emitted in withdraw() function.","parameterDecorators":[{"name":"messageNum","description":"","recommendedTypes":[],"indexed":true},{"name":"data","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"InboxMessageDeliveredFromOrigin(uint256)","name":"InboxMessageDeliveredFromOrigin","description":"Must be emitted in withdraw() function.","parameterDecorators":[{"name":"messageNum","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"WhitelistSourceUpdated(address)","name":"WhitelistSourceUpdated","description":"Must be emitted in withdraw() function.","parameterDecorators":[{"name":"newSource","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"bridge()","name":"bridge","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"createRetryableTicket(address,uint256,uint256,address,address,uint256,uint256,bytes)","name":"createRetryableTicket","description":"Put an message in the L2 inbox that can be reexecuted for some fixed amount of time if it reverts. all msg.value will deposited to callValueRefundAddress on L2.","parameterDecorators":[{"name":"destAddr","description":"destination L2 contract address.","recommendedTypes":[]},{"name":"l2CallValue","description":"call value for retryable L2 message.","recommendedTypes":[]},{"name":"maxSubmissionCost","description":"Max gas deducted from user's L2 balance to cover base submission fee.","recommendedTypes":[]},{"name":"excessFeeRefundAddress","description":"maxgas x gasprice - execution cost gets credited here on L2 balance.","recommendedTypes":[]},{"name":"callValueRefundAddress","description":"l2Callvalue gets credited here on L2 if retryable txn times out or gets cancelled.","recommendedTypes":[]},{"name":"maxGas","description":"Max gas deducted from user's L2 balance to cover L2 execution.","recommendedTypes":[]},{"name":"gasPriceBid","description":"price bid for L2 execution.","recommendedTypes":[]},{"name":"data","description":"ABI encoded data of L2 message.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"unique id for retryable transaction (keccak256(requestID, uint(0) ).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"depositEth(uint256)","name":"depositEth","description":"","parameterDecorators":[{"name":"maxSubmissionCost","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"initialize(address,address)","name":"initialize","description":"","parameterDecorators":[{"name":"_bridge","description":"","recommendedTypes":[]},{"name":"_whitelist","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isMaster()","name":"isMaster","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"sendContractTransaction(uint256,uint256,address,uint256,bytes)","name":"sendContractTransaction","description":"","parameterDecorators":[{"name":"maxGas","description":"","recommendedTypes":[]},{"name":"gasPriceBid","description":"","recommendedTypes":[]},{"name":"destAddr","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"sendL1FundedContractTransaction(uint256,uint256,address,bytes)","name":"sendL1FundedContractTransaction","description":"","parameterDecorators":[{"name":"maxGas","description":"","recommendedTypes":[]},{"name":"gasPriceBid","description":"","recommendedTypes":[]},{"name":"destAddr","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"sendL1FundedUnsignedTransaction(uint256,uint256,uint256,address,bytes)","name":"sendL1FundedUnsignedTransaction","description":"","parameterDecorators":[{"name":"maxGas","description":"","recommendedTypes":[]},{"name":"gasPriceBid","description":"","recommendedTypes":[]},{"name":"nonce","description":"","recommendedTypes":[]},{"name":"destAddr","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"sendL2Message(bytes)","name":"sendL2Message","description":"Send a generic L2 message to the chain. This method can be used to send any type of message that doesn't require L1 validation.","parameterDecorators":[{"name":"messageData","description":"Data of the message being sent.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"sendL2MessageFromOrigin(bytes)","name":"sendL2MessageFromOrigin","description":"Send a generic L2 message to the chain. This method is an optimization to avoid having to emit the entirety of the messageData in a log. Instead validators are expected to be able to parse the data from the transaction's input.","parameterDecorators":[{"name":"messageData","description":"Data of the message being sent.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"sendUnsignedTransaction(uint256,uint256,uint256,address,uint256,bytes)","name":"sendUnsignedTransaction","description":"","parameterDecorators":[{"name":"maxGas","description":"","recommendedTypes":[]},{"name":"gasPriceBid","description":"","recommendedTypes":[]},{"name":"nonce","description":"","recommendedTypes":[]},{"name":"destAddr","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"updateWhitelistSource(address)","name":"updateWhitelistSource","description":"","parameterDecorators":[{"name":"newSource","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"whitelist()","name":"whitelist","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}