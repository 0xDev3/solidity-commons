{
  "schema": "../schema.json",
  "tags": [],
  "name": "Inari",
  "description": "Contract that batches SUSHI staking and DeFi strategies.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "aaveToBento(address,uint256)",
      "name": "aaveToBento",
      "description": "Migrate AAVE `aToken` underlying `amount` into BENTO by batching calls to `aave` and `bento`.",
      "parameterDecorators": [
        {
          "name": "aToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "aaveToBentoTo(address,address,uint256)",
      "name": "aaveToBentoTo",
      "description": "Migrate AAVE `aToken` underlying `amount` into BENTO for benefit of `to` by batching calls to `aave` and `bento`.",
      "parameterDecorators": [
        {
          "name": "aToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "aaveToCompound(address,address,uint256)",
      "name": "aaveToCompound",
      "description": "Migrate AAVE `aToken` underlying `amount` into COMP/CREAM `cToken` by batching calls to `aave` and `cToken`.",
      "parameterDecorators": [
        {
          "name": "aToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "aaveToCompoundTo(address,address,address,uint256)",
      "name": "aaveToCompoundTo",
      "description": "Migrate AAVE `aToken` underlying `amount` into COMP/CREAM `cToken` for benefit of `to` by batching calls to `aave` and `cToken`.",
      "parameterDecorators": [
        {
          "name": "aToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "approveTokenBridge(address[],address[])",
      "name": "approveTokenBridge",
      "description": "Helper function to approve this contract to spend and bridge more tokens among DeFi contracts.",
      "parameterDecorators": [
        {
          "name": "underlying",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "batch(bytes[],bool)",
      "name": "batch",
      "description": "Allows batched call to self (this contract).",
      "parameterDecorators": [
        {
          "name": "calls",
          "description": "An array of inputs for each call.",
          "recommendedTypes": []
        },
        {
          "name": "revertOnFail",
          "description": "If True then reverts after a failed call and stops doing further calls.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "successes",
          "description": "An array indicating the success of a call, mapped one-to-one to `calls`.",
          "recommendedTypes": [],
          "solidityType": "bool[]"
        },
        {
          "name": "results",
          "description": "An array with the returned data of each function call, mapped one-to-one to `calls`.",
          "recommendedTypes": [],
          "solidityType": "bytes[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bentoToAave(address,uint256)",
      "name": "bentoToAave",
      "description": "Migrate `underlying` `amount` from BENTO into AAVE by batching calls to `bento` and `aave`.",
      "parameterDecorators": [
        {
          "name": "underlying",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bentoToAaveTo(address,address,uint256)",
      "name": "bentoToAaveTo",
      "description": "Migrate `underlying` `amount` from BENTO into AAVE for benefit of `to` by batching calls to `bento` and `aave`.",
      "parameterDecorators": [
        {
          "name": "underlying",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bentoToCompound(address,uint256)",
      "name": "bentoToCompound",
      "description": "Migrate `cToken` `underlyingAmount` from BENTO into COMP/CREAM by batching calls to `bento` and `cToken`.",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "underlyingAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bentoToCompoundTo(address,address,uint256)",
      "name": "bentoToCompoundTo",
      "description": "Migrate `cToken` `underlyingAmount` from BENTO into COMP/CREAM for benefit of `to` by batching calls to `bento` and `cToken`.",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "underlyingAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "compoundToAave(address,uint256)",
      "name": "compoundToAave",
      "description": "Migrate COMP/CREAM `cToken` underlying `amount` into AAVE by batching calls to `cToken` and `aave`.",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "compoundToAaveTo(address,uint256)",
      "name": "compoundToAaveTo",
      "description": "Migrate COMP/CREAM `cToken` underlying `amount` into AAVE for benefit of `to` by batching calls to `cToken` and `aave`.",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "compoundToBento(address,uint256)",
      "name": "compoundToBento",
      "description": "Migrate COMP/CREAM `cToken` underlying `amount` into BENTO by batching calls to `cToken` and `bento`.",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cTokenAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "compoundToBentoTo(address,address,uint256)",
      "name": "compoundToBentoTo",
      "description": "Migrate COMP/CREAM `cToken` underlying `amount` into BENTO for benefit of `to` by batching calls to `cToken` and `bento`.",
      "parameterDecorators": [
        {
          "name": "cToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "cTokenAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "daiToBentoWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)",
      "name": "daiToBentoWithPermit",
      "description": "Helper function to `permit()` this contract to deposit `dai` into `bento`.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "nonce",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositETH()",
      "name": "depositETH",
      "description": "ETH deposit function for `batch` into strategies.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositToken(address,uint256)",
      "name": "depositToken",
      "description": "Generalized token deposit function for `batch` into strategies.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ethToStakeSushi()",
      "name": "ethToStakeSushi",
      "description": "Swap ETH to stake SUSHI into xSUSHI.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ethToStakeSushiTo(address)",
      "name": "ethToStakeSushiTo",
      "description": "Swap ETH to stake SUSHI into xSUSHI for benefit of `to`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "permitDai(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)",
      "name": "permitDai",
      "description": "Call wrapper that performs `ERC20.permit` on `dai` using EIP 2612 primitive. Lookup `IDaiPermit.permit`.",
      "parameterDecorators": [
        {
          "name": "holder",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "spender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "nonce",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "expiry",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "allowed",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)",
      "name": "permitToken",
      "description": "Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToAave(uint256)",
      "name": "stakeSushiToAave",
      "description": "Stake SUSHI `amount` into aXSUSHI by batching calls to `sushiBar` and `aave`.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToAaveTo(address,uint256)",
      "name": "stakeSushiToAaveTo",
      "description": "Stake SUSHI `amount` into aXSUSHI for benefit of `to` by batching calls to `sushiBar` and `aave`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToBento(uint256)",
      "name": "stakeSushiToBento",
      "description": "Stake SUSHI `amount` into BENTO xSUSHI by batching calls to `sushiBar` and `bento`.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToBentoTo(address,uint256)",
      "name": "stakeSushiToBentoTo",
      "description": "Stake SUSHI `amount` into BENTO xSUSHI for benefit of `to` by batching calls to `sushiBar` and `bento`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToCream(uint256)",
      "name": "stakeSushiToCream",
      "description": "Stake SUSHI `amount` into crXSUSHI by batching calls to `sushiBar` and `crXSushiToken`.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToCreamTo(address,uint256)",
      "name": "stakeSushiToCreamTo",
      "description": "Stake SUSHI `amount` into crXSUSHI for benefit of `to` by batching calls to `sushiBar` and `crXSushiToken`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToCreamToBento(uint256)",
      "name": "stakeSushiToCreamToBento",
      "description": "Stake SUSHI `amount` into crXSUSHI and BENTO by batching calls to `sushiBar`, `crXSushiToken` and `bento`.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeSushiToCreamToBentoTo(address,uint256)",
      "name": "stakeSushiToCreamToBentoTo",
      "description": "Stake SUSHI `amount` into crXSUSHI and BENTO for benefit of `to` by batching calls to `sushiBar`, `crXSushiToken` and `bento`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sushiFromCreamFromBento(uint256)",
      "name": "sushiFromCreamFromBento",
      "description": "Unstake crSUSHI `amount` into SUSHI from BENTO by batching calls to `bento` and `crSushiToken`.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sushiFromCreamFromBentoTo(address,uint256)",
      "name": "sushiFromCreamFromBentoTo",
      "description": "Unstake crSUSHI `amount` into SUSHI from BENTO for benefit of `to` by batching calls to `bento` and `crSushiToken`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sushiToCreamToBento(uint256)",
      "name": "sushiToCreamToBento",
      "description": "Stake SUSHI `amount` into crSUSHI and BENTO by batching calls to `crSushiToken` and `bento`.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sushiToCreamToBentoTo(address,uint256)",
      "name": "sushiToCreamToBentoTo",
      "description": "Stake SUSHI `amount` into crSUSHI and BENTO for benefit of `to` by batching calls to `crSushiToken` and `bento`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swap(address,address,uint256)",
      "name": "swap",
      "description": "SushiSwap `fromToken` to `toToken` with `amountIn`.",
      "parameterDecorators": [
        {
          "name": "fromToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amountIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapAll(address,address)",
      "name": "swapAll",
      "description": "SushiSwap all `fromToken` in this contract to `toToken`.",
      "parameterDecorators": [
        {
          "name": "fromToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapAllTo(address,address,address)",
      "name": "swapAllTo",
      "description": "SushiSwap all `fromToken` in this contract to `toToken` for benefit of `to`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "fromToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapTo(address,address,address,uint256)",
      "name": "swapTo",
      "description": "SushiSwap `fromToken` `amountIn` to `toToken` for benefit of `to`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "fromToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amountIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amountOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromAave(uint256)",
      "name": "unstakeSushiFromAave",
      "description": "Unstake aXSUSHI `amount` into SUSHI by batching calls to `aave` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromAaveTo(address,uint256)",
      "name": "unstakeSushiFromAaveTo",
      "description": "Unstake aXSUSHI `amount` into SUSHI for benefit of `to` by batching calls to `aave` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromBento(uint256)",
      "name": "unstakeSushiFromBento",
      "description": "Unstake xSUSHI `amount` from BENTO into SUSHI by batching calls to `bento` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromBentoTo(address,uint256)",
      "name": "unstakeSushiFromBentoTo",
      "description": "Unstake xSUSHI `amount` from BENTO into SUSHI for benefit of `to` by batching calls to `bento` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromCream(uint256)",
      "name": "unstakeSushiFromCream",
      "description": "Unstake crXSUSHI `amount` into SUSHI by batching calls to `crXSushiToken` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromCreamFromBento(uint256)",
      "name": "unstakeSushiFromCreamFromBento",
      "description": "Unstake crXSUSHI `amount` into SUSHI from BENTO by batching calls to `bento`, `crXSushiToken` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromCreamFromBentoTo(address,uint256)",
      "name": "unstakeSushiFromCreamFromBentoTo",
      "description": "Unstake crXSUSHI `amount` into SUSHI from BENTO for benefit of `to` by batching calls to `bento`, `crXSushiToken` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unstakeSushiFromCreamTo(address,uint256)",
      "name": "unstakeSushiFromCreamTo",
      "description": "Unstake crXSUSHI `amount` into SUSHI for benefit of `to` by batching calls to `crXSushiToken` and `sushiBar`.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}