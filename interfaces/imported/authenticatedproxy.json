{"schema":"../schema.json","tags":[],"name":"AuthenticatedProxy","description":"","eventDecorators":[{"signature":"Revoked(bool)","name":"Revoked","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"revoked","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ReceivedEther(address,uint256)","name":"ReceivedEther","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ReceivedTokens(address,uint256,address,bytes)","name":"ReceivedTokens","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"value","description":"","recommendedTypes":[],"indexed":false},{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"extraData","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"proxy(address,uint8,bytes)","name":"proxy","description":"Execute a message call from the proxy contract. Can be called by the user, or by a contract authorized by the registry as long as the user has not revoked access.","parameterDecorators":[{"name":"dest","description":"Address to which the call will be sent.","recommendedTypes":[]},{"name":"howToCall","description":"Which kind of call to make.","recommendedTypes":[]},{"name":"calldata","description":"Calldata to send.","recommendedTypes":[]}],"returnDecorators":[{"name":"result","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"proxyAssert(address,uint8,bytes)","name":"proxyAssert","description":"Execute a message call and assert success. Same functionality as `proxy`, just asserts the return value.","parameterDecorators":[{"name":"dest","description":"Address to which the call will be sent.","recommendedTypes":[]},{"name":"howToCall","description":"What kind of call to make.","recommendedTypes":[]},{"name":"calldata","description":"Calldata to send.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proxyType()","name":"proxyType","description":"Tells the proxy type (EIP 897).","parameterDecorators":[],"returnDecorators":[{"name":"proxyTypeId","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address)","name":"initialize","description":"Initialize an AuthenticatedProxy.","parameterDecorators":[{"name":"addrUser","description":"Address of user on whose behalf this proxy will act.","recommendedTypes":[]},{"name":"addrRegistry","description":"Address of ProxyRegistry contract which will manage this proxy.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRevoke(bool)","name":"setRevoke","description":"Set the revoked flag (allows a user to revoke ProxyRegistry access). Can be called by the user only.","parameterDecorators":[{"name":"revoke","description":"Whether or not to revoke access.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"user()","name":"user","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"implementation()","name":"implementation","description":"Tells the address of the current implementation.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"revoked()","name":"revoked","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"upgradeabilityOwner()","name":"upgradeabilityOwner","description":"Tells the address of the owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"registry()","name":"registry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"receiveApproval(address,uint256,address,bytes)","name":"receiveApproval","description":"Receive tokens and generate a log event.","parameterDecorators":[{"name":"from","description":"Address from which to transfer tokens.","recommendedTypes":[]},{"name":"value","description":"Amount of tokens to transfer.","recommendedTypes":[]},{"name":"token","description":"Address of token.","recommendedTypes":[]},{"name":"extraData","description":"Additional data to log.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}