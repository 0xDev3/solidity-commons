{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "AdapterRegistry",
  "description": "Registry for protocols, adapters, and token adapters. getBalances() function implements the main functionality.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addProtocolAdapters(bytes32,address[],address[][])",
      "name": "addProtocolAdapters",
      "description": "Adds protocol adapters. The function is callable only by the owner.",
      "parameterDecorators": [
        {
          "name": "protocolName",
          "description": "Name of the protocol to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "adapters",
          "description": "Array of new adapters to be added.",
          "recommendedTypes": []
        },
        {
          "name": "tokens",
          "description": "Array of new adapters' supported tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addProtocols(bytes32[],tuple(string,string,string,string,uint256)[],address[][],address[][][])",
      "name": "addProtocols",
      "description": "Adds new protocols. The function is callable only by the owner.",
      "parameterDecorators": [
        {
          "name": "protocolNames",
          "description": "Names of the protocols to be added.",
          "recommendedTypes": []
        },
        {
          "name": "metadata",
          "description": "Array with new protocols metadata.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "name",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "description",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "websiteURL",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "iconURL",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "version",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "adapters",
          "description": "Nested arrays with new protocols' adapters.",
          "recommendedTypes": []
        },
        {
          "name": "tokens",
          "description": "Nested arrays with adapters' supported tokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addTokenAdapters(bytes32[],address[])",
      "name": "addTokenAdapters",
      "description": "Adds new token adapters. The function is callable only by the owner.",
      "parameterDecorators": [
        {
          "name": "tokenAdapterNames",
          "description": "Names of token adapters to be added.",
          "recommendedTypes": []
        },
        {
          "name": "adapters",
          "description": "Addresses of token adapters to be added.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAdapterBalance(address,address,address[])",
      "name": "getAdapterBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Address of the account.",
          "recommendedTypes": []
        },
        {
          "name": "adapter",
          "description": "Address of the protocol adapter.",
          "recommendedTypes": []
        },
        {
          "name": "tokens",
          "description": "Array with tokens' addresses.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "AdapterBalance array by the given parameters.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "metadata",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple"
            },
            {
              "name": "balances",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple[]"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAdapterBalances(address,address[])",
      "name": "getAdapterBalances",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Address of the account.",
          "recommendedTypes": []
        },
        {
          "name": "adapters",
          "description": "Array of the protocol adapters' addresses.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "AdapterBalance array by the given parameters.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "metadata",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple"
            },
            {
              "name": "balances",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple[]"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBalances(address)",
      "name": "getBalances",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Address of the account.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "ProtocolBalance array by the given account.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "metadata",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple"
            },
            {
              "name": "adapterBalances",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple[]"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFinalFullTokenBalance(bytes32,address)",
      "name": "getFinalFullTokenBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenType",
          "description": "String with type of the token.",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "Address of the token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Final full token balance by token type and token address.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "base",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple"
            },
            {
              "name": "underlying",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple[]"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFullTokenBalance(bytes32,address)",
      "name": "getFullTokenBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenType",
          "description": "String with type of the token.",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "Address of the token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Full token balance by token type and token address.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "base",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple"
            },
            {
              "name": "underlying",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple[]"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProtocolAdapters(bytes32)",
      "name": "getProtocolAdapters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "protocolName",
          "description": "Name of the protocol.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Array of protocol adapters.",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProtocolBalances(address,bytes32[])",
      "name": "getProtocolBalances",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Address of the account.",
          "recommendedTypes": []
        },
        {
          "name": "protocolNames",
          "description": "Array of the protocols' names.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "ProtocolBalance array by the given account and names of protocols.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "metadata",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple"
            },
            {
              "name": "adapterBalances",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "tuple[]"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProtocolMetadata(bytes32)",
      "name": "getProtocolMetadata",
      "description": "",
      "parameterDecorators": [
        {
          "name": "protocolName",
          "description": "Name of the protocol.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Metadata of the protocol.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "name",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "description",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "websiteURL",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "iconURL",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "version",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProtocolNames()",
      "name": "getProtocolNames",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSupportedTokens(address)",
      "name": "getSupportedTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "adapter",
          "description": "Address of the protocol adapter.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Array of supported tokens.",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenAdapter(bytes32)",
      "name": "getTokenAdapter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAdapterName",
          "description": "Name of token adapter.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Address of token adapter.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTokenAdapterNames()",
      "name": "getTokenAdapterNames",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isValidProtocol(bytes32)",
      "name": "isValidProtocol",
      "description": "",
      "parameterDecorators": [
        {
          "name": "protocolName",
          "description": "Name of the protocol.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether the protocol name is valid.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isValidTokenAdapter(bytes32)",
      "name": "isValidTokenAdapter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAdapterName",
          "description": "Name of token adapter.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Whether token adapter is valid.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeProtocolAdapters(bytes32,uint256[])",
      "name": "removeProtocolAdapters",
      "description": "Removes protocol adapters. The function is callable only by the owner. NOTE: indexes will change during execution of this function!!!.",
      "parameterDecorators": [
        {
          "name": "protocolName",
          "description": "Name of the protocol to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "adapterIndices",
          "description": "Array of adapter indexes to be removed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeProtocols(bytes32[])",
      "name": "removeProtocols",
      "description": "Removes protocols. The function is callable only by the owner.",
      "parameterDecorators": [
        {
          "name": "protocolNames",
          "description": "Names of the protocols to be removed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeTokenAdapters(bytes32[])",
      "name": "removeTokenAdapters",
      "description": "Removes token adapters. The function is callable only by the owner.",
      "parameterDecorators": [
        {
          "name": "tokenAdapterNames",
          "description": "Names of token adapters to be removed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership to the desired address. The function is callable only by the owner.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateProtocolAdapter(bytes32,uint256,address,address[])",
      "name": "updateProtocolAdapter",
      "description": "Updates a protocol adapter. The function is callable only by the owner.",
      "parameterDecorators": [
        {
          "name": "protocolName",
          "description": "Name of the protocol to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "Index of the adapter to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "newAdapterAddress",
          "description": "New adapter address to be added instead.",
          "recommendedTypes": []
        },
        {
          "name": "newSupportedTokens",
          "description": "New supported tokens to be added instead.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateProtocolMetadata(bytes32,string,string,string,string)",
      "name": "updateProtocolMetadata",
      "description": "Updates a protocol info. The function is callable only by the owner.",
      "parameterDecorators": [
        {
          "name": "protocolName",
          "description": "Name of the protocol to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "name",
          "description": "Name of the protocol to be added instead.",
          "recommendedTypes": []
        },
        {
          "name": "description",
          "description": "Description of the protocol to be added instead.",
          "recommendedTypes": []
        },
        {
          "name": "websiteURL",
          "description": "URL of the protocol website to be added instead.",
          "recommendedTypes": []
        },
        {
          "name": "iconURL",
          "description": "URL of the protocol icon to be added instead.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateTokenAdapter(bytes32,address)",
      "name": "updateTokenAdapter",
      "description": "Updates token adapter. The function is callable only by the owner.",
      "parameterDecorators": [
        {
          "name": "tokenAdapterName",
          "description": "Name of token adapter to be updated.",
          "recommendedTypes": []
        },
        {
          "name": "adapter",
          "description": "Address of token adapter to be added instead.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}