{"schema":"../schema.json","tags":[],"name":"Relayer","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Token transfer event.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Register(address,uint256)","name":"Register","description":"Token transfer event.","parameterDecorators":[{"name":"from","description":"is Token sender address, which is the standard Ethereum network account address.","recommendedTypes":[],"indexed":true},{"name":"value","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unregister(address,uint256)","name":"Unregister","description":"Token transfer event.","parameterDecorators":[{"name":"from","description":"is Token sender address, which is the standard Ethereum network account address.","recommendedTypes":[],"indexed":true},{"name":"value","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdraw(address,uint256)","name":"Withdraw","description":"Token transfer event.","parameterDecorators":[{"name":"from","description":"is Token sender address, which is the standard Ethereum network account address.","recommendedTypes":[],"indexed":true},{"name":"value","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WorkerSet(address,uint256,bytes32)","name":"WorkerSet","description":"Token transfer event.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[],"indexed":true},{"name":"chainId","description":"","recommendedTypes":[],"indexed":true},{"name":"bindAddress","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"address2Bytes(address)","name":"address2Bytes","description":"view functions *********************************************************.","parameterDecorators":[{"name":"addr","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"batchBindingSingleWorker(uint256[],bytes32)","name":"batchBindingSingleWorker","description":"IRelayer.batchBindingSingleWorker.","parameterDecorators":[{"name":"_chainIdList","description":"","recommendedTypes":[]},{"name":"_worker","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"batchBindingWorkers(uint256[],bytes32[])","name":"batchBindingWorkers","description":"IRelayer.batchBindingWorker.","parameterDecorators":[{"name":"_chainIdList","description":"","recommendedTypes":[]},{"name":"_workerList","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bindRelayer(bytes32,uint256)","name":"bindRelayer","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"bindingWorker(uint256,bytes32)","name":"bindingWorker","description":"IRelayer.bindingWorker.","parameterDecorators":[{"name":"_chainId","description":"","recommendedTypes":[]},{"name":"_worker","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bytes2Address(bytes32)","name":"bytes2Address","description":"","parameterDecorators":[{"name":"b32","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"length()","name":"length","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"minStakeAmount()","name":"minStakeAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"refund(address)","name":"refund","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"register()","name":"register","description":"IRelayer.register.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"relayerAmount(address)","name":"relayerAmount","description":"","parameterDecorators":[{"name":"_relayer","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"relayerWorker(address,uint256)","name":"relayerWorker","description":"","parameterDecorators":[{"name":"_relayer","description":"","recommendedTypes":[]},{"name":"chainId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"relayers()","name":"relayers","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMinStakeAmount(uint256)","name":"setMinStakeAmount","description":"owner functions *********************************************************.","parameterDecorators":[{"name":"_newMinStakeAmount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unregister()","name":"unregister","description":"IRelayer.Unregister.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdraw()","name":"withdraw","description":"IRelayer.withdraw.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}