{"schema":"../schema.json","tags":["tokens","flash loans","loans","yield","vaults"],"name":"BentoBoxV1","description":"BentoBox. The BentoBox is a vault for tokens. The stored tokens can be flash loaned and used in strategies. Yield from this will go to the token depositors. Rebasing tokens ARE NOT supported and WILL cause loss of funds. Any funds transfered directly onto the BentoBox will be lost, use the deposit function instead.","eventDecorators":[{"signature":"LogDeploy(address,bytes,address)","name":"LogDeploy","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"masterContract","description":"","recommendedTypes":[],"indexed":true},{"name":"data","description":"","recommendedTypes":[],"indexed":false},{"name":"cloneAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"LogDeposit(address,address,address,uint256,uint256)","name":"LogDeposit","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"share","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogFlashLoan(address,address,uint256,uint256,address)","name":"LogFlashLoan","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"borrower","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"feeAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"receiver","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"LogRegisterProtocol(address)","name":"LogRegisterProtocol","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"protocol","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"LogSetMasterContractApproval(address,address,bool)","name":"LogSetMasterContractApproval","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"masterContract","description":"","recommendedTypes":[],"indexed":true},{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"approved","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogStrategyDivest(address,uint256)","name":"LogStrategyDivest","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogStrategyInvest(address,uint256)","name":"LogStrategyInvest","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogStrategyLoss(address,uint256)","name":"LogStrategyLoss","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogStrategyProfit(address,uint256)","name":"LogStrategyProfit","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogStrategyQueued(address,address)","name":"LogStrategyQueued","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"strategy","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"LogStrategySet(address,address)","name":"LogStrategySet","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"strategy","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"LogStrategyTargetPercentage(address,uint256)","name":"LogStrategyTargetPercentage","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"targetPercentage","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogTransfer(address,address,address,uint256)","name":"LogTransfer","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"share","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogWhiteListMasterContract(address,bool)","name":"LogWhiteListMasterContract","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"masterContract","description":"","recommendedTypes":[],"indexed":true},{"name":"approved","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogWithdraw(address,address,address,uint256,uint256)","name":"LogWithdraw","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"from","description":"","recommendedTypes":[],"indexed":true},{"name":"to","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"share","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Hash to mark updated provenance hash. Emitted when the implementation returned by the beacon is changed.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"DOMAIN_SEPARATOR()","name":"DOMAIN_SEPARATOR","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOf(address,address)","name":"balanceOf","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"batch(bytes[],bool)","name":"batch","description":"Allows batched call to self (this contract).","parameterDecorators":[{"name":"calls","description":"An array of inputs for each call.","recommendedTypes":[]},{"name":"revertOnFail","description":"If True then reverts after a failed call and stops doing further calls.","recommendedTypes":[]}],"returnDecorators":[{"name":"successes","description":"An array indicating the success of a call, mapped one-to-one to `calls`.","recommendedTypes":[],"solidityType":"bool[]"},{"name":"results","description":"An array with the returned data of each function call, mapped one-to-one to `calls`.","recommendedTypes":[],"solidityType":"bytes[]"}],"emittableEvents":[],"readOnly":false},{"signature":"batchFlashLoan(address,address[],address[],uint256[],bytes)","name":"batchFlashLoan","description":"Support for batched flashloans. Useful to request multiple different `tokens` in a single transaction.","parameterDecorators":[{"name":"borrower","description":"The address of the contract that implements and conforms to `IBatchFlashBorrower` and handles the flashloan.","recommendedTypes":[]},{"name":"receivers","description":"An array of the token receivers. A one-to-one mapping with `tokens` and `amounts`.","recommendedTypes":[]},{"name":"tokens","description":"The addresses of the tokens.","recommendedTypes":[]},{"name":"amounts","description":"of the tokens for each receiver.","recommendedTypes":[]},{"name":"data","description":"The calldata to pass to the `borrower` contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimOwnership()","name":"claimOwnership","description":"Needs to be called by `pendingOwner` to claim ownership.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deploy(address,bytes,bool)","name":"deploy","description":"Deploys a given master Contract as a clone. Any ETH transferred with this call is forwarded to the new clone. Emits `LogDeploy`.","parameterDecorators":[{"name":"masterContract","description":"The address of the contract to clone.","recommendedTypes":[]},{"name":"data","description":"Additional abi encoded calldata that is passed to the new clone via `IMasterContract.init`.","recommendedTypes":[]},{"name":"useCreate2","description":"Creates the clone by using the CREATE2 opcode, in this case `data` will be used as salt.","recommendedTypes":[]}],"returnDecorators":[{"name":"cloneAddress","description":"Address of the created clone contract.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"deposit(address,address,address,uint256,uint256)","name":"deposit","description":"Deposit an amount of `token` represented in either `amount` or `share`.","parameterDecorators":[{"name":"token_","description":"The ERC-20 token to deposit.","recommendedTypes":[]},{"name":"from","description":"which account to pull the tokens.","recommendedTypes":[]},{"name":"to","description":"which account to push the tokens.","recommendedTypes":[]},{"name":"amount","description":"Token amount in native representation to deposit.","recommendedTypes":[]},{"name":"share","description":"Token amount represented in shares to deposit. Takes precedence over `amount`.","recommendedTypes":[]}],"returnDecorators":[{"name":"amountOut","description":"The amount deposited.","recommendedTypes":[],"solidityType":"uint256"},{"name":"shareOut","description":"The deposited amount repesented in shares.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"flashLoan(address,address,address,uint256,bytes)","name":"flashLoan","description":"Flashloan ability.","parameterDecorators":[{"name":"borrower","description":"The address of the contract that implements and conforms to `IFlashBorrower` and handles the flashloan.","recommendedTypes":[]},{"name":"receiver","description":"Address of the token receiver.","recommendedTypes":[]},{"name":"token","description":"The address of the token to receive.","recommendedTypes":[]},{"name":"amount","description":"of the tokens to receive.","recommendedTypes":[]},{"name":"data","description":"The calldata to pass to the `borrower` contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"harvest(address,bool,uint256)","name":"harvest","description":"The actual process of yield farming. Executes the strategy of `token`. Optionally does housekeeping if `balance` is true. `maxChangeAmount` is relevant for skimming or withdrawing if `balance` is true.","parameterDecorators":[{"name":"token","description":"The address of the token for which a strategy is deployed.","recommendedTypes":[]},{"name":"balance","description":"True if housekeeping should be done.","recommendedTypes":[]},{"name":"maxChangeAmount","description":"The maximum amount for either pulling or pushing from/to the `IStrategy` contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"masterContractApproved(address,address)","name":"masterContractApproved","description":"masterContract to user to approval state.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"masterContractOf(address)","name":"masterContractOf","description":"Mapping from clone contracts to their masterContract.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"nonces(address)","name":"nonces","description":"user nonces for masterContract approvals.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingOwner()","name":"pendingOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingStrategy(address)","name":"pendingStrategy","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)","name":"permitToken","description":"Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]},{"name":"from","description":"","recommendedTypes":[]},{"name":"to","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]},{"name":"deadline","description":"","recommendedTypes":[]},{"name":"v","description":"","recommendedTypes":[]},{"name":"r","description":"","recommendedTypes":[]},{"name":"s","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"registerProtocol()","name":"registerProtocol","description":"Other contracts need to register with this master contract so that users can approve them for the BentoBox.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setMasterContractApproval(address,address,bool,uint8,bytes32,bytes32)","name":"setMasterContractApproval","description":"Approves or revokes a `masterContract` access to `user` funds.","parameterDecorators":[{"name":"user","description":"The address of the user that approves or revokes access.","recommendedTypes":[]},{"name":"masterContract","description":"The address who gains or loses access.","recommendedTypes":[]},{"name":"approved","description":"If True approves access. If False revokes access.","recommendedTypes":[]},{"name":"v","description":"Part of the signature. (See EIP-191).","recommendedTypes":[]},{"name":"r","description":"Part of the signature. (See EIP-191).","recommendedTypes":[]},{"name":"s","description":"Part of the signature. (See EIP-191).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setStrategy(address,address)","name":"setStrategy","description":"Sets the contract address of a new strategy that conforms to `IStrategy` for `token`. Must be called twice with the same arguments. A new strategy becomes pending first and can be activated once `STRATEGY_DELAY` is over. Only the owner of this contract is allowed to change this.","parameterDecorators":[{"name":"token","description":"The address of the token that maps to a strategy to change.","recommendedTypes":[]},{"name":"newStrategy","description":"The address of the contract that conforms to `IStrategy`.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setStrategyTargetPercentage(address,uint64)","name":"setStrategyTargetPercentage","description":"Sets the target percentage of the strategy for `token`. Only the owner of this contract is allowed to change this.","parameterDecorators":[{"name":"token","description":"The address of the token that maps to a strategy to change.","recommendedTypes":[]},{"name":"targetPercentage_","description":"The new target in percent. Must be lesser or equal to `MAX_TARGET_PERCENTAGE`.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"strategy(address)","name":"strategy","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"strategyData(address)","name":"strategyData","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"strategyStartDate","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"targetPercentage","description":"","recommendedTypes":[],"solidityType":"uint64"},{"name":"balance","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"toAmount(address,uint256,bool)","name":"toAmount","description":"Helper function represent shares back into the `token` amount.","parameterDecorators":[{"name":"token","description":"The ERC-20 token.","recommendedTypes":[]},{"name":"share","description":"The amount of shares.","recommendedTypes":[]},{"name":"roundUp","description":"If the result should be rounded up.","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"The share amount back into native representation.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"toShare(address,uint256,bool)","name":"toShare","description":"Helper function to represent an `amount` of `token` in shares.","parameterDecorators":[{"name":"token","description":"The ERC-20 token.","recommendedTypes":[]},{"name":"amount","description":"The `token` amount.","recommendedTypes":[]},{"name":"roundUp","description":"If the result `share` should be rounded up.","recommendedTypes":[]}],"returnDecorators":[{"name":"share","description":"The token amount represented in shares.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totals(address)","name":"totals","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"elastic","description":"","recommendedTypes":[],"solidityType":"uint128"},{"name":"base","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"transfer(address,address,address,uint256)","name":"transfer","description":"Transfer shares from a user account to another one.","parameterDecorators":[{"name":"token","description":"The ERC-20 token to transfer.","recommendedTypes":[]},{"name":"from","description":"which user to pull the tokens.","recommendedTypes":[]},{"name":"to","description":"which user to push the tokens.","recommendedTypes":[]},{"name":"share","description":"The amount of `token` in shares.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferMultiple(address,address,address[],uint256[])","name":"transferMultiple","description":"Transfer shares from a user account to multiple other ones.","parameterDecorators":[{"name":"token","description":"The ERC-20 token to transfer.","recommendedTypes":[]},{"name":"from","description":"which user to pull the tokens.","recommendedTypes":[]},{"name":"tos","description":"The receivers of the tokens.","recommendedTypes":[]},{"name":"shares","description":"The amount of `token` in shares for each receiver in `tos`.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address,bool,bool)","name":"transferOwnership","description":"Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner. Can only be invoked by the current `owner`.","parameterDecorators":[{"name":"newOwner","description":"Address of the new owner.","recommendedTypes":[]},{"name":"direct","description":"True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.","recommendedTypes":[]},{"name":"renounce","description":"Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"whitelistMasterContract(address,bool)","name":"whitelistMasterContract","description":"Enables or disables a contract for approval without signed message.","parameterDecorators":[{"name":"masterContract","description":"","recommendedTypes":[]},{"name":"approved","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"whitelistedMasterContracts(address)","name":"whitelistedMasterContracts","description":"masterContract to whitelisted state for approval without signed message.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(address,address,address,uint256,uint256)","name":"withdraw","description":"Withdraws an amount of `token` from a user account.","parameterDecorators":[{"name":"token_","description":"The ERC-20 token to withdraw.","recommendedTypes":[]},{"name":"from","description":"which user to pull the tokens.","recommendedTypes":[]},{"name":"to","description":"which user to push the tokens.","recommendedTypes":[]},{"name":"amount","description":"of tokens. Either one of `amount` or `share` needs to be supplied.","recommendedTypes":[]},{"name":"share","description":"Like above, but `share` takes precedence over `amount`.","recommendedTypes":[]}],"returnDecorators":[{"name":"amountOut","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"shareOut","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false}]}