{
  "schema": "../schema.json",
  "tags": [
    "locking"
  ],
  "name": "LockGTON",
  "description": "LockGTON.",
  "eventDecorators": [
    {
      "signature": "LockGTON(address,address,address,uint256)",
      "name": "LockGTON",
      "description": "Event emitted when the `sender` locks `amount` of governance tokens. Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "governanceToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Migrate(address,uint256)",
      "name": "Migrate",
      "description": "Event emitted when the locked governance tokens are transfered the another version of LockGTON. Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "newLock",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SetCanLock(address,bool)",
      "name": "SetCanLock",
      "description": "Event emitted when the permission to lock is updated via `#setCanLock`. Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newBool",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SetOwner(address,address)",
      "name": "SetOwner",
      "description": "Event emitted when the owner changes via `#setOwner`. Emitted when setting contract parameters.",
      "parameterDecorators": [
        {
          "name": "ownerOld",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "ownerNew",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "canLock()",
      "name": "canLock",
      "description": "Look up if locking is allowed.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governanceToken()",
      "name": "governanceToken",
      "description": "Address of the governance token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lock(uint256)",
      "name": "lock",
      "description": "Locks `amount` of governance tokens.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "migrate(address)",
      "name": "migrate",
      "description": "Transfers locked governance tokens to the next version of LockGTON.",
      "parameterDecorators": [
        {
          "name": "newLock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "User that can grant access permissions and perform privileged actions.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setCanLock(bool)",
      "name": "setCanLock",
      "description": "Sets the permission to lock to `_canLock`.",
      "parameterDecorators": [
        {
          "name": "_canLock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOwner(address)",
      "name": "setOwner",
      "description": "Transfers ownership of the contract to a new account (`_owner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}