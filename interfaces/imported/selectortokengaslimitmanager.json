{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "nft"
  ],
  "name": "SelectorTokenGasLimitManager",
  "description": "SelectorTokenGasLimitManager. Multi NFT mediator functionality for managing request gas limits.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "bridge()",
      "name": "bridge",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getModuleInterfacesVersion()",
      "name": "getModuleInterfacesVersion",
      "description": "Tells the module interface version that this contract supports.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "major",
          "description": "value of the version.",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "minor",
          "description": "value of the version.",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "patch",
          "description": "value of the version.",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,uint256)",
      "name": "initialize",
      "description": "Initializes this module contract. Intended to be called only once through the proxy pattern.",
      "parameterDecorators": [
        {
          "name": "_bridge",
          "description": "address of the AMB bridge contract to which Omnibridge mediator is connected.",
          "recommendedTypes": []
        },
        {
          "name": "_mediator",
          "description": "address of the Omnibridge contract working with this module.",
          "recommendedTypes": []
        },
        {
          "name": "_gasLimit",
          "description": "default gas limit for the message execution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "mediator()",
      "name": "mediator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "requestGasLimit(bytes4,address)",
      "name": "requestGasLimit",
      "description": "Tells the token-specific gas limit to be used in the message execution by the AMB bridge on the other network.",
      "parameterDecorators": [
        {
          "name": "_selector",
          "description": "method selector for the passed message.",
          "recommendedTypes": []
        },
        {
          "name": "_token",
          "description": "address of the native token that is used in the first argument of handleBridgedTokens/handleNativeTokens.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the gas limit for the message execution.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "requestGasLimit()",
      "name": "requestGasLimit",
      "description": "Tells the default gas limit to be used in the message execution by the AMB bridge on the other network.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the gas limit for the message execution.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "requestGasLimit(bytes4)",
      "name": "requestGasLimit",
      "description": "Tells the selector-specific gas limit to be used in the message execution by the AMB bridge on the other network.",
      "parameterDecorators": [
        {
          "name": "_selector",
          "description": "method selector for the passed message.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the gas limit for the message execution.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "requestGasLimit(bytes)",
      "name": "requestGasLimit",
      "description": "Tells the gas limit to use for the message execution by the AMB bridge on the other network.",
      "parameterDecorators": [
        {
          "name": "_data",
          "description": "calldata to be used on the other side of the bridge, when execution a message.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the gas limit for the message execution.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setBridgedTokenRequestGasLimits(address,uint256[])",
      "name": "setBridgedTokenRequestGasLimits",
      "description": "Sets the request gas limits for some specific token bridged from Foreign side of the bridge.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "address of the native token contract on the Foreign side.",
          "recommendedTypes": []
        },
        {
          "name": "_gasLimits",
          "description": "array with 1 gas limit for the following selectors of the outgoing messages: - handleNativeNFT Only the owner can call this method.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCommonRequestGasLimits(uint256[])",
      "name": "setCommonRequestGasLimits",
      "description": "Sets the default values for different NFT Omnibridge selectors.",
      "parameterDecorators": [
        {
          "name": "_gasLimits",
          "description": "array with 4 gas limits for the following selectors of the outgoing messages: - deployAndHandleBridgedNFT - handleBridgedNFT - handleNativeNFT - fixFailedMessage Only the owner can call this method.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setNativeTokenRequestGasLimits(address,uint256[])",
      "name": "setNativeTokenRequestGasLimits",
      "description": "Sets the request gas limits for some specific token native to the Home side of the bridge.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "address of the native token contract on the Home side.",
          "recommendedTypes": []
        },
        {
          "name": "_gasLimits",
          "description": "array with 2 gas limits for the following selectors of the outgoing messages: - deployAndHandleBridgedNFT - handleBridgedNFT Only the owner can call this method.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRequestGasLimit(bytes4,uint256)",
      "name": "setRequestGasLimit",
      "description": "Sets the selector-specific gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.",
      "parameterDecorators": [
        {
          "name": "_selector",
          "description": "method selector of the outgoing message payload.",
          "recommendedTypes": []
        },
        {
          "name": "_gasLimit",
          "description": "the gas limit for the message execution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRequestGasLimit(bytes4,address,uint256)",
      "name": "setRequestGasLimit",
      "description": "Sets the token-specific gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.",
      "parameterDecorators": [
        {
          "name": "_selector",
          "description": "method selector of the outgoing message payload.",
          "recommendedTypes": []
        },
        {
          "name": "_token",
          "description": "address of the native token that is used in the first argument of handleBridgedTokens/handleNativeTokens.",
          "recommendedTypes": []
        },
        {
          "name": "_gasLimit",
          "description": "the gas limit for the message execution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRequestGasLimit(uint256)",
      "name": "setRequestGasLimit",
      "description": "Sets the default gas limit to be used in the message execution by the AMB bridge on the other network. This value can't exceed the parameter maxGasPerTx defined on the AMB bridge. Only the owner can call this method.",
      "parameterDecorators": [
        {
          "name": "_gasLimit",
          "description": "the gas limit for the message execution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}