{
  "schema": "../schema.json",
  "tags": [],
  "name": "RedEnvelope",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Claimed(bool)",
      "name": "Claimed",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "claimed",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "CreatorWithdrawn(bool)",
      "name": "CreatorWithdrawn",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "withdrawn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EnvelopCreated(bytes)",
      "name": "EnvelopCreated",
      "description": "Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "envelopeId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "claim(bytes)",
      "name": "claim",
      "description": "Open envelope before others and get crypto gift!. contract distributes crypto to msg.sender.",
      "parameterDecorators": [
        {
          "name": "_envelopeId",
          "description": "id of envelope in bytes256.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createEnvelope(uint256,string,string)",
      "name": "createEnvelope",
      "description": "create an envelope and share money with your people. creates envelope and stores crypto in this contract to later on distribute with participants.",
      "parameterDecorators": [
        {
          "name": "_participantsLimit",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_message",
          "description": "welcome message of the envelope.",
          "recommendedTypes": []
        },
        {
          "name": "_creatorNickName",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_envelopeId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "creatorToEnvelope(address,uint256)",
      "name": "creatorToEnvelope",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "creatorWithdraw(bytes)",
      "name": "creatorWithdraw",
      "description": "In case it's been more than 24 hours and participants have not claimed all possible crypto, the envelope creator can claim crypto locked in this contract*.",
      "parameterDecorators": [
        {
          "name": "_envelopeId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getCreatorEnvelopes(address)",
      "name": "getCreatorEnvelopes",
      "description": "used in front-end to display creator envelope data.",
      "parameterDecorators": [
        {
          "name": "_creatorAddress",
          "description": "address of envelope creator.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "_envelopes All envelopes created by user.",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEnvelope(bytes)",
      "name": "getEnvelope",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_envelopeId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getReceiverEnvelopes(address)",
      "name": "getReceiverEnvelopes",
      "description": "used in front-end to display receiver envelope data.",
      "parameterDecorators": [
        {
          "name": "_receiverAddress",
          "description": "address of envelope creator.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "_envelopes All envelopes a user has opened.",
          "recommendedTypes": [],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "receiverToEnvelope(address,uint256)",
      "name": "receiverToEnvelope",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}