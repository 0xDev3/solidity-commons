{
  "schema": "../schema.json",
  "tags": [],
  "name": "AnimalFactory",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AnimalsPurchased(address,address,uint256,uint256)",
      "name": "AnimalsPurchased",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "purchaser",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "修改盲盒 boxIndex：盲盒索引 startTime：盲盒生效时间 endTime：盲盒失效时间.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "getEggPhaseList()",
      "name": "getEggPhaseList",
      "description": "function to get all animals in the egg phase list *.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyCostume(uint256,uint256)",
      "name": "buyCostume",
      "description": "function to request to buy costume *.",
      "parameterDecorators": [
        {
          "name": "cId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "aId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deleteMember(address)",
      "name": "deleteMember",
      "description": "function to delete a member from the list that could remove an animal from egg phase can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "member",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "priceForMateAdvertisement()",
      "name": "priceForMateAdvertisement",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "showMyAnimalBalance()",
      "name": "showMyAnimalBalance",
      "description": "function to show how many animals does an address have *.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "tokenBalance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MintAnimalsFromAnimalFactory(string,string)",
      "name": "MintAnimalsFromAnimalFactory",
      "description": "Function to buy animals from the factory in exchange for ethers *.",
      "parameterDecorators": [
        {
          "name": "animalName",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "animalDesc",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ownerPerThousandShareForMating()",
      "name": "ownerPerThousandShareForMating",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "weiRaised()",
      "name": "weiRaised",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isMatingPaused()",
      "name": "isMatingPaused",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setBuyingCostumeRate(uint256)",
      "name": "setBuyingCostumeRate",
      "description": "function to set the sale advertisement price can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "newPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "putMatingRequest(uint256,uint256)",
      "name": "putMatingRequest",
      "description": "function to put mating request in exchange for ethers *.",
      "parameterDecorators": [
        {
          "name": "animalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "matePrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawSaleRequest(uint256)",
      "name": "withdrawSaleRequest",
      "description": "function to withdraw a sale advertisement that was put earlier *.",
      "parameterDecorators": [
        {
          "name": "animalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "weiPerAnimal()",
      "name": "weiPerAnimal",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "TransferAnimalToAnotherUser(uint256,address)",
      "name": "TransferAnimalToAnotherUser",
      "description": "function to transfer an animal to another user direct token cannot be passed as we have disabled the transfer feature all animal transfers should occur through this function *.",
      "parameterDecorators": [
        {
          "name": "animalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "priceForBuyingCostume()",
      "name": "priceForBuyingCostume",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getChildrenAgainstAnimalId(uint256)",
      "name": "getChildrenAgainstAnimalId",
      "description": "function to get all children ids of an animal *.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllMatingAnimals()",
      "name": "getAllMatingAnimals",
      "description": "function to get all mating animal ids *.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateAnimal(uint256,string,string)",
      "name": "updateAnimal",
      "description": "function to update an animal can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "animalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "name",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "desc",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllAnimalsByAddress(address)",
      "name": "getAllAnimalsByAddress",
      "description": "function to get all animals against an address *.",
      "parameterDecorators": [
        {
          "name": "ad",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "listAnimals",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAnimalByIdVisibility(uint256)",
      "name": "getAnimalByIdVisibility",
      "description": "",
      "parameterDecorators": [
        {
          "name": "aid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "upforsale",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "upformating",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "eggphase",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "isbornbymating",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "birthdate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "costumeid",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "generationid",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "freeAnimalsLimit()",
      "name": "freeAnimalsLimit",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "priceForSaleAdvertisement()",
      "name": "priceForSaleAdvertisement",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ownerPerThousandShareForBuying()",
      "name": "ownerPerThousandShareForBuying",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approvePendingCostume(uint256)",
      "name": "approvePendingCostume",
      "description": "function to approve a pending costume can be called from anyone in the member addresses list *.",
      "parameterDecorators": [
        {
          "name": "animalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "listMembers()",
      "name": "listMembers",
      "description": "function to return the members that could remove an animal from egg phase *.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAnimalById(uint256)",
      "name": "getAnimalById",
      "description": "function to get animal details by id *.",
      "parameterDecorators": [
        {
          "name": "aid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param5",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param6",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setMateAdvertisementRate(uint256)",
      "name": "setMateAdvertisementRate",
      "description": "function to set the mate advertisement price can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "newPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllSaleAnimals()",
      "name": "getAllSaleAnimals",
      "description": "function to get all sale animals ids *.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addMember(address)",
      "name": "addMember",
      "description": "function to add a member that could remove animals from egg phase can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "member",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAnimalIdsWithPendingCostume()",
      "name": "getAnimalIdsWithPendingCostume",
      "description": "function to get all animals in costume not yet approved list *.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeFreeAnimalsLimit45(uint256)",
      "name": "changeFreeAnimalsLimit45",
      "description": "",
      "parameterDecorators": [
        {
          "name": "limit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getOwnerByAnimalId(uint256)",
      "name": "getOwnerByAnimalId",
      "description": "",
      "parameterDecorators": [
        {
          "name": "aid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setMintRate(uint256)",
      "name": "setMintRate",
      "description": "function to set the new price can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "newPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeOwnerSharePerThousandForMating(uint256)",
      "name": "changeOwnerSharePerThousandForMating",
      "description": "function to change the owner share on mating transactions can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "mateshare",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "mateAnimal(uint256,uint256,string,string)",
      "name": "mateAnimal",
      "description": "function to accept a mate offer by offering one of your own animals and paying ethers ofcourse *.",
      "parameterDecorators": [
        {
          "name": "parent1Id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "parent2Id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "animalName",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "animalDesc",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pauseContract(bool)",
      "name": "pauseContract",
      "description": "function to pause the contract can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "isPaused",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMaxMintable(uint256)",
      "name": "changeMaxMintable",
      "description": "function to change the Max animals minted limit can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "limit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "putSaleRequest(uint256,uint256)",
      "name": "putSaleRequest",
      "description": "Advertise your animal for selling in exchange for ethers *.",
      "parameterDecorators": [
        {
          "name": "animalId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "salePrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawMatingRequest(uint256)",
      "name": "withdrawMatingRequest",
      "description": "withdraw the mating request that was put earlier *.",
      "parameterDecorators": [
        {
          "name": "animalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeFreeAnimalsLimit(uint256)",
      "name": "changeFreeAnimalsLimit",
      "description": "function to change the free animals limit for each user can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "limit",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyAnimalsFromUser(uint256)",
      "name": "buyAnimalsFromUser",
      "description": "Buying animals from a user *.",
      "parameterDecorators": [
        {
          "name": "animalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSaleAdvertisementRate(uint256)",
      "name": "setSaleAdvertisementRate",
      "description": "function to set the sale advertisement price can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "newPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalAnimalsCreated()",
      "name": "totalAnimalsCreated",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeFromEggPhase(uint256)",
      "name": "removeFromEggPhase",
      "description": "function to remove an animal from egg phase can be called from anyone in the member addresses list *.",
      "parameterDecorators": [
        {
          "name": "animalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalAnimalsMax()",
      "name": "totalAnimalsMax",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isContractPaused()",
      "name": "isContractPaused",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeOwnerSharePerThousandForBuying(uint256)",
      "name": "changeOwnerSharePerThousandForBuying",
      "description": "function to change the owner share on buying transactions can only be called from owner wallet *.",
      "parameterDecorators": [
        {
          "name": "buyshare",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}