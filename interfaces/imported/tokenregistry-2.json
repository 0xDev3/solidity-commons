{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "staking",
    "voting"
  ],
  "name": "TokenRegistry",
  "description": "TokenRegistry. Registry of tokens that Archer supports as stake for voting power + their respective conversion formulas.",
  "eventDecorators": [
    {
      "signature": "ChangedOwner(address,address)",
      "name": "ChangedOwner",
      "description": "Event emitted when the owner of the contract is updated.",
      "parameterDecorators": [
        {
          "name": "oldOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TokenFormulaUpdated(address,address)",
      "name": "TokenFormulaUpdated",
      "description": "Event emitted when a token formula is updated.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "formula",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "TokenRemoved(address)",
      "name": "TokenRemoved",
      "description": "Event emitted when a supported token is removed.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "changeOwner(address)",
      "name": "changeOwner",
      "description": "Change owner of token registry contract.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "New owner address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Current owner of this contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeToken(address)",
      "name": "removeToken",
      "description": "Remove conversion formula address for token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "token address to remove.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTokenFormula(address,address)",
      "name": "setTokenFormula",
      "description": "Set conversion formula address for token.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "token for formula.",
          "recommendedTypes": []
        },
        {
          "name": "formula",
          "description": "address of formula contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenFormulas(address)",
      "name": "tokenFormulas",
      "description": "mapping of tokens to voting power calculation (formula) smart contract addresses.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}