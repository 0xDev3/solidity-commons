{"schema":"../schema.json","tags":["tokens","bridges","locking"],"name":"TokenClaim","description":"TokenClaim - This contract enables the storage of locked (specified by the ERC20SOUL standard) and unlocked tokens by a beneficiary address. This implementation also allows the owner to revoke a given claim in the case that a beneficiary does not or is unable to claim.","eventDecorators":[{"signature":"ClaimUpdated(tuple)","name":"ClaimUpdated","description":"Triggered when some tokens have been unstaked.","parameterDecorators":[{"name":"claim","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewClaimAdded(tuple)","name":"NewClaimAdded","description":"Triggered when some tokens have been unstaked.","parameterDecorators":[{"name":"claim","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Triggered when some tokens have been unstaked.","parameterDecorators":[{"name":"amount","description":"Unstake amount.","recommendedTypes":[],"indexed":true},{"name":"holder","description":"Address of the holder.","recommendedTypes":[],"indexed":true}]},{"signature":"Released(tuple)","name":"Released","description":"Triggered when some tokens have been unstaked.","parameterDecorators":[{"name":"claim","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addClaim(address,uint256,tuple(uint256,uint256,tuple[]))","name":"addClaim","description":"","parameterDecorators":[{"name":"_beneficiary","description":"","recommendedTypes":[]},{"name":"_unlockedAmount","description":"","recommendedTypes":[]},{"name":"_lock","description":"","recommendedTypes":[],"parameters":[{"name":"totalAmount","description":"","type":"uint256"},{"name":"amountStaked","description":"","type":"uint256"},{"name":"schedules","description":"","type":"tuple[]"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claim()","name":"claim","description":"claim tokens.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claims(address)","name":"claims","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"unlockedAmount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lock","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"released","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getClaimLockSchedule(address)","name":"getClaimLockSchedule","description":"Returns the lock schedule of a given beneficiary.","parameterDecorators":[{"name":"beneficiary","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the lock schedule object of a claim.","recommendedTypes":[],"solidityType":"tuple[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getClaimTotal(address)","name":"getClaimTotal","description":"Returns the amount of tokens that can be withdrawn by the owner.","parameterDecorators":[{"name":"beneficiary","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"the amount of tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getToken()","name":"getToken","description":"Returns the address of the ERC20 token managed by the claim contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getWithdrawableAmount()","name":"getWithdrawableAmount","description":"Returns the amount of tokens that can be withdrawn by the owner.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the amount of tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address)","name":"initialize","description":"Creates a claim contract.","parameterDecorators":[{"name":"token_","description":"address of the ERC20 token contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"revoke(address)","name":"revoke","description":"Revokes the claim for given beneficiary.","parameterDecorators":[{"name":"beneficiary","description":"address of claim owner.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"totalClaimable()","name":"totalClaimable","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdraw(uint256)","name":"withdraw","description":"Withdraw the specified amount if possible.","parameterDecorators":[{"name":"amount","description":"the amount to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}