{
  "schema": "../schema.json",
  "tags": [
    "dao"
  ],
  "name": "OrderBookUpgradeable",
  "description": "Shibui ðŸŒŠ Shared Order Book.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RawOrderBook(uint256,bytes,bytes)",
      "name": "RawOrderBook",
      "description": "Emitted when `bookOrder` is called.",
      "parameterDecorators": [
        {
          "name": "dataStructureId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "orderKey",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "order",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RawOrderCancel(uint256,bytes)",
      "name": "RawOrderCancel",
      "description": "Emitted when `cancelOrder` is called.",
      "parameterDecorators": [
        {
          "name": "dataStructureId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "orderKey",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "__OrderBook_init()",
      "name": "__OrderBook_init",
      "description": "UPGRADEABLE CONTRACT INITIALIZER/CONTRUCTOR FUNCTION ///.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addOrderKeeper(address,uint256)",
      "name": "addOrderKeeper",
      "description": "Adds a new order keeper.",
      "parameterDecorators": [
        {
          "name": "_keeperAddress",
          "description": "Address of the order keeper to add.",
          "recommendedTypes": []
        },
        {
          "name": "_dataStructureId",
          "description": "The ID of the structure to add to the order keeper.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bookOrder(uint256,bytes,bytes)",
      "name": "bookOrder",
      "description": "Books/saves/sets a specific order.",
      "parameterDecorators": [
        {
          "name": "_dataStructureId",
          "description": "ID of the structure getting manipulated.",
          "recommendedTypes": []
        },
        {
          "name": "_orderKey",
          "description": "The key of the order getting booked.",
          "recommendedTypes": []
        },
        {
          "name": "_order",
          "description": "The data of the saved order.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cancelOrder(uint256,bytes)",
      "name": "cancelOrder",
      "description": "Cancels/deletes a specific order.",
      "parameterDecorators": [
        {
          "name": "_dataStructureId",
          "description": "ID of the structure getting manipulated.",
          "recommendedTypes": []
        },
        {
          "name": "_orderKey",
          "description": "The key of the order getting canceled/deleted.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cancelOrderKeeper(address,uint256)",
      "name": "cancelOrderKeeper",
      "description": "Removes a order keeper.",
      "parameterDecorators": [
        {
          "name": "_keeperAddress",
          "description": "Address of the order keeper to remove.",
          "recommendedTypes": []
        },
        {
          "name": "_dataStructureId",
          "description": "The ID of the structure to remove from the order keeper.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fetchOrder(uint256,bytes)",
      "name": "fetchOrder",
      "description": "Fetches/gets a specific order.",
      "parameterDecorators": [
        {
          "name": "_dataStructureId",
          "description": "ID of the structure being fetched.",
          "recommendedTypes": []
        },
        {
          "name": "_orderKey",
          "description": "The key of the fetched order.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "order",
          "description": "Raw order data in the form of bytes.",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "orderKeepers(address,uint256)",
      "name": "orderKeepers",
      "description": "Stores allowed structures for a given address of a order keeper.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "orders(uint256,bytes)",
      "name": "orders",
      "description": "Maps a structure ID to bytes acting as a key to bytes acting as data.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}