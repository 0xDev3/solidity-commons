{
  "schema": "../schema.json",
  "tags": [],
  "name": "Registry",
  "description": "",
  "eventDecorators": [
    {
      "signature": "NewProvider(address,bytes32)",
      "name": "NewProvider",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "title",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NewCurve(address,bytes32,int256[],address)",
      "name": "NewCurve",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of the withdrawn tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "note",
          "description": "Description of the transaction.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "Address of the token which was withdrawn.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "user",
          "description": "Address of the user which withdrawn the tokens.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "isProviderInitiated(address)",
      "name": "isProviderInitiated",
      "description": "is provider initiated.",
      "parameterDecorators": [
        {
          "name": "oracleAddress",
          "description": "the provider address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProviderCurve(address,bytes32)",
      "name": "getProviderCurve",
      "description": "get curve paramaters from oracle.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initiateProviderCurve(bytes32,int256[],address)",
      "name": "initiateProviderCurve",
      "description": "initiates an endpoint specific provider curve If oracle[specfifier] is uninitialized, Curve is mapped to endpoint.",
      "parameterDecorators": [
        {
          "name": "endpoint",
          "description": "specifier of endpoint. currently \"smart_contract\" or \"socket_subscription\".",
          "recommendedTypes": []
        },
        {
          "name": "curve",
          "description": "flattened array of all segments, coefficients across all polynomial terms, [e0,l0,c0,c1,c2,...].",
          "recommendedTypes": []
        },
        {
          "name": "broker",
          "description": "address for endpoint. if non-zero address, only this address will be able to bond/unbond.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllProviderParams(address)",
      "name": "getAllProviderParams",
      "description": "",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "db()",
      "name": "db",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProviderParameter(address,bytes32)",
      "name": "getProviderParameter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProviderPublicKey(address)",
      "name": "getProviderPublicKey",
      "description": "",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProviderTitle(address)",
      "name": "getProviderTitle",
      "description": "",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCurveUnset(address,bytes32)",
      "name": "getCurveUnset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setProviderParameter(bytes32,bytes)",
      "name": "setProviderParameter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "key",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllOracles()",
      "name": "getAllOracles",
      "description": "get all oracle addresses.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateDependencies()",
      "name": "updateDependencies",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getPublicKey(address)",
      "name": "getPublicKey",
      "description": "get public key of provider.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProviderCurveLength(address,bytes32)",
      "name": "getProviderCurveLength",
      "description": "",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "clearEndpoint(bytes32)",
      "name": "clearEndpoint",
      "description": "",
      "parameterDecorators": [
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getOracleAddress(uint256)",
      "name": "getOracleAddress",
      "description": "get provider address by index.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEndpointBroker(address,bytes32)",
      "name": "getEndpointBroker",
      "description": "get broker address for endpoint.",
      "parameterDecorators": [
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "selfDestruct()",
      "name": "selfDestruct",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getProviderEndpoints(address)",
      "name": "getProviderEndpoints",
      "description": "get the endpoints of a provider.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initiateProvider(uint256,bytes32)",
      "name": "initiateProvider",
      "description": "initiates a provider. If no address->Oracle mapping exists, Oracle object is created.",
      "parameterDecorators": [
        {
          "name": "publicKey",
          "description": "unique id for provider. used for encyrpted key swap for subscription endpoints.",
          "recommendedTypes": []
        },
        {
          "name": "title",
          "description": "name.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getEndpointParams(address,bytes32)",
      "name": "getEndpointParams",
      "description": "get all endpoint params.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getTitle(address)",
      "name": "getTitle",
      "description": "get title of provider.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setProviderTitle(bytes32)",
      "name": "setProviderTitle",
      "description": "",
      "parameterDecorators": [
        {
          "name": "title",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setEndpointParams(bytes32,bytes32[])",
      "name": "setEndpointParams",
      "description": "",
      "parameterDecorators": [
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpointParams",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}