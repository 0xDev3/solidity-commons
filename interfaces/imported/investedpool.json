{
  "schema": "../schema.json",
  "tags": [
    "vesting"
  ],
  "name": "investedPool",
  "description": "Set event and override the interface.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newTreasury",
          "description": "New treasury address.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oldTreasury",
          "description": "Old treasury address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "approveRiskPool()",
      "name": "approveRiskPool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getLiquidity()",
      "name": "getLiquidity",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "liquidity()",
      "name": "liquidity",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "provideLiquidity(uint256)",
      "name": "provideLiquidity",
      "description": "Call Approve of JPYC contract before newAppliction.",
      "parameterDecorators": [
        {
          "name": "_liquidity",
          "description": "is JPYC amount with 18 decimals.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "purchaseBond(uint256)",
      "name": "purchaseBond",
      "description": "Call Approve of JPYC contract before newAppliction you have to collect a fee from purchaser when you make your product.",
      "parameterDecorators": [
        {
          "name": "_insuredId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registerNewApplication(uint256)",
      "name": "registerNewApplication",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_decresedLiquidity",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "riskPoolAddress()",
      "name": "riskPoolAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setJPYC(address)",
      "name": "setJPYC",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRiskPoolAddress(address)",
      "name": "setRiskPoolAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_riskPoolAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(uint256,address)",
      "name": "withdraw",
      "description": "Call Approve of JPYC contract before newAppliction Call this function when no earthquake happens in your insured period.",
      "parameterDecorators": [
        {
          "name": "_insuredId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawLiquidity(uint256,address)",
      "name": "withdrawLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_liquidity",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawRest(uint256,address)",
      "name": "withdrawRest",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_insuredId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}