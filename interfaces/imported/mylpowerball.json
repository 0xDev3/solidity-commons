{
  "schema": "../schema.json",
  "tags": [],
  "name": "MYLPowerball",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "_owner()",
      "name": "_owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_purchaseTokenAmount()",
      "name": "_purchaseTokenAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "_ticketPrice()",
      "name": "_ticketPrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkerEmpty(uint256)",
      "name": "checkerEmpty",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "declareWinner(uint256[],uint256,address[],uint256[],uint256[])",
      "name": "declareWinner",
      "description": "declare winner for a sale session.",
      "parameterDecorators": [
        {
          "name": "_winningSequence",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_powerballNumber",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_winnerAddressArray",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_winnerPositions",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_winnerAmountInWei",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllParticipantAddresses()",
      "name": "getAllParticipantAddresses",
      "description": "get list of all addresses in the contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAllSaleAddressesBySaleID(uint256)",
      "name": "getAllSaleAddressesBySaleID",
      "description": "get list of all addresses in the Sale.",
      "parameterDecorators": [
        {
          "name": "_saleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getElapsedTime()",
      "name": "getElapsedTime",
      "description": "get elapsed time for powerball.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getEndTime(uint256)",
      "name": "getEndTime",
      "description": "get end timeStamp by sale session.",
      "parameterDecorators": [
        {
          "name": "_saleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getParticipantCountBySaleId(uint256)",
      "name": "getParticipantCountBySaleId",
      "description": "get total number of participants by saleId.",
      "parameterDecorators": [
        {
          "name": "_saleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPriceOfOneTicket()",
      "name": "getPriceOfOneTicket",
      "description": "get price of one ticket.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSaleIdNow()",
      "name": "getSaleIdNow",
      "description": "get current saleId for this session.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStartTime(uint256)",
      "name": "getStartTime",
      "description": "get start timeStamp by sale session.",
      "parameterDecorators": [
        {
          "name": "_saleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalSaleAmountByAddAndSaleID(uint256,address)",
      "name": "getTotalSaleAmountByAddAndSaleID",
      "description": "get total bnb by user address and saleId.",
      "parameterDecorators": [
        {
          "name": "_saleId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_userAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalSaleAmountBySaleID(uint256)",
      "name": "getTotalSaleAmountBySaleID",
      "description": "get total sale amount for a sale session.",
      "parameterDecorators": [
        {
          "name": "_saleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalSaleAmountForAllSale()",
      "name": "getTotalSaleAmountForAllSale",
      "description": "get total sale amount for all sale session.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWinningAddress(uint256)",
      "name": "getWinningAddress",
      "description": "get winning address by sale ID.",
      "parameterDecorators": [
        {
          "name": "_saleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWinningAmount(uint256)",
      "name": "getWinningAmount",
      "description": "get winning amount by sale ID.",
      "parameterDecorators": [
        {
          "name": "_saleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWinningNumber(uint256)",
      "name": "getWinningNumber",
      "description": "get winning number by sale ID.",
      "parameterDecorators": [
        {
          "name": "_saleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWinningPowerballNumberBySaleId(uint256)",
      "name": "getWinningPowerballNumberBySaleId",
      "description": "get winning powerball number.",
      "parameterDecorators": [
        {
          "name": "_saleId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getowner()",
      "name": "getowner",
      "description": "get address of smart contract owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address of owner.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getprize(uint256)",
      "name": "getprize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "ticketCount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getpurchaseTokenAmount()",
      "name": "getpurchaseTokenAmount",
      "description": "get amount of token sent per ticket purchase.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getticketNumberByAddress(uint256,address)",
      "name": "getticketNumberByAddress",
      "description": "get ticket number for the given address.",
      "parameterDecorators": [
        {
          "name": "_saleId",
          "description": "Sale id for the sale session.",
          "recommendedTypes": []
        },
        {
          "name": "_add",
          "description": "New price of each token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initiateSmartContractValue(uint256)",
      "name": "initiateSmartContractValue",
      "description": "InitiateSmartContractValue.",
      "parameterDecorators": [
        {
          "name": "_elapseTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "purchaseTicket(uint256,uint256)",
      "name": "purchaseTicket",
      "description": "perform purchase.",
      "parameterDecorators": [
        {
          "name": "_ticketNumbers",
          "description": "ticket number from the list in application.",
          "recommendedTypes": []
        },
        {
          "name": "ticketCount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setElapsedTime(uint256)",
      "name": "setElapsedTime",
      "description": "set elapsed time for powerball.",
      "parameterDecorators": [
        {
          "name": "time",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPriceOfOneTicket(uint256)",
      "name": "setPriceOfOneTicket",
      "description": "set price of one ticket by owner only.",
      "parameterDecorators": [
        {
          "name": "_newPrice",
          "description": "New price of each token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setpurchaseTokenAmount(uint256)",
      "name": "setpurchaseTokenAmount",
      "description": "set amount of token sent per ticket purchase.",
      "parameterDecorators": [
        {
          "name": "purchaseTokenAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfer ownership of the smart contract. For owner only.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "request status.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawBNBFromContract(uint256,address,uint256,address)",
      "name": "withdrawBNBFromContract",
      "description": "withdraw all bnb from the smart contract.",
      "parameterDecorators": [
        {
          "name": "_savingsValue",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_savingsReceiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_opexValue",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_opexReceiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawTokenFromContract(address,uint256,address)",
      "name": "withdrawTokenFromContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}