{
  "schema": "../schema.json",
  "tags": [
    "vesting",
    "vaults"
  ],
  "name": "ExampleVestingVault",
  "description": "",
  "eventDecorators": [
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newAdminRole",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "VestingLockedIn(address,uint256,uint256)",
      "name": "VestingLockedIn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "releaseTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VestingReleased(address,uint256,uint256)",
      "name": "VestingReleased",
      "description": "",
      "parameterDecorators": [
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "releaseTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "VAULT_CONTROLLER_ROLE()",
      "name": "VAULT_CONTROLLER_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addBeneficiary(address,uint256,uint256)",
      "name": "addBeneficiary",
      "description": "function to create a vesting for the beneficiary.",
      "parameterDecorators": [
        {
          "name": "beneficiary_",
          "description": "Beneficiary of tokens after they are released.",
          "recommendedTypes": []
        },
        {
          "name": "releaseTime_",
          "description": "Timestamp when token release is enabled.",
          "recommendedTypes": []
        },
        {
          "name": "tokenAmount_",
          "description": "Amount of tokens to release.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "release()",
      "name": "release",
      "description": "releases the tokens of the msg sender.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the address of the token being stored.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vestingFor(address)",
      "name": "vestingFor",
      "description": "",
      "parameterDecorators": [
        {
          "name": "beneficiary_",
          "description": "the address for which the vesting is returned.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the vesting for an address.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "beneficiary",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "releaseTime",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "tokenAmount",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}