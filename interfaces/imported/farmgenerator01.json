{
  "schema": "../schema.json",
  "tags": [],
  "name": "FarmGenerator01",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event emitted when liquidity was provided.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "The amount of liquidity (priced in liquidityToken) that was provided.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "The address that provided the liquidity.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "createFarm(address,uint256,address,address,uint256,uint256,uint256,uint256)",
      "name": "createFarm",
      "description": "Creates a new Farm contract and registers it in the .sol. All farming rewards are locked in the Farm Contract.",
      "parameterDecorators": [
        {
          "name": "_rewardToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_swapFactory",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_blockReward",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusEndBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonus",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "determineBlockReward(uint256,uint256,uint256,uint256,uint256)",
      "name": "determineBlockReward",
      "description": "Determine the blockReward based on inputs specifying an end date. Used on the front end to show the exact settings the Farm contract will be deployed with.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusEndBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonus",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_endBlock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "determineEndBlock(uint256,uint256,uint256,uint256,uint256)",
      "name": "determineEndBlock",
      "description": "Determine the endBlock based on inputs. Used on the front end to show the exact settings the Farm contract will be deployed with.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_blockReward",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusEndBlock",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonus",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "factory()",
      "name": "factory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}