{
  "schema": "../schema.json",
  "tags": [],
  "name": "Launchpad",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Claimed(address,uint256)",
      "name": "Claimed",
      "description": "events for transfer. Emitted when tokens are claimed by user.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Received(address,uint256)",
      "name": "Received",
      "description": "events for transfer. Emitted when ETH are Received by this wallet.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Refunded(address,uint256)",
      "name": "Refunded",
      "description": "events for transfer. Emitted when refunded if not successful.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SoldOut()",
      "name": "SoldOut",
      "description": "events for transfer. Emitted when maximum value of ETH is raised.",
      "parameterDecorators": []
    }
  ],
  "functionDecorators": [
    {
      "signature": "_token()",
      "name": "_token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claim()",
      "name": "claim",
      "description": "Function to claim tokens to user, after release time, if project not reached softcap funds are returned back.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBalanceToClaim(address)",
      "name": "getBalanceToClaim",
      "description": "Function to get the balance to claim of user in ETH.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "- user address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "balance to claim.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBalanceToClaimTokens(address)",
      "name": "getBalanceToClaimTokens",
      "description": "Function to get the balance to claim of user in TOKEN.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "- user address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "balance to claim.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCapPrice(uint256)",
      "name": "getCapPrice",
      "description": "Function to get the cap value, price inverse and amount.",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "- cap index.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCapSize()",
      "name": "getCapSize",
      "description": "Function to get the length of caps array.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "length.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDetails()",
      "name": "getDetails",
      "description": "Function to get details of project part-1.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "priceUniInv",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "teamWallet",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "softCap",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "maxCap",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidityPercent",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "teamPercent",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "end",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "start",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "releaseTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "raisedETH",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "tokensForSale",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "minContribution",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "maxContribution",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getInfos()",
      "name": "getInfos",
      "description": "Function to get details of project.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMinInfos()",
      "name": "getMinInfos",
      "description": "Function to get details of project for listing.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "siteUrl",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "tokenName",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "isRefunded",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "isSoldOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "start",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "end",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "softCap",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "maxCap",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "raisedETH",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMoreDetails()",
      "name": "getMoreDetails",
      "description": "Function to get details of project part-2.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "uniListing",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "tokenMint",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "isRefunded",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "isSoldOut",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "tokenName",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "tokenSymbol",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "tokenTotalSupply",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "liquidityLock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "round",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "release(address)",
      "name": "release",
      "description": "Transfers non used tokens held by Lock to owner. Able to withdraw funds after end time and liquidity setup, if refunded is enabled just let token owner be able to withraw.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDetails(string,string,string,string,string,string,string,string,string,string,uint256,uint256,bool,bool)",
      "name": "setDetails",
      "description": "Function to set projetct details.",
      "parameterDecorators": [
        {
          "name": "tokenName",
          "description": "- token name.",
          "recommendedTypes": []
        },
        {
          "name": "tokenSymbol",
          "description": "- token symbol.",
          "recommendedTypes": []
        },
        {
          "name": "siteUrl",
          "description": "- site url.",
          "recommendedTypes": []
        },
        {
          "name": "paperUrl",
          "description": "- paper url.",
          "recommendedTypes": []
        },
        {
          "name": "twitterUrl",
          "description": "- twitter url.",
          "recommendedTypes": []
        },
        {
          "name": "telegramUrl",
          "description": "- telegram url.",
          "recommendedTypes": []
        },
        {
          "name": "mediumUrl",
          "description": "- medium url.",
          "recommendedTypes": []
        },
        {
          "name": "gitUrl",
          "description": "- git url.",
          "recommendedTypes": []
        },
        {
          "name": "discordUrl",
          "description": "- discord url.",
          "recommendedTypes": []
        },
        {
          "name": "tokenDesc",
          "description": "- token desc.",
          "recommendedTypes": []
        },
        {
          "name": "tokensForSale",
          "description": "- amount tokens for sale.",
          "recommendedTypes": []
        },
        {
          "name": "tokenTotalSupply",
          "description": "- total token supply.",
          "recommendedTypes": []
        },
        {
          "name": "uniListing",
          "description": "- is uniswap listing.",
          "recommendedTypes": []
        },
        {
          "name": "tokenMint",
          "description": "- is token mint.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setEndTime(uint256)",
      "name": "setEndTime",
      "description": "Function to set the end time.",
      "parameterDecorators": [
        {
          "name": "end",
          "description": "- end time.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setReleaseTime(uint256)",
      "name": "setReleaseTime",
      "description": "Function to set the release time.",
      "parameterDecorators": [
        {
          "name": "releaseTime",
          "description": "- release time.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setupLiquidity()",
      "name": "setupLiquidity",
      "description": "Function to setup liquidity and transfer all amounts according to defined percents, if softcap not reached set Refunded flag.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}