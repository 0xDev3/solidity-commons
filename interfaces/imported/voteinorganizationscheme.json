{
  "schema": "../schema.json",
  "tags": [
    "voting"
  ],
  "name": "VoteInOrganizationScheme",
  "description": "VoteInOrganizationScheme. A scheme to allow an organization to vote in a proposal.",
  "eventDecorators": [
    {
      "signature": "NewVoteProposal(address,bytes32,address,address,bytes32,uint256,string)",
      "name": "NewVoteProposal",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_intVoteInterface",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_originalIntVote",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_originalProposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_vote",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_descriptionHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalDeleted(address,bytes32)",
      "name": "ProposalDeleted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ProposalExecuted(address,bytes32,int256,bytes)",
      "name": "ProposalExecuted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_param",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_callReturnValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "balanceOfStakingToken(address,bytes32)",
      "name": "balanceOfStakingToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "burnReputation(uint256,address,bytes32)",
      "name": "burnReputation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executeProposal(bytes32,int256)",
      "name": "executeProposal",
      "description": "execution of proposals, can only be called by the voting machine in which the vote is held.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "the ID of the voting in the voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_param",
          "description": "a parameter of the voting result, 1 yes and 2 is no.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getParametersHash(bytes32,address)",
      "name": "getParametersHash",
      "description": "Hash the parameters, and return the hash value.",
      "parameterDecorators": [
        {
          "name": "_voteParams",
          "description": "- voting parameters.",
          "recommendedTypes": []
        },
        {
          "name": "_intVote",
          "description": "- voting machine contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTotalReputationSupply(bytes32)",
      "name": "getTotalReputationSupply",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mintReputation(uint256,address,bytes32)",
      "name": "mintReputation",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "organizationsProposals(address,bytes32)",
      "name": "organizationsProposals",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "originalIntVote",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "originalProposalId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        },
        {
          "name": "vote",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "exist",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "parameters(bytes32)",
      "name": "parameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "intVote",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "voteParams",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposalsInfo(address,bytes32)",
      "name": "proposalsInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "blockNumber",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "avatar",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposeVote(address,address,bytes32,uint256,string)",
      "name": "proposeVote",
      "description": "propose to vote in other organization The function trigger NewVoteProposal event.",
      "parameterDecorators": [
        {
          "name": "_avatar",
          "description": "avatar of the organization.",
          "recommendedTypes": []
        },
        {
          "name": "_originalIntVote",
          "description": "the other organization voting machine.",
          "recommendedTypes": []
        },
        {
          "name": "_originalProposalId",
          "description": "the other organization proposal id.",
          "recommendedTypes": []
        },
        {
          "name": "_vote",
          "description": "- which value to vote in the destination organization.",
          "recommendedTypes": []
        },
        {
          "name": "_descriptionHash",
          "description": "proposal description hash.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reputationOf(address,bytes32)",
      "name": "reputationOf",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setParameters(bytes32,address)",
      "name": "setParameters",
      "description": "Hash the parameters, save them if necessary, and return the hash value.",
      "parameterDecorators": [
        {
          "name": "_voteParams",
          "description": "- voting parameters.",
          "recommendedTypes": []
        },
        {
          "name": "_intVote",
          "description": "- voting machine contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakingTokenTransfer(address,address,uint256,bytes32)",
      "name": "stakingTokenTransfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_stakingToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proposalId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}