{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "Blacksmith",
  "description": "COVER token shield mining contract.",
  "eventDecorators": [
    {
      "signature": "Deposit(address,address,uint256)",
      "name": "Deposit",
      "description": "Emitted when implementation is changed.",
      "parameterDecorators": [
        {
          "name": "miner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lpToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when implementation is changed.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Withdraw(address,address,uint256)",
      "name": "Withdraw",
      "description": "Emitted when implementation is changed.",
      "parameterDecorators": [
        {
          "name": "miner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lpToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "START_TIME()",
      "name": "START_TIME",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WEEK()",
      "name": "WEEK",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addBonusToken(address,address,uint256,uint256,uint256)",
      "name": "addBonusToken",
      "description": "always assign the same startTime and endTime for both CLAIM and NOCLAIM pool, one bonusToken can be used for only one set of CLAIM and NOCLAIM pools.",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_bonusToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_startTime",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_endTime",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_totalBonus",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addPool(address,uint256)",
      "name": "addPool",
      "description": "add a new pool for shield mining.",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_weight",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addPools(address[],uint256[])",
      "name": "addPools",
      "description": "add new pools for shield mining.",
      "parameterDecorators": [
        {
          "name": "_lpTokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_weights",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "allowBonusTokens(address)",
      "name": "allowBonusTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bonusTokens(address)",
      "name": "bonusTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalBonus",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "accBonusPerToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastUpdatedAt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimRewards(address)",
      "name": "claimRewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimRewardsForPools(address[])",
      "name": "claimRewardsForPools",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpTokens",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "collectBonusDust(address)",
      "name": "collectBonusDust",
      "description": "collect bonus token dust to treasury.",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "collectDust(address)",
      "name": "collectDust",
      "description": "collect dust to treasury.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cover()",
      "name": "cover",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(address,uint256)",
      "name": "deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyWithdraw(address)",
      "name": "emergencyWithdraw",
      "description": "withdraw all without rewards.",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getPoolList()",
      "name": "getPoolList",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governance()",
      "name": "governance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "miners(address,address)",
      "name": "miners",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardWriteoff",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "bonusWriteoff",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolList(uint256)",
      "name": "poolList",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pools(address)",
      "name": "pools",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "weight",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "accRewardsPerToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastUpdatedAt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalWeight()",
      "name": "totalWeight",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferMintingRights(address)",
      "name": "transferMintingRights",
      "description": "transfer minting rights to new blacksmith.",
      "parameterDecorators": [
        {
          "name": "_newAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "treasury()",
      "name": "treasury",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateBonusTokenStatus(address,uint8)",
      "name": "updateBonusTokenStatus",
      "description": "only statusCode 1 will enable the bonusToken to allow partners to set their program.",
      "parameterDecorators": [
        {
          "name": "_bonusToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_status",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePool(address)",
      "name": "updatePool",
      "description": "update pool's rewards & bonus per staked token till current block timestamp.",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePoolWeights(address[],uint256[])",
      "name": "updatePoolWeights",
      "description": "update pool weights.",
      "parameterDecorators": [
        {
          "name": "_lpTokens",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_weights",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePools(uint256,uint256)",
      "name": "updatePools",
      "description": "use start and end to avoid gas limit in one call.",
      "parameterDecorators": [
        {
          "name": "_start",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_end",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateWeeklyTotal(uint256)",
      "name": "updateWeeklyTotal",
      "description": "update all pools before update weekly total, otherwise, there will a small (more so for pools with less user interactions) rewards mess up for each pool.",
      "parameterDecorators": [
        {
          "name": "_weeklyTotal",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "viewMined(address,address)",
      "name": "viewMined",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_miner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_minedCOVER",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "_minedBonus",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "weeklyTotal()",
      "name": "weeklyTotal",
      "description": "Total 17k COVER in 1st 6 mths. TODO: update to 246e18 after 6 months from 1605830400 (11/20/2020 12am UTC).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(address,uint256)",
      "name": "withdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}