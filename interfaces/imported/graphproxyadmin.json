{
  "schema": "../schema.json",
  "tags": [],
  "name": "GraphProxyAdmin",
  "description": "GraphProxyAdmin. This is the owner of upgradeable proxy contracts. Proxy contracts use a TransparentProxy pattern, any admin related call like upgrading a contract or changing the admin needs to be send through this contract.",
  "eventDecorators": [
    {
      "signature": "NewOwnership(address,address)",
      "name": "NewOwnership",
      "description": "This event is emitted when a token swap is executed.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "NewPendingOwnership(address,address)",
      "name": "NewPendingOwnership",
      "description": "This event is emitted when a token swap is executed.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptOwnership()",
      "name": "acceptOwnership",
      "description": "Admin function for pending governor to accept role and update governor. This function must called by the pending governor.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "acceptProxy(address,address)",
      "name": "acceptProxy",
      "description": "Accepts a proxy.",
      "parameterDecorators": [
        {
          "name": "_implementation",
          "description": "Address of the implementation accepting the proxy.",
          "recommendedTypes": []
        },
        {
          "name": "_proxy",
          "description": "Address of the proxy being accepted.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "acceptProxyAndCall(address,address,bytes)",
      "name": "acceptProxyAndCall",
      "description": "Accepts a proxy and call a function on the implementation.",
      "parameterDecorators": [
        {
          "name": "_implementation",
          "description": "Address of the implementation accepting the proxy.",
          "recommendedTypes": []
        },
        {
          "name": "_proxy",
          "description": "Address of the proxy being accepted.",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "Encoded function to call on the implementation after accepting the proxy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeProxyAdmin(address,address)",
      "name": "changeProxyAdmin",
      "description": "Changes the admin of a proxy.",
      "parameterDecorators": [
        {
          "name": "_proxy",
          "description": "Proxy to change admin.",
          "recommendedTypes": []
        },
        {
          "name": "_newAdmin",
          "description": "Address to transfer proxy administration to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getProxyAdmin(address)",
      "name": "getProxyAdmin",
      "description": "Returns the admin of a proxy. Only the admin can query it.",
      "parameterDecorators": [
        {
          "name": "_proxy",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The address of the current admin of the proxy.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProxyImplementation(address)",
      "name": "getProxyImplementation",
      "description": "Returns the current implementation of a proxy. This is needed because only the proxy admin can query it.",
      "parameterDecorators": [
        {
          "name": "_proxy",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The address of the current implementation of the proxy.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProxyPendingImplementation(address)",
      "name": "getProxyPendingImplementation",
      "description": "Returns the pending implementation of a proxy. This is needed because only the proxy admin can query it.",
      "parameterDecorators": [
        {
          "name": "_proxy",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The address of the pending implementation of the proxy.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governor()",
      "name": "governor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingGovernor()",
      "name": "pendingGovernor",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Admin function to begin change of governor. The `_newGovernor` must call `acceptOwnership` to finalize the transfer.",
      "parameterDecorators": [
        {
          "name": "_newGovernor",
          "description": "Address of new `governor`.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgrade(address,address)",
      "name": "upgrade",
      "description": "Upgrades a proxy to the newest implementation of a contract.",
      "parameterDecorators": [
        {
          "name": "_proxy",
          "description": "Proxy to be upgraded.",
          "recommendedTypes": []
        },
        {
          "name": "_implementation",
          "description": "the address of the Implementation.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}