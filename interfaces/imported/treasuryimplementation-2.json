{"schema":"../schema.json","tags":[],"name":"TreasuryImplementation","description":"","eventDecorators":[{"signature":"AmountConverted(address,uint256,uint256,address[],uint256)","name":"AmountConverted","description":"Triggered when a token has been set.","parameterDecorators":[{"name":"tokenAddress","description":"Address of the token.","recommendedTypes":[],"indexed":true},{"name":"amountIn","description":"Amount changed.","recommendedTypes":[],"indexed":false},{"name":"amountOutMin","description":"Minimum amount out.","recommendedTypes":[],"indexed":false},{"name":"exchangePath","description":"Exchange path.","recommendedTypes":[],"indexed":false},{"name":"approximateAmountsOut","description":"Approximate value of the final amount out.","recommendedTypes":[],"indexed":false}]},{"signature":"CommunityAdminUpdated(address,address)","name":"CommunityAdminUpdated","description":"Triggered when CommunityAdmin has been updated.","parameterDecorators":[{"name":"oldCommunityAdmin","description":"Old communityAdmin address.","recommendedTypes":[],"indexed":true},{"name":"newCommunityAdmin","description":"New communityAdmin address.","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TokenRemoved(address)","name":"TokenRemoved","description":"Triggered when a token has been removed.","parameterDecorators":[{"name":"tokenAddress","description":"Address of the token.","recommendedTypes":[],"indexed":true}]},{"signature":"TokenSet(address,uint256,address[],uint256,address[])","name":"TokenSet","description":"Triggered when a token has been set.","parameterDecorators":[{"name":"tokenAddress","description":"Address of the token.","recommendedTypes":[],"indexed":true},{"name":"oldRate","description":"Old token rate value.","recommendedTypes":[],"indexed":false},{"name":"oldExchangePath","description":"Old token exchange path.","recommendedTypes":[],"indexed":false},{"name":"newRate","description":"New token rate value.","recommendedTypes":[],"indexed":false},{"name":"newExchangePath","description":"New token exchange path.","recommendedTypes":[],"indexed":false}]},{"signature":"TransferERC20(address,address,uint256)","name":"TransferERC20","description":"Triggered when an amount of an ERC20 has been transferred from this contract to an address.","parameterDecorators":[{"name":"token","description":"ERC20 token address.","recommendedTypes":[],"indexed":true},{"name":"to","description":"Address of the receiver.","recommendedTypes":[],"indexed":true},{"name":"amount","description":"Amount of the transaction.","recommendedTypes":[],"indexed":false}]},{"signature":"UniswapRouterUpdated(address,address)","name":"UniswapRouterUpdated","description":"Triggered when UniswapRouter has been updated.","parameterDecorators":[{"name":"oldUniswapRouter","description":"Old uniswapRouter address.","recommendedTypes":[],"indexed":true},{"name":"newUniswapRouter","description":"New uniswapRouter address.","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"communityAdmin()","name":"communityAdmin","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"convertAmount(address,uint256,uint256,address[],uint256)","name":"convertAmount","description":"","parameterDecorators":[{"name":"_tokenAddress","description":"","recommendedTypes":[]},{"name":"_amountIn","description":"","recommendedTypes":[]},{"name":"_amountOutMin","description":"","recommendedTypes":[]},{"name":"_exchangePath","description":"","recommendedTypes":[]},{"name":"_deadline","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getConvertedAmount(address,uint256)","name":"getConvertedAmount","description":"","parameterDecorators":[{"name":"_tokenAddress","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getVersion()","name":"getVersion","description":"Returns the current implementation version.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address)","name":"initialize","description":"Used to initialize a new Treasury contract.","parameterDecorators":[{"name":"_communityAdmin","description":"Address of the CommunityAdmin contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isToken(address)","name":"isToken","description":"Returns if an address is an accepted token.","parameterDecorators":[{"name":"_tokenAddress","description":"token address to be checked.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"bool true if the tokenAddress is an accepted token.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeToken(address)","name":"removeToken","description":"","parameterDecorators":[{"name":"_tokenAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setToken(address,uint256,address[])","name":"setToken","description":"","parameterDecorators":[{"name":"_tokenAddress","description":"","recommendedTypes":[]},{"name":"_rate","description":"","recommendedTypes":[]},{"name":"_exchangePath","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tokenListAt(uint256)","name":"tokenListAt","description":"Returns the address of a token from tokenList.","parameterDecorators":[{"name":"_index","description":"index of the token.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"address of the token.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenListLength()","name":"tokenListLength","description":"Returns the number of tokens.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"uint256 number of tokens.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"tokens(address)","name":"tokens","description":"Returns the details of a token.","parameterDecorators":[{"name":"_tokenAddress","description":"address of the token.","recommendedTypes":[]}],"returnDecorators":[{"name":"rate","description":"of the token.","recommendedTypes":[],"solidityType":"uint256"},{"name":"exchangePath","description":"of the token.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"transfer(address,address,uint256)","name":"transfer","description":"Transfers an amount of an ERC20 from this contract to an address.","parameterDecorators":[{"name":"_token","description":"address of the ERC20 token.","recommendedTypes":[]},{"name":"_to","description":"address of the receiver.","recommendedTypes":[]},{"name":"_amount","description":"amount of the transaction.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"uniswapRouter()","name":"uniswapRouter","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"updateCommunityAdmin(address)","name":"updateCommunityAdmin","description":"Updates the CommunityAdmin contract address.","parameterDecorators":[{"name":"_newCommunityAdmin","description":"address of the new CommunityAdmin contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateUniswapRouter(address)","name":"updateUniswapRouter","description":"Updates the UniswapRouter contract address.","parameterDecorators":[{"name":"_newUniswapRouter","description":"address of the new UniswapRouter contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}