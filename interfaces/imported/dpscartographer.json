{
  "schema": "../schema.json",
  "tags": [],
  "name": "DPSCartographer",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SetContract(string,address)",
      "name": "SetContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_target",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Swap(address,bool,uint256,uint256)",
      "name": "Swap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_tmapToDoubloon",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_tmaps",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_doubloons",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenRecovered(address,address,uint256)",
      "name": "TokenRecovered",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_destination",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VoyageCreated(address,uint256,uint8)",
      "name": "VoyageCreated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_id",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_type",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "burnVoyage(uint256)",
      "name": "burnVoyage",
      "description": "burns a voyage.",
      "parameterDecorators": [
        {
          "name": "_voyageId",
          "description": "- voyage that needs to be burnt.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyVoyages(uint8,uint256)",
      "name": "buyVoyages",
      "description": "buy a voyage using tmaps.",
      "parameterDecorators": [
        {
          "name": "_voyageType",
          "description": "- type of the voyage 0 - EASY, 1 - MEDIUM, 2 - HARD, 3 - LEGENDARY.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "- how many voyages you want to buy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyers(uint256)",
      "name": "buyers",
      "description": "saving buyers for tradable voyages.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "causality()",
      "name": "causality",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "doubloon()",
      "name": "doubloon",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "gameSettings()",
      "name": "gameSettings",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "recoverERC20(address,address)",
      "name": "recoverERC20",
      "description": "Recover TOKENS sent by mistake to the contract.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "the TOKEN address.",
          "recommendedTypes": []
        },
        {
          "name": "_destination",
          "description": "where to send the NFT.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "recoverNFT(address,address,uint256)",
      "name": "recoverNFT",
      "description": "Recover NFT sent by mistake to the contract.",
      "parameterDecorators": [
        {
          "name": "_nft",
          "description": "the NFT address.",
          "recommendedTypes": []
        },
        {
          "name": "_destination",
          "description": "where to send the NFT.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": "the token to want to recover.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCausalityContract(address)",
      "name": "setCausalityContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDoubloonsContract(address)",
      "name": "setDoubloonsContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setGameSettingsContract(address)",
      "name": "setGameSettingsContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTmapContract(address)",
      "name": "setTmapContract",
      "description": "SETTERS & GETTERS.",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setVoyageContract(address)",
      "name": "setVoyageContract",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_contract",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapDoubloonsForTmaps(uint256)",
      "name": "swapDoubloonsForTmaps",
      "description": "swap doubloons for tmaps.",
      "parameterDecorators": [
        {
          "name": "_quantity",
          "description": "of doubloons you want to swap.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapTmapsForDoubloons(uint256)",
      "name": "swapTmapsForDoubloons",
      "description": "swap tmaps for doubloons.",
      "parameterDecorators": [
        {
          "name": "_quantity",
          "description": "of tmaps you want to swap.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tmap()",
      "name": "tmap",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "viewVoyageConfiguration(tuple(uint256[],bytes32[],bytes32[],uint256[],bytes[]),uint256)",
      "name": "viewVoyageConfiguration",
      "description": "view voyage configurations. because voyage configurations are based on causality generated from future blocks, we need to send causality parameters retrieved from the DAPP. The causality params will determine the outcome of the voyage no of interactions, the order of interactions.",
      "parameterDecorators": [
        {
          "name": "_causalityParams",
          "description": "- params used for causality.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "blockNumber",
              "description": "",
              "type": "uint256[]"
            },
            {
              "name": "hash1",
              "description": "",
              "type": "bytes32[]"
            },
            {
              "name": "hash2",
              "description": "",
              "type": "bytes32[]"
            },
            {
              "name": "timestamp",
              "description": "",
              "type": "uint256[]"
            },
            {
              "name": "signature",
              "description": "",
              "type": "bytes[]"
            }
          ]
        },
        {
          "name": "_voyageId",
          "description": "- voyage id.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "voyageConfig",
          "description": "- a config of the voyage, see DPSStructs->VoyageConfig.",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "voyage()",
      "name": "voyage",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}