{
  "schema": "../schema.json",
  "tags": [],
  "name": "PWS",
  "description": "",
  "eventDecorators": [
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "Emitted every time the contract gets upgraded.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of the transaction.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "Address of the receiver.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "ERC20 token address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "Emitted every time the contract gets upgraded.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of the transaction.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "Address of the receiver.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "ERC20 token address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "Emitted every time the contract gets upgraded.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of the transaction.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "Address of the receiver.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "ERC20 token address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "WeightAdded(uint256,uint256)",
      "name": "WeightAdded",
      "description": "Emitted every time the contract gets upgraded.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "Amount of the transaction.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WeightReduced(uint256,uint256)",
      "name": "WeightReduced",
      "description": "Emitted every time the contract gets upgraded.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "Amount of the transaction.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "COORDINATOR()",
      "name": "COORDINATOR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addWeight(uint256,uint256)",
      "name": "addWeight",
      "description": "",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reduceWeight(uint256,uint256)",
      "name": "reduceWeight",
      "description": "",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "weight(uint256)",
      "name": "weight",
      "description": "",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}