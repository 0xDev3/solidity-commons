{"schema":"../schema.json","tags":["tokens","swaps","airdrops","locking","uniswap","compound"],"name":"TokenGeyser","description":"Token Geyser.","eventDecorators":[{"signature":"Staked(address,uint256,uint256,bytes)","name":"Staked","description":"Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"total","description":"","recommendedTypes":[],"indexed":false},{"name":"data","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unstaked(address,uint256,uint256,bytes)","name":"Unstaked","description":"Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"total","description":"","recommendedTypes":[],"indexed":false},{"name":"data","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokensClaimed(address,uint256)","name":"TokensClaimed","description":"Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokensLocked(uint256,uint256,uint256)","name":"TokensLocked","description":"Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"durationSec","description":"","recommendedTypes":[],"indexed":false},{"name":"total","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TokensUnlocked(uint256,uint256)","name":"TokensUnlocked","description":"Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"total","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when a validator is unenrolled from the validator set. Triggers on new deposit call.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"stake(uint256,bytes)","name":"stake","description":"Transfers amount of deposit tokens from the user.","parameterDecorators":[{"name":"amount","description":"Number of deposit tokens to stake.","recommendedTypes":[]},{"name":"data","description":"Not used.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakeFor(address,uint256,bytes)","name":"stakeFor","description":"Transfers amount of deposit tokens from the caller on behalf of user.","parameterDecorators":[{"name":"user","description":"User address who gains credit for this stake operation.","recommendedTypes":[]},{"name":"amount","description":"Number of deposit tokens to stake.","recommendedTypes":[]},{"name":"data","description":"Not used.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"BONUS_DECIMALS()","name":"BONUS_DECIMALS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getDistributionToken()","name":"getDistributionToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"startBonus()","name":"startBonus","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"updateAccounting()","name":"updateAccounting","description":"A globally callable function to update the accounting state of the system. Global state and state for the caller are updated.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param5","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"totalStakedFor(address)","name":"totalStakedFor","description":"","parameterDecorators":[{"name":"addr","description":"The user to look up staking information for.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalLocked()","name":"totalLocked","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"rescueFundsFromStakingPool(address,address,uint256)","name":"rescueFundsFromStakingPool","description":"Lets the owner rescue funds air-dropped to the staking pool.","parameterDecorators":[{"name":"tokenToRescue","description":"Address of the token to be rescued.","recommendedTypes":[]},{"name":"to","description":"Address to which the rescued funds are to be sent.","recommendedTypes":[]},{"name":"amount","description":"Amount of tokens to be rescued.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"unlockSchedules(uint256)","name":"unlockSchedules","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"initialLockedShares","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"unlockedShares","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastUnlockTimestampSec","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"endAtSec","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"durationSec","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"supportsHistory()","name":"supportsHistory","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"totalStakingShares()","name":"totalStakingShares","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bonusPeriodSec()","name":"bonusPeriodSec","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalStaked()","name":"totalStaked","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalLockedShares()","name":"totalLockedShares","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"unstakeQuery(uint256)","name":"unstakeQuery","description":"","parameterDecorators":[{"name":"amount","description":"Number of deposit tokens to unstake / withdraw.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"lockTokens(uint256,uint256)","name":"lockTokens","description":"This funcion allows the contract owner to add more locked distribution tokens, along with the associated \"unlock schedule\". These locked tokens immediately begin unlocking linearly over the duraction of durationSec timeframe.","parameterDecorators":[{"name":"amount","description":"Number of distribution tokens to lock. These are transferred from the caller.","recommendedTypes":[]},{"name":"durationSec","description":"Length of time to linear unlock the tokens.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardPreview(address)","name":"rewardPreview","description":"","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getStakingToken()","name":"getStakingToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"totalUnlocked()","name":"totalUnlocked","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"unlockScheduleCount()","name":"unlockScheduleCount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"unstake(uint256,bytes)","name":"unstake","description":"Unstakes a certain amount of previously deposited tokens. User also receives their alotted number of distribution tokens.","parameterDecorators":[{"name":"amount","description":"Number of deposit tokens to unstake / withdraw.","recommendedTypes":[]},{"name":"data","description":"Not used.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unlockTokens()","name":"unlockTokens","description":"Moves distribution tokens from the locked pool to the unlocked pool, according to the previously defined unlock schedules. Publicly callable.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"token()","name":"token","description":"Note that this application has a staking token as well as a distribution token, which may be different. This function is required by EIP-900.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}