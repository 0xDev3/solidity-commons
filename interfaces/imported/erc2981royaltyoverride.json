{
  "schema": "../schema.json",
  "tags": [
    "dao"
  ],
  "name": "ERC2981RoyaltyOverride",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoyaltyPerMilleUpdated(address,uint256,uint256,address)",
      "name": "RoyaltyPerMilleUpdated",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the asset contract for which these royalties apply.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newValue",
          "description": "The newly provided `royaltyPerMille`.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousValue",
          "description": "The previously stored `royaltyPerMille`.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "executor",
          "description": "The address that triggered these changes.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RoyaltyRecipientUpdated(address,address,address,address)",
      "name": "RoyaltyRecipientUpdated",
      "description": "Events ///.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the asset contract for which these royalties apply.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newRecipient",
          "description": "The newly provided `royaltyRecipient`.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "previousRecipient",
          "description": "The previously stored `royaltyRecipient`.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "executor",
          "description": "The address that triggered these changes.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "asset()",
      "name": "asset",
      "description": "The address of the asset contract for which these royalties apply.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "royaltyInfo(uint256,uint256)",
      "name": "royaltyInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_salePrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "royaltyAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "royaltyPerMille()",
      "name": "royaltyPerMille",
      "description": "Royalty in %. Example: 10 => 1%, 25 => 2,5%, 300 => 30%.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "royaltyRecipient()",
      "name": "royaltyRecipient",
      "description": "The wallet address to which royalties get paid.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setRoyaltyPerMille(uint256)",
      "name": "setRoyaltyPerMille",
      "description": "Sets the new royalty %. Example: 10 => 1%, 25 => 2,5%, 300 => 30%.",
      "parameterDecorators": [
        {
          "name": "_royaltyPerMille",
          "description": "New royalty amount.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRoyaltyRecipient(address)",
      "name": "setRoyaltyRecipient",
      "description": "Sets the new address to which all royalties get paid.",
      "parameterDecorators": [
        {
          "name": "_royaltyRecipient",
          "description": "Address of the new royalty recipient.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}