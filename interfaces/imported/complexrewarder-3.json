{
  "schema": "../schema.json",
  "tags": [],
  "name": "ComplexRewarder",
  "description": "",
  "eventDecorators": [
    {
      "signature": "LogInit()",
      "name": "LogInit",
      "description": "Event emitted when tokens are recovered by owner.",
      "parameterDecorators": []
    },
    {
      "signature": "LogOnReward(address,uint256,uint256,address)",
      "name": "LogOnReward",
      "description": "Event emitted when tokens are recovered by owner.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "LogPoolAddition(uint256,uint256)",
      "name": "LogPoolAddition",
      "description": "Event emitted when tokens are recovered by owner.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "allocPoint",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogSetPool(uint256,uint256)",
      "name": "LogSetPool",
      "description": "Event emitted when tokens are recovered by owner.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "allocPoint",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogUpdatePool(uint256,uint64,uint256,uint256)",
      "name": "LogUpdatePool",
      "description": "Event emitted when tokens are recovered by owner.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "weis paid for purchase.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event emitted when tokens are recovered by owner.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "add(uint256,uint256)",
      "name": "add",
      "description": "Add a new LP to the pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do.",
      "parameterDecorators": [
        {
          "name": "allocPoint",
          "description": "AP of the new pool.",
          "recommendedTypes": []
        },
        {
          "name": "_pid",
          "description": "Pid on MCV2.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimOwnership()",
      "name": "claimOwnership",
      "description": "Needs to be called by `pendingOwner` to claim ownership.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "massUpdatePools(uint256[])",
      "name": "massUpdatePools",
      "description": "Update reward variables for all pools. Be careful of gas spending!.",
      "parameterDecorators": [
        {
          "name": "pids",
          "description": "Pool IDs of all to be updated. Make sure to update all active pools.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onSmayReward(uint256,address,address,uint256,uint256)",
      "name": "onSmayReward",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "lpToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingOwner()",
      "name": "pendingOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingToken(uint256,address)",
      "name": "pendingToken",
      "description": "View function to see pending Token.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "The index of the pool. See `poolInfo`.",
          "recommendedTypes": []
        },
        {
          "name": "_user",
          "description": "Address of user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "pending",
          "description": "SMAY reward for a given user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingTokens(uint256,address,uint256)",
      "name": "pendingTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "rewardTokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        },
        {
          "name": "rewardAmounts",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolIds(uint256)",
      "name": "poolIds",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolInfo(uint256)",
      "name": "poolInfo",
      "description": "Info of each pool.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "accSmayPerShare",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "lastRewardBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "allocPoint",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolLength()",
      "name": "poolLength",
      "description": "Returns the number of MCV2 pools.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "pools",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "set(uint256,uint256)",
      "name": "set",
      "description": "Update the given pool's SMAY allocation point and `IRewarder` contract. Can only be called by the owner.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "The index of the pool. See `poolInfo`.",
          "recommendedTypes": []
        },
        {
          "name": "_allocPoint",
          "description": "New AP of the pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenPerBlock()",
      "name": "tokenPerBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address,bool,bool)",
      "name": "transferOwnership",
      "description": "Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner. Can only be invoked by the current `owner`.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "Address of the new owner.",
          "recommendedTypes": []
        },
        {
          "name": "direct",
          "description": "True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.",
          "recommendedTypes": []
        },
        {
          "name": "renounce",
          "description": "Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePool(uint256)",
      "name": "updatePool",
      "description": "Update reward variables of the given pool.",
      "parameterDecorators": [
        {
          "name": "pid",
          "description": "The index of the pool. See `poolInfo`.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "pool",
          "description": "Returns the pool that was updated.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "accSmayPerShare",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint128"
            },
            {
              "name": "lastRewardBlock",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint64"
            },
            {
              "name": "allocPoint",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint64"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "userInfo(uint256,address)",
      "name": "userInfo",
      "description": "Info of each user that stakes LP tokens.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardDebt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}