{
  "schema": "../schema.json",
  "tags": [
    "vesting",
    "escrows"
  ],
  "name": "VestingEscrow",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Claimed(address,uint256)",
      "name": "Claimed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Funded(uint256)",
      "name": "Funded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Locked(address,uint256,uint256)",
      "name": "Locked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "allocatedSupply()",
      "name": "allocatedSupply",
      "description": "배포가 결정된 토큰 수량.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claim(address)",
      "name": "claim",
      "description": "",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimableOf(address)",
      "name": "claimableOf",
      "description": "",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "decreaseLockedOf(address,uint128)",
      "name": "decreaseLockedOf",
      "description": "",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fund(uint256,uint8,bytes32,bytes32)",
      "name": "fund",
      "description": "토큰을 필요한 수량만큼 해당 컨트랙트로 이관하는 함수, 다만 Approve는 서명으로 수행함.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fund(uint256)",
      "name": "fund",
      "description": "토큰을 필요한 수량만큼 해당 컨트랙트로 이관하는 함수.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address,tuple(address,uint128,uint128,uint128)[])",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "params",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "recipient",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amount",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "startAt",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "endAt",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lock(address,uint128,uint128,uint128)",
      "name": "lock",
      "description": "개별 주소에 베스팅을 지정하는 함수.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "베스팅이 지정될 주소.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "베스팅 수량.",
          "recommendedTypes": []
        },
        {
          "name": "startAt",
          "description": "베스팅 시작 시점, Unix time을 이용.",
          "recommendedTypes": []
        },
        {
          "name": "endAt",
          "description": "베스팅 종료 시점, Unix time을 이용.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multicall(bytes[])",
      "name": "multicall",
      "description": "",
      "parameterDecorators": [
        {
          "name": "callData",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "returnData",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Get the address of the owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "resignOwnership()",
      "name": "resignOwnership",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "Query if a contract implements an interface. Interface identification is specified in ERC-165. This function uses less than 30,000 gas.",
      "parameterDecorators": [
        {
          "name": "interfaceID",
          "description": "The interface identifier, as specified in ERC-165.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "배포할 토큰.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Set the address of the new owner of the contract.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "The address of the new owner of the contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unallocatedSupply()",
      "name": "unallocatedSupply",
      "description": "배포가 결정되지 않은 토큰 수량.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vests(address)",
      "name": "vests",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "endTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "initialLocked",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "totalClaimed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}