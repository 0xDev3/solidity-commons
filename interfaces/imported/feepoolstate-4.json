{
  "schema": "../schema.json",
  "tags": [],
  "name": "FeePoolState",
  "description": "",
  "eventDecorators": [
    {
      "signature": "IssuanceDebtRatioEntry(address,uint256,uint256)",
      "name": "IssuanceDebtRatioEntry",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "debtRatio",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "feePeriodCloseIndex",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnerChanged(address,address)",
      "name": "OwnerChanged",
      "description": "",
      "parameterDecorators": [
        {
          "name": "oldOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnerNominated(address)",
      "name": "OwnerNominated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "FEE_PERIOD_LENGTH()",
      "name": "FEE_PERIOD_LENGTH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "acceptOwnership()",
      "name": "acceptOwnership",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "accountIssuanceKindsLedger(address,uint256)",
      "name": "accountIssuanceKindsLedger",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "periAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "usdcAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "accountIssuanceLedger(address,uint256)",
      "name": "accountIssuanceLedger",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "debtPercentage",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "debtEntryIndex",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addressToString(address)",
      "name": "addressToString",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_address",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_uintAsString",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "appendAccountIssuanceKindsRecord(address,uint256,uint256,uint256,uint256)",
      "name": "appendAccountIssuanceKindsRecord",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "periAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "usdcAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "debtEntryIndex",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "currentPeriodStartDebtIndex",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "appendAccountIssuanceRecord(address,uint256,uint256,uint256)",
      "name": "appendAccountIssuanceRecord",
      "description": "Logs an accounts issuance data in the current fee period which is then stored historically. onlyFeePool to call me on pynthetix.issue() & pynthetix.burn() calls to store the locked PERI per fee period so we know to allocate the correct proportions of fees and rewards per period accountIssuanceLedger[account][0] has the latest locked amount for the current period. This can be update as many time accountIssuanceLedger[account][1-2] has the last locked amount for a previous period they minted or burned.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "Message.Senders account address.",
          "recommendedTypes": []
        },
        {
          "name": "debtRatio",
          "description": "Debt of this account as a percentage of the global debt.",
          "recommendedTypes": []
        },
        {
          "name": "debtEntryIndex",
          "description": "The index in the global debt ledger. pynthetix.pynthetixState().issuanceData(account).",
          "recommendedTypes": []
        },
        {
          "name": "currentPeriodStartDebtIndex",
          "description": "The startingDebtIndex of the current fee period.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "applicableIssuanceData(address,uint256)",
      "name": "applicableIssuanceData",
      "description": "Find the oldest debtEntryIndex for the corresponding closingDebtIndex.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "users account.",
          "recommendedTypes": []
        },
        {
          "name": "closingDebtIndex",
          "description": "the last periods debt index on close.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "feePool()",
      "name": "feePool",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAccountsDebtEntry(address,uint256)",
      "name": "getAccountsDebtEntry",
      "description": "Get an accounts issuanceData for.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "users account.",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "Index in the array to retrieve. Upto FEE_PERIOD_LENGTH.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "debtPercentage",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "debtEntryIndex",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAccountsKindsEntry(address,uint256)",
      "name": "getAccountsKindsEntry",
      "description": "",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "periAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "usdcAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "importIssuerData(address[],uint256[],uint256,uint256)",
      "name": "importIssuerData",
      "description": "Import issuer data from pynthetixState.issuerData on FeePeriodClose() block #. Only callable by the contract owner, and only for 6 weeks after deployment.",
      "parameterDecorators": [
        {
          "name": "accounts",
          "description": "Array of issuing addresses.",
          "recommendedTypes": []
        },
        {
          "name": "ratios",
          "description": "Array of debt ratios.",
          "recommendedTypes": []
        },
        {
          "name": "periodToInsert",
          "description": "The Fee Period to insert the historical records into.",
          "recommendedTypes": []
        },
        {
          "name": "feePeriodCloseIndex",
          "description": "An accounts debtEntryIndex is valid when within the fee peroid, since the input ratio will be an average of the pervious periods it just needs to be > recentFeePeriods[periodToInsert].startingDebtIndex < recentFeePeriods[periodToInsert - 1].startingDebtIndex.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "nominateNewOwner(address)",
      "name": "nominateNewOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "nominatedOwner()",
      "name": "nominatedOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setFeePool(address)",
      "name": "setFeePool",
      "description": "set the FeePool contract as it is the only authority to be able to call appendAccountIssuanceRecord with the onlyFeePool modifer. Must be set by owner when FeePool logic is upgraded.",
      "parameterDecorators": [
        {
          "name": "_feePool",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setupExpiryTime()",
      "name": "setupExpiryTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}