{"schema":"../schema.json","tags":[],"name":"InsuranceFund","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when a new Vault is deployed. Fired in updateTokenRegistry().","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Withdrawn(address,uint256,uint256)","name":"Withdrawn","description":"Emitted when a new Vault is deployed. Fired in updateTokenRegistry().","parameterDecorators":[{"name":"withdrawer","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"badDebt","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"beneficiary()","name":"beneficiary","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"exchange()","name":"exchange","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address)","name":"initialize","description":"","parameterDecorators":[{"name":"_exchange","description":"","recommendedTypes":[]},{"name":"_beneficiary","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBeneficiary(address)","name":"setBeneficiary","description":"","parameterDecorators":[{"name":"_beneficiary","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setExchange(address)","name":"setExchange","description":"","parameterDecorators":[{"name":"_exchange","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdraw(tuple(uint256))","name":"withdraw","description":"withdraw token to caller.","parameterDecorators":[{"name":"_amount","description":"the amount of quoteToken caller want to withdraw.","recommendedTypes":[],"parameters":[{"name":"d","description":"","type":"uint256"}]}],"returnDecorators":[{"name":"badDebt","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":false}]}