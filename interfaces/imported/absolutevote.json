{"schema":"../schema.json","tags":["voting"],"name":"AbsoluteVote","description":"","eventDecorators":[{"signature":"AVVoteProposal(bytes32,bool)","name":"AVVoteProposal","description":"","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_isProxyVote","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"CancelProposal(bytes32,address)","name":"CancelProposal","description":"","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"CancelVoting(bytes32,address,address)","name":"CancelVoting","description":"","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_voter","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ExecuteProposal(bytes32,address,uint256,uint256)","name":"ExecuteProposal","description":"","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_decision","description":"","recommendedTypes":[],"indexed":false},{"name":"_totalReputation","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewProposal(bytes32,address,uint256,address,bytes32)","name":"NewProposal","description":"","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_numOfChoices","description":"","recommendedTypes":[],"indexed":false},{"name":"_proposer","description":"","recommendedTypes":[],"indexed":false},{"name":"_paramsHash","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"VoteProposal(bytes32,address,address,uint256,uint256)","name":"VoteProposal","description":"","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_voter","description":"","recommendedTypes":[],"indexed":true},{"name":"_vote","description":"","recommendedTypes":[],"indexed":false},{"name":"_reputation","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"MAX_NUM_OF_CHOICES()","name":"MAX_NUM_OF_CHOICES","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"cancelVote(bytes32)","name":"cancelVote","description":"Cancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct.","parameterDecorators":[{"name":"_proposalId","description":"id of the proposal.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"execute(bytes32)","name":"execute","description":"execute check if the proposal has been decided, and if so, execute the proposal.","parameterDecorators":[{"name":"_proposalId","description":"the id of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"getAllowedRangeOfChoices()","name":"getAllowedRangeOfChoices","description":"getAllowedRangeOfChoices returns the allowed range of choices for a voting machine.","parameterDecorators":[],"returnDecorators":[{"name":"min","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"max","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getNumberOfChoices(bytes32)","name":"getNumberOfChoices","description":"getNumberOfChoices returns the number of choices possible in this proposal excluding the abstain vote (0).","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getParametersHash(uint256,address)","name":"getParametersHash","description":"hashParameters returns a hash of the given parameters.","parameterDecorators":[{"name":"_precReq","description":"","recommendedTypes":[]},{"name":"_voteOnBehalf","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"isAbstainAllow()","name":"isAbstainAllow","description":"isAbstainAllow returns if the voting machine allow abstain (0).","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isVotable(bytes32)","name":"isVotable","description":"isVotable check if the proposal is votable.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"organizations(bytes32)","name":"organizations","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"parameters(bytes32)","name":"parameters","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"precReq","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"voteOnBehalf","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"proposals(bytes32)","name":"proposals","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"organizationId","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"open","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"callbacks","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"numOfChoices","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"paramsHash","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"totalVotes","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalsCnt()","name":"proposalsCnt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"propose(uint256,bytes32,address,address)","name":"propose","description":"register a new proposal with the given parameters. Every proposal has a unique ID which is being generated by calculating keccak256 of a incremented counter.","parameterDecorators":[{"name":"_numOfChoices","description":"number of voting choices.","recommendedTypes":[]},{"name":"_paramsHash","description":"defined the parameters of the voting machine used for this proposal.","recommendedTypes":[]},{"name":"param0","description":"","recommendedTypes":[]},{"name":"_organization","description":"address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"setParameters(uint256,address)","name":"setParameters","description":"hash the parameters, save them if necessary, and return the hash value.","parameterDecorators":[{"name":"_precReq","description":"","recommendedTypes":[]},{"name":"_voteOnBehalf","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"vote(bytes32,uint256,uint256,address)","name":"vote","description":"voting function.","parameterDecorators":[{"name":"_proposalId","description":"id of the proposal.","recommendedTypes":[]},{"name":"_vote","description":"a value between 0 to and the proposal number of choices.","recommendedTypes":[]},{"name":"_amount","description":"the reputation amount to vote with . if _amount == 0 it will use all voter reputation.","recommendedTypes":[]},{"name":"_voter","description":"voter address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"voteInfo(bytes32,address)","name":"voteInfo","description":"voteInfo returns the vote and the amount of reputation of the user committed to this proposal.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]},{"name":"_voter","description":"the address of the voter.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"voteStatus(bytes32,uint256)","name":"voteStatus","description":"voteStatus returns the reputation voted for a proposal for a specific voting choice.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]},{"name":"_choice","description":"the index in the.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}