{
  "schema": "../schema.json",
  "tags": [],
  "name": "Pool1",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Apiresult(address,string,bytes32)",
      "name": "Apiresult",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "msg",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "myid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Payout(address,uint256,uint256)",
      "name": "Payout",
      "description": "",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "coverId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "__callback(bytes32,string)",
      "name": "__callback",
      "description": "Handles callback of external oracle query.",
      "parameterDecorators": [
        {
          "name": "myid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "result",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyToken()",
      "name": "buyToken",
      "description": "Enables user to purchase SOTE at the current token price.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "c1()",
      "name": "c1",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeDependentContractAddress()",
      "name": "changeDependentContractAddress",
      "description": "Iupgradable Interface to update dependent contract address.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMasterAddress(address)",
      "name": "changeMasterAddress",
      "description": "change master address.",
      "parameterDecorators": [
        {
          "name": "_masterAddress",
          "description": "is the new address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "closeClaimsOraclise(uint256,uint256)",
      "name": "closeClaimsOraclise",
      "description": "Calls the Oraclize Query to close a given Claim after a given period of time.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "Claim Id to be closed.",
          "recommendedTypes": []
        },
        {
          "name": "time",
          "description": "Time (in seconds) after which Claims assessment voting needs to be closed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "closeCoverOraclise(uint256,uint64)",
      "name": "closeCoverOraclise",
      "description": "Calls Oraclize Query to expire a given Cover after a given period of time.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "Quote Id to be expired.",
          "recommendedTypes": []
        },
        {
          "name": "time",
          "description": "Time (in seconds) after which the cover should be expired.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "closeEmergencyPause(uint256)",
      "name": "closeEmergencyPause",
      "description": "Oraclize call to close emergency pause.",
      "parameterDecorators": [
        {
          "name": "time",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getInvestmentAssetBalance()",
      "name": "getInvestmentAssetBalance",
      "description": "gives the investment asset balance.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "balance",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOwnerParameters(bytes8)",
      "name": "getOwnerParameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "codeVal",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes8"
        },
        {
          "name": "val",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getToken(uint256)",
      "name": "getToken",
      "description": "Returns the amount of token a buyer will get for corresponding wei.",
      "parameterDecorators": [
        {
          "name": "weiPaid",
          "description": "Amount of wei.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenToGet",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUintParameters(bytes8)",
      "name": "getUintParameters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "codeVal",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes8"
        },
        {
          "name": "val",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWei(uint256)",
      "name": "getWei",
      "description": "Returns the amount of wei a seller will get for selling SOTE.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of SOTE to sell.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "weiToPay",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "makeCoverBegin(address,bytes4,uint256[],uint16,uint8,bytes32,bytes32)",
      "name": "makeCoverBegin",
      "description": "Enables user to purchase cover with funding in BNB.",
      "parameterDecorators": [
        {
          "name": "smartCAdd",
          "description": "Smart Contract Address.",
          "recommendedTypes": []
        },
        {
          "name": "coverCurr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "coverDetails",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "coverPeriod",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "makeCoverUsingCA(address,bytes4,uint256[],uint16,uint8,bytes32,bytes32)",
      "name": "makeCoverUsingCA",
      "description": "Enables user to purchase cover via currency asset eg DAI.",
      "parameterDecorators": [
        {
          "name": "smartCAdd",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "coverCurr",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "coverDetails",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "coverPeriod",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "mcrOraclise(uint256)",
      "name": "mcrOraclise",
      "description": "Calls the Oraclize Query to initiate MCR calculation.",
      "parameterDecorators": [
        {
          "name": "time",
          "description": "Time (in milliseconds) after which the next MCR calculation should be initiated.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "mcrOracliseFail(uint256,uint256)",
      "name": "mcrOracliseFail",
      "description": "Calls the Oraclize Query in case MCR calculation fails.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "time",
          "description": "Time (in seconds) after which the next MCR calculation should be initiated.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ms()",
      "name": "ms",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pumpAddress()",
      "name": "pumpAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pumpMo()",
      "name": "pumpMo",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reqc()",
      "name": "reqc",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "saveIADetailsOracalise(uint256)",
      "name": "saveIADetailsOracalise",
      "description": "Oraclize call to update investment asset rates.",
      "parameterDecorators": [
        {
          "name": "time",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sellSOTETokens(uint256)",
      "name": "sellSOTETokens",
      "description": "Allows selling of SOTE for ether. Seller first needs to give this contract allowance to transfer/burn tokens in the SOTEToken contract.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "Amount of SOTE to sell.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sendClaimPayout(uint256,uint256,uint256,address,bytes4)",
      "name": "sendClaimPayout",
      "description": "Pays out the sum assured in case a claim is accepted.",
      "parameterDecorators": [
        {
          "name": "coverid",
          "description": "Cover Id.",
          "recommendedTypes": []
        },
        {
          "name": "claimid",
          "description": "Claim Id.",
          "recommendedTypes": []
        },
        {
          "name": "sumAssured",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "coverHolder",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "coverCurr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "succ",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sendEther()",
      "name": "sendEther",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "soteMasterAddress()",
      "name": "soteMasterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferCurrencyAsset(bytes4,uint256)",
      "name": "transferCurrencyAsset",
      "description": "transfers currency asset to an address.",
      "parameterDecorators": [
        {
          "name": "curr",
          "description": "is the currency of currency asset to transfer.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "is amount of currency asset to transfer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferEther(uint256,address)",
      "name": "transferEther",
      "description": "Sends a given amount of Ether to a given address.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount (in wei) to send.",
          "recommendedTypes": []
        },
        {
          "name": "_add",
          "description": "Receiver's address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "succ",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "triggerExternalLiquidityTrade()",
      "name": "triggerExternalLiquidityTrade",
      "description": "to trigger external liquidity trade.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateOwnerParameters(bytes8,address)",
      "name": "updateOwnerParameters",
      "description": "to update the owner parameters.",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "is the associated code.",
          "recommendedTypes": []
        },
        {
          "name": "val",
          "description": "is value to be set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateUintParameters(bytes8,uint256)",
      "name": "updateUintParameters",
      "description": "Updates Uint Parameters of a code.",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "whose details we want to update.",
          "recommendedTypes": []
        },
        {
          "name": "val",
          "description": "value to set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeCapitalPool(address)",
      "name": "upgradeCapitalPool",
      "description": "Transfers all assest (i.e BNB balance, Currency Assest) from old Pool to new Pool.",
      "parameterDecorators": [
        {
          "name": "newPoolAddress",
          "description": "Address of the new Pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}