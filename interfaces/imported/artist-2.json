{"schema":"../schema.json","tags":[],"name":"Artist","description":"","eventDecorators":[{"signature":"Approval(address,address,uint256)","name":"Approval","description":"triggered when the system balance for a given token is updated.","parameterDecorators":[{"name":"_newAmount","description":"new amount.","recommendedTypes":[],"indexed":false},{"name":"_prevAmount","description":"previous amount.","recommendedTypes":[],"indexed":false},{"name":"_token","description":"token address.","recommendedTypes":[],"indexed":false}]},{"signature":"ContractUpgrade(address)","name":"ContractUpgrade","description":"triggered when the system balance for a given token is updated.","parameterDecorators":[{"name":"newContract","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LOG_AUCTION(uint256,uint256,uint256,uint256,address,address,address)","name":"LOG_AUCTION","description":"triggered when the system balance for a given token is updated.","parameterDecorators":[{"name":"artid","description":"","recommendedTypes":[],"indexed":false},{"name":"lastPrice","description":"","recommendedTypes":[],"indexed":false},{"name":"curPrice","description":"","recommendedTypes":[],"indexed":false},{"name":"bid","description":"","recommendedTypes":[],"indexed":false},{"name":"lastOwner","description":"","recommendedTypes":[],"indexed":false},{"name":"buyer","description":"","recommendedTypes":[],"indexed":false},{"name":"inviterAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Transfer(address,address,uint256)","name":"Transfer","description":"triggered when the system balance for a given token is updated.","parameterDecorators":[{"name":"_newAmount","description":"new amount.","recommendedTypes":[],"indexed":false},{"name":"_prevAmount","description":"previous amount.","recommendedTypes":[],"indexed":false},{"name":"_token","description":"token address.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"approve(address,uint256)","name":"approve","description":"Grant another address the right to transfer a specific art via transferFrom(). This is the preferred flow for transfering NFTs to contracts. Required for ERC-721 compliance.","parameterDecorators":[{"name":"_to","description":"The address to be granted transfer approval. Pass address(0) to clear all approvals.","recommendedTypes":[]},{"name":"_tokenId","description":"The ID of the art that can be transferred if this call succeeds.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"artIndexToApproved(uint256)","name":"artIndexToApproved","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"artIndexToOwner(uint256)","name":"artIndexToOwner","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"balanceOf(address)","name":"balanceOf","description":"Returns the number of arts owned by a specific address. Required for ERC-721 compliance.","parameterDecorators":[{"name":"_owner","description":"The owner address to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"count","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"bid(address,uint256)","name":"bid","description":"","parameterDecorators":[{"name":"inviterAddress","description":"","recommendedTypes":[]},{"name":"artid","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"bidtoken()","name":"bidtoken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"bonusPoolAddress()","name":"bonusPoolAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ceoAddress()","name":"ceoAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"cfoAddress()","name":"cfoAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"changeArtData(uint256,string)","name":"changeArtData","description":"","parameterDecorators":[{"name":"tokenid","description":"","recommendedTypes":[]},{"name":"ipfs","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeOwnerAddress(address)","name":"changeOwnerAddress","description":"","parameterDecorators":[{"name":"newowner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"checkBidable()","name":"checkBidable","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"closeBidTokenAuthority()","name":"closeBidTokenAuthority","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"cooAddress()","name":"cooAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"creatArt(bool,string)","name":"creatArt","description":"","parameterDecorators":[{"name":"bidflag","description":"","recommendedTypes":[]},{"name":"ipfsaddr","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"devPoolAddress()","name":"devPoolAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getLatestTokenID()","name":"getLatestTokenID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getLatestTokenInfo()","name":"getLatestTokenInfo","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokenRound(uint256)","name":"getTokenRound","description":"","parameterDecorators":[{"name":"tokenid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint64"}],"emittableEvents":[],"readOnly":true},{"signature":"name()","name":"name","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"openBidTokenAuthority()","name":"openBidTokenAuthority","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ownerOf(uint256)","name":"ownerOf","description":"Returns the address currently assigned ownership of a given art. Required for ERC-721 compliance.","parameterDecorators":[{"name":"_tokenId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"owner","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pause()","name":"pause","description":"Called by any \"C-level\" role to pause the contract. Used only when a bug or exploit is detected and we need to limit damage.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"paused()","name":"paused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"setBidInteval(uint256)","name":"setBidInteval","description":"","parameterDecorators":[{"name":"inteval","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCEO(address)","name":"setCEO","description":"Assigns a new address to act as the CEO. Only available to the current CEO.","parameterDecorators":[{"name":"_newCEO","description":"The address of the new CEO.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCFO(address)","name":"setCFO","description":"Assigns a new address to act as the CFO. Only available to the current CEO.","parameterDecorators":[{"name":"_newCFO","description":"The address of the new CFO.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCOO(address)","name":"setCOO","description":"Assigns a new address to act as the COO. Only available to the current CEO.","parameterDecorators":[{"name":"_newCOO","description":"The address of the new COO.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"Introspection interface as per ERC-165 (https://github.com/ethereum/EIPs/issues/165). Returns true for any standardized interfaces implemented by this contract. We implement ERC-165 (obviously!) and ERC-721.","parameterDecorators":[{"name":"_interfaceID","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"symbol()","name":"symbol","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"testBidTransfer()","name":"testBidTransfer","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"tokenMetadata(uint256)","name":"tokenMetadata","description":"Returns a URI pointing to a metadata package for this token conforming to ERC-721 (https://github.com/ethereum/EIPs/issues/721).","parameterDecorators":[{"name":"_tokenId","description":"The ID number of the art whose metadata should be returned.","recommendedTypes":[]}],"returnDecorators":[{"name":"infoUrl","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"tokensOfOwner(address)","name":"tokensOfOwner","description":"Returns a list of all art IDs assigned to an address. This method MUST NEVER be called by smart contract code. First, it's fairly expensive but it also returns a dynamic array, which is only supported for web3 calls, and not contract-to-contract calls.","parameterDecorators":[{"name":"_owner","description":"The owner.","recommendedTypes":[]}],"returnDecorators":[{"name":"ownerTokens","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"totalSupply()","name":"totalSupply","description":"Returns the total number of Kitties currently in existence. Required for ERC-721 compliance.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transfer(address,uint256)","name":"transfer","description":"Transfers a art to another address. If transferring to a smart contract be VERY CAREFUL to ensure that it is aware of ERC-721 your art may be lost forever. Seriously. Required for ERC-721 compliance.","parameterDecorators":[{"name":"_to","description":"The address of the recipient, can be a user or contract.","recommendedTypes":[]},{"name":"_tokenId","description":"The ID of the art to transfer.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferFrom(address,address,uint256)","name":"transferFrom","description":"Transfer a art owned by another address, for which the calling address has previously been granted transfer approval by the owner. Required for ERC-721 compliance.","parameterDecorators":[{"name":"_from","description":"The address that owns the art to be transfered.","recommendedTypes":[]},{"name":"_to","description":"The address that should take ownership of the art. Can be any address, including the caller.","recommendedTypes":[]},{"name":"_tokenId","description":"The ID of the art to be transferred.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Allows the current owner to transfer control of the contract to a newOwner.","parameterDecorators":[{"name":"newOwner","description":"The address to transfer ownership to.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unpause()","name":"unpause","description":"This is public rather than external so it can be called by derived contracts. Unpauses the smart contract. Can only be called by the CEO, since one reason we may pause the contract is when CFO or COO accounts are compromised.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}