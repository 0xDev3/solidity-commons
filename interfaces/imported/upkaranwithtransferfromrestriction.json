{"schema":"../schema.json","tags":[],"name":"Upkaran_With_TransferFrom_Restriction","description":"","eventDecorators":[],"functionDecorators":[{"signature":"batch(tuple(address,bytes,uint256)[])","name":"batch","description":"","parameterDecorators":[{"name":"calls","description":"","recommendedTypes":[],"parameters":[{"name":"to","description":"","type":"address"},{"name":"data","description":"","type":"bytes"},{"name":"value","description":"","type":"uint256"}]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isTrustedForwarder(address)","name":"isTrustedForwarder","description":"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.","parameterDecorators":[{"name":"forwarder","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)","name":"onERC1155BatchReceived","description":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector). unUsedParam operator The address which initiated the batch transfer (i.e. _msgSender()) unUsedParam from The address which previously owned the token unUsedParam ids An array containing ids of each token being transferred (order and length must match values array) unUsedParam values An array containing amounts of each token being transferred (order and length must match ids array).","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]},{"name":"data","description":"Additional data with no specified format.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"onERC1155Received(address,address,uint256,uint256,bytes)","name":"onERC1155Received","description":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector). unUsedParam operator The address which initiated the transfer (i.e. _msgSender()) unUsedParam from The address which previously owned the token unUsedParam id The ID of the token being transferred unUsedParam value The amount of tokens being transferred.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]},{"name":"data","description":"Additional data with no specified format.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"onERC721Received(address,address,uint256,bytes)","name":"onERC721Received","description":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"data","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"onFlashLoan(address,address,uint256,uint256,bytes)","name":"onFlashLoan","description":"Receive a flash loan. unUsedParam initiator The initiator of the loan.* unUsedParam token The loan currency. unUsedParam amount The amount of tokens lent. unUsedParam fee The additional amount of tokens to repay.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]},{"name":"param3","description":"","recommendedTypes":[]},{"name":"data","description":"Arbitrary data structure, intended to contain user-defined parameters.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\".","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"supportsInterface(bytes4)","name":"supportsInterface","description":"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.","parameterDecorators":[{"name":"interfaceId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"trustedForwarder()","name":"trustedForwarder","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"versionRecipient()","name":"versionRecipient","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true}]}