{
  "schema": "../schema.json",
  "tags": [],
  "name": "DividendPool",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Deposit(uint256)",
      "name": "Deposit",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "- The amount sent to unbundle.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Dividend(address,uint256)",
      "name": "Dividend",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "- The amount sent to unbundle.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SignerChanged(address)",
      "name": "SignerChanged",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "signer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdrawal(uint256)",
      "name": "Withdrawal",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "- The amount sent to unbundle.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "currentBalance()",
      "name": "currentBalance",
      "description": "Returns the current balance.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(uint256)",
      "name": "deposit",
      "description": "deposit erc20 token to dividend pool.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of erc20 token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "dividend(uint256,uint32,uint64,bytes)",
      "name": "dividend",
      "description": "claim dividend.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of erc20 token.",
          "recommendedTypes": []
        },
        {
          "name": "nonce",
          "description": "nonce (prevent replay attacks).",
          "recommendedTypes": []
        },
        {
          "name": "deadline",
          "description": "deadline (unix timestamp).",
          "recommendedTypes": []
        },
        {
          "name": "signature",
          "description": "signed by signer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "erc20Token()",
      "name": "erc20Token",
      "description": "Returns the token used to pay dividends.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getsigner()",
      "name": "getsigner",
      "description": "Returns the signer.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setSigner(address)",
      "name": "setSigner",
      "description": "set signer.",
      "parameterDecorators": [
        {
          "name": "newSigner",
          "description": "signer address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw(uint256)",
      "name": "withdraw",
      "description": "withdraw erc20 token from dividend pool.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of erc20 token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}