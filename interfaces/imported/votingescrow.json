{
  "schema": "../schema.json",
  "tags": [
    "escrows",
    "voting"
  ],
  "name": "VotingEscrow",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Deposit(address,uint256,uint256,uint8,uint256)",
      "name": "Deposit",
      "description": "Shared Events.",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "locktime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "action",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "ts",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Ejected(address,address,uint256)",
      "name": "Ejected",
      "description": "",
      "parameterDecorators": [
        {
          "name": "ejected",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "ejector",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ts",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Expired()",
      "name": "Expired",
      "description": "",
      "parameterDecorators": []
    },
    {
      "signature": "RewardAdded(uint256)",
      "name": "RewardAdded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "reward",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardPaid(address,uint256)",
      "name": "RewardPaid",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "reward",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Withdraw(address,uint256,uint256)",
      "name": "Withdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ts",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "MAXTIME()",
      "name": "MAXTIME",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOf(address)",
      "name": "balanceOf",
      "description": "Gets curent user voting weight (aka effectiveStake).",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "User for which to return the balance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint256 Balance of user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "balanceOfAt(address,uint256)",
      "name": "balanceOfAt",
      "description": "Gets a users votingWeight at a given blockNumber.",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "User for which to return the balance.",
          "recommendedTypes": []
        },
        {
          "name": "_blockNumber",
          "description": "Block at which to calculate balance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint256 Balance of user.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkpoint()",
      "name": "checkpoint",
      "description": "Public function to trigger global checkpoint.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimReward()",
      "name": "claimReward",
      "description": "Claims outstanding rewards for the sender. First updates outstanding reward allocation and then transfers.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createLock(uint256,uint256)",
      "name": "createLock",
      "description": "Creates a new lock.",
      "parameterDecorators": [
        {
          "name": "_value",
          "description": "Total units of StakingToken to lockup.",
          "recommendedTypes": []
        },
        {
          "name": "_unlockTime",
          "description": "Time at which the stake should unlock.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "decimals()",
      "name": "decimals",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "earned(address)",
      "name": "earned",
      "description": "Calculates the amount of unclaimed rewards a user has earned.",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "User address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Total reward amount earned.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "eject(address)",
      "name": "eject",
      "description": "Ejects a user from the reward allocation, given their lock has freshly expired. Leave it to the user to withdraw and claim their rewards.",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "Address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exit()",
      "name": "exit",
      "description": "Withdraws and consequently claims rewards for the sender.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "expireContract()",
      "name": "expireContract",
      "description": "Ends the contract, unlocking all stakes. No more staking can happen. Only withdraw and Claim.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "expired()",
      "name": "expired",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDuration()",
      "name": "getDuration",
      "description": "Gets the duration of the rewards period.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getLastUserPoint(address)",
      "name": "getLastUserPoint",
      "description": "Gets the last available user point.",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "User address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "bias",
          "description": "i.e. y.",
          "recommendedTypes": [],
          "solidityType": "int128"
        },
        {
          "name": "slope",
          "description": "i.e. linear gradient.",
          "recommendedTypes": [],
          "solidityType": "int128"
        },
        {
          "name": "ts",
          "description": "i.e. time point was logged.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRewardToken()",
      "name": "getRewardToken",
      "description": "Gets the RewardsToken.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "globalEpoch()",
      "name": "globalEpoch",
      "description": "Lockup.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "increaseLockAmount(uint256)",
      "name": "increaseLockAmount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "increaseLockLength(uint256)",
      "name": "increaseLockLength",
      "description": "Increases length of lockup & resets decay.",
      "parameterDecorators": [
        {
          "name": "_unlockTime",
          "description": "New unlocktime for lockup.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lastTimeRewardApplicable()",
      "name": "lastTimeRewardApplicable",
      "description": "Gets the last applicable timestamp for this reward period.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastUpdateTime()",
      "name": "lastUpdateTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "locked(address)",
      "name": "locked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int128"
        },
        {
          "name": "end",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "name()",
      "name": "name",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "notifyRewardAmount(uint256)",
      "name": "notifyRewardAmount",
      "description": "Notifies the contract that new rewards have been added. Calculates an updated rewardRate based on the rewards in period.",
      "parameterDecorators": [
        {
          "name": "_reward",
          "description": "Units of RewardToken that have been added to the pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "periodFinish()",
      "name": "periodFinish",
      "description": "Rewards.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pointHistory(uint256)",
      "name": "pointHistory",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "bias",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int128"
        },
        {
          "name": "slope",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int128"
        },
        {
          "name": "ts",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "blk",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardPerToken()",
      "name": "rewardPerToken",
      "description": "Calculates the amount of unclaimed rewards per token since last update, and sums with stored to give the new cumulative reward per token.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "'Reward' per staked token.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardPerTokenStored()",
      "name": "rewardPerTokenStored",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardRate()",
      "name": "rewardRate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewards(address)",
      "name": "rewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardsPaid(address)",
      "name": "rewardsPaid",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "slopeChanges(uint256)",
      "name": "slopeChanges",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakingToken()",
      "name": "stakingToken",
      "description": "Shared Globals.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "staticBalanceOf(address)",
      "name": "staticBalanceOf",
      "description": "Gets the most recent Static Balance (bias) for a user.",
      "parameterDecorators": [
        {
          "name": "_addr",
          "description": "User for which to retrieve static balance.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint256 balance.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "symbol()",
      "name": "symbol",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalStaticWeight()",
      "name": "totalStaticWeight",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSupply()",
      "name": "totalSupply",
      "description": "Calculates current total supply of votingWeight.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "totalSupply of voting token weight.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSupply(uint256)",
      "name": "totalSupply",
      "description": "",
      "parameterDecorators": [
        {
          "name": "t",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSupplyAt(uint256)",
      "name": "totalSupplyAt",
      "description": "Calculates total supply of votingWeight at a given blockNumber.",
      "parameterDecorators": [
        {
          "name": "_blockNumber",
          "description": "Block number at which to calculate total supply.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "totalSupply of voting token weight at the given blockNumber.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "userPointEpoch(address)",
      "name": "userPointEpoch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "userPointHistory(address,uint256)",
      "name": "userPointHistory",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "bias",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int128"
        },
        {
          "name": "slope",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int128"
        },
        {
          "name": "ts",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "blk",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "userRewardPerTokenPaid(address)",
      "name": "userRewardPerTokenPaid",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw()",
      "name": "withdraw",
      "description": "Withdraws all the senders stake, providing lockup is over.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}