{
  "schema": "../schema.json",
  "tags": [],
  "name": "CFDState",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "CFD()",
      "name": "CFD",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calcPositionAfterLiquidityMigration(address,tuple(tuple,tuple,tuple,tuple,tuple,uint256,uint256),uint256)",
      "name": "calcPositionAfterLiquidityMigration",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_position",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "size",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "margin",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "openNotional",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "lastUpdatedCumulativePremiumFraction",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "lastUpdatedCumulativeOvernightFeeRate",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "liquidityHistoryIndex",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "blockNumber",
              "description": "",
              "type": "uint256"
            }
          ]
        },
        {
          "name": "_latestLiquidityIndex",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calcRemainMarginWithFundingPaymentAndOvernightFee(address,tuple(tuple,tuple,tuple,tuple,tuple,uint256,uint256),tuple(int256))",
      "name": "calcRemainMarginWithFundingPaymentAndOvernightFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_oldPosition",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "size",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "margin",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "openNotional",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "lastUpdatedCumulativePremiumFraction",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "lastUpdatedCumulativeOvernightFeeRate",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "liquidityHistoryIndex",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "blockNumber",
              "description": "",
              "type": "uint256"
            }
          ]
        },
        {
          "name": "_marginDelta",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "int256"
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "remainMarginInfo",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "checkWaitingPeriod(address,address,uint8)",
      "name": "checkWaitingPeriod",
      "description": "trader can't do the reverse operation during waiting period.",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_trader",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_side",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getPositionNotionalAndUnrealizedPnl(address,tuple(tuple,tuple,tuple,tuple,tuple,uint256,uint256),uint8)",
      "name": "getPositionNotionalAndUnrealizedPnl",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_position",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "size",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "margin",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "openNotional",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "lastUpdatedCumulativePremiumFraction",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "lastUpdatedCumulativeOvernightFeeRate",
              "description": "",
              "type": "tuple"
            },
            {
              "name": "liquidityHistoryIndex",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "blockNumber",
              "description": "",
              "type": "uint256"
            }
          ]
        },
        {
          "name": "_pnlCalcOption",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "positionNotional",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        },
        {
          "name": "unrealizedPnl",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWhiteList()",
      "name": "getWhiteList",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,uint256)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_CFD",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_waitingPeriodSecs",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "openInterestNotionalMap(address)",
      "name": "openInterestNotionalMap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "d",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWaitingPeriodSecs(uint256)",
      "name": "setWaitingPeriodSecs",
      "description": "set max waiting period. only owner can call.",
      "parameterDecorators": [
        {
          "name": "_waitingPeriodSecs",
          "description": "new max waiting period in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWhitelist(address)",
      "name": "setWhitelist",
      "description": "add an address in the whitelist. People in the whitelist can hold unlimited positions. only owner can call.",
      "parameterDecorators": [
        {
          "name": "_whitelist",
          "description": "an address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tradingState(address,address)",
      "name": "tradingState",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "lastestLongTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastestShortTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateOpenInterestNotional(address,tuple(int256))",
      "name": "updateOpenInterestNotional",
      "description": "assume this will be removes soon once the guarded period has ended. caller need to ensure amm exist.",
      "parameterDecorators": [
        {
          "name": "_exchange",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "type": "int256"
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "waitingPeriodSecs()",
      "name": "waitingPeriodSecs",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}