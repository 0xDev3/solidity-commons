{"schema":"../schema.json","tags":["compound"],"name":"Comptroller","description":"Compound's Comptroller Contract.","eventDecorators":[{"signature":"ActionPaused(string,bool)","name":"ActionPaused","description":"Emitted when an action is paused globally.","parameterDecorators":[{"name":"action","description":"","recommendedTypes":[],"indexed":false},{"name":"pauseState","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ActionPaused(address,string,bool)","name":"ActionPaused","description":"Emitted when an action is paused on a market.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"action","description":"","recommendedTypes":[],"indexed":false},{"name":"pauseState","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"CompBorrowSpeedUpdated(address,uint256)","name":"CompBorrowSpeedUpdated","description":"Emitted when a new borrow-side COMP speed is calculated for a market.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":true},{"name":"newSpeed","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"CompGranted(address,uint256)","name":"CompGranted","description":"Emitted when COMP is granted by admin.","parameterDecorators":[{"name":"recipient","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"CompSupplySpeedUpdated(address,uint256)","name":"CompSupplySpeedUpdated","description":"Emitted when a new supply-side COMP speed is calculated for a market.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":true},{"name":"newSpeed","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ContributorCompSpeedUpdated(address,uint256)","name":"ContributorCompSpeedUpdated","description":"Emitted when a new COMP speed is set for a contributor.","parameterDecorators":[{"name":"contributor","description":"","recommendedTypes":[],"indexed":true},{"name":"newSpeed","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DistributedBorrowerComp(address,address,uint256,uint256)","name":"DistributedBorrowerComp","description":"Emitted when COMP is distributed to a borrower.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":true},{"name":"borrower","description":"","recommendedTypes":[],"indexed":true},{"name":"compDelta","description":"","recommendedTypes":[],"indexed":false},{"name":"compBorrowIndex","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DistributedSupplierComp(address,address,uint256,uint256)","name":"DistributedSupplierComp","description":"Emitted when COMP is distributed to a supplier.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":true},{"name":"supplier","description":"","recommendedTypes":[],"indexed":true},{"name":"compDelta","description":"","recommendedTypes":[],"indexed":false},{"name":"compSupplyIndex","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketEntered(address,address)","name":"MarketEntered","description":"Emitted when an account enters a market.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketExited(address,address)","name":"MarketExited","description":"Emitted when an account exits a market.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketListed(address)","name":"MarketListed","description":"Emitted when an admin supports a market.","parameterDecorators":[{"name":"newERC20Address","description":"is an address of the newly created ERC20 token MinimalProxy.","recommendedTypes":[],"indexed":false}]},{"signature":"NewBorrowCap(address,uint256)","name":"NewBorrowCap","description":"Emitted when borrow cap for a cToken is changed.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":true},{"name":"newBorrowCap","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewBorrowCapGuardian(address,address)","name":"NewBorrowCapGuardian","description":"Emitted when borrow cap guardian is changed.","parameterDecorators":[{"name":"oldBorrowCapGuardian","description":"","recommendedTypes":[],"indexed":false},{"name":"newBorrowCapGuardian","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewCloseFactor(uint256,uint256)","name":"NewCloseFactor","description":"Emitted when close factor is changed by admin.","parameterDecorators":[{"name":"oldCloseFactorMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newCloseFactorMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewCollateralFactor(address,uint256,uint256)","name":"NewCollateralFactor","description":"Emitted when a collateral factor is changed by admin.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"oldCollateralFactorMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newCollateralFactorMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewLiquidationIncentive(uint256,uint256)","name":"NewLiquidationIncentive","description":"Emitted when liquidation incentive is changed by admin.","parameterDecorators":[{"name":"oldLiquidationIncentiveMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newLiquidationIncentiveMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPauseGuardian(address,address)","name":"NewPauseGuardian","description":"Emitted when pause guardian is changed.","parameterDecorators":[{"name":"oldPauseGuardian","description":"","recommendedTypes":[],"indexed":false},{"name":"newPauseGuardian","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPriceOracle(address,address)","name":"NewPriceOracle","description":"Emitted when price oracle is changed.","parameterDecorators":[{"name":"oldPriceOracle","description":"","recommendedTypes":[],"indexed":false},{"name":"newPriceOracle","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SetMaxSupply(address,uint256)","name":"SetMaxSupply","description":"","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"_become(address)","name":"_become","description":"","parameterDecorators":[{"name":"unitroller","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_grantComp(address,uint256)","name":"_grantComp","description":"Transfer COMP to the recipient. Note: If there is not enough COMP, we do not perform the transfer all.","parameterDecorators":[{"name":"recipient","description":"The address of the recipient to transfer COMP to.","recommendedTypes":[]},{"name":"amount","description":"The amount of COMP to (possibly) transfer.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setCloseFactor(uint256)","name":"_setCloseFactor","description":"Sets the closeFactor used when liquidating borrows. Admin function to set closeFactor.","parameterDecorators":[{"name":"newCloseFactorMantissa","description":"New close factor, scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setCompSpeeds(address[],uint256[],uint256[])","name":"_setCompSpeeds","description":"Set COMP borrow and supply speeds for the specified markets.","parameterDecorators":[{"name":"cTokens","description":"The markets whose COMP speed to update.","recommendedTypes":[]},{"name":"supplySpeeds","description":"New supply-side COMP speed for the corresponding market.","recommendedTypes":[]},{"name":"borrowSpeeds","description":"New borrow-side COMP speed for the corresponding market.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setContributorCompSpeed(address,uint256)","name":"_setContributorCompSpeed","description":"Set COMP speed for a single contributor.","parameterDecorators":[{"name":"contributor","description":"The contributor whose COMP speed to update.","recommendedTypes":[]},{"name":"compSpeed","description":"New COMP speed for contributor.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setLiquidationIncentive(uint256)","name":"_setLiquidationIncentive","description":"Sets liquidationIncentive. Admin function to set liquidationIncentive.","parameterDecorators":[{"name":"newLiquidationIncentiveMantissa","description":"New liquidationIncentive scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See ErrorReporter for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setPriceOracle(address)","name":"_setPriceOracle","description":"Sets a new price oracle for the comptroller. Admin function to set a new price oracle.","parameterDecorators":[{"name":"newOracle","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure (see ErrorReporter.sol for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setUnderWriterAdmin(address)","name":"_setUnderWriterAdmin","description":"","parameterDecorators":[{"name":"underWriter","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"_supportMarket(address,uint8)","name":"_supportMarket","description":"Add the market to the markets mapping and set it as listed. Admin function to set isListed and add support for the market.","parameterDecorators":[{"name":"cToken","description":"The address of the market (token) to list.","recommendedTypes":[]},{"name":"groupId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"uint 0=success, otherwise a failure. (See enum uint256 for details).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"accountAssets(address,uint256)","name":"accountAssets","description":"Per-account mapping of \"assets you are in\", capped by maxAssets.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"admin()","name":"admin","description":"Administrator for this contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"allMarkets(uint256)","name":"allMarkets","description":"A list of all markets.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowAllowed(address,address,uint256)","name":"borrowAllowed","description":"Checks if the account should be allowed to borrow the underlying asset of the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the borrow against.","recommendedTypes":[]},{"name":"borrower","description":"The account which would borrow the asset.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of underlying the account would borrow.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the borrow is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"checkMembership(address,address)","name":"checkMembership","description":"Returns whether the given account is entered in the given asset.","parameterDecorators":[{"name":"account","description":"The address of the account to check.","recommendedTypes":[]},{"name":"cToken","description":"The cToken to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if the account is in the asset, otherwise false.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"claimComp(address,address[])","name":"claimComp","description":"Claim all the comp accrued by holder in the specified markets.","parameterDecorators":[{"name":"holder","description":"The address to claim COMP for.","recommendedTypes":[]},{"name":"cTokens","description":"The list of markets to claim COMP in.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimComp(address[],address[],bool,bool)","name":"claimComp","description":"Claim all comp accrued by the holders.","parameterDecorators":[{"name":"holders","description":"The addresses to claim COMP for.","recommendedTypes":[]},{"name":"cTokens","description":"The list of markets to claim COMP in.","recommendedTypes":[]},{"name":"borrowers","description":"Whether or not to claim COMP earned by borrowing.","recommendedTypes":[]},{"name":"suppliers","description":"Whether or not to claim COMP earned by supplying.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimComp(address)","name":"claimComp","description":"Claim all the comp accrued by holder in all markets.","parameterDecorators":[{"name":"holder","description":"The address to claim COMP for.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"closeFactorMantissa()","name":"closeFactorMantissa","description":"Multiplier used to calculate the maximum repayAmount when liquidating a borrow.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"compAccrued(address)","name":"compAccrued","description":"The COMP accrued but not yet transferred to each user.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"compBorrowSpeeds(address)","name":"compBorrowSpeeds","description":"The rate at which comp is distributed to the corresponding borrow market (per block).","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"compBorrowState(address)","name":"compBorrowState","description":"The COMP market borrow state for each market.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"","recommendedTypes":[],"solidityType":"uint224"},{"name":"block","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"compBorrowerIndex(address,address)","name":"compBorrowerIndex","description":"The COMP borrow index for each market for each borrower as of the last time they accrued COMP.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"compContributorSpeeds(address)","name":"compContributorSpeeds","description":"The portion of COMP that each contributor receives per block.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"compInitialIndex()","name":"compInitialIndex","description":"The initial COMP index for a market.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint224"}],"emittableEvents":[],"readOnly":true},{"signature":"compRate()","name":"compRate","description":"The rate at which the flywheel distributes COMP, per block.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"compSpeeds(address)","name":"compSpeeds","description":"The portion of compRate that each market currently receives.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"compSupplierIndex(address,address)","name":"compSupplierIndex","description":"The COMP borrow index for each market for each supplier as of the last time they accrued COMP.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"compSupplySpeeds(address)","name":"compSupplySpeeds","description":"The rate at which comp is distributed to the corresponding supply market (per block).","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"compSupplyState(address)","name":"compSupplyState","description":"The COMP market supply state for each market.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"index","description":"","recommendedTypes":[],"solidityType":"uint224"},{"name":"block","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"comptrollerImplementation()","name":"comptrollerImplementation","description":"Active brains of Unitroller.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"enterMarkets(address[])","name":"enterMarkets","description":"Add assets to be included in account liquidity calculation.","parameterDecorators":[{"name":"cTokens","description":"The list of addresses of the cToken markets to be enabled.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Success indicator for whether each corresponding market was entered.","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":false},{"signature":"exitMarket(address)","name":"exitMarket","description":"Removes asset from sender's account liquidity calculation. Sender must not have an outstanding borrow balance in the asset, or be providing necessary collateral for an outstanding borrow.","parameterDecorators":[{"name":"cTokenAddress","description":"The address of the asset to be removed.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Whether or not the account successfully exited the market.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"getAccountLiquidity(address)","name":"getAccountLiquidity","description":"Determine the current account liquidity wrt collateral requirements.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getAllMarkets()","name":"getAllMarkets","description":"Return all of the markets. The automatic getter may be used to access an individual market.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The list of market addresses.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getAssetsIn(address)","name":"getAssetsIn","description":"Returns the assets an account has entered.","parameterDecorators":[{"name":"account","description":"The address of the account to pull assets for.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"A dynamic list with the assets the account has entered.","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getBlockNumber()","name":"getBlockNumber","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getHypotheticalAccountLiquidity(address,address,uint256,uint256)","name":"getHypotheticalAccountLiquidity","description":"Determine what the account liquidity would be if the given amounts were redeemed/borrowed.","parameterDecorators":[{"name":"account","description":"The account to determine liquidity for.","recommendedTypes":[]},{"name":"cTokenModify","description":"The market to hypothetically redeem/borrow in.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of tokens to hypothetically redeem.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of underlying to hypothetically borrow.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"isComptroller()","name":"isComptroller","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isDeprecated(address)","name":"isDeprecated","description":"Returns true if the given cToken market has been deprecated. All borrows in a deprecated cToken market can be immediately liquidated.","parameterDecorators":[{"name":"cToken","description":"The market to check if deprecated.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"lastContributorBlock(address)","name":"lastContributorBlock","description":"Last block at which a contributor's COMP rewards have been allocated.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"liquidateBorrowAllowed(address,address,address,address,uint256)","name":"liquidateBorrowAllowed","description":"Checks if the liquidation should be allowed to occur.","parameterDecorators":[{"name":"cTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"cTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of underlying being repaid.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"liquidateCalculateSeizeTokens(address,address,uint256)","name":"liquidateCalculateSeizeTokens","description":"Calculate number of tokens of collateral asset to seize given an underlying amount. Used in liquidation (called in CTokenInterface(cToken).liquidateBorrowFresh).","parameterDecorators":[{"name":"cTokenBorrowed","description":"The address of the borrowed cToken.","recommendedTypes":[]},{"name":"cTokenCollateral","description":"The address of the collateral cToken.","recommendedTypes":[]},{"name":"actualRepayAmount","description":"The amount of cTokenBorrowed underlying to convert into cTokenCollateral tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"liquidationIncentiveMantissa()","name":"liquidationIncentiveMantissa","description":"Multiplier representing the discount on collateral that a liquidator receives.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"markets(address)","name":"markets","description":"Official mapping of cTokens -> Market metadata.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"isListed","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"equalAssetGrouId","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"isComped","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"maxAssets()","name":"maxAssets","description":"Max number of assets a single account can participate in (borrow or use as collateral).","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"maxSupply(address)","name":"maxSupply","description":"eqAssetGroup, cToken -> equal assets info.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"mintAllowed(address,address,uint256)","name":"mintAllowed","description":"Checks if the account should be allowed to mint tokens in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the mint against.","recommendedTypes":[]},{"name":"minter","description":"The account which would get the minted tokens.","recommendedTypes":[]},{"name":"mintAmount","description":"The amount of underlying being supplied to the market in exchange for tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"oracle()","name":"oracle","description":"Oracle which gives the price of any given asset.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingAdmin()","name":"pendingAdmin","description":"Pending administrator for this contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingComptrollerImplementation()","name":"pendingComptrollerImplementation","description":"Pending brains of Unitroller.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"redeemAllowed(address,address,uint256)","name":"redeemAllowed","description":"Checks if the account should be allowed to redeem tokens in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the redeem against.","recommendedTypes":[]},{"name":"redeemer","description":"The account which would redeem the tokens.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of cTokens to exchange for the underlying asset in the market.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the redeem is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"redeemVerify(address,address,uint256,uint256)","name":"redeemVerify","description":"Validates redeem and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cToken","description":"Asset being redeemed.","recommendedTypes":[]},{"name":"redeemer","description":"The address redeeming the tokens.","recommendedTypes":[]},{"name":"redeemAmount","description":"The amount of the underlying asset being redeemed.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of tokens being redeemed.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"repayBorrowAllowed(address,address,address,uint256)","name":"repayBorrowAllowed","description":"Checks if the account should be allowed to repay a borrow in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the repay against.","recommendedTypes":[]},{"name":"payer","description":"The account which would repay the asset.","recommendedTypes":[]},{"name":"borrower","description":"The account which would borrowed the asset.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of the underlying asset the account would repay.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the repay is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"seizeAllowed(address,address,address,address,uint256)","name":"seizeAllowed","description":"Checks if the seizing of assets should be allowed to occur.","parameterDecorators":[{"name":"cTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"cTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"seizeTokens","description":"The number of collateral tokens to seize.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"setMaxSupply(address,uint256)","name":"setMaxSupply","description":"","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"transferAllowed(address,address,address,uint256)","name":"transferAllowed","description":"Checks if the account should be allowed to transfer tokens in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the transfer against.","recommendedTypes":[]},{"name":"src","description":"The account which sources the tokens.","recommendedTypes":[]},{"name":"dst","description":"The account which receives the tokens.","recommendedTypes":[]},{"name":"transferTokens","description":"The number of cTokens to transfer.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"0 if the transfer is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol).","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"underWriterAdmin()","name":"underWriterAdmin","description":"Gov token address Move to Admin.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"updateContributorRewards(address)","name":"updateContributorRewards","description":"Calculate additional accrued COMP for a contributor since last accrual.","parameterDecorators":[{"name":"contributor","description":"The address to calculate contributor rewards for.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}