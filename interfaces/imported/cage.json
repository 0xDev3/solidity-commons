{"schema":"../schema.json","tags":[],"name":"Cage","description":"","eventDecorators":[{"signature":"DeployedHouse(address,address)","name":"DeployedHouse","description":"event emitted when a user has unstaked a token.","parameterDecorators":[{"name":"cage","description":"","recommendedTypes":[],"indexed":false},{"name":"house","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"closeHouse()","name":"closeHouse","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"commit(uint256)","name":"commit","description":"자산 평가단들이 지정된 토큰의 값만 입력해서 커밋함.계속 최대 금액만 입력할 수 있음. 커밋한 증거로, 커밋 금액과 동일한 토큰을 발행함.","parameterDecorators":[{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"coverPrice()","name":"coverPrice","description":"실시간 보험료.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"depositCover(uint256)","name":"depositCover","description":"commit 끝나 Finished 상태가 되면, 보험금을 납부할 수 있게되며 보험금을 납부 하자마자, 옥션이 시작되도록 함.","parameterDecorators":[{"name":"duration","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"finish()","name":"finish","description":"지정된 기간이 지나면 Commit 그만 받도록 설정,.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"house()","name":"house","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"houseTemplate()","name":"houseTemplate","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"id()","name":"id","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,uint256,address,address)","name":"initialize","description":"","parameterDecorators":[{"name":"commitToken","description":"","recommendedTypes":[]},{"name":"nftAddress","description":"","recommendedTypes":[]},{"name":"tokenId","description":"","recommendedTypes":[]},{"name":"template","description":"","recommendedTypes":[]},{"name":"lp","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"latestPrice()","name":"latestPrice","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"lptoken()","name":"lptoken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"nft()","name":"nft","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"nftOwner()","name":"nftOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"onERC721Received(address,address,uint256,bytes)","name":"onERC721Received","description":"Handle the receipt of an NFT. The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the contract address is always the message sender.","parameterDecorators":[{"name":"_operator","description":"The address which called `safeTransferFrom` function.","recommendedTypes":[]},{"name":"_from","description":"The address which previously owned the token.","recommendedTypes":[]},{"name":"_tokenId","description":"The NFT identifier which is being transferred.","recommendedTypes":[]},{"name":"_data","description":"Additional data with no specified format.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"period()","name":"period","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"stake(uint256)","name":"stake","description":"","parameterDecorators":[{"name":"duration","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"status()","name":"status","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"totalCommited()","name":"totalCommited","description":"총 커밋된 토큰의 수량.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}