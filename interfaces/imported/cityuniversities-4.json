{
  "schema": "../schema.json",
  "tags": [],
  "name": "CityUniversities",
  "description": "",
  "eventDecorators": [
    {
      "signature": "RoleAdminChanged(bytes32,bytes32,bytes32)",
      "name": "RoleAdminChanged",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of the withdrawn tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "Address of the token which was withdrawn.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "user",
          "description": "Address of the user which withdrawn the tokens.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleGranted(bytes32,address,address)",
      "name": "RoleGranted",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of the withdrawn tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "Address of the token which was withdrawn.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "user",
          "description": "Address of the user which withdrawn the tokens.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleRevoked(bytes32,address,address)",
      "name": "RoleRevoked",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of the withdrawn tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "Address of the token which was withdrawn.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "user",
          "description": "Address of the user which withdrawn the tokens.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_ADMIN_ROLE()",
      "name": "DEFAULT_ADMIN_ROLE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "INVALID_CITY()",
      "name": "INVALID_CITY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "INVALID_EMPLOYEE()",
      "name": "INVALID_EMPLOYEE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "INVALID_OWNER()",
      "name": "INVALID_OWNER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "INVALID_UNIVERSITY()",
      "name": "INVALID_UNIVERSITY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MAIN_OWNER()",
      "name": "MAIN_OWNER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "burnsToGetMini()",
      "name": "burnsToGetMini",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeDirectAddresses(address,address,address,address,address,address,address)",
      "name": "changeDirectAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_tokenController",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_employees",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_miniEmployees",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_cities",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_citiesUniversities",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_citiesStorage",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_baseDeployer",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "experienceToUniversity()",
      "name": "experienceToUniversity",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCitiesRewards(address)",
      "name": "getCitiesRewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFactoryRelationInfo(uint256,uint256,uint256,uint256,address)",
      "name": "getFactoryRelationInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_city",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_factory",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_x",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_y",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRoleAdmin(bytes32)",
      "name": "getRoleAdmin",
      "description": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUniversityInfo(uint256)",
      "name": "getUniversityInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_city",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserRewards(address)",
      "name": "getUserRewards",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grantRole(bytes32,address)",
      "name": "grantRole",
      "description": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleGranted(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "hasRole(bytes32,address)",
      "name": "hasRole",
      "description": "Returns `true` if `account` has been granted `role`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,address,address,address,address,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_tokenController",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_employees",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_miniEmployees",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_cities",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_citiesUniversities",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_citiesStorage",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_baseDeployer",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lockMiniEmployeesInTheUniversity(uint256,uint256[])",
      "name": "lockMiniEmployeesInTheUniversity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_city",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_employees",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "miniEmployeesFlush()",
      "name": "miniEmployeesFlush",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pointsToAddBaseMultiplier()",
      "name": "pointsToAddBaseMultiplier",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceRole(bytes32,address)",
      "name": "renounceRole",
      "description": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "revokeRole(bytes32,address)",
      "name": "revokeRole",
      "description": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [
        "RoleRevoked(bytes32,address,address)"
      ],
      "readOnly": false
    },
    {
      "signature": "sendMiniEmployeeToTheUniversity(uint256,uint256[])",
      "name": "sendMiniEmployeeToTheUniversity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_city",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_employees",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supportsInterface(bytes4)",
      "name": "supportsInterface",
      "description": "See {IERC165-supportsInterface}.",
      "parameterDecorators": [
        {
          "name": "interfaceId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "toggleUniversityRewards()",
      "name": "toggleUniversityRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateMiniFlush(uint8)",
      "name": "updateMiniFlush",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_days",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePointsToBase(uint16)",
      "name": "updatePointsToBase",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_points",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateUniversityXP(uint8)",
      "name": "updateUniversityXP",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_xp",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "upgradeEmployeesWithXP(uint256[])",
      "name": "upgradeEmployeesWithXP",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_employees",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawCityRewards()",
      "name": "withdrawCityRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawFactoriesRewards()",
      "name": "withdrawFactoriesRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawMiniEmployeesRewards()",
      "name": "withdrawMiniEmployeesRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawRelationsRewards()",
      "name": "withdrawRelationsRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}