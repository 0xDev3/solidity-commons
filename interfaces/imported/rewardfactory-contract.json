{
  "schema": "../schema.json",
  "tags": [],
  "name": "RewardFactory",
  "description": "RewardFactory contract.",
  "eventDecorators": [
    {
      "signature": "BaseRewardPoolCreated(address)",
      "name": "BaseRewardPoolCreated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "poolAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ExtraRewardAdded(address,uint256)",
      "name": "ExtraRewardAdded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "reward",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ExtraRewardRemoved(address,uint256)",
      "name": "ExtraRewardRemoved",
      "description": "",
      "parameterDecorators": [
        {
          "name": "reward",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StashAccessGranted(address)",
      "name": "StashAccessGranted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "stash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "VirtualBalanceRewardPoolCreated(address)",
      "name": "VirtualBalanceRewardPoolCreated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "poolAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "activeRewardCount(address)",
      "name": "activeRewardCount",
      "description": "Get active rewards count.",
      "parameterDecorators": [
        {
          "name": "_reward",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint256 number of active rewards.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addActiveReward(address,uint256)",
      "name": "addActiveReward",
      "description": "Adds a new reward to the active list.",
      "parameterDecorators": [
        {
          "name": "_reward",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true on success.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bal()",
      "name": "bal",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createBalRewards(uint256,address)",
      "name": "createBalRewards",
      "description": "Creates a new Reward pool.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "The pid of the pool.",
          "recommendedTypes": []
        },
        {
          "name": "_depositToken",
          "description": "address of the token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createTokenRewards(address,address,address)",
      "name": "createTokenRewards",
      "description": "Create a virtual balance reward pool that mimicks the balance of a pool's main reward contract. used for extra incentive tokens(ex. snx) as well as vebal fees.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "address of the token.",
          "recommendedTypes": []
        },
        {
          "name": "_mainRewards",
          "description": "address of the main reward pool contract.",
          "recommendedTypes": []
        },
        {
          "name": "_rewardPoolOwner",
          "description": "address of the reward pool owner.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address of the new reward pool.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "grantRewardStashAccess(address)",
      "name": "grantRewardStashAccess",
      "description": "Grants rewardAccess to stash. Stash contracts need access to create new Virtual balance pools for extra gauge incentives(ex. snx).",
      "parameterDecorators": [
        {
          "name": "_stash",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "operator()",
      "name": "operator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeActiveReward(address,uint256)",
      "name": "removeActiveReward",
      "description": "Removes active reward.",
      "parameterDecorators": [
        {
          "name": "_reward",
          "description": "The address of the reward contract.",
          "recommendedTypes": []
        },
        {
          "name": "_pid",
          "description": "The pid of the pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true on success.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardActiveList(address,uint256)",
      "name": "rewardActiveList",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}