{"schema":"../schema.json","tags":["compound"],"name":"ConnectCompound","description":"","eventDecorators":[{"signature":"LogBorrow(address,uint256)","name":"LogBorrow","description":"Emitted when a token is locked or the lock on a token is extended. Emitted when `curator` deposited `tokens` on `subgraphDeploymentID` as curation signal. The `curator` receives `signal` amount according to the curation pool bonding curve. An amount of `curationTax` will be collected and burned.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenAmt","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogDeposit(address,uint256)","name":"LogDeposit","description":"Emitted when a token is locked or the lock on a token is extended. Emitted when `curator` deposited `tokens` on `subgraphDeploymentID` as curation signal. The `curator` receives `signal` amount according to the curation pool bonding curve. An amount of `curationTax` will be collected and burned.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenAmt","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogPayback(address)","name":"LogPayback","description":"Emitted when a token is locked or the lock on a token is extended. Emitted when `curator` deposited `tokens` on `subgraphDeploymentID` as curation signal. The `curator` receives `signal` amount according to the curation pool bonding curve. An amount of `curationTax` will be collected and burned.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"LogWithdraw(address)","name":"LogWithdraw","description":"Emitted when a token is locked or the lock on a token is extended. Emitted when `curator` deposited `tokens` on `subgraphDeploymentID` as curation signal. The `curator` receives `signal` amount according to the curation pool bonding curve. An amount of `curationTax` will be collected and burned.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"borrow(address,uint256)","name":"borrow","description":"Borrow ETH/ERC20_Token.","parameterDecorators":[{"name":"token","description":"token address to borrow.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).","recommendedTypes":[]},{"name":"amt","description":"token amount to borrow.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"deposit(address,uint256)","name":"deposit","description":"Deposit ETH/ERC20_Token.","parameterDecorators":[{"name":"token","description":"token address to deposit.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).","recommendedTypes":[]},{"name":"amt","description":"token amount to deposit.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"name()","name":"name","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"payback(address,uint256)","name":"payback","description":"Payback borrowed ETH/ERC20_Token.","parameterDecorators":[{"name":"token","description":"token address to payback.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).","recommendedTypes":[]},{"name":"amt","description":"token amount to payback.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdraw(address,uint256)","name":"withdraw","description":"Withdraw ETH/ERC20_Token.","parameterDecorators":[{"name":"token","description":"token address to withdraw.(For ETH: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).","recommendedTypes":[]},{"name":"amt","description":"token amount to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}