{"schema":"../schema.json","tags":["vesting"],"name":"Harvester","description":"","eventDecorators":[{"signature":"GovernorshipTransferred(address,address)","name":"GovernorshipTransferred","description":"Event for token swap logging.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":true}]},{"signature":"PendingGovernorshipTransfer(address,address)","name":"PendingGovernorshipTransfer","description":"Event for token swap logging.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":true}]},{"signature":"RewardTokenConfigUpdated(address,uint16,uint16,address,uint256,bool)","name":"RewardTokenConfigUpdated","description":"Event for token swap logging.","parameterDecorators":[{"name":"_tokenAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"_allowedSlippageBps","description":"","recommendedTypes":[],"indexed":false},{"name":"_harvestRewardBps","description":"","recommendedTypes":[],"indexed":false},{"name":"_uniswapV2CompatibleAddr","description":"","recommendedTypes":[],"indexed":false},{"name":"_liquidationLimit","description":"","recommendedTypes":[],"indexed":false},{"name":"_doSwapRewardToken","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SupportedStrategyUpdate(address,bool)","name":"SupportedStrategyUpdate","description":"Event for token swap logging.","parameterDecorators":[{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false},{"name":"beneficiary","description":"who got the tokens.","recommendedTypes":[],"indexed":false}]},{"signature":"UniswapUpdated(address)","name":"UniswapUpdated","description":"Event for token swap logging.","parameterDecorators":[{"name":"_address","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"claimGovernance()","name":"claimGovernance","description":"Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"governor()","name":"governor","description":"Returns the address of the current Governor.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"harvest(address)","name":"harvest","description":"Collect reward tokens for a specific strategy. Called from the vault.","parameterDecorators":[{"name":"_strategyAddr","description":"Address of the strategy to collect rewards from.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"harvest()","name":"harvest","description":"Collect reward tokens from all strategies.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"harvestAndSwap()","name":"harvestAndSwap","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"harvestAndSwap(address)","name":"harvestAndSwap","description":"Collect reward tokens for a specific strategy and swap for supported stablecoin via Uniswap. Can be called by anyone. Rewards incentivizing the caller are sent to the caller of this function.","parameterDecorators":[{"name":"_strategyAddr","description":"Address of the strategy to collect rewards from.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"harvestAndSwap(address,address)","name":"harvestAndSwap","description":"Collect reward tokens for a specific strategy and swap for supported stablecoin via Uniswap. Can be called by anyone.","parameterDecorators":[{"name":"_strategyAddr","description":"Address of the strategy to collect rewards from.","recommendedTypes":[]},{"name":"_rewardTo","description":"Address where to send a share of harvest rewards to as an incentive for executing this function.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isGovernor()","name":"isGovernor","description":"Returns true if the caller is the current Governor.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardProceedsAddress()","name":"rewardProceedsAddress","description":"Address receiving rewards proceeds. Initially the Vault contract later will possibly be replaced by another contract that eases out rewards distribution.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"rewardTokenConfigs(address)","name":"rewardTokenConfigs","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"allowedSlippageBps","description":"","recommendedTypes":[],"solidityType":"uint16"},{"name":"harvestRewardBps","description":"","recommendedTypes":[],"solidityType":"uint16"},{"name":"uniswapV2CompatibleAddr","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"doSwapRewardToken","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"liquidationLimit","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setRewardTokenConfig(address,uint16,uint16,address,uint256,bool)","name":"setRewardTokenConfig","description":"Add/update a reward token configuration that holds harvesting config variables.","parameterDecorators":[{"name":"_tokenAddress","description":"Address of the reward token.","recommendedTypes":[]},{"name":"_allowedSlippageBps","description":"uint16 maximum allowed slippage denominated in basis points. Example: 300 == 3% slippage.","recommendedTypes":[]},{"name":"_harvestRewardBps","description":"uint16 amount of reward tokens the caller of the function is rewarded. Example: 100 == 1%.","recommendedTypes":[]},{"name":"_uniswapV2CompatibleAddr","description":"Address Address of a UniswapV2 compatible contract to perform the exchange from reward tokens to stablecoin (currently hard-coded to USDT).","recommendedTypes":[]},{"name":"_liquidationLimit","description":"uint256 Maximum amount of token to be sold per one swap function call. When value is 0 there is no limit.","recommendedTypes":[]},{"name":"_doSwapRewardToken","description":"bool When true the reward token is being swapped. In a need of (temporarily) disabling the swapping of a reward token this needs to be set to false.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRewardsProceedsAddress(address)","name":"setRewardsProceedsAddress","description":"Set the Address receiving rewards proceeds.","parameterDecorators":[{"name":"_rewardProceedsAddress","description":"Address of the reward token.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setSupportedStrategy(address,bool)","name":"setSupportedStrategy","description":"Flags a strategy as supported or not supported one.","parameterDecorators":[{"name":"_strategyAddress","description":"Address of the strategy.","recommendedTypes":[]},{"name":"_isSupported","description":"Bool marking strategy as supported or not supported.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportedStrategies(address)","name":"supportedStrategies","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"swap()","name":"swap","description":"Swap all supported swap tokens for stablecoins via Uniswap.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"swapRewardToken(address)","name":"swapRewardToken","description":"Governance convenience function to swap a specific _rewardToken and send rewards to the vault.","parameterDecorators":[{"name":"_swapToken","description":"Address of the token to swap.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferGovernance(address)","name":"transferGovernance","description":"Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete.","parameterDecorators":[{"name":"_newGovernor","description":"Address of the new Governor.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferToken(address,uint256)","name":"transferToken","description":"Transfer token to governor. Intended for recovering tokens stuck in contract, i.e. mistaken sends.","parameterDecorators":[{"name":"_asset","description":"Address for the asset.","recommendedTypes":[]},{"name":"_amount","description":"Amount of the asset to transfer.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"usdtAddress()","name":"usdtAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"vaultAddress()","name":"vaultAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}