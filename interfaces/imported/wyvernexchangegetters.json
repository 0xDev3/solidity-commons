{
  "schema": "../schema.json",
  "tags": [],
  "name": "WyvernExchangeGetters",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OrderApprovedPartOne(bytes32,address,address,address,uint256,uint256,uint256,uint256,address,uint8,uint8,uint8,address)",
      "name": "OrderApprovedPartOne",
      "description": "Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "hash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "exchange",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "maker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "taker",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "makerRelayerFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "takerRelayerFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "makerProtocolFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "takerProtocolFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "feeRecipient",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "feeMethod",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "side",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "saleKind",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OrderApprovedPartTwo(bytes32,uint8,bytes,bytes,address,bytes,address,uint256,uint256,uint256,uint256,uint256,bool)",
      "name": "OrderApprovedPartTwo",
      "description": "Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "hash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "howToCall",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "calldata",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "replacementPattern",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "staticTarget",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "staticExtradata",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "paymentToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "basePrice",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "extra",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "listingTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "expirationTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "salt",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "orderbookInclusionDesired",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OrderCancelled(bytes32)",
      "name": "OrderCancelled",
      "description": "Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "hash",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OrdersMatched(bytes32,bytes32,address,address,uint256,bytes32)",
      "name": "OrdersMatched",
      "description": "Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "buyHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sellHash",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "maker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "taker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "price",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "metadata",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipRenounced(address)",
      "name": "OwnershipRenounced",
      "description": "Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a new PIE speed is calculated for a market. Emitted when a new `addr` is whitelisted.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "tokenTransferProxy()",
      "name": "tokenTransferProxy",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "staticCall(address,bytes,bytes)",
      "name": "staticCall",
      "description": "Execute a STATICCALL (introduced with Ethereum Metropolis, non-state-modifying external call).",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "Contract to call.",
          "recommendedTypes": []
        },
        {
          "name": "calldata",
          "description": "Calldata (appended to extradata).",
          "recommendedTypes": []
        },
        {
          "name": "extradata",
          "description": "Base data for STATICCALL (probably function selector and argument encoding).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "result",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeMinimumMakerProtocolFee(uint256)",
      "name": "changeMinimumMakerProtocolFee",
      "description": "Change the minimum maker fee paid to the protocol (owner only).",
      "parameterDecorators": [
        {
          "name": "newMinimumMakerProtocolFee",
          "description": "New fee to set in basis points.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMinimumTakerProtocolFee(uint256)",
      "name": "changeMinimumTakerProtocolFee",
      "description": "Change the minimum taker fee paid to the protocol (owner only).",
      "parameterDecorators": [
        {
          "name": "newMinimumTakerProtocolFee",
          "description": "New fee to set in basis points.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "guardedArrayReplace(bytes,bytes,bytes)",
      "name": "guardedArrayReplace",
      "description": "Call guardedArrayReplace - library function exposed for testing.",
      "parameterDecorators": [
        {
          "name": "array",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "desired",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "mask",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minimumTakerProtocolFee()",
      "name": "minimumTakerProtocolFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "testCopyAddress(address)",
      "name": "testCopyAddress",
      "description": "Test write address to bytes.",
      "parameterDecorators": [
        {
          "name": "addr",
          "description": "Address to write.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "testCopy(bytes)",
      "name": "testCopy",
      "description": "Test copy byte array.",
      "parameterDecorators": [
        {
          "name": "arrToCopy",
          "description": "Array to copy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateCurrentPrice_(address[7],uint256[9],uint8,uint8,uint8,uint8,bytes,bytes,bytes)",
      "name": "calculateCurrentPrice_",
      "description": "Call calculateCurrentPrice - Solidity ABI encoding limitation workaround, hopefully temporary.",
      "parameterDecorators": [
        {
          "name": "addrs",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "uints",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "feeMethod",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "side",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "saleKind",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "howToCall",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldata",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "replacementPattern",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "staticExtradata",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeProtocolFeeRecipient(address)",
      "name": "changeProtocolFeeRecipient",
      "description": "Change the protocol fee recipient (owner only).",
      "parameterDecorators": [
        {
          "name": "newProtocolFeeRecipient",
          "description": "New protocol fee recipient address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "orderCalldataCanMatch(bytes,bytes,bytes,bytes)",
      "name": "orderCalldataCanMatch",
      "description": "Return whether or not two orders' calldata specifications can match.",
      "parameterDecorators": [
        {
          "name": "buyCalldata",
          "description": "Buy-side order calldata.",
          "recommendedTypes": []
        },
        {
          "name": "buyReplacementPattern",
          "description": "Buy-side order calldata replacement mask.",
          "recommendedTypes": []
        },
        {
          "name": "sellCalldata",
          "description": "Sell-side order calldata.",
          "recommendedTypes": []
        },
        {
          "name": "sellReplacementPattern",
          "description": "Sell-side order calldata replacement mask.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateFinalPrice(uint8,uint8,uint256,uint256,uint256,uint256)",
      "name": "calculateFinalPrice",
      "description": "Call calculateFinalPrice - library function exposed for testing.",
      "parameterDecorators": [
        {
          "name": "side",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "saleKind",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "basePrice",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "extra",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "listingTime",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "expirationTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "protocolFeeRecipient()",
      "name": "protocolFeeRecipient",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Allows the current owner to relinquish control of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "hashOrder_(address[7],uint256[9],uint8,uint8,uint8,uint8,bytes,bytes,bytes)",
      "name": "hashOrder_",
      "description": "Call hashOrder - Solidity ABI encoding limitation workaround, hopefully temporary.",
      "parameterDecorators": [
        {
          "name": "addrs",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "uints",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "feeMethod",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "side",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "saleKind",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "howToCall",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldata",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "replacementPattern",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "staticExtradata",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ordersCanMatch_(address[14],uint256[18],uint8[8],bytes,bytes,bytes,bytes,bytes,bytes)",
      "name": "ordersCanMatch_",
      "description": "Call ordersCanMatch - Solidity ABI encoding limitation workaround, hopefully temporary.",
      "parameterDecorators": [
        {
          "name": "addrs",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "uints",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "feeMethodsSidesKindsHowToCalls",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldataBuy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldataSell",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "replacementPatternBuy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "replacementPatternSell",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "staticExtradataBuy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "staticExtradataSell",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registry()",
      "name": "registry",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minimumMakerProtocolFee()",
      "name": "minimumMakerProtocolFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hashToSign_(address[7],uint256[9],uint8,uint8,uint8,uint8,bytes,bytes,bytes)",
      "name": "hashToSign_",
      "description": "Call hashToSign - Solidity ABI encoding limitation workaround, hopefully temporary.",
      "parameterDecorators": [
        {
          "name": "addrs",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "uints",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "feeMethod",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "side",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "saleKind",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "howToCall",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldata",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "replacementPattern",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "staticExtradata",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cancelledOrFinalized(bytes32)",
      "name": "cancelledOrFinalized",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "exchangeToken()",
      "name": "exchangeToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "validateOrderParameters_(address[7],uint256[9],uint8,uint8,uint8,uint8,bytes,bytes,bytes)",
      "name": "validateOrderParameters_",
      "description": "Call validateOrderParameters - Solidity ABI encoding limitation workaround, hopefully temporary.",
      "parameterDecorators": [
        {
          "name": "addrs",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "uints",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "feeMethod",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "side",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "saleKind",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "howToCall",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldata",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "replacementPattern",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "staticExtradata",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "INVERSE_BASIS_POINT()",
      "name": "INVERSE_BASIS_POINT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "calculateMatchPrice_(address[14],uint256[18],uint8[8],bytes,bytes,bytes,bytes,bytes,bytes)",
      "name": "calculateMatchPrice_",
      "description": "Call calculateMatchPrice - Solidity ABI encoding limitation workaround, hopefully temporary.",
      "parameterDecorators": [
        {
          "name": "addrs",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "uints",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "feeMethodsSidesKindsHowToCalls",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldataBuy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "calldataSell",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "replacementPatternBuy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "replacementPatternSell",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "staticExtradataBuy",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "staticExtradataSell",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approvedOrders(bytes32)",
      "name": "approvedOrders",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}