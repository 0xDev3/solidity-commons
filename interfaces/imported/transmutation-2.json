{
  "schema": "../schema.json",
  "tags": [],
  "name": "Transmutation",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Cancel(uint256,address)",
      "name": "Cancel",
      "description": "",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Deploy(address,address,address,address)",
      "name": "Deploy",
      "description": "",
      "parameterDecorators": [
        {
          "name": "moloch",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "distributionToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "capitalToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Propose(uint256,address)",
      "name": "Propose",
      "description": "",
      "parameterDecorators": [
        {
          "name": "proposalId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "cancel(uint256)",
      "name": "cancel",
      "description": "Cancel a Moloch proposal. Can be called by any dao member.",
      "parameterDecorators": [
        {
          "name": "_proposalId",
          "description": "The id of the proposal to cancel.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "capitalToken()",
      "name": "capitalToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "distributionToken()",
      "name": "distributionToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "init(address,address,address,address)",
      "name": "init",
      "description": "Constructor.",
      "parameterDecorators": [
        {
          "name": "_moloch",
          "description": "The molochDao to propose token swaps with.",
          "recommendedTypes": []
        },
        {
          "name": "_distributionToken",
          "description": "The token to use as Moloch proposal tributeToken.",
          "recommendedTypes": []
        },
        {
          "name": "_capitalToken",
          "description": "The token to use as Moloch proposal paymentToken.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "Address approved to transfer this contract's _distributionToken.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "isMember(address)",
      "name": "isMember",
      "description": "Returns true if usr has voting shares in the Moloch.",
      "parameterDecorators": [
        {
          "name": "usr",
          "description": "Address to check membership of.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "moloch()",
      "name": "moloch",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "propose(address,uint256,uint256,string)",
      "name": "propose",
      "description": "Makes a proposal taking tribute from this contract in the form of distributionToken and sending _distributionToken to _applicant as proposal payment.",
      "parameterDecorators": [
        {
          "name": "_applicant",
          "description": "Recipient of the proposal's _distributionToken from the moloch.",
          "recommendedTypes": []
        },
        {
          "name": "_giveAmt",
          "description": "Amount of _distributionToken to swap for _getAmt of _distributionToken.",
          "recommendedTypes": []
        },
        {
          "name": "_getAmt",
          "description": "Amount of _capitalToken to swap for _giveAmt of _distributionToken.",
          "recommendedTypes": []
        },
        {
          "name": "_details",
          "description": "Proposal details.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawdistributionToken()",
      "name": "withdrawdistributionToken",
      "description": "Triggers a withdraw of distributionToken from the Moloch.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}