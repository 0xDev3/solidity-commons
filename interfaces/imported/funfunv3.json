{
  "schema": "../schema.json",
  "tags": [],
  "name": "FunFunV3",
  "description": "compile with 0.6.6.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "ETH2Token(address,uint256,uint256)",
      "name": "ETH2Token",
      "description": "ETH2Token generates new vaults and swaps the msg.value to the target tokens.Swapped tokens gets splitted to the token vaults.",
      "parameterDecorators": [
        {
          "name": "tokenAddr",
          "description": "is the token address.",
          "recommendedTypes": []
        },
        {
          "name": "vaultCount",
          "description": "is the count of the walllets that's gonna generated.",
          "recommendedTypes": []
        },
        {
          "name": "amountPerWallet",
          "description": "is the amounts of ETH that's going to swap for per vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "Factory()",
      "name": "Factory",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "Owner()",
      "name": "Owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "Router()",
      "name": "Router",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "Token2ETH(address)",
      "name": "Token2ETH",
      "description": "You can estimate gas with that function but you need a already launched token. Token2ETH empties all the vaults by swapping them to the ETH.Swapped ETH's gets returned to the owner.",
      "parameterDecorators": [
        {
          "name": "tokenAddr",
          "description": "is the token address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "VERSION()",
      "name": "VERSION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "VaultCount(address)",
      "name": "VaultCount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "Vaults(address,uint256)",
      "name": "Vaults",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WETH()",
      "name": "WETH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}