{"schema":"../schema.json","tags":[],"name":"DCAViewer","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when the list state changes. Event that is fired each time someone harvests the strat.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"calculateAmountWithdrawn(address,tuple(address,address,uint256,uint256,uint256,uint256))","name":"calculateAmountWithdrawn","description":"Calculates hoy much |buyToken| has already been withdrawn for a user order. Takes into account fees taken.","parameterDecorators":[{"name":"dca","description":"","recommendedTypes":[]},{"name":"order","description":"","recommendedTypes":[],"parameters":[{"name":"sellToken","description":"","type":"address"},{"name":"buyToken","description":"","type":"address"},{"name":"amountPerSwap","description":"","type":"uint256"},{"name":"numberOfSwaps","description":"","type":"uint256"},{"name":"startingPeriod","description":"","type":"uint256"},{"name":"lastPeriodWithdrawal","description":"","type":"uint256"}]}],"returnDecorators":[{"name":"amountWithdrawn","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"emergency(address)","name":"emergency","description":"","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getOrder(address,address,uint256)","name":"getOrder","description":"","parameterDecorators":[{"name":"dca","description":"","recommendedTypes":[]},{"name":"userAddress","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"getSwapStateAmountToReduce(address,address,address,uint256)","name":"getSwapStateAmountToReduce","description":"","parameterDecorators":[{"name":"dca","description":"","recommendedTypes":[]},{"name":"_sellToken","description":"","recommendedTypes":[]},{"name":"_buyToken","description":"","recommendedTypes":[]},{"name":"_period","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getSwapStateExchangeRate(address,address,address,uint256)","name":"getSwapStateExchangeRate","description":"","parameterDecorators":[{"name":"dca","description":"","recommendedTypes":[]},{"name":"_sellToken","description":"","recommendedTypes":[]},{"name":"_buyToken","description":"","recommendedTypes":[]},{"name":"_period","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserOrdersWithExtras(address,address)","name":"getUserOrdersWithExtras","description":"Returns the orders for a user with more information that can be shown on a front end. Might not work well if the user has too many orders, it's just for short-term convenience.","parameterDecorators":[{"name":"dca","description":"","recommendedTypes":[]},{"name":"userAddress","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"tuple[]"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256[]"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256[]"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint256[]"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}