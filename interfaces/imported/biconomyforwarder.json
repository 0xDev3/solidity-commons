{
  "schema": "../schema.json",
  "tags": [],
  "name": "BiconomyForwarder",
  "description": "BiconomyForwarder. - Inherits the ERC20ForwarderRequest struct- Verifies EIP712 signatures- Verifies personalSign signatures- Implements 2D nonces... each Tx has a BatchId and a BatchNonce- Keeps track of highest BatchId used by a given address, to assist in encoding of transactions client-side- maintains a list of verified domain seperators. A trusted forwarder for Biconomy relayed meta transactions.",
  "eventDecorators": [
    {
      "signature": "DomainRegistered(bytes32,bytes)",
      "name": "DomainRegistered",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "domainSeparator",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "domainValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "event Withdrawal emit on every SafeWithdraw.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "EIP712_DOMAIN_TYPE()",
      "name": "EIP712_DOMAIN_TYPE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "REQUEST_TYPEHASH()",
      "name": "REQUEST_TYPEHASH",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "domains(bytes32)",
      "name": "domains",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "executeEIP712(tuple(address,address,address,uint256,uint256,uint256,uint256,uint256,bytes),bytes32,bytes)",
      "name": "executeEIP712",
      "description": "verifies the call is valid by calling _verifySigEIP712executes the forwarded call if validupdates the nonce after.",
      "parameterDecorators": [
        {
          "name": "req",
          "description": ": request being executed.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "from",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "to",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "token",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "txGas",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenGasPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "batchId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "batchNonce",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "deadline",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "data",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "domainSeparator",
          "description": ": the domain separator presented to the user when signing.",
          "recommendedTypes": []
        },
        {
          "name": "sig",
          "description": ": the signature generated by the user's wallet.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success",
          "description": ": false if call fails. true otherwise.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "ret",
          "description": ": any return data from the call.",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "executePersonalSign(tuple(address,address,address,uint256,uint256,uint256,uint256,uint256,bytes),bytes)",
      "name": "executePersonalSign",
      "description": "verifies the call is valid by calling _verifySigPersonalSignexecutes the forwarded call if validupdates the nonce after.",
      "parameterDecorators": [
        {
          "name": "req",
          "description": ": request being executed.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "from",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "to",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "token",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "txGas",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenGasPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "batchId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "batchNonce",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "deadline",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "data",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "sig",
          "description": ": the signature generated by the user's wallet.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success",
          "description": ": false if call fails. true otherwise.",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "ret",
          "description": ": any return data from the call.",
          "recommendedTypes": [],
          "solidityType": "bytes"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getNonce(address,uint256)",
      "name": "getNonce",
      "description": "returns a value from the nonces 2d mapping.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": ": the user address.",
          "recommendedTypes": []
        },
        {
          "name": "batchId",
          "description": ": the key of the user's batch being queried.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "nonce : the number of transaction made within said batch.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "true if `msg.sender` is the owner of the contract.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the address of the owner.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "registerDomainSeparator(string,string)",
      "name": "registerDomainSeparator",
      "description": "registers domain seperators, maintaining that all domain seperators used for EIP712 forward requests use... ... the address of this contract and the chainId of the chain this contract is deployed to.",
      "parameterDecorators": [
        {
          "name": "name",
          "description": ": name of dApp/dApp fee proxy.",
          "recommendedTypes": []
        },
        {
          "name": "version",
          "description": ": version of dApp/dApp fee proxy.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore. Allows the current owner to relinquish control of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "verifyEIP712(tuple(address,address,address,uint256,uint256,uint256,uint256,uint256,bytes),bytes32,bytes)",
      "name": "verifyEIP712",
      "description": "an external function which exposes the internal _verifySigEIP712 method.",
      "parameterDecorators": [
        {
          "name": "req",
          "description": ": request being verified.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "from",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "to",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "token",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "txGas",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenGasPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "batchId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "batchNonce",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "deadline",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "data",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "domainSeparator",
          "description": ": the domain separator presented to the user when signing.",
          "recommendedTypes": []
        },
        {
          "name": "sig",
          "description": ": the signature generated by the user's wallet.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "verifyPersonalSign(tuple(address,address,address,uint256,uint256,uint256,uint256,uint256,bytes),bytes)",
      "name": "verifyPersonalSign",
      "description": "an external function which exposes the internal _verifySigPersonSign method.",
      "parameterDecorators": [
        {
          "name": "req",
          "description": ": request being verified.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "from",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "to",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "token",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "txGas",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tokenGasPrice",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "batchId",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "batchNonce",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "deadline",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "data",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "sig",
          "description": ": the signature generated by the user's wallet.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}