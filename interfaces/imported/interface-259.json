{"schema":"../schema.json","tags":["voting"],"name":"GenesisProtocol","description":"GenesisProtocol implementation -an organization's voting machine scheme.","eventDecorators":[{"signature":"CancelProposal(bytes32,address)","name":"CancelProposal","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"CancelVoting(bytes32,address,address)","name":"CancelVoting","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_voter","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ConfidenceLevelChange(bytes32,uint256)","name":"ConfidenceLevelChange","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_confidenceThreshold","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ExecuteProposal(bytes32,address,uint256,uint256)","name":"ExecuteProposal","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_decision","description":"","recommendedTypes":[],"indexed":false},{"name":"_totalReputation","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ExpirationCallBounty(bytes32,address,uint256)","name":"ExpirationCallBounty","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_beneficiary","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"GPExecuteProposal(bytes32,uint8)","name":"GPExecuteProposal","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_executionState","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewProposal(bytes32,address,uint256,address,bytes32)","name":"NewProposal","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_numOfChoices","description":"","recommendedTypes":[],"indexed":false},{"name":"_proposer","description":"","recommendedTypes":[],"indexed":false},{"name":"_paramsHash","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Redeem(bytes32,address,address,uint256)","name":"Redeem","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_beneficiary","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RedeemDaoBounty(bytes32,address,address,uint256)","name":"RedeemDaoBounty","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_beneficiary","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RedeemReputation(bytes32,address,address,uint256)","name":"RedeemReputation","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_beneficiary","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Stake(bytes32,address,address,uint256,uint256)","name":"Stake","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_staker","description":"","recommendedTypes":[],"indexed":true},{"name":"_vote","description":"","recommendedTypes":[],"indexed":false},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StateChange(bytes32,uint8)","name":"StateChange","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_proposalState","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"VoteProposal(bytes32,address,address,uint256,uint256)","name":"VoteProposal","description":"Triggers on new deposit call.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"_organization","description":"","recommendedTypes":[],"indexed":true},{"name":"_voter","description":"","recommendedTypes":[],"indexed":true},{"name":"_vote","description":"","recommendedTypes":[],"indexed":false},{"name":"_reputation","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"DELEGATION_HASH_EIP712()","name":"DELEGATION_HASH_EIP712","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"NO()","name":"NO","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"NUM_OF_CHOICES()","name":"NUM_OF_CHOICES","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"YES()","name":"YES","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"averagesDownstakesOfBoosted(bytes32)","name":"averagesDownstakesOfBoosted","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"calcExecuteCallBounty(bytes32)","name":"calcExecuteCallBounty","description":"calcExecuteCallBounty calculate the execute boosted call bounty.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"cancelVote(bytes32)","name":"cancelVote","description":"Cancel the vote of the msg.sender. cancel vote is not allow in genesisProtocol so this function doing nothing. This function is here in order to comply to the IntVoteInterface .","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"execute(bytes32)","name":"execute","description":"execute check if the proposal has been decided, and if so, execute the proposal.","parameterDecorators":[{"name":"_proposalId","description":"the id of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"executeBoosted(bytes32)","name":"executeBoosted","description":"executeBoosted try to execute a boosted or QuietEndingPeriod proposal if it is expired it rewards the msg.sender with P % of the proposal's upstakes upon a successful call to this function. P = t/150, where t is the number of seconds passed since the the proposal's timeout. P is capped by 10%.","parameterDecorators":[{"name":"_proposalId","description":"the id of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"expirationCallBounty","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"getAllowedRangeOfChoices()","name":"getAllowedRangeOfChoices","description":"getAllowedRangeOfChoices returns the allowed range of choices for a voting machine.","parameterDecorators":[],"returnDecorators":[{"name":"min","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"max","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getNumberOfChoices(bytes32)","name":"getNumberOfChoices","description":"getNumberOfChoices returns the number of choices possible in this proposal.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getParametersHash(uint256[11],address)","name":"getParametersHash","description":"hashParameters returns a hash of the given parameters.","parameterDecorators":[{"name":"_params","description":"","recommendedTypes":[]},{"name":"_voteOnBehalf","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getProposalOrganization(bytes32)","name":"getProposalOrganization","description":"getProposalOrganization return the organizationId for a given proposal.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"getProposalTimes(bytes32)","name":"getProposalTimes","description":"getProposalTimes returns proposals times variables.","parameterDecorators":[{"name":"_proposalId","description":"id of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"times","description":"","recommendedTypes":[],"solidityType":"uint256[3]"}],"emittableEvents":[],"readOnly":true},{"signature":"getStaker(bytes32,address)","name":"getStaker","description":"getStaker return the vote and stake amount for a given proposal and staker.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]},{"name":"_staker","description":"staker address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"isAbstainAllow()","name":"isAbstainAllow","description":"isAbstainAllow returns if the voting machine allow abstain (0).","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isVotable(bytes32)","name":"isVotable","description":"isVotable check if the proposal is votable.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"orgBoostedProposalsCnt(bytes32)","name":"orgBoostedProposalsCnt","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"organizations(bytes32)","name":"organizations","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"parameters(bytes32)","name":"parameters","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"queuedVoteRequiredPercentage","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"queuedVotePeriodLimit","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"boostedVotePeriodLimit","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"preBoostedVotePeriodLimit","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"thresholdConst","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"limitExponentValue","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"quietEndingPeriod","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"proposingRepReward","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"votersReputationLossRatio","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"minimumDaoBounty","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"daoBountyConst","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"activationTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"voteOnBehalf","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalStatus(bytes32)","name":"proposalStatus","description":"proposalStatus return the total votes and stakes for a given proposal.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"proposals(bytes32)","name":"proposals","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"organizationId","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"callbacks","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"state","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"winningVote","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"proposer","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"currentBoostedVotePeriodLimit","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"paramsHash","description":"","recommendedTypes":[],"solidityType":"bytes32"},{"name":"daoBountyRemain","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"daoBounty","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"totalStakes","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"confidenceThreshold","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"secondsFromTimeOutTillExecuteBoosted","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"daoRedeemItsWinnings","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalsCnt()","name":"proposalsCnt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"propose(uint256,bytes32,address,address)","name":"propose","description":"register a new proposal with the given parameters. Every proposal has a unique ID which is being generated by calculating keccak256 of a incremented counter.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"_paramsHash","description":"parameters hash.","recommendedTypes":[]},{"name":"_proposer","description":"address.","recommendedTypes":[]},{"name":"_organization","description":"address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"redeem(bytes32,address)","name":"redeem","description":"redeem a reward for a successful stake, vote or proposing. The function use a beneficiary address as a parameter (and not msg.sender) to enable users to redeem on behalf of someone else.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]},{"name":"_beneficiary","description":"- the beneficiary address.","recommendedTypes":[]}],"returnDecorators":[{"name":"rewards","description":"","recommendedTypes":[],"solidityType":"uint256[3]"}],"emittableEvents":[],"readOnly":false},{"signature":"redeemDaoBounty(bytes32,address)","name":"redeemDaoBounty","description":"redeemDaoBounty a reward for a successful stake. The function use a beneficiary address as a parameter (and not msg.sender) to enable users to redeem on behalf of someone else.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]},{"name":"_beneficiary","description":"- the beneficiary address.","recommendedTypes":[]}],"returnDecorators":[{"name":"redeemedAmount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"potentialAmount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"score(bytes32)","name":"score","description":"score return the proposal score.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setParameters(uint256[11],address)","name":"setParameters","description":"hash the parameters, save them if necessary, and return the hash value.","parameterDecorators":[{"name":"_params","description":"a parameters array _params[0] - _queuedVoteRequiredPercentage, _params[1] - _queuedVotePeriodLimit, //the time limit for a proposal to be in an absolute voting mode. _params[2] - _boostedVotePeriodLimit, //the time limit for a proposal to be in an relative voting mode. _params[3] - _preBoostedVotePeriodLimit, //the time limit for a proposal to be in an preparation state (stable) before boosted. _params[4] -_thresholdConst _params[5] -_quietEndingPeriod _params[6] -_proposingRepReward _params[7] -_votersReputationLossRatio _params[8] -_minimumDaoBounty _params[9] -_daoBountyConst _params[10] -_activationTime.","recommendedTypes":[]},{"name":"_voteOnBehalf","description":"- authorized to vote on behalf of others.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":false},{"signature":"shouldBoost(bytes32)","name":"shouldBoost","description":"shouldBoost check if a proposal should be shifted to boosted phase.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"stake(bytes32,uint256,uint256)","name":"stake","description":"staking function.","parameterDecorators":[{"name":"_proposalId","description":"id of the proposal.","recommendedTypes":[]},{"name":"_vote","description":"NO(2) or YES(1).","recommendedTypes":[]},{"name":"_amount","description":"the betting amount.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"stakeWithSignature(bytes32,uint256,uint256,uint256,uint256,bytes)","name":"stakeWithSignature","description":"stakeWithSignature function.","parameterDecorators":[{"name":"_proposalId","description":"id of the proposal.","recommendedTypes":[]},{"name":"_vote","description":"NO(2) or YES(1).","recommendedTypes":[]},{"name":"_amount","description":"the betting amount.","recommendedTypes":[]},{"name":"_nonce","description":"nonce value ,it is part of the signature to ensure that a signature can be received only once.","recommendedTypes":[]},{"name":"_signatureType","description":"signature type 1 - for web3.eth.sign 2 - for eth_signTypedData according to EIP #712.","recommendedTypes":[]},{"name":"_signature","description":"- signed data by the staker.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"stakesNonce(address)","name":"stakesNonce","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"stakingToken()","name":"stakingToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"state(bytes32)","name":"state","description":"voteStake return the state for a given proposal.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"threshold(bytes32,bytes32)","name":"threshold","description":"threshold return the organization's score threshold which required by a proposal to shift to boosted state. This threshold is dynamically set and it depend on the number of boosted proposal.","parameterDecorators":[{"name":"_paramsHash","description":"the organization parameters hash.","recommendedTypes":[]},{"name":"_organizationId","description":"the organization identifier.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"vote(bytes32,uint256,uint256,address)","name":"vote","description":"voting function.","parameterDecorators":[{"name":"_proposalId","description":"id of the proposal.","recommendedTypes":[]},{"name":"_vote","description":"NO(2) or YES(1).","recommendedTypes":[]},{"name":"_amount","description":"the reputation amount to vote with . if _amount == 0 it will use all voter reputation.","recommendedTypes":[]},{"name":"_voter","description":"voter address.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"voteInfo(bytes32,address)","name":"voteInfo","description":"voteInfo returns the vote and the amount of reputation of the user committed to this proposal.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]},{"name":"_voter","description":"the address of the voter.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"voteStake(bytes32,uint256)","name":"voteStake","description":"voteStake return the amount stakes for a given proposal and vote.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]},{"name":"_vote","description":"vote number.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"voteStatus(bytes32,uint256)","name":"voteStatus","description":"voteStatus returns the reputation voted for a proposal for a specific voting choice.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]},{"name":"_choice","description":"the index in the.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"winningVote(bytes32)","name":"winningVote","description":"voteStake return the winningVote for a given proposal.","parameterDecorators":[{"name":"_proposalId","description":"the ID of the proposal.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}