{"schema":"../schema.json","tags":["compound"],"name":"Comptroller","description":"Compound's Comptroller Contract.","eventDecorators":[{"signature":"MarketListed(address)","name":"MarketListed","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketEntered(address,address)","name":"MarketEntered","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MarketExited(address,address)","name":"MarketExited","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewCloseFactor(uint256,uint256)","name":"NewCloseFactor","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"oldCloseFactorMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newCloseFactorMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewCollateralFactor(address,uint256,uint256)","name":"NewCollateralFactor","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"cToken","description":"","recommendedTypes":[],"indexed":false},{"name":"oldCollateralFactorMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newCollateralFactorMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewLiquidationIncentive(uint256,uint256)","name":"NewLiquidationIncentive","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"oldLiquidationIncentiveMantissa","description":"","recommendedTypes":[],"indexed":false},{"name":"newLiquidationIncentiveMantissa","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewMaxAssets(uint256,uint256)","name":"NewMaxAssets","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"oldMaxAssets","description":"","recommendedTypes":[],"indexed":false},{"name":"newMaxAssets","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPriceOracle(address,address)","name":"NewPriceOracle","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"oldPriceOracle","description":"","recommendedTypes":[],"indexed":false},{"name":"newPriceOracle","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewPauseGuardian(address,address)","name":"NewPauseGuardian","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"oldPauseGuardian","description":"","recommendedTypes":[],"indexed":false},{"name":"newPauseGuardian","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ActionPaused(string,bool)","name":"ActionPaused","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"action","description":"","recommendedTypes":[],"indexed":false},{"name":"pauseState","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Failure(uint256,uint256,uint256)","name":"Failure","description":"Emitted when a new `addr` is whitelisted.","parameterDecorators":[{"name":"error","description":"","recommendedTypes":[],"indexed":false},{"name":"info","description":"","recommendedTypes":[],"indexed":false},{"name":"detail","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"isComptroller()","name":"isComptroller","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"_become(address)","name":"_become","description":"","parameterDecorators":[{"name":"unitroller","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"repayBorrowVerify(address,address,address,uint256,uint256)","name":"repayBorrowVerify","description":"Validates repayBorrow and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cToken","description":"Asset being repaid.","recommendedTypes":[]},{"name":"payer","description":"The address repaying the borrow.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of underlying being repaid.","recommendedTypes":[]},{"name":"borrowerIndex","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"repayBorrowAllowed(address,address,address,uint256)","name":"repayBorrowAllowed","description":"Checks if the account should be allowed to repay a borrow in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the repay against.","recommendedTypes":[]},{"name":"payer","description":"The account which would repay the asset.","recommendedTypes":[]},{"name":"borrower","description":"The account which would borrowed the asset.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of the underlying asset the account would repay.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"pauseGuardian()","name":"pauseGuardian","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingAdmin()","name":"pendingAdmin","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"_setSeizePaused(bool)","name":"_setSeizePaused","description":"","parameterDecorators":[{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_setCloseFactor(uint256)","name":"_setCloseFactor","description":"Sets the closeFactor used when liquidating borrows. Admin function to set closeFactor.","parameterDecorators":[{"name":"newCloseFactorMantissa","description":"New close factor, scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"mintVerify(address,address,uint256,uint256)","name":"mintVerify","description":"Validates mint and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cToken","description":"Asset being minted.","recommendedTypes":[]},{"name":"minter","description":"The address minting the tokens.","recommendedTypes":[]},{"name":"mintAmount","description":"The amount of the underlying asset being minted.","recommendedTypes":[]},{"name":"mintTokens","description":"The number of tokens being minted.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"liquidateBorrowVerify(address,address,address,address,uint256,uint256)","name":"liquidateBorrowVerify","description":"Validates liquidateBorrow and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"cTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of underlying being repaid.","recommendedTypes":[]},{"name":"seizeTokens","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"liquidationIncentiveMantissa()","name":"liquidationIncentiveMantissa","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"mintAllowed(address,address,uint256)","name":"mintAllowed","description":"Checks if the account should be allowed to mint tokens in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the mint against.","recommendedTypes":[]},{"name":"minter","description":"The account which would get the minted tokens.","recommendedTypes":[]},{"name":"mintAmount","description":"The amount of underlying being supplied to the market in exchange for tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setLiquidationIncentive(uint256)","name":"_setLiquidationIncentive","description":"Sets liquidationIncentive. Admin function to set liquidationIncentive.","parameterDecorators":[{"name":"newLiquidationIncentiveMantissa","description":"New liquidationIncentive scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"redeemVerify(address,address,uint256,uint256)","name":"redeemVerify","description":"Validates redeem and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cToken","description":"Asset being redeemed.","recommendedTypes":[]},{"name":"redeemer","description":"The address redeeming the tokens.","recommendedTypes":[]},{"name":"redeemAmount","description":"The amount of the underlying asset being redeemed.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of tokens being redeemed.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"_setPriceOracle(address)","name":"_setPriceOracle","description":"Sets a new price oracle for the comptroller. Admin function to set a new price oracle.","parameterDecorators":[{"name":"newOracle","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setBorrowPaused(bool)","name":"_setBorrowPaused","description":"","parameterDecorators":[{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"borrowVerify(address,address,uint256)","name":"borrowVerify","description":"Validates borrow and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cToken","description":"Asset whose underlying is being borrowed.","recommendedTypes":[]},{"name":"borrower","description":"The address borrowing the underlying.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of the underlying asset requested to borrow.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"mintGuardianPaused()","name":"mintGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getAccountLiquidity(address)","name":"getAccountLiquidity","description":"Determine the current account liquidity wrt collateral requirements.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"_setPauseGuardian(address)","name":"_setPauseGuardian","description":"Admin function to change the Pause Guardian.","parameterDecorators":[{"name":"newPauseGuardian","description":"The address of the new Pause Guardian.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"liquidateBorrowAllowed(address,address,address,address,uint256)","name":"liquidateBorrowAllowed","description":"Checks if the liquidation should be allowed to occur.","parameterDecorators":[{"name":"cTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"cTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of underlying being repaid.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"transferVerify(address,address,address,uint256)","name":"transferVerify","description":"Validates transfer and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cToken","description":"Asset being transferred.","recommendedTypes":[]},{"name":"src","description":"The account which sources the tokens.","recommendedTypes":[]},{"name":"dst","description":"The account which receives the tokens.","recommendedTypes":[]},{"name":"transferTokens","description":"The number of cTokens to transfer.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"seizeVerify(address,address,address,address,uint256)","name":"seizeVerify","description":"Validates seize and reverts on rejection. May emit logs.","parameterDecorators":[{"name":"cTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"cTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"seizeTokens","description":"The number of collateral tokens to seize.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"oracle()","name":"oracle","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferGuardianPaused()","name":"transferGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"markets(address)","name":"markets","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"isListed","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"collateralFactorMantissa","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"_setTransferPaused(bool)","name":"_setTransferPaused","description":"","parameterDecorators":[{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"checkMembership(address,address)","name":"checkMembership","description":"Returns whether the given account is entered in the given asset.","parameterDecorators":[{"name":"account","description":"The address of the account to check.","recommendedTypes":[]},{"name":"cToken","description":"The cToken to check.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"maxAssets()","name":"maxAssets","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"borrowGuardianPaused()","name":"borrowGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"_setMintPaused(bool)","name":"_setMintPaused","description":"","parameterDecorators":[{"name":"state","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"_supportMarket(address)","name":"_supportMarket","description":"Add the market to the markets mapping and set it as listed. Admin function to set isListed and add support for the market.","parameterDecorators":[{"name":"cToken","description":"The address of the market (token) to list.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"getAssetsIn(address)","name":"getAssetsIn","description":"Returns the assets an account has entered.","parameterDecorators":[{"name":"account","description":"The address of the account to pull assets for.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"seizeGuardianPaused()","name":"seizeGuardianPaused","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"comptrollerImplementation()","name":"comptrollerImplementation","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferAllowed(address,address,address,uint256)","name":"transferAllowed","description":"Checks if the account should be allowed to transfer tokens in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the transfer against.","recommendedTypes":[]},{"name":"src","description":"The account which sources the tokens.","recommendedTypes":[]},{"name":"dst","description":"The account which receives the tokens.","recommendedTypes":[]},{"name":"transferTokens","description":"The number of cTokens to transfer.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"enterMarkets(address[])","name":"enterMarkets","description":"Add assets to be included in account liquidity calculation.","parameterDecorators":[{"name":"cTokens","description":"The list of addresses of the cToken markets to be enabled.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":false},{"signature":"liquidateCalculateSeizeTokens(address,address,uint256)","name":"liquidateCalculateSeizeTokens","description":"Calculate number of tokens of collateral asset to seize given an underlying amount. Used in liquidation (called in cToken.liquidateBorrowFresh).","parameterDecorators":[{"name":"cTokenBorrowed","description":"The address of the borrowed cToken.","recommendedTypes":[]},{"name":"cTokenCollateral","description":"The address of the collateral cToken.","recommendedTypes":[]},{"name":"repayAmount","description":"The amount of cTokenBorrowed underlying to convert into cTokenCollateral tokens.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"seizeAllowed(address,address,address,address,uint256)","name":"seizeAllowed","description":"Checks if the seizing of assets should be allowed to occur.","parameterDecorators":[{"name":"cTokenCollateral","description":"Asset which was used as collateral and will be seized.","recommendedTypes":[]},{"name":"cTokenBorrowed","description":"Asset which was borrowed by the borrower.","recommendedTypes":[]},{"name":"liquidator","description":"The address repaying the borrow and seizing the collateral.","recommendedTypes":[]},{"name":"borrower","description":"The address of the borrower.","recommendedTypes":[]},{"name":"seizeTokens","description":"The number of collateral tokens to seize.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"_setMaxAssets(uint256)","name":"_setMaxAssets","description":"Sets maxAssets which controls how many markets can be entered. Admin function to set maxAssets.","parameterDecorators":[{"name":"newMaxAssets","description":"New max assets.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"borrowAllowed(address,address,uint256)","name":"borrowAllowed","description":"Checks if the account should be allowed to borrow the underlying asset of the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the borrow against.","recommendedTypes":[]},{"name":"borrower","description":"The account which would borrow the asset.","recommendedTypes":[]},{"name":"borrowAmount","description":"The amount of underlying the account would borrow.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"accountAssets(address,uint256)","name":"accountAssets","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingComptrollerImplementation()","name":"pendingComptrollerImplementation","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"_setCollateralFactor(address,uint256)","name":"_setCollateralFactor","description":"Sets the collateralFactor for a market. Admin function to set per-market collateralFactor.","parameterDecorators":[{"name":"cToken","description":"The market to set the factor on.","recommendedTypes":[]},{"name":"newCollateralFactorMantissa","description":"The new collateral factor, scaled by 1e18.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"closeFactorMantissa()","name":"closeFactorMantissa","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"redeemAllowed(address,address,uint256)","name":"redeemAllowed","description":"Checks if the account should be allowed to redeem tokens in the given market.","parameterDecorators":[{"name":"cToken","description":"The market to verify the redeem against.","recommendedTypes":[]},{"name":"redeemer","description":"The account which would redeem the tokens.","recommendedTypes":[]},{"name":"redeemTokens","description":"The number of cTokens to exchange for the underlying asset in the market.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"exitMarket(address)","name":"exitMarket","description":"Removes asset from sender's account liquidity calculation. Sender must not have an outstanding borrow balance in the asset, or be providing neccessary collateral for an outstanding borrow.","parameterDecorators":[{"name":"cTokenAddress","description":"The address of the asset to be removed.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"admin()","name":"admin","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}