{
  "schema": "../schema.json",
  "tags": [
    "locking"
  ],
  "name": "StakingProxy",
  "description": "#dev The RigoBlock Staking contract.",
  "eventDecorators": [
    {
      "signature": "AuthorizedAddressAdded(address,address)",
      "name": "AuthorizedAddressAdded",
      "description": "Emitted when the state of a reserve is updated.",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AuthorizedAddressRemoved(address,address)",
      "name": "AuthorizedAddressRemoved",
      "description": "Emitted when the state of a reserve is updated.",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "caller",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when the state of a reserve is updated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "StakingContractAttachedToProxy(address)",
      "name": "StakingContractAttachedToProxy",
      "description": "Emitted when the state of a reserve is updated.",
      "parameterDecorators": [
        {
          "name": "newStakingContractAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "StakingContractDetachedFromProxy()",
      "name": "StakingContractDetachedFromProxy",
      "description": "Emitted when the state of a reserve is updated.",
      "parameterDecorators": []
    }
  ],
  "functionDecorators": [
    {
      "signature": "addAuthorizedAddress(address)",
      "name": "addAuthorizedAddress",
      "description": "Authorizes an address.",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "Address to authorize.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "aggregatedStatsByEpoch(uint256)",
      "name": "aggregatedStatsByEpoch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "rewardsAvailable",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "numPoolsToFinalize",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalFeesCollected",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalWeightedStake",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalRewardsFinalized",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assertValidStorageParams()",
      "name": "assertValidStorageParams",
      "description": "Asserts that an epoch is between 5 and 90 days long.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "attachStakingContract(address)",
      "name": "attachStakingContract",
      "description": "Attach a staking contract; future calls will be delegated to the staking contract. Note that this is callable only by an authorized address.",
      "parameterDecorators": [
        {
          "name": "_stakingContract",
          "description": "Address of staking contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "authorities(uint256)",
      "name": "authorities",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "authorized(address)",
      "name": "authorized",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "batchExecute(bytes[])",
      "name": "batchExecute",
      "description": "Batch executes a series of calls to the staking contract.",
      "parameterDecorators": [
        {
          "name": "data",
          "description": "An array of data that encodes a sequence of functions to call in the staking contracts.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "batchReturnData",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cobbDouglasAlphaDenominator()",
      "name": "cobbDouglasAlphaDenominator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "cobbDouglasAlphaNumerator()",
      "name": "cobbDouglasAlphaNumerator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currentEpoch()",
      "name": "currentEpoch",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "currentEpochStartTimeInSeconds()",
      "name": "currentEpochStartTimeInSeconds",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "detachStakingContract()",
      "name": "detachStakingContract",
      "description": "Detach the current staking contract. Note that this is callable only by an authorized address.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "epochDurationInSeconds()",
      "name": "epochDurationInSeconds",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAuthorizedAddresses()",
      "name": "getAuthorizedAddresses",
      "description": "Gets all authorized addresses.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Array of authorized addresses.",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "grgReservedForPoolRewards()",
      "name": "grgReservedForPoolRewards",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minimumPoolStake()",
      "name": "minimumPoolStake",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolIdByRbPoolAccount(address)",
      "name": "poolIdByRbPoolAccount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolStatsByEpoch(bytes32,uint256)",
      "name": "poolStatsByEpoch",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "feesCollected",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "weightedStake",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "membersStake",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeAuthorizedAddress(address)",
      "name": "removeAuthorizedAddress",
      "description": "Removes authorizion of an address.",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "Address to remove authorization from.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeAuthorizedAddressAtIndex(address,uint256)",
      "name": "removeAuthorizedAddressAtIndex",
      "description": "Removes authorizion of an address.",
      "parameterDecorators": [
        {
          "name": "target",
          "description": "Address to remove authorization from.",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "Index of target in authorities array.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "rewardDelegatedStakeWeight()",
      "name": "rewardDelegatedStakeWeight",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rewardsByPoolId(bytes32)",
      "name": "rewardsByPoolId",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stakingContract()",
      "name": "stakingContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Change the owner of this contract.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "New owner address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "validPops(address)",
      "name": "validPops",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}