{
  "schema": "../schema.json",
  "tags": [],
  "name": "Certification",
  "description": "",
  "eventDecorators": [
    {
      "signature": "certificateCreated(uint256)",
      "name": "certificateCreated",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "validationNumber",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "deployed(string)",
      "name": "deployed",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "AddCertificate(string)",
      "name": "AddCertificate",
      "description": "Adding a certificate as Certification House with NO -unnecessary- authentication.",
      "parameterDecorators": [
        {
          "name": "_name",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "CheckCertificate(uint256)",
      "name": "CheckCertificate",
      "description": "Public function works with existing. outputs zero or empty, does not throw an error.",
      "parameterDecorators": [
        {
          "name": "_num",
          "description": ":certificateNumber.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "House",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "Certificate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "Person",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "GiveCertificate(uint64,string)",
      "name": "GiveCertificate",
      "description": "Adding a receiver to a certificate. Input required.",
      "parameterDecorators": [
        {
          "name": "_certificate",
          "description": ":a number that defines certificates. Starts from 0 & goes up.",
          "recommendedTypes": []
        },
        {
          "name": "_name",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "Number",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "SeeCertificates(uint64)",
      "name": "SeeCertificates",
      "description": "blockchain based authentication.Input required.",
      "parameterDecorators": [
        {
          "name": "_certificate",
          "description": ":requires existing certificateNumber.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "Certificate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "validationNumber",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "Count",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "firstTimestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastTimestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "SeePeople(uint64,uint64)",
      "name": "SeePeople",
      "description": "blockchain based authentication.",
      "parameterDecorators": [
        {
          "name": "_certificate",
          "description": ":requires existing certificateNumber.",
          "recommendedTypes": []
        },
        {
          "name": "_person",
          "description": ":requires existing receiver.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "Person",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "Certificate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}