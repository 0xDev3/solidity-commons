{"schema":"../schema.json","tags":["oracles","tokens","liquidity","curve finance"],"name":"MinterAmm","description":"","eventDecorators":[{"signature":"AMMInitialized(address,address)","name":"AMMInitialized","description":"Emitted when the amm is created. Token transfer event.","parameterDecorators":[{"name":"lpToken","description":"","recommendedTypes":[],"indexed":false},{"name":"priceOracle","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"BTokensBought(address,uint256,uint256)","name":"BTokensBought","description":"Emitted when a user buys bTokens from the AMM. Token transfer event.","parameterDecorators":[{"name":"buyer","description":"","recommendedTypes":[],"indexed":false},{"name":"bTokensBought","description":"","recommendedTypes":[],"indexed":false},{"name":"collateralPaid","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"BTokensSold(address,uint256,uint256)","name":"BTokensSold","description":"Emitted when a user sells bTokens to the AMM. Token transfer event.","parameterDecorators":[{"name":"seller","description":"","recommendedTypes":[],"indexed":false},{"name":"bTokensSold","description":"","recommendedTypes":[],"indexed":false},{"name":"collateralPaid","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"CodeAddressUpdated(address)","name":"CodeAddressUpdated","description":"Token transfer event.","parameterDecorators":[{"name":"newAddress","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DepositAllowedUpdated(address,bool)","name":"DepositAllowedUpdated","description":"Emitted when a deposit allowance is updated. Token transfer event.","parameterDecorators":[{"name":"lpAddress","description":"","recommendedTypes":[],"indexed":false},{"name":"allowed","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EnforceDepositLimitsUpdated(bool,uint256)","name":"EnforceDepositLimitsUpdated","description":"Emitted when the owner updates the enforcement flag. Token transfer event.","parameterDecorators":[{"name":"isEnforced","description":"","recommendedTypes":[],"indexed":false},{"name":"globalLimit","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LpTokensBurned(address,uint256,uint256,uint256)","name":"LpTokensBurned","description":"Emitted when an LP withdraws collateral. Token transfer event.","parameterDecorators":[{"name":"redeemer","description":"","recommendedTypes":[],"indexed":false},{"name":"collateralRemoved","description":"","recommendedTypes":[],"indexed":false},{"name":"paymentRemoved","description":"","recommendedTypes":[],"indexed":false},{"name":"lpTokensBurned","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LpTokensMinted(address,uint256,uint256)","name":"LpTokensMinted","description":"Emitted when an LP deposits collateral. Token transfer event.","parameterDecorators":[{"name":"minter","description":"","recommendedTypes":[],"indexed":false},{"name":"collateralAdded","description":"","recommendedTypes":[],"indexed":false},{"name":"lpTokensMinted","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Token transfer event.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"VolatilityFactorUpdated(uint256)","name":"VolatilityFactorUpdated","description":"Emitted when the owner updates volatilityFactor. Token transfer event.","parameterDecorators":[{"name":"newVolatilityFactor","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WTokensBought(address,uint256,uint256)","name":"WTokensBought","description":"Emitted when a user buys wTokens from the AMM. Token transfer event.","parameterDecorators":[{"name":"buyer","description":"","recommendedTypes":[],"indexed":false},{"name":"wTokensBought","description":"","recommendedTypes":[],"indexed":false},{"name":"collateralPaid","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"WTokensSold(address,uint256,uint256)","name":"WTokensSold","description":"Emitted when a user sells wTokens to the AMM. Token transfer event.","parameterDecorators":[{"name":"seller","description":"","recommendedTypes":[],"indexed":false},{"name":"wTokensSold","description":"","recommendedTypes":[],"indexed":false},{"name":"collateralPaid","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"MINIMUM_TRADE_SIZE()","name":"MINIMUM_TRADE_SIZE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"assetPair()","name":"assetPair","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"bTokenBuy(uint256,uint256,uint256)","name":"bTokenBuy","description":"Buy bToken of a given market. We supply market index instead of market address to ensure that only supported markets can be traded using this AMM collateralMaximum is used for slippage protection.","parameterDecorators":[{"name":"marketIndex","description":"","recommendedTypes":[]},{"name":"bTokenAmount","description":"","recommendedTypes":[]},{"name":"collateralMaximum","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"bTokenGetCollateralIn(address,uint256)","name":"bTokenGetCollateralIn","description":"Calculate amount of collateral required to buy bTokens.","parameterDecorators":[{"name":"market","description":"","recommendedTypes":[]},{"name":"bTokenAmount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"bTokenGetCollateralOut(address,uint256)","name":"bTokenGetCollateralOut","description":"Calculate amount of collateral in exchange for selling bTokens.","parameterDecorators":[{"name":"market","description":"","recommendedTypes":[]},{"name":"bTokenAmount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"bTokenSell(uint256,uint256,uint256)","name":"bTokenSell","description":"Sell bToken of a given market. We supply market index instead of market address to ensure that only supported markets can be traded using this AMM collateralMaximum is used for slippage protection.","parameterDecorators":[{"name":"marketIndex","description":"","recommendedTypes":[]},{"name":"bTokenAmount","description":"","recommendedTypes":[]},{"name":"collateralMinimum","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"calcPrice(uint256,uint256,uint256,uint256)","name":"calcPrice","description":"Calculate price of bToken based on Black-Scholes approximation. Formula: 0.4 * ImplVol * sqrt(timeUntilExpiry) * currentPrice / strike.","parameterDecorators":[{"name":"timeUntilExpiry","description":"","recommendedTypes":[]},{"name":"strike","description":"","recommendedTypes":[]},{"name":"currentPrice","description":"","recommendedTypes":[]},{"name":"volatility","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"claimAllExpiredTokens()","name":"claimAllExpiredTokens","description":"Takes any wTokens from expired Markets the AMM may have and converts them into collateral token which gets added to its liquidity pool.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimExpiredTokens(address,uint256)","name":"claimExpiredTokens","description":"Claims the wToken on a single expired Market. wTokenBalance should be equal to the amount of the expired Market's wToken owned by the AMM.","parameterDecorators":[{"name":"optionMarket","description":"","recommendedTypes":[]},{"name":"wTokenBalance","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"collateralDepositLimits(address)","name":"collateralDepositLimits","description":"DISABLED: This variable is no longer being used, but is left it to support backwards compatibility of updating older contracts if needed. This variable can be removed once all historical contracts are updated. If this variable is removed and an existing contract is graded, it will corrupt the memory layout. Mapping to track deposit limits. This is intended to be a temporary feature and will only count amounts deposited by an LP. If they withdraw collateral, it will not be subtracted from their current deposit limit to free up collateral that they can deposit later.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"allowedToDeposit","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"currentDeposit","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"collateralToken()","name":"collateralToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"enforceDepositLimits()","name":"enforceDepositLimits","description":"Track whether enforcing deposit limits is turned on. The Owner can update this.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getCurrentCollateralPrice()","name":"getCurrentCollateralPrice","description":"Get current collateral price expressed in payment token.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getLogicAddress()","name":"getLogicAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"logicAddress","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarket(uint256)","name":"getMarket","description":"Get market address by index.","parameterDecorators":[{"name":"marketIndex","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getMarkets()","name":"getMarkets","description":"List of market addresses that this AMM trades.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"getPriceForMarket(address)","name":"getPriceForMarket","description":"Get price of bToken for a given market.","parameterDecorators":[{"name":"market","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTokensSaleValue(uint256)","name":"getTokensSaleValue","description":"Calculate sale value of pro-rata LP b/wTokens.","parameterDecorators":[{"name":"lpTokenAmount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalPoolValue(bool)","name":"getTotalPoolValue","description":"Get value of all assets in the pool. Can specify whether to include the value of expired unclaimed tokens.","parameterDecorators":[{"name":"includeUnclaimed","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUnclaimedBalances()","name":"getUnclaimedBalances","description":"Get unclaimed collateral and payment tokens locked in expired wTokens.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getVirtualReserves(address)","name":"getVirtualReserves","description":"This function determines reserves of a bonding curve for a specific market. Given price of bToken we determine what is the largest pool we can create such that the ratio of its reserves satisfy the given bToken price: Rb / Rw = (1 - Pb) / Pb.","parameterDecorators":[{"name":"market","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"globalDepositLimit()","name":"globalDepositLimit","description":"Amount that accounts are allowed to deposit if enforcement is turned on.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address,address,address,uint16,bool)","name":"initialize","description":"Initialize the contract, and create an lpToken to track ownership.","parameterDecorators":[{"name":"_registry","description":"","recommendedTypes":[]},{"name":"_priceOracle","description":"","recommendedTypes":[]},{"name":"_paymentToken","description":"","recommendedTypes":[]},{"name":"_collateralToken","description":"","recommendedTypes":[]},{"name":"_tokenImplementation","description":"","recommendedTypes":[]},{"name":"_tradeFeeBasisPoints","description":"","recommendedTypes":[]},{"name":"_shouldInvertOraclePrice","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"lpToken()","name":"lpToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"paymentToken()","name":"paymentToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"provideCapital(uint256,uint256)","name":"provideCapital","description":"LP allows collateral to be used to mint new options bTokens and wTokens will be held in this contract and can be traded back and forth. The amount of lpTokens is calculated based on total pool value.","parameterDecorators":[{"name":"collateralAmount","description":"","recommendedTypes":[]},{"name":"lpTokenMinimum","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proxiableUUID()","name":"proxiableUUID","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"registry()","name":"registry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setCapitalDepositLimit(address[],bool[])","name":"setCapitalDepositLimit","description":"DISABLED: This feature has been disabled but left in for backwards compatibility. Instead of allowing individual caps, there will be a global cap for deposited liquidity. The owner can update limits on any addresses.","parameterDecorators":[{"name":"lpAddresses","description":"","recommendedTypes":[]},{"name":"allowedToDeposit","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setEnforceDepositLimits(bool,uint256)","name":"setEnforceDepositLimits","description":"The owner can set the flag to enforce deposit limits.","parameterDecorators":[{"name":"_enforceDepositLimits","description":"","recommendedTypes":[]},{"name":"_globalDepositLimit","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setVolatilityFactor(uint256)","name":"setVolatilityFactor","description":"The owner can set the volatility factor used to price the options.","parameterDecorators":[{"name":"_volatilityFactor","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tradeFeeBasisPoints()","name":"tradeFeeBasisPoints","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint16"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateAmmImplementation(address)","name":"updateAmmImplementation","description":"The owner can update the contract logic address in the proxy itself to upgrade.","parameterDecorators":[{"name":"newAmmImplementation","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"volatilityFactor()","name":"volatilityFactor","description":"Volatility factor used in the black scholes approximation - can be updated by the owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawCapital(uint256,bool,uint256)","name":"withdrawCapital","description":"LP can redeem their LP tokens in exchange for collateral If `sellTokens` is true pro-rata active b/wTokens will be sold to the pool in exchange for collateral All expired wTokens will be claimed LP will get pro-rata collateral and payment assets We return collateralTokenSent in order to give user ability to calculate the slippage via a call.","parameterDecorators":[{"name":"lpTokenAmount","description":"","recommendedTypes":[]},{"name":"sellTokens","description":"","recommendedTypes":[]},{"name":"collateralMinimum","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}