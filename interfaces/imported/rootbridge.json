{
  "schema": "../schema.json",
  "tags": [
    "bridges"
  ],
  "name": "RootBridge",
  "description": "",
  "eventDecorators": [
    {
      "signature": "BridgeChanged(address)",
      "name": "BridgeChanged",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "bridge",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MultiTokenMediatorChanged(address)",
      "name": "MultiTokenMediatorChanged",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "mediator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Relayed(address,address,uint256)",
      "name": "Relayed",
      "description": "Triggers on new deposit call.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DEFAULT_GAS_LIMIT()",
      "name": "DEFAULT_GAS_LIMIT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ambBridge()",
      "name": "ambBridge",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "candidate()",
      "name": "candidate",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "erc20Transfer(address,address,tuple(uint256))",
      "name": "erc20Transfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address,address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_ambBridge",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_multiTokenMediator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "multiTokenMediator()",
      "name": "multiTokenMediator",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "priceFeed()",
      "name": "priceFeed",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAMBBridge(address)",
      "name": "setAMBBridge",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_ambBridge",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMultiTokenMediator(address)",
      "name": "setMultiTokenMediator",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_multiTokenMediator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setOwner(address)",
      "name": "setOwner",
      "description": "Set ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPriceFeed(address)",
      "name": "setPriceFeed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_priceFeed",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateOwner()",
      "name": "updateOwner",
      "description": "Transfers ownership of the contract to a new account (`_candidate`). Can only be called by the new owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePriceFeed(address,bytes32,tuple(uint256),uint256,uint256)",
      "name": "updatePriceFeed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_priceFeedAddrOnL2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_priceFeedKey",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_price",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "d",
              "description": "",
              "recommendedTypes": []
            }
          ]
        },
        {
          "name": "_timestamp",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_roundId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "messageId",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}