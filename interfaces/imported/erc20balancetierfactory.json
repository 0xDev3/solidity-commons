{
  "schema": "../schema.json",
  "tags": [],
  "name": "ERC20BalanceTierFactory",
  "description": "ERC20BalanceTierFactory. Factory for creating and deploying `ERC20BalanceTier` contracts.",
  "eventDecorators": [
    {
      "signature": "Implementation(address,address)",
      "name": "Implementation",
      "description": "Factories that clone a template contract MUST emit an event any time they set the implementation being cloned. Factories that deploy new contracts without cloning do NOT need to emit this. Emitted when the pause is lifted by `account`.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "implementation",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewChild(address,address)",
      "name": "NewChild",
      "description": "Whenever a new child contract is deployed, a `NewChild` event containing the new child contract address MUST be emitted. Emitted when the pause is lifted by `account`.",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "child",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "createChild(bytes)",
      "name": "createChild",
      "description": "Implements `IFactory`. Calls the `_createChild` hook that inheriting contracts must override. Registers child contract address such that `isChild` is `true`. Emits `NewChild` event.",
      "parameterDecorators": [
        {
          "name": "data_",
          "description": "Encoded data to pass down to child contract constructor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "New child contract address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "createChildTyped(tuple(address,uint256[8]))",
      "name": "createChildTyped",
      "description": "Typed wrapper for `createChild` with `ERC20BalanceTierConfig`. Use original `Factory` `createChild` function signature if function parameters are already encoded.",
      "parameterDecorators": [
        {
          "name": "config_",
          "description": "Constructor config for `ERC20BalanceTier`.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "erc20",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "tierValues",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "New `ERC20BalanceTier` child contract address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "implementation()",
      "name": "implementation",
      "description": "Template contract to clone. Deployed by the constructor.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isChild(address)",
      "name": "isChild",
      "description": "Implements `IFactory`. Checks if address is registered as a child contract of this factory.",
      "parameterDecorators": [
        {
          "name": "maybeChild_",
          "description": "Address of child contract to look up.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns `true` if address is a contract created by this contract factory, otherwise `false`.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}