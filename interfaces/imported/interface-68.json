{"schema":"../schema.json","tags":[],"name":"MbdaBoard","description":"MbdaBoard is the smart contract that will control all funds.","eventDecorators":[{"signature":"Deposit(uint256)","name":"Deposit","description":"event Withdrawal emit on every SafeWithdraw.","parameterDecorators":[{"name":"value","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"NewProposal(uint256,string,bytes)","name":"NewProposal","description":"event Withdrawal emit on every SafeWithdraw.","parameterDecorators":[{"name":"proposalID","description":"","recommendedTypes":[],"indexed":false},{"name":"proposalType","description":"","recommendedTypes":[],"indexed":true},{"name":"proposalPayload","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ProposalApprovedAndEnforced(uint256,bytes,bool,bytes)","name":"ProposalApprovedAndEnforced","description":"event Withdrawal emit on every SafeWithdraw.","parameterDecorators":[{"name":"proposalID","description":"","recommendedTypes":[],"indexed":false},{"name":"payload","description":"","recommendedTypes":[],"indexed":false},{"name":"success","description":"","recommendedTypes":[],"indexed":false},{"name":"returnData","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Voted(address,uint256)","name":"Voted","description":"event Withdrawal emit on every SafeWithdraw.","parameterDecorators":[{"name":"boardMember","description":"","recommendedTypes":[],"indexed":false},{"name":"proposalId","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addBoardMember(address)","name":"addBoardMember","description":"Adds a board member (onlyBoard).","parameterDecorators":[{"name":"_newMember","description":"- New member to be added.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if success.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"addProposal(string,bytes,address,uint256)","name":"addProposal","description":"every proposal is a transaction to be executed by the board transaction type of proposal have to be previously approved (function sig). Adds a proposal and vote on it (onlyMember).","parameterDecorators":[{"name":"_type","description":"- proposal type.","recommendedTypes":[]},{"name":"_data","description":"- proposal data (ABI encoded).","recommendedTypes":[]},{"name":"_destination","description":"- address to send the transaction to.","recommendedTypes":[]},{"name":"_value","description":"- value of the transaction.","recommendedTypes":[]}],"returnDecorators":[{"name":"proposalID","description":"The ID of the proposal.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"addProposalType(string,bytes4)","name":"addProposalType","description":"Adds a proposal type (onlyBoard).","parameterDecorators":[{"name":"_id","description":"- The name of the proposal Type.","recommendedTypes":[]},{"name":"_signature","description":"- 4 byte signature of the function to be called.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if success.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"boardMembers(address)","name":"boardMembers","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"boardMembersList(uint256)","name":"boardMembersList","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"changeMinVotes(uint256)","name":"changeMinVotes","description":"Changes the amount of votes needed to approve a proposal (onlyBoard).","parameterDecorators":[{"name":"_minVotes","description":"- New minimum quorum to approve proposals.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if success.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"minVotes()","name":"minVotes","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalTypes(string)","name":"proposalTypes","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":true},{"signature":"proposals(uint256)","name":"proposals","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"proposalType","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"destination","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"value","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"votes","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"executed","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"exists","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"proposal","description":"","recommendedTypes":[],"solidityType":"bytes"},{"name":"success","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"returnData","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":true},{"signature":"removeBoardMember(address)","name":"removeBoardMember","description":"Removes a board member (onlyBoard).","parameterDecorators":[{"name":"_member","description":"- Member to be added.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if success.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"removeProposalType(string)","name":"removeProposalType","description":"Removes a proposal type (onlyBoard).","parameterDecorators":[{"name":"_id","description":"- The name of the proposal Type.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if success.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"replaceBoardMember(address,address)","name":"replaceBoardMember","description":"Replaces a board member (onlyBoard).","parameterDecorators":[{"name":"_oldMember","description":"- Old member to be replaced.","recommendedTypes":[]},{"name":"_newMember","description":"- New member to be added.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if success.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"totalProposals()","name":"totalProposals","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"vote(uint256)","name":"vote","description":"Vote on a given proposal (onlyMember).","parameterDecorators":[{"name":"_proposalID","description":"- Proposal ID.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"True if success.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false}]}