{
  "schema": "../schema.json",
  "tags": [
    "liquidity"
  ],
  "name": "LiquidityTransformer",
  "description": "",
  "eventDecorators": [
    {
      "signature": "GeneratedRandomSupply(uint256,uint256)",
      "name": "GeneratedRandomSupply",
      "description": "An event emitted when a vote has been cast on a proposal. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "investmentDay",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "randomSupply",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "GeneratedStaticSupply(uint256,uint256)",
      "name": "GeneratedStaticSupply",
      "description": "An event emitted when a vote has been cast on a proposal. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "investmentDay",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "staticSupply",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "GeneratingRandomSupply(uint256)",
      "name": "GeneratingRandomSupply",
      "description": "An event emitted when a vote has been cast on a proposal. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "investmentDay",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "GenerationStatus(uint64,bool)",
      "name": "GenerationStatus",
      "description": "An event emitted when a vote has been cast on a proposal. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "investmentDay",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "result",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LogNewProvableQuery(string)",
      "name": "LogNewProvableQuery",
      "description": "An event emitted when a vote has been cast on a proposal. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "description",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ReferralAdded(address,address,uint256)",
      "name": "ReferralAdded",
      "description": "An event emitted when a vote has been cast on a proposal. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "_newAmount",
          "description": "new amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_prevAmount",
          "description": "previous amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_token",
          "description": "token address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UniSwapResult(uint256,uint256,uint256)",
      "name": "UniSwapResult",
      "description": "An event emitted when a vote has been cast on a proposal. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "_newAmount",
          "description": "new amount.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_prevAmount",
          "description": "previous amount.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_token",
          "description": "token address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WiseReservation(address,uint256,uint256)",
      "name": "WiseReservation",
      "description": "An event emitted when a vote has been cast on a proposal. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "_newAmount",
          "description": "new amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_prevAmount",
          "description": "previous amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_token",
          "description": "token address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "$getMyTokens()",
      "name": "$getMyTokens",
      "description": "Allows to mint all the tokens from investor and referrer perspectives. can be called after forwardLiquidity().",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "REFUND_SPONSOR()",
      "name": "REFUND_SPONSOR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "TOKEN_DEFINER()",
      "name": "TOKEN_DEFINER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "UNISWAP_PAIR()",
      "name": "UNISWAP_PAIR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "UNISWAP_ROUTER()",
      "name": "UNISWAP_ROUTER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WISE_CONTRACT()",
      "name": "WISE_CONTRACT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "__callback(bytes32,string)",
      "name": "__callback",
      "description": "The following `__callback` functions are just placeholders ideally meant to be defined in child contract when proofs are used. The function bodies simply silence compiler warnings.",
      "parameterDecorators": [
        {
          "name": "_myid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_result",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "__callback(bytes32,string,bytes)",
      "name": "__callback",
      "description": "Function that generates random supply. expected to be called by oracle within 2 hours time-frame, otherwise __timeout() can be performed.",
      "parameterDecorators": [
        {
          "name": "_queryId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_result",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_proof",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "__timeout()",
      "name": "__timeout",
      "description": "Allows to reset expected oracle callback. resets generationDayBuffer to retry callback assigns static supply if no callback within a day.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "_currentWiseDay()",
      "name": "_currentWiseDay",
      "description": "shows current day of WiseToken. value is fetched from WISE_CONTRACT.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "iteration day since WISE inception.",
          "recommendedTypes": [],
          "solidityType": "uint64"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dailyTotalInvestment(uint256)",
      "name": "dailyTotalInvestment",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dailyTotalSupply(uint256)",
      "name": "dailyTotalSupply",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "defineToken(address,address)",
      "name": "defineToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_wiseToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_uniswapPair",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "forwardLiquidity()",
      "name": "forwardLiquidity",
      "description": "Creates initial liquidity on Uniswap by forwarding reserved tokens equivalent to ETH contributed to the contract. check addLiquidityETH documentation.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fundedDays()",
      "name": "fundedDays",
      "description": "checks for invesments on all days. used in forwardLiquidity() requirements.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "$fundedDays",
          "description": "- amount of funded days 0-50.",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "g()",
      "name": "g",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "generatedDays",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "generationDayBuffer",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "generationTimeout",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "preparedReferrals",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint64"
        },
        {
          "name": "totalTransferTokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalWeiContributed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "totalReferralTokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "generateSupply(uint64)",
      "name": "generateSupply",
      "description": "Allows to generate supply for past funded days.",
      "parameterDecorators": [
        {
          "name": "_investmentDay",
          "description": "investemnt day index (1-50).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "investmentsOnAllDays()",
      "name": "investmentsOnAllDays",
      "description": "checks for investment amount on each day.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_allInvestments",
          "description": "array with investment amount for each day.",
          "recommendedTypes": [],
          "solidityType": "uint256[51]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "investorAccountCount(uint256)",
      "name": "investorAccountCount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "investorAccounts(uint256,uint256)",
      "name": "investorAccounts",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "investorBalances(address,uint256)",
      "name": "investorBalances",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "investorTotalBalance(address)",
      "name": "investorTotalBalance",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "investorsOnAllDays()",
      "name": "investorsOnAllDays",
      "description": "checks for investors count on each day.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_allInvestors",
          "description": "array with investors count for each day.",
          "recommendedTypes": [],
          "solidityType": "uint256[51]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "investorsOnDay(uint256)",
      "name": "investorsOnDay",
      "description": "checks for investors count on specific day.",
      "parameterDecorators": [
        {
          "name": "_investmentDay",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "investors count for specific day.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "myInvestmentAmount(uint256)",
      "name": "myInvestmentAmount",
      "description": "checks for callers investment amount on specific day (with bonus).",
      "parameterDecorators": [
        {
          "name": "_investmentDay",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total amount invested across all investment days (with bonus).",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "myInvestmentAmountAllDays()",
      "name": "myInvestmentAmountAllDays",
      "description": "checks for callers investment amount on each day (with bonus).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_myAllDays",
          "description": "total amount invested across all days (with bonus).",
          "recommendedTypes": [],
          "solidityType": "uint256[51]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "myTotalInvestmentAmount()",
      "name": "myTotalInvestmentAmount",
      "description": "checks for callers total investment amount (with bonus).",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total amount invested across all investment days (with bonus).",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "payoutInvestmentDayBatch(uint256,uint256,uint256)",
      "name": "payoutInvestmentDayBatch",
      "description": "Allows to mint tokens for specific investment day recommended batch size is up to 50 addresses per call.",
      "parameterDecorators": [
        {
          "name": "_investmentDay",
          "description": "processing investment day.",
          "recommendedTypes": []
        },
        {
          "name": "_investorBatchFrom",
          "description": "batch starting index.",
          "recommendedTypes": []
        },
        {
          "name": "_investorBatchTo",
          "description": "bach finishing index.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "payoutInvestorAddress(address)",
      "name": "payoutInvestorAddress",
      "description": "Allows to mint tokens for specific investor address. aggregades investors tokens across all investment days and uses WISE_CONTRACT instance to mint all the WISE tokens.",
      "parameterDecorators": [
        {
          "name": "_investorAddress",
          "description": "requested investor calculation address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_payout",
          "description": "amount minted to the investors address.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "payoutReferralAddress(address)",
      "name": "payoutReferralAddress",
      "description": "Allows to mint tokens for specific referrer address. must be pre-calculated in prepareReferralBonuses().",
      "parameterDecorators": [
        {
          "name": "_referralAddress",
          "description": "referrer payout address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_referralTokens",
          "description": "amount minted to the referrer address.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "payoutReferralBatch(uint256,uint256)",
      "name": "payoutReferralBatch",
      "description": "Allows to mint tokens for referrers in batches. can be called right after forwardLiquidity() recommended batch size is up to 50 addresses per call.",
      "parameterDecorators": [
        {
          "name": "_referralBatchFrom",
          "description": "batch starting index.",
          "recommendedTypes": []
        },
        {
          "name": "_referralBatchTo",
          "description": "bach finishing index.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "prepareReferralBonuses(uint256,uint256)",
      "name": "prepareReferralBonuses",
      "description": "Pre-calculates amount of tokens each referrer will get. must run this for all referrer addresses in batches converts _referralAmount to _referralTokens based on dailyRatio.",
      "parameterDecorators": [
        {
          "name": "_referralBatchFrom",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_referralBatchTo",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "referralAccountCount()",
      "name": "referralAccountCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "referralAccounts(uint256)",
      "name": "referralAccounts",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "referralAmount(address)",
      "name": "referralAmount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "referralTokens(address)",
      "name": "referralTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "requestRefund(address,address)",
      "name": "requestRefund",
      "description": "allows refunds if funds are stuck.",
      "parameterDecorators": [
        {
          "name": "_investor",
          "description": "address to be refunded.",
          "recommendedTypes": []
        },
        {
          "name": "_succesor",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_amount",
          "description": "refunded to the investor.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "requestTeamFunds(uint256)",
      "name": "requestTeamFunds",
      "description": "allows to withdraw team funds for the work strictly only after the uniswap liquidity is formed.",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "value to withdraw from the contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reserveWise(uint8[],address)",
      "name": "reserveWise",
      "description": "Performs reservation of WISE tokens with ETH.",
      "parameterDecorators": [
        {
          "name": "_investmentDays",
          "description": "array of reservation days.",
          "recommendedTypes": []
        },
        {
          "name": "_referralAddress",
          "description": "referral address for bonus.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "reserveWiseWithToken(address,uint256,uint8[],address)",
      "name": "reserveWiseWithToken",
      "description": "Allows reservation of WISE tokens with other ERC20 tokens. this will require LT contract to be approved as spender.",
      "parameterDecorators": [
        {
          "name": "_tokenAddress",
          "description": "address of an ERC20 token to use.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenAmount",
          "description": "amount of tokens to use for reservation.",
          "recommendedTypes": []
        },
        {
          "name": "_investmentDays",
          "description": "array of reservation days.",
          "recommendedTypes": []
        },
        {
          "name": "_referralAddress",
          "description": "referral address for bonus.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "revokeAccess()",
      "name": "revokeAccess",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supplyOnAllDays()",
      "name": "supplyOnAllDays",
      "description": "checks for supply amount on each day.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_allSupply",
          "description": "array with supply amount for each day.",
          "recommendedTypes": [],
          "solidityType": "uint256[51]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniqueInvestorCount()",
      "name": "uniqueInvestorCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniqueInvestors(uint256)",
      "name": "uniqueInvestors",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}