{
  "schema": "../schema.json",
  "tags": [
    "lending",
    "flash loans",
    "loans",
    "yield"
  ],
  "name": "YieldFYDaiERC3156",
  "description": "YieldFYDaiLender allows flash loans of fyDai compliant with ERC-3156: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-3156.md.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "executeOnFlashMint(uint256,bytes)",
      "name": "executeOnFlashMint",
      "description": "FYDai flash loan callback. It sends the value borrowed to `receiver`, and takes the value back after the callback.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "flashFee(address,uint256)",
      "name": "flashFee",
      "description": "From ERC-3156. The fee to be charged for a given loan.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "The loan currency. It must be a FYDai.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "The amount of tokens lent.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The amount of `token` to be charged for the loan, on top of the returned principal.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "flashLoan(address,address,uint256,bytes)",
      "name": "flashLoan",
      "description": "From ERC-3156. Loan `amount` fyDai to `receiver`, which needs to return them plus fee to this contract within the same transaction.",
      "parameterDecorators": [
        {
          "name": "receiver",
          "description": "The contract receiving the tokens, needs to implement the `onFlashLoan(address user, uint256 amount, uint256 fee, bytes calldata)` interface.",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "The loan currency. Must be a fyDai contract.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "The amount of tokens lent.",
          "recommendedTypes": []
        },
        {
          "name": "userData",
          "description": "A data parameter to be passed on to the `receiver` for any custom use.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "fyDaisSupported(address)",
      "name": "fyDaisSupported",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maxFlashAmount(address)",
      "name": "maxFlashAmount",
      "description": "From ERC-3156. The amount of currency available to be lended.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "The loan currency. It must be a FYDai contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The amount of `token` that can be borrowed.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}