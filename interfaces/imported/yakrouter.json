{
  "schema": "../schema.json",
  "tags": [],
  "name": "YakRouter",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Recovered(address,uint256)",
      "name": "Recovered",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "_asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdatedAdapters(address[])",
      "name": "UpdatedAdapters",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "_newAdapters",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdatedFeeClaimer(address,address)",
      "name": "UpdatedFeeClaimer",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "_oldFeeClaimer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newFeeClaimer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdatedMinFee(uint256,uint256)",
      "name": "UpdatedMinFee",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "_oldMinFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_newMinFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UpdatedTrustedTokens(address[])",
      "name": "UpdatedTrustedTokens",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "_newTrustedTokens",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "YakSwap(address,address,uint256,uint256)",
      "name": "YakSwap",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "_tokenIn",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_tokenOut",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amountIn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_amountOut",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ADAPTERS(uint256)",
      "name": "ADAPTERS",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "AVAX()",
      "name": "AVAX",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "FEE_CLAIMER()",
      "name": "FEE_CLAIMER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "FEE_DENOMINATOR()",
      "name": "FEE_DENOMINATOR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "MIN_FEE()",
      "name": "MIN_FEE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "NAME()",
      "name": "NAME",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "TRUSTED_TOKENS(uint256)",
      "name": "TRUSTED_TOKENS",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WAVAX()",
      "name": "WAVAX",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "adaptersCount()",
      "name": "adaptersCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "findBestPath(uint256,address,address,uint256)",
      "name": "findBestPath",
      "description": "Return path with best returns between two tokens.",
      "parameterDecorators": [
        {
          "name": "_amountIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_maxSteps",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "findBestPathWithGas(uint256,address,address,uint256,uint256)",
      "name": "findBestPathWithGas",
      "description": "Return path with best returns between two tokens Takes gas-cost into account.",
      "parameterDecorators": [
        {
          "name": "_amountIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_maxSteps",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_gasPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "queryAdapter(uint256,address,address,uint8)",
      "name": "queryAdapter",
      "description": "Query single adapter.",
      "parameterDecorators": [
        {
          "name": "_amountIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "queryNoSplit(uint256,address,address,uint8[])",
      "name": "queryNoSplit",
      "description": "Query specified adapters.",
      "parameterDecorators": [
        {
          "name": "_amountIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_options",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "queryNoSplit(uint256,address,address)",
      "name": "queryNoSplit",
      "description": "Query all adapters.",
      "parameterDecorators": [
        {
          "name": "_amountIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenOut",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "recoverAVAX(uint256)",
      "name": "recoverAVAX",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "recoverERC20(address,uint256)",
      "name": "recoverERC20",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAdapters(address[])",
      "name": "setAdapters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_adapters",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFeeClaimer(address)",
      "name": "setFeeClaimer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_claimer",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMinFee(uint256)",
      "name": "setMinFee",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTrustedTokens(address[])",
      "name": "setTrustedTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_trustedTokens",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapNoSplit(tuple(uint256,uint256,address[],address[]),address,uint256)",
      "name": "swapNoSplit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_trade",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "amountIn",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "amountOut",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "path",
              "description": "",
              "type": "address[]"
            },
            {
              "name": "adapters",
              "description": "",
              "type": "address[]"
            }
          ]
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapNoSplitFromAVAX(tuple(uint256,uint256,address[],address[]),address,uint256)",
      "name": "swapNoSplitFromAVAX",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_trade",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "amountIn",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "amountOut",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "path",
              "description": "",
              "type": "address[]"
            },
            {
              "name": "adapters",
              "description": "",
              "type": "address[]"
            }
          ]
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapNoSplitToAVAX(tuple(uint256,uint256,address[],address[]),address,uint256)",
      "name": "swapNoSplitToAVAX",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_trade",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "amountIn",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "amountOut",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "path",
              "description": "",
              "type": "address[]"
            },
            {
              "name": "adapters",
              "description": "",
              "type": "address[]"
            }
          ]
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapNoSplitToAVAXWithPermit(tuple(uint256,uint256,address[],address[]),address,uint256,uint256,uint8,bytes32,bytes32)",
      "name": "swapNoSplitToAVAXWithPermit",
      "description": "Swap token to AVAX without the need to approve the first token.",
      "parameterDecorators": [
        {
          "name": "_trade",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "amountIn",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "amountOut",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "path",
              "description": "",
              "type": "address[]"
            },
            {
              "name": "adapters",
              "description": "",
              "type": "address[]"
            }
          ]
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_deadline",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapNoSplitWithPermit(tuple(uint256,uint256,address[],address[]),address,uint256,uint256,uint8,bytes32,bytes32)",
      "name": "swapNoSplitWithPermit",
      "description": "Swap token to token without the need to approve the first token.",
      "parameterDecorators": [
        {
          "name": "_trade",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "amountIn",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "amountOut",
              "description": "",
              "type": "uint256"
            },
            {
              "name": "path",
              "description": "",
              "type": "address[]"
            },
            {
              "name": "adapters",
              "description": "",
              "type": "address[]"
            }
          ]
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_deadline",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_v",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_r",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_s",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "trustedTokensCount()",
      "name": "trustedTokensCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}