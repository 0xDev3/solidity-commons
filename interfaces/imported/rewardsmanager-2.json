{"schema":"../schema.json","tags":[],"name":"RewardsManager","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when token is changed.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"addRewardItem(address,uint256,uint256,uint256)","name":"addRewardItem","description":"This function will add a new reward item.","parameterDecorators":[{"name":"_reserve","description":"- The reserve of the lending pool.","recommendedTypes":[]},{"name":"_lpRewardAmt","description":"- The amount of reward for depositors.","recommendedTypes":[]},{"name":"lpBase","description":"- The total amount of the mToken supplied.","recommendedTypes":[]},{"name":"govRewardAmt","description":"- The amount of reward for the governance stakers. Access Control: Only Lending Pools or Core.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addressesProvider()","name":"addressesProvider","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"coreAddress()","name":"coreAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"lendingPoolAddress()","name":"lendingPoolAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"readRewards(address,address,uint8,uint256)","name":"readRewards","description":"This function will read the available reward of the user.","parameterDecorators":[{"name":"_reserve","description":"- The reserve of the lending pool.","recommendedTypes":[]},{"name":"_user","description":"- The user's address.","recommendedTypes":[]},{"name":"_type","description":"- The type of reward.","recommendedTypes":[]},{"name":"_share","description":"- The amount of mToken or stBMXX token, depending on the _type specified.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"registerPools(address[])","name":"registerPools","description":"This function will register the reward pools based on an array of reserves.","parameterDecorators":[{"name":"_reserves","description":"- Array of addresses Access Control: Only Lending Pools.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"resetReward(address,address,uint8)","name":"resetReward","description":"This function will reset the user's accumulated reward to 0 and set the pointer to the pool's next reward.","parameterDecorators":[{"name":"_reserve","description":"- The reserve of the lending pool.","recommendedTypes":[]},{"name":"_user","description":"- The user's address.","recommendedTypes":[]},{"name":"_type","description":"- The type of reward. Access Control: Only Lending Pools.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rewardPools(address)","name":"rewardPools","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"nextRewardPtr","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"valid","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"stakingToken()","name":"stakingToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateReward(address,address,uint8,uint256,uint256)","name":"updateReward","description":"Called by LendingPool to accumulate and update the reward for a user.","parameterDecorators":[{"name":"_reserve","description":"The lending pool reserver.","recommendedTypes":[]},{"name":"_user","description":"The address of the user.","recommendedTypes":[]},{"name":"_type","description":"The amount of reward.","recommendedTypes":[]},{"name":"_shares","description":"","recommendedTypes":[]},{"name":"_num","description":"The number of reward items to update. Input 0 to update all available reward items. Access Control: Only Lending Pools*.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateRewards(address,address,uint256,uint256,uint256)","name":"updateRewards","description":"This function will update both the Depositor and Governance reward of the user.","parameterDecorators":[{"name":"_reserve","description":"- The reserve of the lending pool.","recommendedTypes":[]},{"name":"_user","description":"- The user's address.","recommendedTypes":[]},{"name":"_sharesLp","description":"- The amount of the mToken the user has.","recommendedTypes":[]},{"name":"_sharesGov","description":"- The amount of stBMXX token the user has.","recommendedTypes":[]},{"name":"_num","description":"- The number of reward items to update. Input 0 to update all available reward items. Access Control: Only Lending Pools.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawFromVault(uint8,address,address,uint256)","name":"withdrawFromVault","description":"This function will withdraw the reward and send to the user.","parameterDecorators":[{"name":"_type","description":"- The type of reward.","recommendedTypes":[]},{"name":"_token","description":"- The token to withdraw.","recommendedTypes":[]},{"name":"_to","description":"- The payee's address.","recommendedTypes":[]},{"name":"_amount","description":"- The amount to pay. Access Control: Only Lending Pools.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}