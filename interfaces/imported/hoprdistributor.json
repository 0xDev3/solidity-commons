{"schema":"../schema.json","tags":[],"name":"HoprDistributor","description":"","eventDecorators":[{"signature":"AllocationAdded(address,uint128,string)","name":"AllocationAdded","description":"Must be emitted in withdraw() function.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"scheduleName","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Claimed(address,uint128,string)","name":"Claimed","description":"Must be emitted in withdraw() function.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false},{"name":"scheduleName","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Must be emitted in withdraw() function.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"ScheduleAdded(uint128[],uint128[],string)","name":"ScheduleAdded","description":"Must be emitted in withdraw() function.","parameterDecorators":[{"name":"durations","description":"","recommendedTypes":[],"indexed":false},{"name":"percents","description":"","recommendedTypes":[],"indexed":false},{"name":"name","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"MULTIPLIER()","name":"MULTIPLIER","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"addAllocations(address[],uint128[],string)","name":"addAllocations","description":"Adds allocations, all allocations will use the schedule specified, schedule must be created before and account must not have an allocation in the specific schedule.","parameterDecorators":[{"name":"accounts","description":"accounts to create allocations for.","recommendedTypes":[]},{"name":"amounts","description":"total amount to be allocated.","recommendedTypes":[]},{"name":"scheduleName","description":"the schedule name.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addSchedule(uint128[],uint128[],string)","name":"addSchedule","description":"Adds a schedule, the schedule must not already exist. Owner is expected to insert values in ascending order, each element in arrays {durations} and {percents} is meant to be related.","parameterDecorators":[{"name":"durations","description":"the durations for each schedule period in seconds (6 months, 1 year).","recommendedTypes":[]},{"name":"percents","description":"the percent of how much can be allocated during that period, instead of using 100 we scale the value up to {MULTIPLIER} so we can have more accurate \"percentages\".","recommendedTypes":[]},{"name":"name","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"allocations(address,string)","name":"allocations","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint128"},{"name":"claimed","description":"","recommendedTypes":[],"solidityType":"uint128"},{"name":"lastClaim","description":"","recommendedTypes":[],"solidityType":"uint128"},{"name":"revoked","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"claim(string)","name":"claim","description":"Claim tokens by specified a schedule.","parameterDecorators":[{"name":"scheduleName","description":"the schedule name.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"claimFor(address,string)","name":"claimFor","description":"Claim tokens for a specific account by specified a schedule.","parameterDecorators":[{"name":"account","description":"the account to claim for.","recommendedTypes":[]},{"name":"scheduleName","description":"the schedule name.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getClaimable(address,string)","name":"getClaimable","description":"","parameterDecorators":[{"name":"account","description":"the account to get claimable for.","recommendedTypes":[]},{"name":"scheduleName","description":"the schedule name.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"claimable amount.","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"getSchedule(string)","name":"getSchedule","description":"","parameterDecorators":[{"name":"name","description":"the schedule name.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint128[]"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint128[]"}],"emittableEvents":[],"readOnly":true},{"signature":"maxMintAmount()","name":"maxMintAmount","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"revokeAccount(address,string)","name":"revokeAccount","description":"Revokes the ability for an account to claim on the specified schedule.","parameterDecorators":[{"name":"account","description":"the account to crevoke.","recommendedTypes":[]},{"name":"scheduleName","description":"the schedule name.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"startTime()","name":"startTime","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"totalMinted()","name":"totalMinted","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"totalToBeMinted()","name":"totalToBeMinted","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint128"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateStartTime(uint128)","name":"updateStartTime","description":"Allows the owner to update the start time, in case there are unforeseen issues in the long schedule.","parameterDecorators":[{"name":"_startTime","description":"the new timestamp to start counting.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}