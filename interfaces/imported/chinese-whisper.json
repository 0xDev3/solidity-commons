{
  "schema": "../schema.json",
  "tags": [],
  "name": "ChineseWhisper",
  "description": "Chinese Whisper. Send your whisper to the next owner of the contract.",
  "eventDecorators": [
    {
      "signature": "OwnerSet(address,address)",
      "name": "OwnerSet",
      "description": "Emitted when an array of wager tokens is updated.",
      "parameterDecorators": [
        {
          "name": "oldOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "changeOwner(address,string)",
      "name": "changeOwner",
      "description": "Changes owner and sets sent message as new whisper.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "address of new owner.",
          "recommendedTypes": []
        },
        {
          "name": "message",
          "description": "message for setting the whisper.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getOwner()",
      "name": "getOwner",
      "description": "Return owner address.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address of owner.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getWhisper()",
      "name": "getWhisper",
      "description": "Return current whisper.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "whisper of last owner.",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}