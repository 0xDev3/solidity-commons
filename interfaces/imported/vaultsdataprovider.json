{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "VaultsDataProvider",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "a()",
      "name": "a",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "baseDebt(address)",
      "name": "baseDebt",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "collateralDebt(address)",
      "name": "collateralDebt",
      "description": "Calculated the total outstanding debt for all vaults of a specific collateral type. uses the existing cumulative rate. Call `refreshCollateral()` on `VaultsCore` to make sure it's up to date.",
      "parameterDecorators": [
        {
          "name": "_collateralType",
          "description": "address of the collateral type (Eg: WETH).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total debt of the platform of one collateral type.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "createVault(address,address)",
      "name": "createVault",
      "description": "Opens a new vault. only the vaultsCore module can call this function.",
      "parameterDecorators": [
        {
          "name": "_collateralType",
          "description": "address to the collateral asset e.g. WETH.",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "the owner of the new vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "debt()",
      "name": "debt",
      "description": "Calculated the total outstanding debt for all vaults and all collateral types. uses the existing cumulative rate. Call `refresh()` on `VaultsCore` to make sure it's up to date.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total debt of the platform.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setBaseDebt(uint256,uint256)",
      "name": "setBaseDebt",
      "description": "Set the base debt of a vault. only the vaultsCore module can call this function.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Vault ID of which the base debt will be updated.",
          "recommendedTypes": []
        },
        {
          "name": "_newBaseDebt",
          "description": "the new base debt of the vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setCollateralBalance(uint256,uint256)",
      "name": "setCollateralBalance",
      "description": "Set the collateral balance of a vault. only the vaultsCore module can call this function.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Vault ID of which the collateral balance will be updated.",
          "recommendedTypes": []
        },
        {
          "name": "_balance",
          "description": "the new balance of the vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vaultBaseDebt(uint256)",
      "name": "vaultBaseDebt",
      "description": "Get the base debt of a vault.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "the ID of the vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "base debt of the vault.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vaultCollateralBalance(uint256)",
      "name": "vaultCollateralBalance",
      "description": "Get the collateral balance of a vault.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "the ID of the vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "collateral balance of the vault.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vaultCollateralType(uint256)",
      "name": "vaultCollateralType",
      "description": "Get the collateral type of a vault.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "the ID of the vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address for the collateral type of the vault.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vaultCount()",
      "name": "vaultCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vaultDebt(uint256)",
      "name": "vaultDebt",
      "description": "Calculated the total outstanding debt for a specific vault. uses the existing cumulative rate. Call `refreshCollateral()` on `VaultsCore` to make sure it's up to date.",
      "parameterDecorators": [
        {
          "name": "_vaultId",
          "description": "the ID of the vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "total debt of one vault.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vaultExists(uint256)",
      "name": "vaultExists",
      "description": "Checks if a specified vault exists.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "the ID of the vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "boolean if the vault exists.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vaultId(address,address)",
      "name": "vaultId",
      "description": "Retrieve the vault id for a specified owner and collateral type. returns 0 for non-existing vaults.",
      "parameterDecorators": [
        {
          "name": "_collateralType",
          "description": "address of the collateral type (Eg: WETH).",
          "recommendedTypes": []
        },
        {
          "name": "_owner",
          "description": "address of the owner of the vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "vault id of the vault or 0.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vaultOwner(uint256)",
      "name": "vaultOwner",
      "description": "Get the owner of a vault.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "the ID of the vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "owner of the vault.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "vaults(uint256)",
      "name": "vaults",
      "description": "Get a vault by vault ID.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "The vault's ID to be retrieved.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "collateralType",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "owner",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "collateralBalance",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "baseDebt",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "createdAt",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}