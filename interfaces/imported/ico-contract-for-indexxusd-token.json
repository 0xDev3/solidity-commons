{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "ICO_IndexxUSDP",
  "description": "ICO Contract for IndexxUSD+ Token. For Presales Rounds and multiple ICO phases.",
  "eventDecorators": [
    {
      "signature": "TokenPurchase(address,address,uint256,uint256)",
      "name": "TokenPurchase",
      "description": "An event thats emitted when a withdrawal is made from Pool.",
      "parameterDecorators": [
        {
          "name": "purchaser",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptedTokens(address)",
      "name": "acceptedTokens",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyIndexxFromAnyBEP20(address,uint256,address)",
      "name": "buyIndexxFromAnyBEP20",
      "description": "Function to buy Indexx token through any BEP20 token.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "Address of investor.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Amount of coin paid by investor.",
          "recommendedTypes": []
        },
        {
          "name": "tokenAddress",
          "description": "Address of BEP20 token used.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyIndexxFromBNB(address)",
      "name": "buyIndexxFromBNB",
      "description": "Function to buy Indexx token through BNB token.",
      "parameterDecorators": [
        {
          "name": "_beneficiary",
          "description": "Address of investor.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeDiscount(uint256)",
      "name": "changeDiscount",
      "description": "Function to change discount on Token sales anytime.",
      "parameterDecorators": [
        {
          "name": "_discount",
          "description": "Discount offered to investor on token purchase on S&P asset pricing.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeIcoAdmin(address)",
      "name": "changeIcoAdmin",
      "description": "Function to change ICO admin.",
      "parameterDecorators": [
        {
          "name": "_newAdmin",
          "description": "Address of new ICO Admin.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "closingTime()",
      "name": "closingTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "contributions(address)",
      "name": "contributions",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "discount()",
      "name": "discount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasClosed()",
      "name": "hasClosed",
      "description": "Function to check status of sale / ICO.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "icoAdmin()",
      "name": "icoAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "indexxCryptoPriceUSD()",
      "name": "indexxCryptoPriceUSD",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "investorMinCap()",
      "name": "investorMinCap",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "openingTime()",
      "name": "openingTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reserveWallet()",
      "name": "reserveWallet",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "scheduleSale(uint256,uint256,uint256)",
      "name": "scheduleSale",
      "description": "Function to start a new or modify existing token sale/ICO schedule and discounts.",
      "parameterDecorators": [
        {
          "name": "_openingTime",
          "description": "Start time of ICO / Sale.",
          "recommendedTypes": []
        },
        {
          "name": "_closingTime",
          "description": "Closing time of ICO / Sale.",
          "recommendedTypes": []
        },
        {
          "name": "_discount",
          "description": "Discount offered to investor on token purchase on S&P asset pricing.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "timelockContract()",
      "name": "timelockContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "weiRaised()",
      "name": "weiRaised",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw()",
      "name": "withdraw",
      "description": "Function to withdraw contract balance in admin account.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}