{
  "schema": "../schema.json",
  "tags": [],
  "name": "StrategiesHelper",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "addressesGeneratorAddress()",
      "name": "addressesGeneratorAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetStrategies(address)",
      "name": "assetStrategies",
      "description": "Fetch metadata for all strategies scoped to a vault.",
      "parameterDecorators": [
        {
          "name": "assetAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "name",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "apiVersion",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "strategist",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "rewards",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "vault",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "keeper",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "want",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "emergencyExit",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "isActive",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "delegatedAssets",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "estimatedTotalAssets",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "doHealthCheck",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "healthCheckAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetStrategiesAddresses(address)",
      "name": "assetStrategiesAddresses",
      "description": "Fetch strategy addresses given a vault address.",
      "parameterDecorators": [
        {
          "name": "assetAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetStrategiesDelegatedBalance(address)",
      "name": "assetStrategiesDelegatedBalance",
      "description": "Fetch delegated balance for all of a vault's strategies.",
      "parameterDecorators": [
        {
          "name": "assetAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetStrategiesLength(address)",
      "name": "assetStrategiesLength",
      "description": "Fetch the number of strategies for a vault.",
      "parameterDecorators": [
        {
          "name": "assetAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetsStrategies()",
      "name": "assetsStrategies",
      "description": "Fetch metadata for all strategies.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "name",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "apiVersion",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "strategist",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "rewards",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "vault",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "keeper",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "want",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "emergencyExit",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "isActive",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "delegatedAssets",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "estimatedTotalAssets",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "doHealthCheck",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "healthCheckAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetsStrategiesAddresses()",
      "name": "assetsStrategiesAddresses",
      "description": "Fetch all strategy addresses for all vaults.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetsStrategiesAddresses(address[])",
      "name": "assetsStrategiesAddresses",
      "description": "Fetch all strategy addresses given an array of vaults.",
      "parameterDecorators": [
        {
          "name": "_assetsAddresses",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetsStrategiesDelegatedBalance()",
      "name": "assetsStrategiesDelegatedBalance",
      "description": "Fetch total delegated balance for all strategies.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assetsStrategiesLength()",
      "name": "assetsStrategiesLength",
      "description": "Fetch the total number of strategies for all vaults.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "helperAddress()",
      "name": "helperAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ownerAddress()",
      "name": "ownerAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "strategies(address[])",
      "name": "strategies",
      "description": "Fetch metadata for strategies given an array of strategy addresses.",
      "parameterDecorators": [
        {
          "name": "_strategiesAddresses",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "name",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "apiVersion",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "strategist",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "rewards",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "vault",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "keeper",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "want",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "emergencyExit",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "isActive",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "delegatedAssets",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "estimatedTotalAssets",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "doHealthCheck",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "healthCheckAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "strategy(address)",
      "name": "strategy",
      "description": "Fetch metadata for a strategy given a strategy address.",
      "parameterDecorators": [
        {
          "name": "strategyAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "name",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "apiVersion",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "strategist",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "rewards",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "vault",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "keeper",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "want",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "emergencyExit",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "isActive",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "delegatedAssets",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "estimatedTotalAssets",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "doHealthCheck",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "bool"
            },
            {
              "name": "healthCheckAddress",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateSlot(bytes32,bytes32)",
      "name": "updateSlot",
      "description": "Allow storage slots to be manually updated.",
      "parameterDecorators": [
        {
          "name": "slot",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}