{
  "schema": "../schema.json",
  "tags": [
    "locking"
  ],
  "name": "DFSRegistry",
  "description": "Stores all the important DFS addresses and can be changed (timelock).",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "ERR_ALREADY_IN_CONTRACT_CHANGE()",
      "name": "ERR_ALREADY_IN_CONTRACT_CHANGE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_ALREADY_IN_WAIT_PERIOD_CHANGE()",
      "name": "ERR_ALREADY_IN_WAIT_PERIOD_CHANGE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_CHANGE_NOT_READY()",
      "name": "ERR_CHANGE_NOT_READY",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_EMPTY_PREV_ADDR()",
      "name": "ERR_EMPTY_PREV_ADDR",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_ENTRY_ALREADY_EXISTS()",
      "name": "ERR_ENTRY_ALREADY_EXISTS",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_ENTRY_NON_EXISTENT()",
      "name": "ERR_ENTRY_NON_EXISTENT",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_ENTRY_NOT_IN_CHANGE()",
      "name": "ERR_ENTRY_NOT_IN_CHANGE",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ERR_WAIT_PERIOD_SHORTER()",
      "name": "ERR_WAIT_PERIOD_SHORTER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addNewContract(bytes32,address,uint256)",
      "name": "addNewContract",
      "description": "Adds a new contract to the registry.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Id of contract.",
          "recommendedTypes": []
        },
        {
          "name": "_contractAddr",
          "description": "Address of the contract.",
          "recommendedTypes": []
        },
        {
          "name": "_waitPeriod",
          "description": "Amount of time to wait before a contract address can be changed.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "adminVault()",
      "name": "adminVault",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approveContractChange(bytes32)",
      "name": "approveContractChange",
      "description": "Changes new contract address, correct time must have passed.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Id of contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "approveWaitPeriodChange(bytes32)",
      "name": "approveWaitPeriodChange",
      "description": "Changes new wait period, correct time must have passed.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Id of contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cancelContractChange(bytes32)",
      "name": "cancelContractChange",
      "description": "Cancel pending change.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Id of contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "cancelWaitPeriodChange(bytes32)",
      "name": "cancelWaitPeriodChange",
      "description": "Cancel wait period change.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Id of contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeAdminVault(address)",
      "name": "changeAdminVault",
      "description": "Changes the admin vault that is currently used.",
      "parameterDecorators": [
        {
          "name": "_newAdminVault",
          "description": "Address of the new Admin Vault contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "entries(bytes32)",
      "name": "entries",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "contractAddr",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "waitPeriod",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "changeStartTime",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "inContractChange",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "inWaitPeriodChange",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        },
        {
          "name": "exists",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAddr(bytes32)",
      "name": "getAddr",
      "description": "Given an contract id returns the registred address. Id is keccak256 of the contract name.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Id of contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isRegistered(bytes32)",
      "name": "isRegistered",
      "description": "Helper function to easily query if id is registred.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Id of contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "kill()",
      "name": "kill",
      "description": "Destroy the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "logger()",
      "name": "logger",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingAddresses(bytes32)",
      "name": "pendingAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingWaitTimes(bytes32)",
      "name": "pendingWaitTimes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "previousAddresses(bytes32)",
      "name": "previousAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "revertToPreviousAddress(bytes32)",
      "name": "revertToPreviousAddress",
      "description": "Revertes to the previous address immediately. In case the new version has a fault, a quick way to fallback to the old contract.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Id of contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startContractChange(bytes32,address)",
      "name": "startContractChange",
      "description": "Starts an address change for an existing entry. Can override a change that is currently in progress.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Id of contract.",
          "recommendedTypes": []
        },
        {
          "name": "_newContractAddr",
          "description": "Address of the new contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startWaitPeriodChange(bytes32,uint256)",
      "name": "startWaitPeriodChange",
      "description": "Starts the change for waitPeriod.",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "Id of contract.",
          "recommendedTypes": []
        },
        {
          "name": "_newWaitPeriod",
          "description": "New wait time.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawStuckFunds(address,address,uint256)",
      "name": "withdrawStuckFunds",
      "description": "withdraw stuck funds.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_receiver",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}