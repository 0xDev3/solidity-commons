{"schema":"../schema.json","tags":["tokens","staking"],"name":"StakeManager","description":"The StakeManager implementation. An IStakeManager instance that accepts stakes in any ERC-20 token.Single StakeInfo of a single RelayManager can only have one token address assigned to it.It cannot be changed after the first time 'stakeForRelayManager' is called as it is equivalent to withdrawal.","eventDecorators":[{"signature":"BurnAddressSet(address)","name":"BurnAddressSet","description":"Emitted when a `burnAddress` is changed.","parameterDecorators":[{"name":"burnAddress","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"HubAuthorized(address,address)","name":"HubAuthorized","description":"Emitted when a `relayManager` adds a new `RelayHub` to a list of authorized.","parameterDecorators":[{"name":"relayManager","description":"","recommendedTypes":[],"indexed":true},{"name":"relayHub","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"HubUnauthorized(address,address,uint256)","name":"HubUnauthorized","description":"Emitted when a `relayManager` removes a `RelayHub` from a list of authorized.","parameterDecorators":[{"name":"relayManager","description":"","recommendedTypes":[],"indexed":true},{"name":"relayHub","description":"","recommendedTypes":[],"indexed":true},{"name":"removalTime","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnerSet(address,address)","name":"OwnerSet","description":"Emitted when a `relayManager` sets its `owner`. This is necessary to prevent stake hijacking.","parameterDecorators":[{"name":"relayManager","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"StakeAdded(address,address,address,uint256,uint256)","name":"StakeAdded","description":"Emitted when a `stake` or `unstakeDelay` are initialized or increased.","parameterDecorators":[{"name":"relayManager","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"stake","description":"","recommendedTypes":[],"indexed":false},{"name":"unstakeDelay","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StakePenalized(address,address,address,uint256)","name":"StakePenalized","description":"Emitted when an authorized `RelayHub` penalizes a `relayManager`.","parameterDecorators":[{"name":"relayManager","description":"","recommendedTypes":[],"indexed":true},{"name":"beneficiary","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"reward","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StakeUnlocked(address,address,uint256)","name":"StakeUnlocked","description":"Emitted once a stake is scheduled for withdrawal.","parameterDecorators":[{"name":"relayManager","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"withdrawTime","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"StakeWithdrawn(address,address,address,uint256)","name":"StakeWithdrawn","description":"Emitted when owner withdraws `relayManager` funds.","parameterDecorators":[{"name":"relayManager","description":"","recommendedTypes":[],"indexed":true},{"name":"owner","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"authorizeHubByManager(address)","name":"authorizeHubByManager","description":"Same as `authorizeHubByOwner` but can be called by the RelayManager itself.","parameterDecorators":[{"name":"relayHub","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"authorizeHubByOwner(address,address)","name":"authorizeHubByOwner","description":"Add the `RelayHub` to a list of authorized by this Relay Manager. This allows the RelayHub to penalize this Relay Manager. The `RelayHub` cannot trust a Relay it cannot penalize.","parameterDecorators":[{"name":"relayManager","description":"The address of a Relay Manager whose stake is to be authorized for the new `RelayHub`.","recommendedTypes":[]},{"name":"relayHub","description":"The address of a `RelayHub` to be authorized.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"authorizedHubs(address,address)","name":"authorizedHubs","description":"maps relay managers to a map of addressed of their authorized hubs to the information on that hub.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"removalTime","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getBurnAddress()","name":"getBurnAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The address that will receive the 'burned' part of the penalized stake.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getCreationBlock()","name":"getCreationBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"the block number in which the contract has been deployed.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getMaxUnstakeDelay()","name":"getMaxUnstakeDelay","description":"","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"The maximum unstake delay this `StakeManger` allows. This is to prevent locking money forever by mistake.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getStakeInfo(address)","name":"getStakeInfo","description":"Get the stake details information for the given Relay Manager.","parameterDecorators":[{"name":"relayManager","description":"The address of a Relay Manager.","recommendedTypes":[]}],"returnDecorators":[{"name":"stakeInfo","description":"The `StakeInfo` structure.","recommendedTypes":[],"solidityType":"tuple"},{"name":"isSenderAuthorizedHub","description":"`true` if the `msg.sender` for this call was a `RelayHub` that is authorized now. `false` if the `msg.sender` for this call is not authorized.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"penalizeRelayManager(address,address,uint256)","name":"penalizeRelayManager","description":"Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns part of stake on the way.","parameterDecorators":[{"name":"relayManager","description":"The address of a Relay Manager to be penalized.","recommendedTypes":[]},{"name":"beneficiary","description":"The address that receives part of the penalty amount.","recommendedTypes":[]},{"name":"amount","description":"A total amount of penalty to be withdrawn from stake.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setBurnAddress(address)","name":"setBurnAddress","description":"Change the address that will receive the 'burned' part of the penalized stake. This is done to prevent malicious Relay Server from penalizing itself and breaking even.","parameterDecorators":[{"name":"_burnAddress","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setRelayManagerOwner(address)","name":"setRelayManagerOwner","description":"Set the owner of a Relay Manager. Called only by the RelayManager itself. Note that owners cannot transfer ownership - if the entry already exists, reverts.","parameterDecorators":[{"name":"owner","description":"- owner of the relay (as configured off-chain).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakeForRelayManager(address,address,uint256,uint256)","name":"stakeForRelayManager","description":"Put a stake for a relayManager and set its unstake delay. Only the owner can call this function. If the entry does not exist, reverts. The owner must give allowance of the ERC-20 token to the StakeManager before calling this method. It is the RelayHub who has a configurable list of minimum stakes per token. StakeManager accepts all tokens.","parameterDecorators":[{"name":"token","description":"The address of an ERC-20 token that is used by the relayManager as a stake.","recommendedTypes":[]},{"name":"relayManager","description":"The address that represents a stake entry and controls relay registrations on relay hubs.","recommendedTypes":[]},{"name":"unstakeDelay","description":"The number of seconds to elapse before an owner can retrieve the stake after calling `unlock`.","recommendedTypes":[]},{"name":"amount","description":"The amount of tokens to be taken from the relayOwner and locked in the StakeManager as a stake.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stakes(address)","name":"stakes","description":"maps relay managers to their stakes.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"stake","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"unstakeDelay","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"withdrawTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"token","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"owner","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unauthorizeHubByManager(address)","name":"unauthorizeHubByManager","description":"Same as `unauthorizeHubByOwner` but can be called by the RelayManager itself.","parameterDecorators":[{"name":"relayHub","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unauthorizeHubByOwner(address,address)","name":"unauthorizeHubByOwner","description":"Remove the `RelayHub` from a list of authorized by this Relay Manager.","parameterDecorators":[{"name":"relayManager","description":"The address of a Relay Manager.","recommendedTypes":[]},{"name":"relayHub","description":"The address of a `RelayHub` to be unauthorized.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"unlockStake(address)","name":"unlockStake","description":"Schedule the unlocking of the stake. The `unstakeDelay` must pass before owner can call `withdrawStake`.","parameterDecorators":[{"name":"relayManager","description":"The address of a Relay Manager whose stake is to be unlocked.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"versionSM()","name":"versionSM","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"withdrawStake(address)","name":"withdrawStake","description":"Withdraw the unlocked stake.","parameterDecorators":[{"name":"relayManager","description":"The address of a Relay Manager whose stake is to be withdrawn.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}