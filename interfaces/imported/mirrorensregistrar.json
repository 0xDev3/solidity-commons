{"schema":"../schema.json","tags":[],"name":"MirrorENSRegistrar","description":"","eventDecorators":[{"signature":"ENSResolverChanged(address)","name":"ENSResolverChanged","description":"An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.","parameterDecorators":[{"name":"addr","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnerChanged(address)","name":"OwnerChanged","description":"An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.","parameterDecorators":[{"name":"_newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Registered(address,string)","name":"Registered","description":"An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.","parameterDecorators":[{"name":"_owner","description":"","recommendedTypes":[],"indexed":true},{"name":"_ens","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RootnodeOwnerChange(bytes32,address)","name":"RootnodeOwnerChange","description":"An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.","parameterDecorators":[{"name":"_rootnode","description":"","recommendedTypes":[],"indexed":true},{"name":"_newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Unregistered(string)","name":"Unregistered","description":"An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.","parameterDecorators":[{"name":"_ens","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"ADDR_REVERSE_NODE()","name":"ADDR_REVERSE_NODE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"changeENSResolver(address)","name":"changeENSResolver","description":"Lets the owner change the address of the ENS resolver contract.","parameterDecorators":[{"name":"_ensResolver","description":"The address of the ENS resolver contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeOwner(address)","name":"changeOwner","description":"Lets the owner transfer ownership of the contract to a new owner.","parameterDecorators":[{"name":"_newOwner","description":"The new owner.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeRootnodeOwner(address)","name":"changeRootnodeOwner","description":"This function must be called when the ENS Manager contract is replaced and the address of the new Manager should be provided.","parameterDecorators":[{"name":"_newOwner","description":"The address of the new ENS manager that will manage the root node.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"ensRegistry()","name":"ensRegistry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"ensResolver()","name":"ensResolver","description":"Gets the ENS Resolver.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getENSReverseRegistrar()","name":"getENSReverseRegistrar","description":"Gets the official ENS reverse registrar.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Address of the ENS reverse registrar.","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isAvailable(bytes32)","name":"isAvailable","description":"Returns true is a given subnode is available.","parameterDecorators":[{"name":"_subnode","description":"The target subnode.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"true if the subnode is available.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"mirrorInviteToken()","name":"mirrorInviteToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"register(string,address,address)","name":"register","description":"Lets the manager assign an ENS subdomain of the root node to a target address. Registers both the forward and reverse ENS.","parameterDecorators":[{"name":"_label","description":"The subdomain label.","recommendedTypes":[]},{"name":"_owner","description":"The owner of the subdomain.","recommendedTypes":[]},{"name":"_spender","description":"The spender funding the registration.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rootName()","name":"rootName","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"rootNode()","name":"rootNode","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true}]}