{
  "schema": "../schema.json",
  "tags": [
    "flash loans"
  ],
  "name": "FlashBot",
  "description": "",
  "eventDecorators": [
    {
      "signature": "BaseTokenAdded(address)",
      "name": "BaseTokenAdded",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "BaseTokenRemoved(address)",
      "name": "BaseTokenRemoved",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Withdrawn(address,uint256)",
      "name": "Withdrawn",
      "description": "** EVENTS ** ///.",
      "parameterDecorators": [
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addBaseToken(address)",
      "name": "addBaseToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "baseTokensContains(address)",
      "name": "baseTokensContains",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "disperseEther(address[],uint256[])",
      "name": "disperseEther",
      "description": "",
      "parameterDecorators": [
        {
          "name": "recipients",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "values",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "flashArbitrage(address,address)",
      "name": "flashArbitrage",
      "description": "Do an arbitrage between two Uniswap-like AMM pools. Two pools must contains same token pair.",
      "parameterDecorators": [
        {
          "name": "pool0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "pool1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBaseTokens()",
      "name": "getBaseTokens",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "tokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProfit(address,address)",
      "name": "getProfit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pool0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "pool1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "profit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "baseToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeBaseToken(address)",
      "name": "removeBaseToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uniswapV2Call(address,uint256,uint256,bytes)",
      "name": "uniswapV2Call",
      "description": "",
      "parameterDecorators": [
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdraw()",
      "name": "withdraw",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}