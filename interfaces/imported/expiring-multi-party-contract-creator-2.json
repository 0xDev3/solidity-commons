{
  "schema": "../schema.json",
  "tags": [],
  "name": "ExpiringMultiPartyCreator",
  "description": "Expiring Multi Party Contract creator.",
  "eventDecorators": [
    {
      "signature": "CreatedExpiringMultiParty(address,address)",
      "name": "CreatedExpiringMultiParty",
      "description": "Event for token purchase logging.",
      "parameterDecorators": [
        {
          "name": "expiringMultiPartyAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "deployerAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "createExpiringMultiParty(tuple(uint256,address,bytes32,string,string,tuple,tuple,tuple,tuple,tuple,uint256,uint256,address))",
      "name": "createExpiringMultiParty",
      "description": "",
      "parameterDecorators": [
        {
          "name": "params",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "expirationTimestamp",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralAddress",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "priceFeedIdentifier",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "syntheticName",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "syntheticSymbol",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "collateralRequirement",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "disputeBondPct",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "sponsorDisputeRewardPct",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "disputerDisputeRewardPct",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "minSponsorTokens",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "withdrawalLiveness",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "liquidationLiveness",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "excessTokenBeneficiary",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getCurrentTime()",
      "name": "getCurrentTime",
      "description": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint for the current Testable timestamp.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setCurrentTime(uint256)",
      "name": "setCurrentTime",
      "description": "Sets the current time. Will revert if not running in test mode.",
      "parameterDecorators": [
        {
          "name": "time",
          "description": "timestamp to set current Testable time to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "timerAddress()",
      "name": "timerAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokenFactoryAddress()",
      "name": "tokenFactoryAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}