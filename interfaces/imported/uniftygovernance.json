{"schema":"../schema.json","tags":[],"name":"UniftyGovernance","description":"","eventDecorators":[{"signature":"Allocated(address,address,address,uint256)","name":"Allocated","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"consumer","description":"","recommendedTypes":[],"indexed":false},{"name":"peer","description":"","recommendedTypes":[],"indexed":false},{"name":"untEarned","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Dellocated(address,address,address,uint256)","name":"Dellocated","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"consumer","description":"","recommendedTypes":[],"indexed":false},{"name":"peer","description":"","recommendedTypes":[],"indexed":false},{"name":"untEarned","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Executed(address,uint256)","name":"Executed","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"executor","description":"","recommendedTypes":[],"indexed":true},{"name":"proposalId","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Proposed(address,uint256,uint256,uint256)","name":"Proposed","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"initiator","description":"","recommendedTypes":[],"indexed":true},{"name":"proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"expires","description":"","recommendedTypes":[],"indexed":false},{"name":"actionId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Staked(address,uint256,bool,uint256)","name":"Staked","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"stake","description":"","recommendedTypes":[],"indexed":false},{"name":"peerAccepted","description":"","recommendedTypes":[],"indexed":false},{"name":"untEarned","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unstaked(address,uint256,bool,uint256)","name":"Unstaked","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"unstake","description":"","recommendedTypes":[],"indexed":false},{"name":"peerAccepted","description":"","recommendedTypes":[],"indexed":false},{"name":"untEarned","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Voted(address,uint256,uint256,bool,uint256)","name":"Voted","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"voter","description":"","recommendedTypes":[],"indexed":true},{"name":"proposalId","description":"","recommendedTypes":[],"indexed":true},{"name":"voteId","description":"","recommendedTypes":[],"indexed":true},{"name":"supporting","description":"","recommendedTypes":[],"indexed":false},{"name":"power","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Withdrawn(address,uint256)","name":"Withdrawn","description":"Events ///. Emitted when someone's membership role is being updated.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"accountInfo(address)","name":"accountInfo","description":"The userNifStakes struct as accountInfo as convenience function for external callers. Returns nulled peer allocations if the peer doesn't exist any longer, so this should be called externally to get proper information about the current peer state of an account.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param4","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"accrueStart()","name":"accrueStart","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"addressProposal(uint256)","name":"addressProposal","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"value","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"value3","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"addressProposalInfo(uint256)","name":"addressProposalInfo","description":"","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"allNifStakes()","name":"allNifStakes","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"allocate(address,address)","name":"allocate","description":"Allocates stakes to a consumer's peer. Fails if an allocated peer does not accept the allocation. returns the earned unt from the previous peer if any.","parameterDecorators":[{"name":"_consumer","description":"","recommendedTypes":[]},{"name":"_peer","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"consumerCounter()","name":"consumerCounter","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"consumerIdByType(address)","name":"consumerIdByType","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"consumerInfo(address)","name":"consumerInfo","description":"The consumer struct info as convenience function for external callers.","parameterDecorators":[{"name":"_consumer","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"address[]"}],"emittableEvents":[],"readOnly":true},{"signature":"consumerNifAllocation(address)","name":"consumerNifAllocation","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"consumerPeerExists(address,address)","name":"consumerPeerExists","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"consumerPeerNifAllocation(address,address)","name":"consumerPeerNifAllocation","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"consumers(uint256)","name":"consumers","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"consumer","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"grantStartTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"grantRateSeconds","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"grantSizeUnt","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"credit(address)","name":"credit","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"dellocate()","name":"dellocate","description":"Dellocates a user's peer-allocation.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"earnedUnt(address)","name":"earnedUnt","description":"","parameterDecorators":[{"name":"_consumer","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"epoch()","name":"epoch","description":"Calculating the current epoch.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"epochDuration()","name":"epochDuration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"execute(uint256)","name":"execute","description":"Triggers the corresponding action if the vote is concluded in favor of support and expired.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"frozen(address)","name":"frozen","description":"Checks if the consumer and peer an account allocated funds are frozen or not.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"genesisReward()","name":"genesisReward","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"graceTime()","name":"graceTime","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"grantableUnt()","name":"grantableUnt","description":"Calculating the available UNT overall based on past and current epochs minus what has been reserved for grants. Amount of loops is expected to be small, taking hundreds of years before running into gas issues.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"grantedUnt()","name":"grantedUnt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"isExecutive(address)","name":"isExecutive","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isPausing()","name":"isPausing","description":"True if either manually paused or overall nif stakes below minNifOverallStake.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"maxProposalDuration()","name":"maxProposalDuration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"minNifConsumptionStake()","name":"minNifConsumptionStake","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"minNifOverallStake()","name":"minNifOverallStake","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"minNifStake()","name":"minNifStake","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"minProposalDuration()","name":"minProposalDuration","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"mintUnt(uint256)","name":"mintUnt","description":"Not locked as it must be callable by authorized consumers at any time. This is ok as we do not call any untrusted contract's function and update all items prior the mint function in the end.","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"mintedUnt()","name":"mintedUnt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"mintedUntConsumer(address)","name":"mintedUntConsumer","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nifAddress()","name":"nifAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"nifAllocation()","name":"nifAllocation","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nifAllocationLength(address,address)","name":"nifAllocationLength","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nifStakeTimelock()","name":"nifStakeTimelock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"pausing()","name":"pausing","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"peerExists(address)","name":"peerExists","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalCounter()","name":"proposalCounter","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"proposalExecutionLimit()","name":"proposalExecutionLimit","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"proposals(uint256)","name":"proposals","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"initiator","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"executed","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"numVotes","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"numSupporting","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"numNotSupporting","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"openUntil","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"proposalId","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"actionId","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"url","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"proposeAddConsumer(address,uint256,uint256,uint256,uint256,string)","name":"proposeAddConsumer","description":"Action ID = 3 _percentages must be current consumers length + 1. The last item in _percentages is the percentage for the currently proposed consumer.","parameterDecorators":[{"name":"_consumer","description":"","recommendedTypes":[]},{"name":"_sizeUnt","description":"","recommendedTypes":[]},{"name":"_rateSeconds","description":"","recommendedTypes":[]},{"name":"_startTime","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeConsumerRemovePeerFromWhitelist(address,address,uint256,string)","name":"proposeConsumerRemovePeerFromWhitelist","description":"Action ID = 6.","parameterDecorators":[{"name":"_consumer","description":"","recommendedTypes":[]},{"name":"_peer","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeConsumerWhitelistPeer(address,address,uint256,string)","name":"proposeConsumerWhitelistPeer","description":"Action ID = 5.","parameterDecorators":[{"name":"_consumer","description":"","recommendedTypes":[]},{"name":"_peer","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeGeneral(uint256,string)","name":"proposeGeneral","description":"Action ID = 9.","parameterDecorators":[{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeMaxProposalDuration(uint256,uint256,string)","name":"proposeMaxProposalDuration","description":"Action ID = 10.","parameterDecorators":[{"name":"_maxProposalDuration","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeMinNifConsumptionStake(uint256,uint256,string)","name":"proposeMinNifConsumptionStake","description":"Action ID = 8.","parameterDecorators":[{"name":"_minNifConsumptionStake","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeMinNifOverallStake(uint256,uint256,string)","name":"proposeMinNifOverallStake","description":"Action ID = 1.","parameterDecorators":[{"name":"_minNifOverallStake","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeMinNifStake(uint256,uint256,string)","name":"proposeMinNifStake","description":"Action ID = 2.","parameterDecorators":[{"name":"_minNifStake","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeMinProposalDuration(uint256,uint256,string)","name":"proposeMinProposalDuration","description":"Action ID = 11.","parameterDecorators":[{"name":"_minProposalDuration","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeNifStakeTimelock(uint256,uint256,string)","name":"proposeNifStakeTimelock","description":"Action ID = 14.","parameterDecorators":[{"name":"_nifStakeTimelock","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeProposalExecutionLimit(uint256,uint256,string)","name":"proposeProposalExecutionLimit","description":"Action ID = 12.","parameterDecorators":[{"name":"_proposalExecutionLimit","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeQuorum(uint256,uint256,string)","name":"proposeQuorum","description":"Action ID = 13.","parameterDecorators":[{"name":"_quorum","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeRemoveConsumer(address,uint256,string)","name":"proposeRemoveConsumer","description":"Action ID = 4.","parameterDecorators":[{"name":"_consumer","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"proposeUpdateConsumerGrant(address,uint256,uint256,uint256,uint256,string)","name":"proposeUpdateConsumerGrant","description":"Action ID = 7.","parameterDecorators":[{"name":"_consumer","description":"","recommendedTypes":[]},{"name":"_sizeUnt","description":"","recommendedTypes":[]},{"name":"_rateSeconds","description":"","recommendedTypes":[]},{"name":"_startTime","description":"","recommendedTypes":[]},{"name":"_duration","description":"","recommendedTypes":[]},{"name":"_url","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"quorum()","name":"quorum","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setExecutive(address,bool)","name":"setExecutive","description":"The current executives may add new executives.","parameterDecorators":[{"name":"_executive","description":"","recommendedTypes":[]},{"name":"_add","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setPaused(bool)","name":"setPaused","description":"Pausing the governance is the responsibility of the governance executives, not votable.","parameterDecorators":[{"name":"_pausing","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stake(uint256)","name":"stake","description":"Simple NIF staking. If not paused, frozen and the minNif is being sent or already available, staking is allowed. No further state changes to anyone's staked nif is performed other than individual unstaking. This is to make sure that nif funds can be unstaked at any time after the timelock expired, under any circumstance. Returns false if an allocation update to a peer silently failed and the earned unt.","parameterDecorators":[{"name":"_stake","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"uint256Proposal(uint256)","name":"uint256Proposal","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"value","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"value3","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"value4","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"uint256ProposalInfo(uint256)","name":"uint256ProposalInfo","description":"service function.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"unstake(uint256)","name":"unstake","description":"Unstaking is allowed at any given time (after min period and if peers allow it signalled through frozen()). Unstaking removes voting power. returns potential unt earned and sends it to the account. \"potentially\" as it depends on the consumer's implementation. returns true or false if the allocationUpdate has been accepted by the peer and the earned unt from allocated peer.","parameterDecorators":[{"name":"_unstaking","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"untAddress()","name":"untAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"userNifStakes(address)","name":"userNifStakes","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"user","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"peerConsumer","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"peer","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"peerAllocationTime","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"unstakableFrom","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"vote(uint256,bool)","name":"vote","description":"A vote for a proposal uses the user nif earned points as voting power.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[]},{"name":"_supporting","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"voted(uint256,address)","name":"voted","description":"For clients with ABI v1 support.","parameterDecorators":[{"name":"_proposalId","description":"","recommendedTypes":[]},{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"votes(uint256,uint256)","name":"votes","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"voter","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"supporting","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"power","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"proposalId","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"voteTime","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"votesCounter(uint256)","name":"votesCounter","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw()","name":"withdraw","description":"Returns credited NIF after the cooldown period.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}