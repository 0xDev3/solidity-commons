{"schema":"../schema.json","tags":[],"name":"QuotationData","description":"","eventDecorators":[{"signature":"CoverDetailsEvent(uint256,address,uint256,uint256,uint256,uint256,bytes4)","name":"CoverDetailsEvent","description":"","parameterDecorators":[{"name":"cid","description":"","recommendedTypes":[],"indexed":true},{"name":"scAdd","description":"","recommendedTypes":[],"indexed":false},{"name":"sumAssured","description":"","recommendedTypes":[],"indexed":false},{"name":"expiry","description":"","recommendedTypes":[],"indexed":false},{"name":"premium","description":"","recommendedTypes":[],"indexed":false},{"name":"premiumNXM","description":"","recommendedTypes":[],"indexed":false},{"name":"curr","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"CoverStatusEvent(uint256,uint8)","name":"CoverStatusEvent","description":"","parameterDecorators":[{"name":"cid","description":"","recommendedTypes":[],"indexed":true},{"name":"statusNum","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"changeDependentContractAddress()","name":"changeDependentContractAddress","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeAuthQuoteEngine(address)","name":"changeAuthQuoteEngine","description":"Changes authorised address for generating quote off chain.","parameterDecorators":[{"name":"_add","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getCoverSumAssured(uint256)","name":"getCoverSumAssured","description":"Gets the Sum Assured Amount of a given cover.","parameterDecorators":[{"name":"_cid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"sa","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getProductDetails()","name":"getProductDetails","description":"Gets Product details.","parameterDecorators":[],"returnDecorators":[{"name":"_minDays","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"_pm","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"_stl","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"_stlp","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"stl()","name":"stl","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"addHoldCover(address,address,bytes4,uint256[],uint16)","name":"addHoldCover","description":"create holded cover which will process after verdict of KYC.","parameterDecorators":[{"name":"from","description":"","recommendedTypes":[]},{"name":"scAddress","description":"","recommendedTypes":[]},{"name":"coverCurr","description":"","recommendedTypes":[]},{"name":"coverDetails","description":"","recommendedTypes":[]},{"name":"coverPeriod","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"stlp()","name":"stlp","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCoverDetailsByCoverID2(uint256)","name":"getCoverDetailsByCoverID2","description":"Provides details of a cover Id.","parameterDecorators":[{"name":"_cid","description":"cover Id.","recommendedTypes":[]}],"returnDecorators":[{"name":"cid","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"status","description":"","recommendedTypes":[],"solidityType":"uint8"},{"name":"sumAssured","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"coverPeriod","description":"","recommendedTypes":[],"solidityType":"uint16"},{"name":"validUntil","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"addInTotalSumAssuredSC(address,bytes4,uint256)","name":"addInTotalSumAssuredSC","description":"Adds the amount in Total Sum Assured of a given currency of a given smart contract address.","parameterDecorators":[{"name":"_add","description":"Smart Contract Address.","recommendedTypes":[]},{"name":"_curr","description":"","recommendedTypes":[]},{"name":"_amount","description":"Amount to be added.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getCoverMemberAddress(uint256)","name":"getCoverMemberAddress","description":"Gets the owner address of a given cover.","parameterDecorators":[{"name":"_cid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_add","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalSumAssured(bytes4)","name":"getTotalSumAssured","description":"Gets the Total Sum Assured amount of a given currency.","parameterDecorators":[{"name":"_curr","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getHoldedCoverDetailsByID1(uint256)","name":"getHoldedCoverDetailsByID1","description":"Provides details of a holded cover Id.","parameterDecorators":[{"name":"_hcid","description":"holded cover Id.","recommendedTypes":[]}],"returnDecorators":[{"name":"hcid","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"scAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"coverCurr","description":"","recommendedTypes":[],"solidityType":"bytes4"},{"name":"coverPeriod","description":"","recommendedTypes":[],"solidityType":"uint16"}],"emittableEvents":[],"readOnly":true},{"signature":"getCoverStatusNo(uint256)","name":"getCoverStatusNo","description":"Gets the status of a given cover.","parameterDecorators":[{"name":"_cid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"getTotalSumAssuredSC(address,bytes4)","name":"getTotalSumAssuredSC","description":"Gets the Total Sum Assured amount of a given currency and smart contract address.","parameterDecorators":[{"name":"_add","description":"","recommendedTypes":[]},{"name":"_curr","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserCoverLength(address)","name":"getUserCoverLength","description":"Gets total number of covers generated by a given address.","parameterDecorators":[{"name":"_add","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"len","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setKycAuthAddress(address)","name":"setKycAuthAddress","description":"to set address of kyc authentication.","parameterDecorators":[{"name":"_add","description":"is the new address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"subFromTotalSumAssured(bytes4,uint256)","name":"subFromTotalSumAssured","description":"Subtracts the amount from Total Sum Assured of a given currency.","parameterDecorators":[{"name":"_curr","description":"Currency Name.","recommendedTypes":[]},{"name":"_amount","description":"Amount to be subtracted.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getUintParameters(bytes8)","name":"getUintParameters","description":"Gets Uint Parameters of a code.","parameterDecorators":[{"name":"code","description":"whose details we want.","recommendedTypes":[]}],"returnDecorators":[{"name":"codeVal","description":"","recommendedTypes":[],"solidityType":"bytes8"},{"name":"val","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCoverLength()","name":"getCoverLength","description":"Gets total number covers created till date.","parameterDecorators":[],"returnDecorators":[{"name":"len","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setHoldedCoverIDStatus(uint256,uint256)","name":"setHoldedCoverIDStatus","description":"to set current status of particular holded coverID (1 for not completed KYC, 2 for KYC passed, 3 for failed KYC or full refunded, 4 for KYC completed but cover not processed).","parameterDecorators":[{"name":"holdedCoverID","description":"","recommendedTypes":[]},{"name":"status","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getValidityOfCover(uint256)","name":"getValidityOfCover","description":"Gets the validity date (timestamp) of a given cover.","parameterDecorators":[{"name":"_cid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"date","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCoverPeriod(uint256)","name":"getCoverPeriod","description":"Gets the Cover Period (in days) of a given cover.","parameterDecorators":[{"name":"_cid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"cp","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"subFromTotalSumAssuredSC(address,bytes4,uint256)","name":"subFromTotalSumAssuredSC","description":"Subtracts the amount from Total Sum Assured of a given currency and smart contract address.","parameterDecorators":[{"name":"_add","description":"Smart Contract Address.","recommendedTypes":[]},{"name":"_curr","description":"","recommendedTypes":[]},{"name":"_amount","description":"Amount to be subtracted.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTimestampRepeated(uint256)","name":"setTimestampRepeated","description":"sets bit for timestamp to avoid replay attacks.","parameterDecorators":[{"name":"_timestamp","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"kycAuthAddress()","name":"kycAuthAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pm()","name":"pm","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getCurrencyOfCover(uint256)","name":"getCurrencyOfCover","description":"Gets the Currency Name in which a given cover is assured.","parameterDecorators":[{"name":"_cid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"curr","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":true},{"signature":"addCover(uint16,uint256,address,bytes4,address,uint256,uint256)","name":"addCover","description":"Creates a blank new cover.","parameterDecorators":[{"name":"_coverPeriod","description":"","recommendedTypes":[]},{"name":"_sumAssured","description":"","recommendedTypes":[]},{"name":"_userAddress","description":"","recommendedTypes":[]},{"name":"_currencyCode","description":"","recommendedTypes":[]},{"name":"_scAddress","description":"","recommendedTypes":[]},{"name":"premium","description":"","recommendedTypes":[]},{"name":"premiumNXM","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getscAddressOfCover(uint256)","name":"getscAddressOfCover","description":"Gets Smart contract address of cover.","parameterDecorators":[{"name":"_cid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"timestampRepeated(uint256)","name":"timestampRepeated","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"updateUintParameters(bytes8,uint256)","name":"updateUintParameters","description":"Updates Uint Parameters of a code.","parameterDecorators":[{"name":"code","description":"whose details we want to update.","recommendedTypes":[]},{"name":"val","description":"value to set.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"ms()","name":"ms","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"addInTotalSumAssured(bytes4,uint256)","name":"addInTotalSumAssured","description":"Adds the amount in Total Sum Assured of a given currency.","parameterDecorators":[{"name":"_curr","description":"Currency Name.","recommendedTypes":[]},{"name":"_amount","description":"Amount to be added.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userHoldedCover(address,uint256)","name":"userHoldedCover","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"changeCoverStatusNo(uint256,uint8)","name":"changeCoverStatusNo","description":"Changes the status of a given cover.","parameterDecorators":[{"name":"_cid","description":"cover Id.","recommendedTypes":[]},{"name":"_stat","description":"New status.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"coverStatus(uint256)","name":"coverStatus","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"getCoverPremiumNXM(uint256)","name":"getCoverPremiumNXM","description":"Gets the premium amount of a given cover in NXM.","parameterDecorators":[{"name":"_cid","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_premiumNXM","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"holdedCoverIDStatus(uint256)","name":"holdedCoverIDStatus","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserHoldedCoverLength(address)","name":"getUserHoldedCoverLength","description":"Gets total number holded covers created till date.","parameterDecorators":[{"name":"_add","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getHoldedCoverDetailsByID2(uint256)","name":"getHoldedCoverDetailsByID2","description":"Provides the details of a holded cover Id.","parameterDecorators":[{"name":"_hcid","description":"holded cover Id.","recommendedTypes":[]}],"returnDecorators":[{"name":"hcid","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"memberAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"coverDetails","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true},{"signature":"changeMasterAddress(address)","name":"changeMasterAddress","description":"change master address.","parameterDecorators":[{"name":"_masterAddress","description":"is the new address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"refundEligible(address)","name":"refundEligible","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getCoverDetailsByCoverID1(uint256)","name":"getCoverDetailsByCoverID1","description":"Provides the details of a cover Id.","parameterDecorators":[{"name":"_cid","description":"cover Id.","recommendedTypes":[]}],"returnDecorators":[{"name":"cid","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"_memberAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"_scAddress","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"_currencyCode","description":"","recommendedTypes":[],"solidityType":"bytes4"},{"name":"_sumAssured","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"premiumNXM","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"authQuoteEngine()","name":"authQuoteEngine","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getAuthQuoteEngine()","name":"getAuthQuoteEngine","description":"Gets Authorised Engine address.","parameterDecorators":[],"returnDecorators":[{"name":"_add","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"minDays()","name":"minDays","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getUserHoldedCoverByIndex(address,uint256)","name":"getUserHoldedCoverByIndex","description":"Gets holded cover index by index of user holded covers.","parameterDecorators":[{"name":"_add","description":"","recommendedTypes":[]},{"name":"index","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"nxMasterAddress()","name":"nxMasterAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokensRetained()","name":"tokensRetained","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"setRefundEligible(address,bool)","name":"setRefundEligible","description":"sets refund eligible bit.","parameterDecorators":[{"name":"_add","description":"user address.","recommendedTypes":[]},{"name":"status","description":"indicates if user have pending kyc.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getAllCoversOfUser(address)","name":"getAllCoversOfUser","description":"Gets all the Cover ids generated by a given address.","parameterDecorators":[{"name":"_add","description":"User's address.","recommendedTypes":[]}],"returnDecorators":[{"name":"allCover","description":"","recommendedTypes":[],"solidityType":"uint256[]"}],"emittableEvents":[],"readOnly":true}]}