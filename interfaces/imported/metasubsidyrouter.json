{
  "schema": "../schema.json",
  "tags": [],
  "name": "MetaSubsidyRouter",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipPulled(address,address)",
      "name": "OwnershipPulled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipPushed(address,address)",
      "name": "OwnershipPushed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addSubsidyController(address,address)",
      "name": "addSubsidyController",
      "description": "add new subsidy controller for bond contract.",
      "parameterDecorators": [
        {
          "name": "_bond",
          "description": "address.",
          "recommendedTypes": []
        },
        {
          "name": "_subsidyController",
          "description": "address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "bondForController(address)",
      "name": "bondForController",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getSubsidyInfo()",
      "name": "getSubsidyInfo",
      "description": "subsidy controller fetches and resets payout counter.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "manager()",
      "name": "manager",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pullManagement()",
      "name": "pullManagement",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pushManagement(address)",
      "name": "pushManagement",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newOwner_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeSubsidyController(address)",
      "name": "removeSubsidyController",
      "description": "remove subsidy controller for bond contract.",
      "parameterDecorators": [
        {
          "name": "_subsidyController",
          "description": "address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceManagement()",
      "name": "renounceManagement",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}