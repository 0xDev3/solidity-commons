{
  "schema": "../schema.json",
  "tags": [],
  "name": "OneSplitAudit",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ImplementationUpdated(address)",
      "name": "ImplementationUpdated",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "newImpl",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Swapped(address,address,uint256,uint256,uint256,uint256[],uint256[],address,uint256)",
      "name": "Swapped",
      "description": "event emitted when a user has unstaked a token.",
      "parameterDecorators": [
        {
          "name": "fromToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "destToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "fromTokenAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "destTokenAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "minReturn",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "distribution",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "flags",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "referral",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "feePercent",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "chi()",
      "name": "chi",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimAsset(address,uint256)",
      "name": "claimAsset",
      "description": "",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getExpectedReturn(address,address,uint256,uint256,uint256)",
      "name": "getExpectedReturn",
      "description": "Calculate expected returning amount of `destToken`.",
      "parameterDecorators": [
        {
          "name": "fromToken",
          "description": "(IERC20) Address of token or `address(0)` for Ether.",
          "recommendedTypes": []
        },
        {
          "name": "destToken",
          "description": "(IERC20) Address of token or `address(0)` for Ether.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "(uint256) Amount for `fromToken`.",
          "recommendedTypes": []
        },
        {
          "name": "parts",
          "description": "(uint256) Number of pieces source volume could be splitted, works like granularity, higly affects gas usage. Should be called offchain, but could be called onchain if user swaps not his own funds, but this is still considered as not safe.",
          "recommendedTypes": []
        },
        {
          "name": "flags",
          "description": "(uint256) Flags for enabling and disabling some features, default 0.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "returnAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "distribution",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getExpectedReturnWithGas(address,address,uint256,uint256,uint256,uint256)",
      "name": "getExpectedReturnWithGas",
      "description": "Calculate expected returning amount of `destToken`.",
      "parameterDecorators": [
        {
          "name": "fromToken",
          "description": "(IERC20) Address of token or `address(0)` for Ether.",
          "recommendedTypes": []
        },
        {
          "name": "destToken",
          "description": "(IERC20) Address of token or `address(0)` for Ether.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "(uint256) Amount for `fromToken`.",
          "recommendedTypes": []
        },
        {
          "name": "parts",
          "description": "(uint256) Number of pieces source volume could be splitted, works like granularity, higly affects gas usage. Should be called offchain, but could be called onchain if user swaps not his own funds, but this is still considered as not safe.",
          "recommendedTypes": []
        },
        {
          "name": "flags",
          "description": "(uint256) Flags for enabling and disabling some features, default 0.",
          "recommendedTypes": []
        },
        {
          "name": "destTokenEthPriceTimesGasPrice",
          "description": "(uint256) destToken price to ETH multiplied by gas price.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "returnAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "estimateGasAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "distribution",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getExpectedReturnWithGasMulti(address[],uint256,uint256[],uint256[],uint256[])",
      "name": "getExpectedReturnWithGasMulti",
      "description": "Calculate expected returning amount of first `tokens` element to last `tokens` element through ann the middle tokens with corresponding `parts`, `flags` and `destTokenEthPriceTimesGasPrices` array values of each step.",
      "parameterDecorators": [
        {
          "name": "tokens",
          "description": "(IERC20[]) Address of token or `address(0)` for Ether.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "(uint256) Amount for `fromToken`.",
          "recommendedTypes": []
        },
        {
          "name": "parts",
          "description": "(uint256[]) Number of pieces source volume could be splitted.",
          "recommendedTypes": []
        },
        {
          "name": "flags",
          "description": "(uint256[]) Flags for enabling and disabling some features, default 0.",
          "recommendedTypes": []
        },
        {
          "name": "destTokenEthPriceTimesGasPrices",
          "description": "(uint256[]) destToken price to ETH multiplied by gas price.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "returnAmounts",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        },
        {
          "name": "estimateGasAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "distribution",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "oneSplitImpl()",
      "name": "oneSplitImpl",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setNewImpl(address)",
      "name": "setNewImpl",
      "description": "",
      "parameterDecorators": [
        {
          "name": "impl",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swap(address,address,uint256,uint256,uint256[],uint256)",
      "name": "swap",
      "description": "Swap `amount` of `fromToken` to `destToken`.",
      "parameterDecorators": [
        {
          "name": "fromToken",
          "description": "(IERC20) Address of token or `address(0)` for Ether.",
          "recommendedTypes": []
        },
        {
          "name": "destToken",
          "description": "(IERC20) Address of token or `address(0)` for Ether.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "(uint256) Amount for `fromToken`.",
          "recommendedTypes": []
        },
        {
          "name": "minReturn",
          "description": "(uint256) Minimum expected return, else revert.",
          "recommendedTypes": []
        },
        {
          "name": "distribution",
          "description": "(uint256[]) Array of weights for volume distribution returned by `getExpectedReturn`.",
          "recommendedTypes": []
        },
        {
          "name": "flags",
          "description": "(uint256) Flags for enabling and disabling some features, default 0.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapMulti(address[],uint256,uint256,uint256[],uint256[])",
      "name": "swapMulti",
      "description": "Swap `amount` of first element of `tokens` to the latest element of `destToken`.",
      "parameterDecorators": [
        {
          "name": "tokens",
          "description": "(IERC20[]) Addresses of token or `address(0)` for Ether.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "(uint256) Amount for `fromToken`.",
          "recommendedTypes": []
        },
        {
          "name": "minReturn",
          "description": "(uint256) Minimum expected return, else revert.",
          "recommendedTypes": []
        },
        {
          "name": "distribution",
          "description": "(uint256[]) Array of weights for volume distribution returned by `getExpectedReturn`.",
          "recommendedTypes": []
        },
        {
          "name": "flags",
          "description": "(uint256[]) Flags for enabling and disabling some features, default 0.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapWithReferral(address,address,uint256,uint256,uint256[],uint256,address,uint256)",
      "name": "swapWithReferral",
      "description": "Swap `amount` of `fromToken` to `destToken` param fromToken (IERC20) Address of token or `address(0)` for Ether param destToken (IERC20) Address of token or `address(0)` for Ether.",
      "parameterDecorators": [
        {
          "name": "fromToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "destToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "(uint256) Amount for `fromToken`.",
          "recommendedTypes": []
        },
        {
          "name": "minReturn",
          "description": "(uint256) Minimum expected return, else revert.",
          "recommendedTypes": []
        },
        {
          "name": "distribution",
          "description": "(uint256[]) Array of weights for volume distribution returned by `getExpectedReturn`.",
          "recommendedTypes": []
        },
        {
          "name": "flags",
          "description": "(uint256) Flags for enabling and disabling some features, default 0.",
          "recommendedTypes": []
        },
        {
          "name": "referral",
          "description": "(address) Address of referral.",
          "recommendedTypes": []
        },
        {
          "name": "feePercent",
          "description": "(uint256) Fees percents normalized to 1e18, limited to 0.03e18 (3%).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "swapWithReferralMulti(address[],uint256,uint256,uint256[],uint256[],address,uint256)",
      "name": "swapWithReferralMulti",
      "description": "Swap `amount` of first element of `tokens` to the latest element of `destToken`.",
      "parameterDecorators": [
        {
          "name": "tokens",
          "description": "(IERC20[]) Addresses of token or `address(0)` for Ether.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "(uint256) Amount for `fromToken`.",
          "recommendedTypes": []
        },
        {
          "name": "minReturn",
          "description": "(uint256) Minimum expected return, else revert.",
          "recommendedTypes": []
        },
        {
          "name": "distribution",
          "description": "(uint256[]) Array of weights for volume distribution returned by `getExpectedReturn`.",
          "recommendedTypes": []
        },
        {
          "name": "flags",
          "description": "(uint256[]) Flags for enabling and disabling some features, default 0.",
          "recommendedTypes": []
        },
        {
          "name": "referral",
          "description": "(address) Address of referral.",
          "recommendedTypes": []
        },
        {
          "name": "feePercent",
          "description": "(uint256) Fees percents normalized to 1e18, limited to 0.03e18 (3%).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "returnAmount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}