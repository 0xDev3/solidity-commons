{"schema":"../schema.json","tags":[],"name":"KlerosGTCRMock","description":"GeneralizedTCR This contract is a curated registry for any types of items. Just like a TCR contract it features the request-challenge protocol and appeal fees crowdfunding. Adapted from https://github.com/kleros/tcr/blob/v2.0.0/contracts/GeneralizedTCR.sol.","eventDecorators":[{"signature":"ItemStatusChange(bytes32,uint256,uint256,bool,bool)","name":"ItemStatusChange","description":"Emitted when a new Vault is deployed. Emitted when a party makes a request, raises a dispute or when a request is resolved.","parameterDecorators":[{"name":"_itemID","description":"The ID of the affected item.","recommendedTypes":[],"indexed":true},{"name":"_requestIndex","description":"The index of the request.","recommendedTypes":[],"indexed":true},{"name":"_roundIndex","description":"The index of the round.","recommendedTypes":[],"indexed":true},{"name":"_disputed","description":"Whether the request is disputed.","recommendedTypes":[],"indexed":false},{"name":"_resolved","description":"Whether the request is executed.","recommendedTypes":[],"indexed":false}]},{"signature":"ItemSubmitted(bytes32,address,uint256,bytes)","name":"ItemSubmitted","description":"Emitted when a new Vault is deployed. Emitted when someone submits an item for the first time.","parameterDecorators":[{"name":"_itemID","description":"The ID of the new item.","recommendedTypes":[],"indexed":true},{"name":"_submitter","description":"The address of the requester.","recommendedTypes":[],"indexed":true},{"name":"_evidenceGroupID","description":"Unique identifier of the evidence group the evidence belongs to.","recommendedTypes":[],"indexed":true},{"name":"_data","description":"The item data.","recommendedTypes":[],"indexed":false}]},{"signature":"MetaEvidence(uint256,string)","name":"MetaEvidence","description":"Emitted when a new Vault is deployed. To be emitted when meta-evidence is submitted.","parameterDecorators":[{"name":"_metaEvidenceID","description":"Unique identifier of meta-evidence.","recommendedTypes":[],"indexed":true},{"name":"_evidence","description":"A link to the meta-evidence JSON.","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when a new Vault is deployed.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"addItem(bytes)","name":"addItem","description":"Submit a request to register an item. Accepts enough ETH to cover the deposit, reimburses the rest.","parameterDecorators":[{"name":"_item","description":"The data describing the item.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getItemInfo(bytes32)","name":"getItemInfo","description":"Returns item's information. Includes length of requests array.","parameterDecorators":[{"name":"_itemID","description":"The ID of the queried item.","recommendedTypes":[]}],"returnDecorators":[{"name":"data","description":"The data describing the item.","recommendedTypes":[],"solidityType":"bytes"},{"name":"status","description":"The current status of the item.","recommendedTypes":[],"solidityType":"uint8"},{"name":"numberOfRequests","description":"Length of list of status change requests made for the item.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"itemIDtoIndex(bytes32)","name":"itemIDtoIndex","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"itemList(uint256)","name":"itemList","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"items(bytes32)","name":"items","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"data","description":"","recommendedTypes":[],"solidityType":"bytes"},{"name":"status","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"removeItem(bytes32)","name":"removeItem","description":"Submit a request to remove an item from the list. Accepts enough ETH to cover the deposit, reimburses the rest.","parameterDecorators":[{"name":"_itemID","description":"The ID of the item to remove.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}