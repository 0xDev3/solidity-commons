{
  "schema": "../schema.json",
  "tags": [
    "tokens"
  ],
  "name": "TokenController",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Burned(address,bytes32,uint256)",
      "name": "Burned",
      "description": "Emitted that client terminates the service if the hash(s1) is wrong. Or cloud terminates the service if client does not confirms hash(s1) in time.",
      "parameterDecorators": [
        {
          "name": "member",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "lockedUnder",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Locked(address,bytes32,uint256,uint256)",
      "name": "Locked",
      "description": "Emitted that client terminates the service if the hash(s1) is wrong. Or cloud terminates the service if client does not confirms hash(s1) in time.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_reason",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_validity",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unlocked(address,bytes32,uint256)",
      "name": "Unlocked",
      "description": "Emitted that client terminates the service if the hash(s1) is wrong. Or cloud terminates the service if client does not confirms hash(s1) in time.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_reason",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "changeOperator(address)",
      "name": "changeOperator",
      "description": "to change the operator address.",
      "parameterDecorators": [
        {
          "name": "_newOperator",
          "description": "is the new address of operator.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getLockedTokensValidity(address,bytes32)",
      "name": "getLockedTokensValidity",
      "description": "Gets the validity of locked tokens of a specified address.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address to query the validity.",
          "recommendedTypes": []
        },
        {
          "name": "reason",
          "description": "reason for which tokens were locked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "validity",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "operatorTransfer(address,address,uint256)",
      "name": "operatorTransfer",
      "description": "Proxies token transfer through this contract to allow staking when members are locked for voting.",
      "parameterDecorators": [
        {
          "name": "_from",
          "description": "Source address.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "Destination address.",
          "recommendedTypes": []
        },
        {
          "name": "_value",
          "description": "Amount to transfer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeDependentContractAddress()",
      "name": "changeDependentContractAddress",
      "description": "Just for interface.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pooledStaking()",
      "name": "pooledStaking",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokensLockedAtTime(address,bytes32,uint256)",
      "name": "tokensLockedAtTime",
      "description": "Returns tokens locked for a specified address for a specified reason at a specific time.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address whose tokens are locked.",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "The reason to query the lock tokens for.",
          "recommendedTypes": []
        },
        {
          "name": "_time",
          "description": "The timestamp to query the lock tokens for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalSupply()",
      "name": "totalSupply",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "reduceLock(address,bytes32,uint256)",
      "name": "reduceLock",
      "description": "reduce lock duration for a specified reason and time.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address whose tokens are locked.",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "The reason to lock tokens.",
          "recommendedTypes": []
        },
        {
          "name": "_time",
          "description": "Lock reduction time in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "extendLockOf(address,bytes32,uint256)",
      "name": "extendLockOf",
      "description": "Extends lock for a specified reason and time.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "The reason to lock tokens.",
          "recommendedTypes": []
        },
        {
          "name": "_time",
          "description": "Lock extension time in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lock(bytes32,uint256,uint256)",
      "name": "lock",
      "description": "Locks a specified amount of tokens, for CLA reason and for a specified time.",
      "parameterDecorators": [
        {
          "name": "_reason",
          "description": "The reason to lock tokens, currently restricted to CLA.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Number of tokens to be locked.",
          "recommendedTypes": []
        },
        {
          "name": "_time",
          "description": "Lock time in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unlock(address)",
      "name": "unlock",
      "description": "Unlocks the unlockable tokens against CLA of a specified address.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "Address of user, claiming back unlockable tokens against CLA.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "unlockableTokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalLockedBalance(address,uint256)",
      "name": "totalLockedBalance",
      "description": "Returns the total locked tokens at time Returns the total amount of locked and staked tokens at a given time. Used by MemberRoles to check eligibility for withdraw / switch membership. Includes tokens locked for Claim Assessment and staked for Risk Assessment. Does not take into account pending burns.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "member whose locked tokens are to be calculate.",
          "recommendedTypes": []
        },
        {
          "name": "_time",
          "description": "timestamp when the tokens should be locked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "mint(address,uint256)",
      "name": "mint",
      "description": "Mints new token for an address.",
      "parameterDecorators": [
        {
          "name": "_member",
          "description": "address to reward the minted tokens.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "number of tokens to mint.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalBalanceOf(address)",
      "name": "totalBalanceOf",
      "description": "Returns the total amount of tokens held by an address: transferable + locked + staked for pooled staking - pending burns. Used by Claims and Governance in member voting to calculate the user's vote weight.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address to query the total balance of.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lockForMemberVote(address,uint256)",
      "name": "lockForMemberVote",
      "description": "Lock the user's tokens.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "user's address.",
          "recommendedTypes": []
        },
        {
          "name": "_days",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokensUnlockable(address,bytes32)",
      "name": "tokensUnlockable",
      "description": "Returns unlockable tokens for a specified address for a specified reason.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address to query the the unlockable token count of.",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "The reason to query the unlockable tokens for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "tokensLocked(address,bytes32)",
      "name": "tokensLocked",
      "description": "Returns tokens locked for a specified address for a specified reason.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address whose tokens are locked.",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "The reason to query the lock tokens for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lockReason(address,uint256)",
      "name": "lockReason",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "burnFrom(address,uint256)",
      "name": "burnFrom",
      "description": "burns tokens of an address.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "is the address to burn tokens of.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "is the amount to burn.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "burnLockedTokens(address,bytes32,uint256)",
      "name": "burnLockedTokens",
      "description": "Burns locked tokens of a user.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "address whose tokens are to be burned.",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "lock reason for which tokens are to be burned.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of tokens to burn.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "releaseLockedTokens(address,bytes32,uint256)",
      "name": "releaseLockedTokens",
      "description": "Released locked tokens of an address locked for a specific reason.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "address whose tokens are to be released from lock.",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "reason of the lock.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "amount of tokens to release.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "increaseLockAmount(bytes32,uint256)",
      "name": "increaseLockAmount",
      "description": "Increase number of tokens locked for a CLA reason.",
      "parameterDecorators": [
        {
          "name": "_reason",
          "description": "The reason to lock tokens, currently restricted to CLA.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Number of tokens to be increased.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeFromWhitelist(address)",
      "name": "removeFromWhitelist",
      "description": "Removes an address from the whitelist in the token.",
      "parameterDecorators": [
        {
          "name": "_member",
          "description": "address to remove.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateUintParameters(bytes8,uint256)",
      "name": "updateUintParameters",
      "description": "Updates Uint Parameters of a code.",
      "parameterDecorators": [
        {
          "name": "code",
          "description": "whose details we want to update.",
          "recommendedTypes": []
        },
        {
          "name": "val",
          "description": "value to set.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "ms()",
      "name": "ms",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "extendLock(bytes32,uint256)",
      "name": "extendLock",
      "description": "Extends lock for reason CLA for a specified time.",
      "parameterDecorators": [
        {
          "name": "_reason",
          "description": "The reason to lock tokens, currently restricted to CLA.",
          "recommendedTypes": []
        },
        {
          "name": "_time",
          "description": "Lock extension time in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getUnlockableTokens(address)",
      "name": "getUnlockableTokens",
      "description": "Gets the unlockable tokens of a specified address.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "The address to query the the unlockable token count of.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "unlockableTokens",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minCALockTime()",
      "name": "minCALockTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeMasterAddress(address)",
      "name": "changeMasterAddress",
      "description": "change master address.",
      "parameterDecorators": [
        {
          "name": "_masterAddress",
          "description": "is the new address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "locked(address,bytes32)",
      "name": "locked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "validity",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "claimed",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "addToWhitelist(address)",
      "name": "addToWhitelist",
      "description": "Adds an address to whitelist maintained in the contract.",
      "parameterDecorators": [
        {
          "name": "_member",
          "description": "address to add to whitelist.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "nxMasterAddress()",
      "name": "nxMasterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lockOf(address,bytes32,uint256,uint256)",
      "name": "lockOf",
      "description": "Locks a specified amount of tokens against an address, for a specified reason and time.",
      "parameterDecorators": [
        {
          "name": "_of",
          "description": "address whose tokens are to be locked.",
          "recommendedTypes": []
        },
        {
          "name": "_reason",
          "description": "The reason to lock tokens.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "Number of tokens to be locked.",
          "recommendedTypes": []
        },
        {
          "name": "_time",
          "description": "Lock time in seconds.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}