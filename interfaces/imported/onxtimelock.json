{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "vesting",
    "locking"
  ],
  "name": "ONXTimelock",
  "description": "A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\".",
  "eventDecorators": [
    {
      "signature": "NewAdmin(address,address)",
      "name": "NewAdmin",
      "description": "Emitted when admin is changed.",
      "parameterDecorators": [
        {
          "name": "oldAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewBeneficiary(address,address)",
      "name": "NewBeneficiary",
      "description": "Emitted when beneficiary is changed.",
      "parameterDecorators": [
        {
          "name": "oldBeneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newBeneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewReleaseAmount(uint256,uint256)",
      "name": "NewReleaseAmount",
      "description": "Emitted when release amount is changed.",
      "parameterDecorators": [
        {
          "name": "oldReleaseAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newReleaseAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewReleaseInterval(uint256,uint256)",
      "name": "NewReleaseInterval",
      "description": "Emitted when release interval is changed.",
      "parameterDecorators": [
        {
          "name": "oldReleaseInterval",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newReleaseInterval",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewToken(address,address)",
      "name": "NewToken",
      "description": "Emitted when token is changed.",
      "parameterDecorators": [
        {
          "name": "oldToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "beneficiary()",
      "name": "beneficiary",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the beneficiary of the tokens.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(uint256)",
      "name": "deposit",
      "description": "Deposit tokens to timelock contract.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBlockNumber()",
      "name": "getBlockNumber",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the block number.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "release()",
      "name": "release",
      "description": "Transfers tokens held by timelock to beneficiary.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "releaseAmount()",
      "name": "releaseAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the release amount.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "releaseBlock()",
      "name": "releaseBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the release block.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "releaseInterval()",
      "name": "releaseInterval",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the release interval.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setAdmin(address)",
      "name": "setAdmin",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newAdmin",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBeneficiary(address)",
      "name": "setBeneficiary",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newBeneficiary",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setReleaseAmount(uint256)",
      "name": "setReleaseAmount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newReleaseAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setReleaseInterval(uint256)",
      "name": "setReleaseInterval",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newReleaseInterval",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setToken(address)",
      "name": "setToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newToken",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startBlock()",
      "name": "startBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the start block.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "timelockBalance()",
      "name": "timelockBalance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the release amount.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "token()",
      "name": "token",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the token being held.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}