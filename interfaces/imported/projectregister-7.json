{
  "schema": "../schema.json",
  "tags": [],
  "name": "ProjectRegister",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "approveProject(uint256)",
      "name": "approveProject",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "assignWhitelist(uint256,address)",
      "name": "assignWhitelist",
      "description": "",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getApprovedProjects()",
      "name": "getApprovedProjects",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProject(uint256)",
      "name": "getProject",
      "description": "",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "proposer",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "docHash",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "string"
            },
            {
              "name": "vote_count",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "uint256"
            },
            {
              "name": "voters",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address[]"
            }
          ],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getProjectCount()",
      "name": "getProjectCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getThreshold()",
      "name": "getThreshold",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getVoters()",
      "name": "getVoters",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isWhitelisted(uint256,address)",
      "name": "isWhitelisted",
      "description": "",
      "parameterDecorators": [
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "addr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposeProject(string)",
      "name": "proposeProject",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_docHash",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registeredProjects(uint256)",
      "name": "registeredProjects",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "proposer",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "docHash",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "vote_count",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setAuthority(address)",
      "name": "setAuthority",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_authority",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setThreshold(uint256)",
      "name": "setThreshold",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_threshold",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}