{"schema":"../schema.json","tags":[],"name":"BancorChanger","description":"","eventDecorators":[{"signature":"Change(address,address,address,uint256,uint256,uint256,uint256)","name":"Change","description":"","parameterDecorators":[{"name":"_fromToken","description":"","recommendedTypes":[],"indexed":true},{"name":"_toToken","description":"","recommendedTypes":[],"indexed":true},{"name":"_trader","description":"","recommendedTypes":[],"indexed":true},{"name":"_amount","description":"","recommendedTypes":[],"indexed":false},{"name":"_return","description":"","recommendedTypes":[],"indexed":false},{"name":"_currentPriceN","description":"","recommendedTypes":[],"indexed":false},{"name":"_currentPriceD","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ManagerUpdate(address,address)","name":"ManagerUpdate","description":"","parameterDecorators":[{"name":"_prevManager","description":"","recommendedTypes":[],"indexed":false},{"name":"_newManager","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnerUpdate(address,address)","name":"OwnerUpdate","description":"","parameterDecorators":[{"name":"_prevOwner","description":"","recommendedTypes":[],"indexed":false},{"name":"_newOwner","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"changeFee()","name":"changeFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":false},{"signature":"disableChanging(bool)","name":"disableChanging","description":"disables the entire change functionality this is a safety mechanism in case of a emergency can only be called by the manager.","parameterDecorators":[{"name":"_disable","description":"true to disable changing, false to re-enable it.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getReserveBalance(address)","name":"getReserveBalance","description":"returns the reserve's virtual balance if one is defined, otherwise returns the actual balance.","parameterDecorators":[{"name":"_reserveToken","description":"reserve token contract address.","recommendedTypes":[]}],"returnDecorators":[{"name":"balance","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"getReturn(address,address,uint256)","name":"getReturn","description":"returns the expected return for changing a specific amount of _fromToken to _toToken.","parameterDecorators":[{"name":"_fromToken","description":"ERC20 token to change from.","recommendedTypes":[]},{"name":"_toToken","description":"ERC20 token to change to.","recommendedTypes":[]},{"name":"_amount","description":"amount to change, in fromToken.","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"transferTokenOwnership(address)","name":"transferTokenOwnership","description":"allows transferring the token ownership the new owner still need to accept the transfer can only be called by the contract owner.","parameterDecorators":[{"name":"_newOwner","description":"new token owner.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changerType()","name":"changerType","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":false},{"signature":"addReserve(address,uint32,bool)","name":"addReserve","description":"defines a new reserve for the token can only be called by the owner while the changer is inactive.","parameterDecorators":[{"name":"_token","description":"address of the reserve token.","recommendedTypes":[]},{"name":"_ratio","description":"constant reserve ratio, represented in ppm, 1-1000000.","recommendedTypes":[]},{"name":"_enableVirtualBalance","description":"true to enable virtual balance for the reserve, false to disable it.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"acceptTokenOwnership()","name":"acceptTokenOwnership","description":"used by a new owner to accept a token ownership transfer can only be called by the contract owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"withdrawFromToken(address,address,uint256)","name":"withdrawFromToken","description":"withdraws tokens held by the token and sends them to an account can only be called by the owner.","parameterDecorators":[{"name":"_token","description":"ERC20 token contract address.","recommendedTypes":[]},{"name":"_to","description":"account to receive the new amount.","recommendedTypes":[]},{"name":"_amount","description":"amount to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"newManager()","name":"newManager","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"manager()","name":"manager","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"getChangeFeeAmount(uint256)","name":"getChangeFeeAmount","description":"","parameterDecorators":[{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"feeAmount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"formula()","name":"formula","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"clearQuickBuyPath()","name":"clearQuickBuyPath","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"changeableToken(uint16)","name":"changeableToken","description":"given a changeable token index, returns the changeable token contract address.","parameterDecorators":[{"name":"_tokenIndex","description":"changeable token index.","recommendedTypes":[]}],"returnDecorators":[{"name":"tokenAddress","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"version()","name":"version","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":false},{"signature":"changeableTokenCount()","name":"changeableTokenCount","description":"returns the number of changeable tokens supported by the contract note that the number of changeable tokens is the number of reserve token, plus 1 (that represents the smart token).","parameterDecorators":[],"returnDecorators":[{"name":"count","description":"","recommendedTypes":[],"solidityType":"uint16"}],"emittableEvents":[],"readOnly":false},{"signature":"withdrawTokens(address,address,uint256)","name":"withdrawTokens","description":"withdraws tokens held by the contract and sends them to an account can only be called by the owner.","parameterDecorators":[{"name":"_token","description":"ERC20 token contract address.","recommendedTypes":[]},{"name":"_to","description":"account to receive the new amount.","recommendedTypes":[]},{"name":"_amount","description":"amount to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"change(address,address,uint256,uint256)","name":"change","description":"changes a specific amount of _fromToken to _toToken.","parameterDecorators":[{"name":"_fromToken","description":"ERC20 token to change from.","recommendedTypes":[]},{"name":"_toToken","description":"ERC20 token to change to.","recommendedTypes":[]},{"name":"_amount","description":"amount to change, in fromToken.","recommendedTypes":[]},{"name":"_minReturn","description":"if the change results in an amount smaller than the minimum return - it is cancelled, must be nonzero.","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"sell(address,uint256,uint256)","name":"sell","description":"sells the token by withdrawing from one of its reserve tokens.","parameterDecorators":[{"name":"_reserveToken","description":"reserve token contract address.","recommendedTypes":[]},{"name":"_sellAmount","description":"amount to sell (in the smart token).","recommendedTypes":[]},{"name":"_minReturn","description":"if the change results in an amount smaller the minimum return - it is cancelled, must be nonzero.","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"getSaleReturn(address,uint256)","name":"getSaleReturn","description":"returns the expected return for selling the token for one of its reserve tokens.","parameterDecorators":[{"name":"_reserveToken","description":"reserve token contract address.","recommendedTypes":[]},{"name":"_sellAmount","description":"amount to sell (in the smart token).","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"changingEnabled()","name":"changingEnabled","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"quickBuy(uint256)","name":"quickBuy","description":"buys the smart token with ETH if the return amount meets the minimum requested note that this function can eventually be moved into a separate contract.","parameterDecorators":[{"name":"_minReturn","description":"if the change results in an amount smaller than the minimum return - it is cancelled, must be nonzero.","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"acceptOwnership()","name":"acceptOwnership","description":"used by a new owner to accept an ownership transfer.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"disableTokenTransfers(bool)","name":"disableTokenTransfers","description":"disables/enables token transfers can only be called by the contract owner.","parameterDecorators":[{"name":"_disable","description":"true to disable transfers, false to enable them.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setChangeFee(uint32)","name":"setChangeFee","description":"updates the current change fee can only be called by the manager.","parameterDecorators":[{"name":"_changeFee","description":"new change fee, represented in ppm.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"getQuickBuyPathLength()","name":"getQuickBuyPathLength","description":"returns the length of the quick buy path array.","parameterDecorators":[],"returnDecorators":[{"name":"length","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"reserveTokenCount()","name":"reserveTokenCount","description":"returns the number of reserve tokens defined.","parameterDecorators":[],"returnDecorators":[{"name":"count","description":"","recommendedTypes":[],"solidityType":"uint16"}],"emittableEvents":[],"readOnly":false},{"signature":"getPurchaseReturn(address,uint256)","name":"getPurchaseReturn","description":"returns the expected return for buying the token for a reserve token.","parameterDecorators":[{"name":"_reserveToken","description":"reserve token contract address.","recommendedTypes":[]},{"name":"_depositAmount","description":"amount to deposit (in the reserve token).","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"buy(address,uint256,uint256)","name":"buy","description":"buys the token by depositing one of its reserve tokens.","parameterDecorators":[{"name":"_reserveToken","description":"reserve token contract address.","recommendedTypes":[]},{"name":"_depositAmount","description":"amount to deposit (in the reserve token).","recommendedTypes":[]},{"name":"_minReturn","description":"if the change results in an amount smaller than the minimum return - it is cancelled, must be nonzero.","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"quickChange(address[],uint256,uint256)","name":"quickChange","description":"changes the token to any other token in the bancor network by following a predefined change path note that when changing from an ERC20 token (as opposed to a smart token), allowance must be set beforehand.","parameterDecorators":[{"name":"_path","description":"change path, see change path format above.","recommendedTypes":[]},{"name":"_amount","description":"amount to change from (in the initial source token).","recommendedTypes":[]},{"name":"_minReturn","description":"if the change results in an amount smaller than the minimum return - it is cancelled, must be nonzero.","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"updateReserve(address,uint32,bool,uint256)","name":"updateReserve","description":"updates one of the token reserves can only be called by the owner.","parameterDecorators":[{"name":"_reserveToken","description":"address of the reserve token.","recommendedTypes":[]},{"name":"_ratio","description":"constant reserve ratio, represented in ppm, 1-1000000.","recommendedTypes":[]},{"name":"_enableVirtualBalance","description":"true to enable virtual balance for the reserve, false to disable it.","recommendedTypes":[]},{"name":"_virtualBalance","description":"new reserve's virtual balance.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getQuickBuyEtherToken()","name":"getQuickBuyEtherToken","description":"returns the address of the ether token used by the quick buy functionality note that it should always be the first element in the quick buy path, if one is set.","parameterDecorators":[],"returnDecorators":[{"name":"etherToken","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"acceptManagement()","name":"acceptManagement","description":"used by a new manager to accept a management transfer.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"reserveTokens(uint256)","name":"reserveTokens","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"setQuickBuyPath(address[])","name":"setQuickBuyPath","description":"","parameterDecorators":[{"name":"_path","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"newOwner()","name":"newOwner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"reserves(address)","name":"reserves","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"virtualBalance","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"ratio","description":"","recommendedTypes":[],"solidityType":"uint32"},{"name":"isVirtualBalanceEnabled","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"isPurchaseEnabled","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"isSet","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"maxChangeFee()","name":"maxChangeFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":false},{"signature":"transferManagement(address)","name":"transferManagement","description":"allows transferring the contract management the new manager still needs to accept the transfer can only be called by the contract manager.","parameterDecorators":[{"name":"_newManager","description":"new contract manager.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"quickBuyPath(uint256)","name":"quickBuyPath","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false},{"signature":"disableReservePurchases(address,bool)","name":"disableReservePurchases","description":"disables purchasing with the given reserve token in case the reserve token got compromised can only be called by the owner note that selling is still enabled regardless of this flag and it cannot be disabled by the owner.","parameterDecorators":[{"name":"_reserveToken","description":"reserve token contract address.","recommendedTypes":[]},{"name":"_disable","description":"true to disable the token, false to re-enable it.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setFormula(address)","name":"setFormula","description":"","parameterDecorators":[{"name":"_formula","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner.","parameterDecorators":[{"name":"_newOwner","description":"new contract owner.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":false}]}