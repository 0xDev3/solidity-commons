{
  "schema": "../schema.json",
  "tags": [],
  "name": "ShortCollateral",
  "description": "ShortCollateral. Holds collateral from users who are selling (shorting) options to the OptionMarket.",
  "eventDecorators": [
    {
      "signature": "BaseSent(address,uint256)",
      "name": "BaseSent",
      "description": "Emitted when base is sent to either a user or the LiquidityPool.",
      "parameterDecorators": [
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OptionsSettled(uint256,address,uint256,uint256,uint8,uint256)",
      "name": "OptionsSettled",
      "description": "Emitted when an Option is settled.",
      "parameterDecorators": [
        {
          "name": "listingId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "optionOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "strike",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "priceAtExpiry",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tradeType",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "QuoteSent(address,uint256)",
      "name": "QuoteSent",
      "description": "Emitted when quote is sent to either a user or the LiquidityPool.",
      "parameterDecorators": [
        {
          "name": "receiver",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "init(address,address,address,address)",
      "name": "init",
      "description": "Initialize the contract.",
      "parameterDecorators": [
        {
          "name": "_optionMarket",
          "description": "OptionMarket address.",
          "recommendedTypes": []
        },
        {
          "name": "_liquidityPool",
          "description": "LiquidityPool address.",
          "recommendedTypes": []
        },
        {
          "name": "_quoteAsset",
          "description": "Quote asset address.",
          "recommendedTypes": []
        },
        {
          "name": "_baseAsset",
          "description": "Base asset address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "processSettle(uint256,address,uint8,uint256,uint256,uint256,uint256)",
      "name": "processSettle",
      "description": "Called by the OptionMarket when the owner of an option settles.",
      "parameterDecorators": [
        {
          "name": "listingId",
          "description": "The OptionListing.",
          "recommendedTypes": []
        },
        {
          "name": "receiver",
          "description": "The address of the receiver.",
          "recommendedTypes": []
        },
        {
          "name": "tradeType",
          "description": "The TradeType.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "The amount to settle.",
          "recommendedTypes": []
        },
        {
          "name": "strike",
          "description": "The strike price of the OptionListing.",
          "recommendedTypes": []
        },
        {
          "name": "priceAtExpiry",
          "description": "The price of baseAsset at expiry.",
          "recommendedTypes": []
        },
        {
          "name": "listingToShortCallBaseReturned",
          "description": "The amount of baseAsset to be returned.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sendBaseCollateral(address,uint256)",
      "name": "sendBaseCollateral",
      "description": "Transfers baseAsset to the recipient.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "The recipient of the transfer.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "The amount to send.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sendQuoteCollateral(address,uint256)",
      "name": "sendQuoteCollateral",
      "description": "Transfers quoteAsset to the recipient.",
      "parameterDecorators": [
        {
          "name": "recipient",
          "description": "The recipient of the transfer.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "The amount to send.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sendToLP(uint256,uint256)",
      "name": "sendToLP",
      "description": "Transfers quoteAsset and baseAsset to the LiquidityPool.",
      "parameterDecorators": [
        {
          "name": "amountBase",
          "description": "The amount of baseAsset to transfer.",
          "recommendedTypes": []
        },
        {
          "name": "amountQuote",
          "description": "The amount of quoteAsset to transfer.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}