{
  "schema": "../schema.json",
  "tags": [],
  "name": "MarketAdapter",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdapterFeeChange(uint256,uint256)",
      "name": "AdapterFeeChange",
      "description": "Event emitted when an ownership transfer request is accepted by the pending owner.",
      "parameterDecorators": [
        {
          "name": "previousFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "newFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ExecutedOrder(address,uint256,address,uint256,uint256)",
      "name": "ExecutedOrder",
      "description": "Event emitted when an ownership transfer request is accepted by the pending owner.",
      "parameterDecorators": [
        {
          "name": "registry",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "marketplace",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "orderValue",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "orderFees",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FeesCollectorChange(address)",
      "name": "FeesCollectorChange",
      "description": "Event emitted when an ownership transfer request is accepted by the pending owner.",
      "parameterDecorators": [
        {
          "name": "collector",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "MarketplaceAllowance(address,bool)",
      "name": "MarketplaceAllowance",
      "description": "Event emitted when an ownership transfer request is accepted by the pending owner.",
      "parameterDecorators": [
        {
          "name": "marketplace",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event emitted when an ownership transfer request is accepted by the pending owner.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "SetConverter(address)",
      "name": "SetConverter",
      "description": "Event emitted when an ownership transfer request is accepted by the pending owner.",
      "parameterDecorators": [
        {
          "name": "converter",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "ADAPTER_FEE_MAX()",
      "name": "ADAPTER_FEE_MAX",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "ADAPTER_FEE_PRECISION()",
      "name": "ADAPTER_FEE_PRECISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "adapterFeesCollector()",
      "name": "adapterFeesCollector",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "adapterTransactionFee()",
      "name": "adapterTransactionFee",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buy(address,uint256,address,bytes,uint256,uint8,address)",
      "name": "buy",
      "description": "Relays buy marketplace order taking the configured fees from message value.",
      "parameterDecorators": [
        {
          "name": "_registry",
          "description": "NFT registry address.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": "listed asset Id.",
          "recommendedTypes": []
        },
        {
          "name": "_marketplace",
          "description": "whitelisted marketplace listing the asset.",
          "recommendedTypes": []
        },
        {
          "name": "_encodedCallData",
          "description": "forwarded to whitelisted marketplace.",
          "recommendedTypes": []
        },
        {
          "name": "_orderAmount",
          "description": "(excluding fees) in ethers for the markeplace order.",
          "recommendedTypes": []
        },
        {
          "name": "_transferType",
          "description": "choice for calling the ERC721 registry.",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "where to send the ERC721 token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buy(address,uint256,address,bytes,uint256,address,uint256,uint8,address)",
      "name": "buy",
      "description": "Relays buy marketplace order. Uses the IConverter to swap erc20 tokens to ethers and call _buy() with the exact ether amount.",
      "parameterDecorators": [
        {
          "name": "_registry",
          "description": "NFT registry address.",
          "recommendedTypes": []
        },
        {
          "name": "_tokenId",
          "description": "listed asset Id.",
          "recommendedTypes": []
        },
        {
          "name": "_marketplace",
          "description": "whitelisted marketplace listing the asset.",
          "recommendedTypes": []
        },
        {
          "name": "_encodedCallData",
          "description": "forwarded to whitelisted marketplace.",
          "recommendedTypes": []
        },
        {
          "name": "_orderAmount",
          "description": "(excluding fees) in ethers for the markeplace order.",
          "recommendedTypes": []
        },
        {
          "name": "_paymentToken",
          "description": "ERC20 address of the token used to pay.",
          "recommendedTypes": []
        },
        {
          "name": "_maxPaymentTokenAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_transferType",
          "description": "choice for calling the ERC721 registry.",
          "recommendedTypes": []
        },
        {
          "name": "_beneficiary",
          "description": "where to send the ERC721 token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "converterAddress()",
      "name": "converterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "onERC721Received(address,address,uint256,bytes)",
      "name": "onERC721Received",
      "description": "The ERC721 smart contract calls this function on the recipient after a {IERC721-safeTransferFrom}.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "onERC721Received(address,uint256,bytes)",
      "name": "onERC721Received",
      "description": "implements old onERC721Received interface.",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes4"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAdapterFee(uint256)",
      "name": "setAdapterFee",
      "description": "Sets the adapter fees taken from every relayed order.",
      "parameterDecorators": [
        {
          "name": "_transactionFee",
          "description": "in a 0 - ADAPTER_FEE_MAX basis.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setConverter(address)",
      "name": "setConverter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_converter",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFeesCollector(address)",
      "name": "setFeesCollector",
      "description": "Sets fees collector for the adapter.",
      "parameterDecorators": [
        {
          "name": "_collector",
          "description": "Address for the fees collector.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setMarketplaceAllowance(address,bool)",
      "name": "setMarketplaceAllowance",
      "description": "Sets whitelisting status for a marketplace.",
      "parameterDecorators": [
        {
          "name": "_marketplace",
          "description": "address.",
          "recommendedTypes": []
        },
        {
          "name": "_action",
          "description": "true if allowed, false otherwise.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "whitelistedMarkets(address)",
      "name": "whitelistedMarkets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}