{"schema":"../schema.json","tags":["loans"],"name":"LoanTermsConsensus","description":"This contract is used to process the loan requests through the Teller protocol.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event emitted when a supported token is removed.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SignerAdded(address)","name":"SignerAdded","description":"Event emitted when a supported token is removed.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"SignerRemoved(address)","name":"SignerRemoved","description":"Event emitted when a supported token is removed.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"TermsAccepted(address,uint256,uint256,uint256,uint256)","name":"TermsAccepted","description":"Event emitted when a supported token is removed.","parameterDecorators":[{"name":"borrower","description":"","recommendedTypes":[],"indexed":true},{"name":"requestNonce","description":"","recommendedTypes":[],"indexed":true},{"name":"interestRate","description":"","recommendedTypes":[],"indexed":false},{"name":"collateralRatio","description":"","recommendedTypes":[],"indexed":false},{"name":"maxLoanAmount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TermsSubmitted(address,address,uint256,uint256,uint256,uint256,uint256)","name":"TermsSubmitted","description":"Event emitted when a supported token is removed.","parameterDecorators":[{"name":"signer","description":"","recommendedTypes":[],"indexed":true},{"name":"borrower","description":"","recommendedTypes":[],"indexed":true},{"name":"requestNonce","description":"","recommendedTypes":[],"indexed":true},{"name":"signerNonce","description":"","recommendedTypes":[],"indexed":false},{"name":"interestRate","description":"","recommendedTypes":[],"indexed":false},{"name":"collateralRatio","description":"","recommendedTypes":[],"indexed":false},{"name":"maxLoanAmount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"addSigner(address)","name":"addSigner","description":"It adds a new account as a signer. The sender must be the owner.It throws a require error if the sender is not the owner.","parameterDecorators":[{"name":"account","description":"address to add.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addSigners(address[])","name":"addSigners","description":"It adds a list of account as signers. The sender must be the owner.It throws a require error if the sender is not the owner.","parameterDecorators":[{"name":"accounts","description":"addresses to add.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"borrowerToLastLoanTermRequest(address)","name":"borrowerToLastLoanTermRequest","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"callerAddress()","name":"callerAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"hasSubmitted(address,address,uint256)","name":"hasSubmitted","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]},{"name":"param2","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize()","name":"initialize","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialize(address,address,address)","name":"initialize","description":"It initializes this consensus contract. The caller address must be the loans contract for LoanTermsConsensus, and the lenders contract for InterestConsensus.","parameterDecorators":[{"name":"owner","description":"the owner address.","recommendedTypes":[]},{"name":"aCallerAddress","description":"the contract that will call it.","recommendedTypes":[]},{"name":"aSettingAddress","description":"the settings contract address.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialize(address)","name":"initialize","description":"Initializes the contract setting the deployer as the initial owner.","parameterDecorators":[{"name":"sender","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"initialized()","name":"initialized","description":"Gets if the contract is initialized.","parameterDecorators":[],"returnDecorators":[{"name":"value","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"isSigner(address)","name":"isSigner","description":"Gets whether an account address is a signer or not.","parameterDecorators":[{"name":"account","description":"address to test.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"processRequest(tuple(address,address,address,uint256,uint256,uint256,uint256),tuple(address,address,uint256,uint256,uint256,uint256,tuple)[])","name":"processRequest","description":"","parameterDecorators":[{"name":"request","description":"","recommendedTypes":[],"parameters":[{"name":"borrower","description":"","type":"address"},{"name":"recipient","description":"","type":"address"},{"name":"consensusAddress","description":"","type":"address"},{"name":"requestNonce","description":"","type":"uint256"},{"name":"amount","description":"","type":"uint256"},{"name":"duration","description":"","type":"uint256"},{"name":"requestTime","description":"","type":"uint256"}]},{"name":"responses","description":"","recommendedTypes":[],"parameters":[{"name":"signer","description":"","type":"address"},{"name":"consensusAddress","description":"","type":"address"},{"name":"responseTime","description":"","type":"uint256"},{"name":"interestRate","description":"","type":"uint256"},{"name":"collateralRatio","description":"","type":"uint256"},{"name":"maxLoanAmount","description":"","type":"uint256"},{"name":"signature","description":"","type":"tuple"}]}],"returnDecorators":[{"name":"interestRate","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"collateralRatio","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"maxLoanAmount","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"removeSigner(address)","name":"removeSigner","description":"It removes an account as signer. The sender must be the owner.It throws a require error if the sender is not the owner.","parameterDecorators":[{"name":"account","description":"address to remove.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"requestNonceTaken(address,uint256)","name":"requestNonceTaken","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"settings()","name":"settings","description":"The gets the settings contract address from the SETTINGS_SLOT. This address should NOT change over the time. See details in the _setSettings(...) function.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"signerNonceTaken(address,uint256)","name":"signerNonceTaken","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"termSubmissions(address,uint256)","name":"termSubmissions","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"interestRate","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"collateralRatio","description":"","recommendedTypes":[],"solidityType":"tuple"},{"name":"maxLoanAmount","description":"","recommendedTypes":[],"solidityType":"tuple"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}