{
  "schema": "../schema.json",
  "tags": [],
  "name": "Builder",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Deposit(address,uint256,uint256)",
      "name": "Deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EmergencyWithdraw(address,uint256,uint256)",
      "name": "EmergencyWithdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Withdraw(address,uint256,uint256)",
      "name": "Withdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "pid",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BONUS_MULTIPLIER()",
      "name": "BONUS_MULTIPLIER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "add(uint256,address,uint16,bool)",
      "name": "add",
      "description": "Add a new lp to the pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do.",
      "parameterDecorators": [
        {
          "name": "_allocPoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_lpToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_depositFeeBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_withUpdate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "brick()",
      "name": "brick",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "brickPerBlock()",
      "name": "brickPerBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposit(uint256,uint256)",
      "name": "deposit",
      "description": "Deposit LP tokens to Builder for Brick allocation.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "dev(address)",
      "name": "dev",
      "description": "Update dev address by the previous dev.",
      "parameterDecorators": [
        {
          "name": "_devAddr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "devAddr()",
      "name": "devAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "emergencyWithdraw(uint256)",
      "name": "emergencyWithdraw",
      "description": "Withdraw without caring about rewards. EMERGENCY ONLY.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "feeAddress()",
      "name": "feeAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getMultiplier(uint256,uint256)",
      "name": "getMultiplier",
      "description": "Return reward multiplier over the given _from to _to block.",
      "parameterDecorators": [
        {
          "name": "_from",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "massUpdatePools()",
      "name": "massUpdatePools",
      "description": "Update reward variables for all pools. Be careful of gas spending!.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingBrick(uint256,address)",
      "name": "pendingBrick",
      "description": "View function to see pending Bricks on frontend.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolInfo(uint256)",
      "name": "poolInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "lpToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "allocPoint",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "lastRewardBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "accBrickPerShare",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "depositFeeBP",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "poolLength()",
      "name": "poolLength",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "product(address)",
      "name": "product",
      "description": "Update dev address by the previous pm.",
      "parameterDecorators": [
        {
          "name": "_productAddr",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "productAddr()",
      "name": "productAddr",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "set(uint256,uint256,uint16,bool)",
      "name": "set",
      "description": "Update the given pool's Brick allocation point and deposit fee. Can only be called by the owner.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_allocPoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_depositFeeBP",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_withUpdate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setFeeAddress(address)",
      "name": "setFeeAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_feeAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "startBlock()",
      "name": "startBlock",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "totalAllocPoint()",
      "name": "totalAllocPoint",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateEmissionRate(uint256)",
      "name": "updateEmissionRate",
      "description": "transparent and simple way to alter the emission.",
      "parameterDecorators": [
        {
          "name": "_brickPerBlock",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updatePool(uint256)",
      "name": "updatePool",
      "description": "Update reward variables of the given pool to be up-to-date.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "userInfo(uint256,address)",
      "name": "userInfo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "rewardDebt",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint256,uint256)",
      "name": "withdraw",
      "description": "Withdraw LP tokens from Builder.",
      "parameterDecorators": [
        {
          "name": "_pid",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}