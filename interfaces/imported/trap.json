{"schema":"../schema.json","tags":["tokens"],"name":"Trap","description":"This contract will always transfer the `amt` of an IERC20 token to the caller... regardless of who the caller is. * Its goal is to test to see if people will blindly front run things. i.e. how arbitrary the Dark Forest is * Version 2 This version adds a fake emission of a fake ERC20 token.","eventDecorators":[],"functionDecorators":[{"signature":"amt()","name":"amt","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"decimals()","name":"decimals","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"destroy()","name":"destroy","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"fakeTokenContract()","name":"fakeTokenContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"go(uint256,uint256)","name":"go","description":"Transfer the `amt` of the ERC20 tokens to the caller the objective would be to call this function and see if someone notices that it sends the caller funds. It takes two arguments, these arguments do nothing but test to see if the frontrunner will include those arguments.","parameterDecorators":[{"name":"value1","description":"","recommendedTypes":[]},{"name":"value2","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"setAmt(uint256)","name":"setAmt","description":"Update the amount of ERC20 token that calling the go function would transfer to the caller.","parameterDecorators":[{"name":"_amt","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setDecimals(uint256)","name":"setDecimals","description":"Set the decimals that the ERC20 contract uses, this could be done programmatically but...","parameterDecorators":[{"name":"_decimals","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setTokenContract(address)","name":"setTokenContract","description":"Update the contract address that the ERC20 token is deployed to.","parameterDecorators":[{"name":"_newToken","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"tokenContract()","name":"tokenContract","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true}]}