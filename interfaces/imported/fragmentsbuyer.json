{
  "schema": "../schema.json",
  "tags": [],
  "name": "FragmentsBuyer",
  "description": "",
  "eventDecorators": [
    {
      "signature": "AdminClaimed(address,address)",
      "name": "AdminClaimed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "previousAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EtherWithdraw(uint256,address)",
      "name": "EtherWithdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "sendTo",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OperatorAdded(address,bool)",
      "name": "OperatorAdded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newOperator",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isAdd",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TokenWithdraw(address,uint256,address)",
      "name": "TokenWithdraw",
      "description": "",
      "parameterDecorators": [
        {
          "name": "access",
          "description": "TRUE if the Watcher was given permissions, FALSE if permissions were removed.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "domain",
          "description": "the remote domain of the Home contract for the Replica.",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "watcher",
          "description": "the address of the Watcher.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferAdminPending(address)",
      "name": "TransferAdminPending",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pendingAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addOperator(address)",
      "name": "addOperator",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newOperator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "admin()",
      "name": "admin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "baseFragmentsPrice()",
      "name": "baseFragmentsPrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyFragments(address,uint256,uint256,address)",
      "name": "buyFragments",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "fragmentAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenSanityAmount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimAdmin()",
      "name": "claimAdmin",
      "description": "Allows the pendingAdmin address to finalize the change admin process.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "currentFragmentsPrice()",
      "name": "currentFragmentsPrice",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getFragmentsPrice(address,uint256)",
      "name": "getFragmentsPrice",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOperators()",
      "name": "getOperators",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "goddessFragments()",
      "name": "goddessFragments",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "goddessToken()",
      "name": "goddessToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pendingAdmin()",
      "name": "pendingAdmin",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pricingToken()",
      "name": "pricingToken",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeOperator(address)",
      "name": "removeOperator",
      "description": "",
      "parameterDecorators": [
        {
          "name": "operator",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "resetTime()",
      "name": "resetTime",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setFragmentsPrice(address,uint256)",
      "name": "setFragmentsPrice",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_pricingToken",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_fragmentsPrice",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setTreasury(address)",
      "name": "setTreasury",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_treasury",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setUniswapRouter(address)",
      "name": "setUniswapRouter",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_uniswapRouter",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferAdmin(address)",
      "name": "transferAdmin",
      "description": "Allows the current admin to set the pendingAdmin address.",
      "parameterDecorators": [
        {
          "name": "newAdmin",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferAdminQuickly(address)",
      "name": "transferAdminQuickly",
      "description": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
      "parameterDecorators": [
        {
          "name": "newAdmin",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "treasury()",
      "name": "treasury",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniswapRouter()",
      "name": "uniswapRouter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "weth()",
      "name": "weth",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawEther(uint256,address)",
      "name": "withdrawEther",
      "description": "Withdraw Ethers.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sendTo",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawToken(address,uint256,address)",
      "name": "withdrawToken",
      "description": "Withdraw all IERC20 compatible tokens.",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "IERC20 The address of the token contract.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "sendTo",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}