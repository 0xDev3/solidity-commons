{
  "schema": "../schema.json",
  "tags": [],
  "name": "BatterseaScriptsV1",
  "description": "BatterseaScriptsV1. Meant to be used with a DSProxy contract via delegatecall. Target contract with scripts for the Battersea release of the protocol.",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "EXCHANGE_PROXY_ADDRESS()",
      "name": "EXCHANGE_PROXY_ADDRESS",
      "description": "The contract that enables trading on the Balancer Exchange.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "WETH_ADDRESS()",
      "name": "WETH_ADDRESS",
      "description": "The contract that enables wrapping ETH into ERC-20 form.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "borrowAndSellFyTokens(address,uint256,uint256)",
      "name": "borrowAndSellFyTokens",
      "description": "Borrows fyTokens and sells them for underlying.",
      "parameterDecorators": [
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "borrowAmount",
          "description": "The amount of fyTokens to borrow.",
          "recommendedTypes": []
        },
        {
          "name": "underlyingAmount",
          "description": "The amount of underlying to sell fyTokens for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositAndLockCollateral(address,address,uint256)",
      "name": "depositAndLockCollateral",
      "description": "Deposits and locks collateral into the BalanceSheet contract. Requirements: - The caller must have allowed the DSProxy to spend `collateralAmount` tokens.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "collateralAmount",
          "description": "The amount of collateral to deposit and lock.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositAndLockCollateralAndBorrow(address,address,uint256,uint256,uint256)",
      "name": "depositAndLockCollateralAndBorrow",
      "description": "Deposits and locks collateral into the vault in the BalanceSheet contract and draws debt via the FyToken contract. Requirements: - The caller must have allowed the DSProxy to spend `collateralAmount` tokens.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "collateralAmount",
          "description": "The amount of collateral to deposit and lock.",
          "recommendedTypes": []
        },
        {
          "name": "borrowAmount",
          "description": "The amount of fyTokens to borrow.",
          "recommendedTypes": []
        },
        {
          "name": "underlyingAmount",
          "description": "The amount of underlying to sell fyTokens for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositCollateral(address,address,uint256)",
      "name": "depositCollateral",
      "description": "Deposits collateral into the BalanceSheet contract. Requirements: - The caller must have allowed the DSProxy to spend `collateralAmount` tokens.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "collateralAmount",
          "description": "The amount of collateral to deposit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "freeAndWithdrawCollateral(address,address,uint256)",
      "name": "freeAndWithdrawCollateral",
      "description": "Frees collateral from the vault and withdraws it from the BalanceSheet contract.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "collateralAmount",
          "description": "The amount of collateral to free and withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "freeCollateral(address,address,uint256)",
      "name": "freeCollateral",
      "description": "Frees collateral from the vault in the BalanceSheet contract.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "collateralAmount",
          "description": "The amount of collateral to free.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lockCollateral(address,address,uint256)",
      "name": "lockCollateral",
      "description": "Locks collateral in the vault in the BalanceSheet contract.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "collateralAmount",
          "description": "The amount of collateral to free.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lockCollateralAndBorrow(address,address,uint256,uint256,uint256)",
      "name": "lockCollateralAndBorrow",
      "description": "Locks collateral into the vault in the BalanceSheet contract and draws debt via the FyToken contract.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "collateralAmount",
          "description": "The amount of collateral to deposit and lock.",
          "recommendedTypes": []
        },
        {
          "name": "borrowAmount",
          "description": "The amount of fyTokens to borrow.",
          "recommendedTypes": []
        },
        {
          "name": "underlyingAmount",
          "description": "The amount of underlying to sell fyTokens for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "openVault(address,address)",
      "name": "openVault",
      "description": "Frees collateral from the vault in the BalanceSheet contract.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "redeemFyTokens(address,uint256)",
      "name": "redeemFyTokens",
      "description": "Redeems fyTokens in exchange for underlying tokens. Requirements: - The caller must have allowed the DSProxy to spend `repayAmount` fyTokens.",
      "parameterDecorators": [
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyTokenAmount",
          "description": "The amount of fyTokens to redeem.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "repayBorrow(address,uint256)",
      "name": "repayBorrow",
      "description": "Repays the fyToken borrow. Requirements: - The caller must have allowed the DSProxy to spend `repayAmount` fyTokens.",
      "parameterDecorators": [
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "repayAmount",
          "description": "The amount of fyTokens to repay.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "sellUnderlyingAndRepayBorrow(address,uint256)",
      "name": "sellUnderlyingAndRepayBorrow",
      "description": "Market sell underlying and repay the borrows via the FyToken contract. Requirements: - The caller must have allowed the DSProxy to spend `underlyingAmount` tokens.",
      "parameterDecorators": [
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "underlyingAmount",
          "description": "The amount of collateral to deposit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "supplyUnderlying(address,uint256)",
      "name": "supplyUnderlying",
      "description": "Supplies the underlying to the RedemptionPool contract and mints fyTokens.",
      "parameterDecorators": [
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "underlyingAmount",
          "description": "The amount of underlying to supply.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "supplyUnderlyingAndRepayBorrow(address,uint256)",
      "name": "supplyUnderlyingAndRepayBorrow",
      "description": "Supplies the underlying to the RedemptionPool contract, mints fyTokens and repays the borrow. Requirements: - The caller must have allowed the DSProxy to spend `underlyingAmount` tokens.",
      "parameterDecorators": [
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "underlyingAmount",
          "description": "The amount of underlying to supply.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawCollateral(address,address,uint256)",
      "name": "withdrawCollateral",
      "description": "Withdraws collateral from the vault in the BalanceSheet contract.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "collateralAmount",
          "description": "The amount of collateral to withdraw.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "wrapEthAndDepositAndLockCollateral(address,address,uint256)",
      "name": "wrapEthAndDepositAndLockCollateral",
      "description": "Wraps ETH into WETH, deposits and locks collateral into the BalanceSheet contract and draws debt via the FyToken contract. This is a payable function so it can receive ETH transfers.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "collateralAmount",
          "description": "The amount of collateral to deposit and lock.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "wrapEthAndDepositAndLockCollateralAndBorrow(address,address,uint256,uint256,uint256)",
      "name": "wrapEthAndDepositAndLockCollateralAndBorrow",
      "description": "Wraps ETH into WETH, deposits and locks collateral into the vault in the BalanceSheet contract and draws debt via the FyToken contract. This is a payable function so it can receive ETH transfers.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "collateralAmount",
          "description": "The amount of collateral to deposit and lock.",
          "recommendedTypes": []
        },
        {
          "name": "borrowAmount",
          "description": "The amount of fyTokens to borrow.",
          "recommendedTypes": []
        },
        {
          "name": "underlyingAmount",
          "description": "The amount of underlying to sell fyTokens for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "wrapEthAndDepositCollateral(address,address,uint256)",
      "name": "wrapEthAndDepositCollateral",
      "description": "Wraps ETH into WETH and deposits into the BalanceSheet contract. This is a payable function so it can receive ETH transfers.",
      "parameterDecorators": [
        {
          "name": "balanceSheet",
          "description": "The address of the BalanceSheet contract.",
          "recommendedTypes": []
        },
        {
          "name": "fyToken",
          "description": "The address of the FyToken contract.",
          "recommendedTypes": []
        },
        {
          "name": "collateralAmount",
          "description": "The amount of collateral to deposit.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}