{
  "schema": "../schema.json",
  "tags": [],
  "name": "Demurrage",
  "description": "",
  "eventDecorators": [],
  "functionDecorators": [
    {
      "signature": "compoundDemurrage(uint256,uint256,uint256,uint256)",
      "name": "compoundDemurrage",
      "description": "Mathematical function to calculate negatively compounding interest (demurrage charge). This follows a standard compounding formula of FV(future value) = PV (present value) * (1 + ratio ) ^ NIn this function however, the ratio is always intended to be a charge, and thus ( 1 - ratio ) in the bracketsABDK Math 64.64 Smart Contract Library. Copyright Â© 2019 by ABDK Consulting.",
      "parameterDecorators": [
        {
          "name": "_principle",
          "description": "Principle amount to calculate demurrage for, in wei.",
          "recommendedTypes": []
        },
        {
          "name": "_ratioNumerator",
          "description": "Numerator of compounding ratio, e.g. if the demurrage rate is .01 (1/100), numerator == 1.",
          "recommendedTypes": []
        },
        {
          "name": "_ratioDenominator",
          "description": "Denominator of the compounding ratio, e.g. if the demurrage rate is .01 (1/100), denominator == 100.",
          "recommendedTypes": []
        },
        {
          "name": "_compoundingPeriods",
          "description": "Number of compounding periods.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Returns the reduced principle from a compounding negative interest charge.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}