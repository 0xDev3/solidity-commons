{
  "schema": "../schema.json",
  "tags": [],
  "name": "DmmBlacklistable",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Blacklisted(address)",
      "name": "Blacklisted",
      "description": "Emitted when a new Vault is deployed. Fired in updateTokenRegistry().",
      "parameterDecorators": [
        {
          "name": "tokenRegistry",
          "description": "new TokenRegistry contract address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "BlacklisterChanged(address)",
      "name": "BlacklisterChanged",
      "description": "Emitted when a new Vault is deployed. Fired in updateTokenRegistry().",
      "parameterDecorators": [
        {
          "name": "tokenRegistry",
          "description": "new TokenRegistry contract address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a new Vault is deployed. Fired in updateTokenRegistry().",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "UnBlacklisted(address)",
      "name": "UnBlacklisted",
      "description": "Emitted when a new Vault is deployed. Fired in updateTokenRegistry().",
      "parameterDecorators": [
        {
          "name": "tokenRegistry",
          "description": "new TokenRegistry contract address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BLACKLISTED()",
      "name": "BLACKLISTED",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "blacklist(address)",
      "name": "blacklist",
      "description": "Adds `account` to blacklist.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address to blacklist.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "checkNotBlacklisted(address)",
      "name": "checkNotBlacklisted",
      "description": "Checks if `account` is blacklisted. Reverts with `BLACKLISTED` if blacklisted.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isBlacklisted(address)",
      "name": "isBlacklisted",
      "description": "Checks if `account` is blacklisted.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address to check.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unBlacklist(address)",
      "name": "unBlacklist",
      "description": "Removes account from blacklist.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "The address to remove from the blacklist.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}