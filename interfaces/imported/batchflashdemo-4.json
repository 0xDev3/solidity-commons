{"schema":"../schema.json","tags":["flash loans"],"name":"BatchFlashDemo","description":"","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`. Emitted when the implementation of a variable debt token is upgraded.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"executeFlashLoans(uint256)","name":"executeFlashLoans","description":"","parameterDecorators":[{"name":"_flashLinkAmt2","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"executeOperation(address[],uint256[],uint256[],address,bytes)","name":"executeOperation","description":"This function is called after your contract has received the flash loaned amount.","parameterDecorators":[{"name":"assets","description":"","recommendedTypes":[]},{"name":"amounts","description":"","recommendedTypes":[]},{"name":"premiums","description":"","recommendedTypes":[]},{"name":"initiator","description":"","recommendedTypes":[]},{"name":"params","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"isOwner()","name":"isOwner","description":"Returns true if the caller is the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"myLiquidationFunction(address,address,address,uint256,bool)","name":"myLiquidationFunction","description":"","parameterDecorators":[{"name":"_collateral","description":"","recommendedTypes":[]},{"name":"_reserve","description":"","recommendedTypes":[]},{"name":"_user","description":"","recommendedTypes":[]},{"name":"_purchaseAmount","description":"","recommendedTypes":[]},{"name":"_receiveaToken","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"poolFee()","name":"poolFee","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint24"}],"emittableEvents":[],"readOnly":true},{"signature":"preLiquidation(address,address,address,uint256)","name":"preLiquidation","description":"","parameterDecorators":[{"name":"_collateral","description":"","recommendedTypes":[]},{"name":"_reserve","description":"","recommendedTypes":[]},{"name":"_user","description":"","recommendedTypes":[]},{"name":"_purchaseAmount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"rugPull()","name":"rugPull","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"swapExactInputSingle(uint256)","name":"swapExactInputSingle","description":"swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router. The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.","parameterDecorators":[{"name":"amountIn","description":"The exact amount of DAI that will be swapped for WETH9.","recommendedTypes":[]}],"returnDecorators":[{"name":"amountOut","description":"The amount of WETH9 received.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"swapRouter()","name":"swapRouter","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}