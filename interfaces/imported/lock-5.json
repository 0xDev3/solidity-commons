{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "locking"
  ],
  "name": "Lock",
  "description": "A token holder contract that will allow a beneficiary to extract the tokens at predefined intervals. Tokens not claimed at payment epochs accumulate Modified version of Openzeppelin's TokenTimeLock.",
  "eventDecorators": [
    {
      "signature": "FundsReleasedToBeneficiary(address,uint256,uint256)",
      "name": "FundsReleasedToBeneficiary",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. Emitted when the pause is lifted by `account`.",
      "parameterDecorators": [
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "timeStamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Initialized(address,address,uint256,uint256)",
      "name": "Initialized",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. Emitted when the pause is lifted by `account`.",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "duration",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "periods",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. Emitted when the pause is lifted by `account`.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PaymentsUpdatedOnDeposit(uint256,uint256,uint256)",
      "name": "PaymentsUpdatedOnDeposit",
      "description": "Emitted when update is made on Home or unconfirmed update root is submitted on Replica. Emitted when the pause is lifted by `account`.",
      "parameterDecorators": [
        {
          "name": "paymentSize",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "startTime",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "paymentsRemaining",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "approveERC(uint256)",
      "name": "approveERC",
      "description": "Call Action to Actual Token Contract.",
      "parameterDecorators": [
        {
          "name": "amountIn",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeBeneficiary(address)",
      "name": "changeBeneficiary",
      "description": "",
      "parameterDecorators": [
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "deposit(uint256)",
      "name": "deposit",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getBalance()",
      "name": "getBalance",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the getPaymentsRemaining of the tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBeneficiary()",
      "name": "getBeneficiary",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the beneficiary of the tokens.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getElapsedReward()",
      "name": "getElapsedReward",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getStatus()",
      "name": "getStatus",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the beneficiary of the tokens.",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTimeRemaining()",
      "name": "getTimeRemaining",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the beneficiary of the tokens.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address,address,uint256,uint256,uint256)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "beneficiary",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "duration",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "durationMultiple",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "p",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "release()",
      "name": "release",
      "description": "Transfers tokens held by timelock to beneficiary.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}