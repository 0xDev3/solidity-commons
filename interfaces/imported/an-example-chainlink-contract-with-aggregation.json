{
  "schema": "../schema.json",
  "tags": [
    "chainlink"
  ],
  "name": "Aggregator",
  "description": "An example Chainlink contract with aggregation.",
  "eventDecorators": [
    {
      "signature": "ResponseReceived(int256,uint256,address)",
      "name": "ResponseReceived",
      "description": "",
      "parameterDecorators": [
        {
          "name": "response",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "answerId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "sender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipRenounced(address)",
      "name": "OwnershipRenounced",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ChainlinkRequested(bytes32)",
      "name": "ChainlinkRequested",
      "description": "",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ChainlinkFulfilled(bytes32)",
      "name": "ChainlinkFulfilled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ChainlinkCancelled(bytes32)",
      "name": "ChainlinkCancelled",
      "description": "",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AnswerUpdated(int256,uint256,uint256)",
      "name": "AnswerUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "current",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "roundId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "timestamp",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "NewRound(uint256,address)",
      "name": "NewRound",
      "description": "",
      "parameterDecorators": [
        {
          "name": "roundId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "startedBy",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "cancelRequest(bytes32,uint256,uint256)",
      "name": "cancelRequest",
      "description": "Cancels an outstanding Chainlink request. The oracle contract requires the request ID and additional metadata to validate the cancellation. Only old answers can be cancelled.",
      "parameterDecorators": [
        {
          "name": "_requestId",
          "description": "is the identifier for the chainlink request being cancelled.",
          "recommendedTypes": []
        },
        {
          "name": "_payment",
          "description": "is the amount of LINK paid to the oracle for the request.",
          "recommendedTypes": []
        },
        {
          "name": "_expiration",
          "description": "is the time when the request expires.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "authorizedRequesters(address)",
      "name": "authorizedRequesters",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "jobIds(uint256)",
      "name": "jobIds",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "latestAnswer()",
      "name": "latestAnswer",
      "description": "get the most recently reported answer.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minimumResponses()",
      "name": "minimumResponses",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "oracles(uint256)",
      "name": "oracles",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferLINK(address,uint256)",
      "name": "transferLINK",
      "description": "Allows the owner of the contract to withdraw any LINK balance available on the contract. The contract will need to have a LINK balance in order to create requests.",
      "parameterDecorators": [
        {
          "name": "_recipient",
          "description": "The address to receive the LINK tokens.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "The amount of LINK to send from the contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "latestRound()",
      "name": "latestRound",
      "description": "get the latest completed round where the answer was updated.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "chainlinkCallback(bytes32,int256)",
      "name": "chainlinkCallback",
      "description": "Receives the answer from the Chainlink node. This function can only be called by the oracle that received the request.",
      "parameterDecorators": [
        {
          "name": "_clRequestId",
          "description": "The Chainlink request ID associated with the answer.",
          "recommendedTypes": []
        },
        {
          "name": "_response",
          "description": "The answer provided by the Chainlink node.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore. Allows the current owner to relinquish control of the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateRequestDetails(uint128,uint128,address[],bytes32[])",
      "name": "updateRequestDetails",
      "description": "Updates the arrays of oracles and jobIds with new values, overwriting the old values. Arrays are validated to be equal length.",
      "parameterDecorators": [
        {
          "name": "_paymentAmount",
          "description": "the amount of LINK to be sent to each oracle for each request.",
          "recommendedTypes": []
        },
        {
          "name": "_minimumResponses",
          "description": "the minimum number of responses before an answer will be calculated.",
          "recommendedTypes": []
        },
        {
          "name": "_oracles",
          "description": "An array of oracle addresses.",
          "recommendedTypes": []
        },
        {
          "name": "_jobIds",
          "description": "An array of Job IDs.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "latestTimestamp()",
      "name": "latestTimestamp",
      "description": "get the last updated at block timestamp.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "destroy()",
      "name": "destroy",
      "description": "Called by the owner to kill the contract. This transfers all LINK balance and ETH balance (if there is any) to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAnswer(uint256)",
      "name": "getAnswer",
      "description": "get past rounds answers.",
      "parameterDecorators": [
        {
          "name": "_roundId",
          "description": "the answer number to retrieve the answer for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "int256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTimestamp(uint256)",
      "name": "getTimestamp",
      "description": "get block timestamp when an answer was last updated.",
      "parameterDecorators": [
        {
          "name": "_roundId",
          "description": "the answer number to retrieve the updated timestamp for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "paymentAmount()",
      "name": "paymentAmount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "requestRateUpdate()",
      "name": "requestRateUpdate",
      "description": "Creates a Chainlink request for each oracle in the oracles array. This example does not include request parameters. Reference any documentation associated with the Job IDs used to determine the required parameters per-request.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setAuthorization(address,bool)",
      "name": "setAuthorization",
      "description": "Called by the owner to permission other addresses to generate new requests to oracles.",
      "parameterDecorators": [
        {
          "name": "_requester",
          "description": "the address whose permissions are being set.",
          "recommendedTypes": []
        },
        {
          "name": "_allowed",
          "description": "boolean that determines whether the requester is permissioned or not.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "_newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}