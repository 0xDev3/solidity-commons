{
  "schema": "../schema.json",
  "tags": [],
  "name": "PingPongRouter",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when a new COMP speed is calculated for a market. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Received(uint32,uint32,uint256,bool)",
      "name": "Received",
      "description": "Emitted when a new COMP speed is calculated for a market. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "domain",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "count",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isPing",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Sent(uint32,uint32,uint256,bool)",
      "name": "Sent",
      "description": "Emitted when a new COMP speed is calculated for a market. Emitted when the implementation of a variable debt token is upgraded.",
      "parameterDecorators": [
        {
          "name": "domain",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "matchId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "count",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "isPing",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "counter()",
      "name": "counter",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "enrollRemoteRouter(uint32,bytes32)",
      "name": "enrollRemoteRouter",
      "description": "Register the address of a Router contract for the same xApp on a remote chain.",
      "parameterDecorators": [
        {
          "name": "_domain",
          "description": "The domain of the remote xApp Router.",
          "recommendedTypes": []
        },
        {
          "name": "_router",
          "description": "The address of the remote xApp Router.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "handle(uint32,bytes32,bytes)",
      "name": "handle",
      "description": "Handle \"volleys\" sent via Optics from other remote PingPong Routers.",
      "parameterDecorators": [
        {
          "name": "_origin",
          "description": "The domain the message is coming from.",
          "recommendedTypes": []
        },
        {
          "name": "_sender",
          "description": "The address the message is coming from.",
          "recommendedTypes": []
        },
        {
          "name": "_message",
          "description": "The message in the form of raw bytes.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initiatePingPongMatch(uint32)",
      "name": "initiatePingPongMatch",
      "description": "Initiate a PingPong match with the destination domain by sending the first Ping volley.",
      "parameterDecorators": [
        {
          "name": "_destinationDomain",
          "description": "The domain to initiate the match with.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "remotes(uint32)",
      "name": "remotes",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setXAppConnectionManager(address)",
      "name": "setXAppConnectionManager",
      "description": "Modify the contract the xApp uses to validate Replica contracts.",
      "parameterDecorators": [
        {
          "name": "_xAppConnectionManager",
          "description": "The address of the xAppConnectionManager contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "xAppConnectionManager()",
      "name": "xAppConnectionManager",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}