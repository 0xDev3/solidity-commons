{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "L2Vault",
  "description": "",
  "eventDecorators": [
    {
      "signature": "DepositLiquidity(address,address,uint256,uint256)",
      "name": "DepositLiquidity",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "blocks",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FeeTaken(address,address,address,uint256,uint256,uint256,uint256,bytes32)",
      "name": "FeeTaken",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "_fee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "baseFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "totalFee",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "uniqueId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityMoved(address,address,uint256)",
      "name": "LiquidityMoved",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "_owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityRefunded(address,address,uint256,bytes32)",
      "name": "LiquidityRefunded",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "uniqueId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "LiquidityWithdrawn(address,address,uint256)",
      "name": "LiquidityWithdrawn",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "provider",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "PauseNetwork(address,uint256)",
      "name": "PauseNetwork",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "networkID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Paused(address)",
      "name": "Paused",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferFundsRefunded(address,address,uint256,bytes32)",
      "name": "TransferFundsRefunded",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "uniqueId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferFundsUnlocked(address,uint256,bytes32)",
      "name": "TransferFundsUnlocked",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "uniqueId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferInitiated(address,address,address,uint256,uint256,address,bytes32,uint256)",
      "name": "TransferInitiated",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "erc20",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "remoteTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "remoteNetworkID",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "remoteDestinationAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "uniqueId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "transferDelay",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "TransferToDifferentTokenInitiated(address,address,address,address,uint256,uint256,uint256,address,bytes32,uint256)",
      "name": "TransferToDifferentTokenInitiated",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "erc20",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "tokenOut",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "remoteTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "remoteNetworkID",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ammID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "remoteDestinationAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "uniqueId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "transferDelay",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UnpauseNetwork(address,uint256)",
      "name": "UnpauseNetwork",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "admin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "networkID",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unpaused(address)",
      "name": "Unpaused",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawOnRemoteNetworkForDifferentTokenStarted(address,address,uint256,uint256,uint256,address,uint256,bytes32)",
      "name": "WithdrawOnRemoteNetworkForDifferentTokenStarted",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "remoteTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "remoteNetworkID",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "amountOutMin",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "remoteDestinationAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "remoteAmmId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "uniqueId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawOnRemoteNetworkStarted(address,address,address,uint256,uint256,address,bytes32)",
      "name": "WithdrawOnRemoteNetworkStarted",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "erc20",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "remoteTokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "remoteNetworkID",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "remoteDestinationAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "uniqueId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawalCompleted(address,uint256,uint256,address,bytes32)",
      "name": "WithdrawalCompleted",
      "description": "Emit on setPercentPerSecond().",
      "parameterDecorators": [
        {
          "name": "accountTo",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "netAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "uniqueId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "composableHolding()",
      "name": "composableHolding",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deposits(bytes32)",
      "name": "deposits",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRemoteTokenAddress(uint256,address)",
      "name": "getRemoteTokenAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_networkID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "tokenAddressRemote",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasBeenRefunded(bytes32)",
      "name": "hasBeenRefunded",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasBeenUnlocked(bytes32)",
      "name": "hasBeenUnlocked",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "hasBeenWithdrawn(bytes32)",
      "name": "hasBeenWithdrawn",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_vaultConfig",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "lastRefundedID()",
      "name": "lastRefundedID",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastTransfer(address)",
      "name": "lastTransfer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastUnlockID()",
      "name": "lastUnlockID",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastWithdrawID()",
      "name": "lastWithdrawID",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bytes32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pause()",
      "name": "pause",
      "description": "External callable function to pause the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "pauseNetwork(uint256)",
      "name": "pauseNetwork",
      "description": "External callable function to pause the contract.",
      "parameterDecorators": [
        {
          "name": "networkID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "paused()",
      "name": "paused",
      "description": "Returns true if the contract is paused, and false otherwise.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "pausedNetwork(uint256)",
      "name": "pausedNetwork",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "provideEthLiquidity(uint256)",
      "name": "provideEthLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "blocksForActiveLiquidity",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "provideLiquidity(uint256,address,uint256)",
      "name": "provideLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "blocksForActiveLiquidity",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "refundLiquidity(address,uint256,address,bytes32)",
      "name": "refundLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "refundTransferFunds(address,address,uint256,bytes32)",
      "name": "refundTransferFunds",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_user",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "saveFunds(address,address)",
      "name": "saveFunds",
      "description": "Will be called once the contract is paused and token's available liquidity will be manually moved back to L1.",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "Token's balance the owner wants to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "Receiver address.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferERC20ToLayer(uint256,address,address,uint256,uint256)",
      "name": "transferERC20ToLayer",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "remoteDestinationAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "remoteNetworkID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "transferDelay",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferERC20ToLayerForDifferentToken(uint256,address,address,uint256,uint256,address,uint256)",
      "name": "transferERC20ToLayerForDifferentToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "remoteDestinationAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "remoteNetworkID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "transferDelay",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "remoteAmmId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unlockTransferFunds(address,uint256,bytes32)",
      "name": "unlockTransferFunds",
      "description": "",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_id",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpause()",
      "name": "unpause",
      "description": "External callable function to unpause the contract.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unpauseNetwork(uint256)",
      "name": "unpauseNetwork",
      "description": "External callable function to unpause the contract.",
      "parameterDecorators": [
        {
          "name": "networkID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "vaultConfig()",
      "name": "vaultConfig",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawDifferentTokenTo(address,uint256,address,address,bytes32,uint256,uint256,uint256,bytes)",
      "name": "withdrawDifferentTokenTo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "accountTo",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "baseFee",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amountOutMin",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "ammID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawFunds(address,address,uint256)",
      "name": "withdrawFunds",
      "description": "The idea is to be able to withdraw to a controlled address certain amount of token liquidity in order to re-balance among different L2s (manual bridge to L1 and then act accordingly).",
      "parameterDecorators": [
        {
          "name": "_token",
          "description": "Token's balance the owner wants to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "_to",
          "description": "Receiver address.",
          "recommendedTypes": []
        },
        {
          "name": "_amount",
          "description": "the amount of tokens to withdraw from the vault.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawLiquidity(address,uint256)",
      "name": "withdrawLiquidity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawLiquidityOnAnotherL2Network(address,uint256,address,uint256)",
      "name": "withdrawLiquidityOnAnotherL2Network",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "remoteDestinationAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_networkID",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawLiquidityToDifferentToken(address,address,uint256,uint256,uint256,bytes)",
      "name": "withdrawLiquidityToDifferentToken",
      "description": "External function called to withdraw liquidity in different token.",
      "parameterDecorators": [
        {
          "name": "tokenIn",
          "description": "Address of the token provider have.",
          "recommendedTypes": []
        },
        {
          "name": "tokenOut",
          "description": "Address of the token provider want to receive.",
          "recommendedTypes": []
        },
        {
          "name": "amountIn",
          "description": "Amount of tokens provider want to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "amountOutMin",
          "description": "Minimum amount of token user should get.",
          "recommendedTypes": []
        },
        {
          "name": "ammID",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawLiquidityToDifferentTokenOnAnotherL2Network(address,address,uint256,uint256,uint256,address,uint256)",
      "name": "withdrawLiquidityToDifferentTokenOnAnotherL2Network",
      "description": "External function called to withdraw liquidity in different token on another network.",
      "parameterDecorators": [
        {
          "name": "tokenIn",
          "description": "Address of the token provider have.",
          "recommendedTypes": []
        },
        {
          "name": "tokenOut",
          "description": "Address of the token provider want to receive.",
          "recommendedTypes": []
        },
        {
          "name": "amountIn",
          "description": "Amount of tokens provider want to withdraw.",
          "recommendedTypes": []
        },
        {
          "name": "networkID",
          "description": "Id of the network want to receive the other token.",
          "recommendedTypes": []
        },
        {
          "name": "amountOutMin",
          "description": "Minimum amount of token user should get.",
          "recommendedTypes": []
        },
        {
          "name": "remoteDestinationAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "remoteAmmId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawTo(address,uint256,address,bytes32,uint256)",
      "name": "withdrawTo",
      "description": "",
      "parameterDecorators": [
        {
          "name": "accountTo",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "baseFee",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}