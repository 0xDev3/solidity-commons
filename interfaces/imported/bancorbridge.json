{"schema":"../schema.json","tags":["bridges"],"name":"BancorBridge","description":"","eventDecorators":[{"signature":"ERC20BridgeTransfer(address,address,uint256,uint256,address,address)","name":"ERC20BridgeTransfer","description":"Emitted when a user sells wTokens to the AMM. triggered when the system balance for a given token is updated.","parameterDecorators":[{"name":"inputToken","description":"","recommendedTypes":[],"indexed":false},{"name":"outputToken","description":"","recommendedTypes":[],"indexed":false},{"name":"inputTokenAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"outputTokenAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"from","description":"","recommendedTypes":[],"indexed":false},{"name":"to","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"BANCOR_ETH_ADDRESS()","name":"BANCOR_ETH_ADDRESS","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"bridgeTransferFrom(address,address,address,uint256,bytes)","name":"bridgeTransferFrom","description":"Callback for `IERC20Bridge`. Tries to buy `amount` of `toTokenAddress` tokens by selling the entirety of the `fromTokenAddress` token encoded in the bridge data, then transfers the bought tokens to `to`.","parameterDecorators":[{"name":"toTokenAddress","description":"The token to buy and transfer to `to`.","recommendedTypes":[]},{"name":"from","description":"The maker (this contract).","recommendedTypes":[]},{"name":"to","description":"The recipient of the bought tokens.","recommendedTypes":[]},{"name":"amount","description":"Minimum amount of `toTokenAddress` tokens to buy.","recommendedTypes":[]},{"name":"bridgeData","description":"The abi-encoded conversion path addresses and Bancor network address.","recommendedTypes":[]}],"returnDecorators":[{"name":"success","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":false},{"signature":"isValidSignature(bytes32,bytes)","name":"isValidSignature","description":"`SignatureType.Wallet` callback, so that this bridge can be the maker and sign for itself in orders. Always succeeds.","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"magicValue","description":"","recommendedTypes":[],"solidityType":"bytes4"}],"emittableEvents":[],"readOnly":true}]}