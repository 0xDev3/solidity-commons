{
  "schema": "../schema.json",
  "tags": [
    "vaults"
  ],
  "name": "YZYVault",
  "description": "",
  "eventDecorators": [
    {
      "signature": "ChangeBuyingWBTCTokenFee(address,uint16)",
      "name": "ChangeBuyingWBTCTokenFee",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangeBuyingWETHTokenFee(address,uint16)",
      "name": "ChangeBuyingWETHTokenFee",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangeBuyingYFITokenFee(address,uint16)",
      "name": "ChangeBuyingYFITokenFee",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangeDevFee(address,uint16)",
      "name": "ChangeDevFee",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangeQuarterlyFee(address,uint16)",
      "name": "ChangeQuarterlyFee",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangeQuarterlyRewardPeriod(address,uint256)",
      "name": "ChangeQuarterlyRewardPeriod",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangeTreasuryFee(address,uint16)",
      "name": "ChangeTreasuryFee",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangedDevFeeReciever(address,address,address)",
      "name": "ChangedDevFeeReciever",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "_newAmount",
          "description": "new amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_prevAmount",
          "description": "previous amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_token",
          "description": "token address.",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ChangedMaximumLockPeriod(address,uint256)",
      "name": "ChangedMaximumLockPeriod",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangedMinimumETHDepositAmount(address,uint256)",
      "name": "ChangedMinimumETHDepositAmount",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangedMinimumLockPeriod(address,uint256)",
      "name": "ChangedMinimumLockPeriod",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangedTreasuryRewardPeriod(address,uint256)",
      "name": "ChangedTreasuryRewardPeriod",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "value",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ChangedUniswapV2Pair(address,address)",
      "name": "ChangedUniswapV2Pair",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "uniswapV2Pair",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ChangedUniswapV2Router(address,address)",
      "name": "ChangedUniswapV2Router",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "uniswapV2Pair",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ChangedWbtcTokenAddress(address,address)",
      "name": "ChangedWbtcTokenAddress",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "wbtcAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ChangedWethTokenAddress(address,address)",
      "name": "ChangedWethTokenAddress",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "wethAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ChangedYfiTokenAddress(address,address)",
      "name": "ChangedYfiTokenAddress",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "yfiAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ChangedYzyAddress(address,address)",
      "name": "ChangedYzyAddress",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "yzyAddress",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "DisabledLock(address)",
      "name": "DisabledLock",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "EmergencyWithdrawToken(address,address,uint256)",
      "name": "EmergencyWithdrawToken",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "_newAmount",
          "description": "new amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_prevAmount",
          "description": "previous amount.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "_token",
          "description": "token address.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "EnabledLock(address)",
      "name": "EnabledLock",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "governance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "GovernanceTransferred(address,address)",
      "name": "GovernanceTransferred",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "LPStaked(address,uint256)",
      "name": "LPStaked",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "Staked(address,uint256)",
      "name": "Staked",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "SwapAndLiquifyForYZY(address,uint256,uint256,uint256)",
      "name": "SwapAndLiquifyForYZY",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "msgSender",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "totAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "ethAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "yzyAmount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unstaked(address,uint256)",
      "name": "Unstaked",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "account",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawQuarterlyReward(address,uint256)",
      "name": "WithdrawQuarterlyReward",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "WithdrawTreasuryReward(address,uint256)",
      "name": "WithdrawTreasuryReward",
      "description": "An event emitted when a vault is liquidated. triggered when the system balance for a given token is updated.",
      "parameterDecorators": [
        {
          "name": "staker",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addEraReward(uint256)",
      "name": "addEraReward",
      "description": "Add fee to era reward variable Note Call by only YZY token contract.",
      "parameterDecorators": [
        {
          "name": "amount_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "buyingWBTCTokenFee()",
      "name": "buyingWBTCTokenFee",
      "description": "Return BuyingWBTCToken fee.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyingWETHTokenFee()",
      "name": "buyingWETHTokenFee",
      "description": "Return BuyingWETHToken fee.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "buyingYFITokenFee()",
      "name": "buyingYFITokenFee",
      "description": "Return BuyingYFIToken fee.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "changeBuyingWBTCTokenFee(uint16)",
      "name": "changeBuyingWBTCTokenFee",
      "description": "Update the buying WBTC token fee for this contract defaults at 30.00% of buyingTokenFee Note contract owner is meant to be a governance contract allowing YZY governance consensus.",
      "parameterDecorators": [
        {
          "name": "buyingWBTCTokenFee_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeBuyingWETHTokenFee(uint16)",
      "name": "changeBuyingWETHTokenFee",
      "description": "Update the buying WETH token fee for this contract defaults at 20.00% of buyingTokenFee Note contract owner is meant to be a governance contract allowing YZY governance consensus.",
      "parameterDecorators": [
        {
          "name": "buyingWETHTokenFee_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeBuyingYFITokenFee(uint16)",
      "name": "changeBuyingYFITokenFee",
      "description": "Update the buying YFI token fee for this contract defaults at 50.00% of buyingTokenFee Note contract owner is meant to be a governance contract allowing YZY governance consensus.",
      "parameterDecorators": [
        {
          "name": "buyingYFITokenFee_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeDevFee(uint16)",
      "name": "changeDevFee",
      "description": "Update the dev fee for this contract defaults at 4.00% of taxFee, It can be set on only by YZY governance. Note contract owner is meant to be a governance contract allowing YZY governance consensus.",
      "parameterDecorators": [
        {
          "name": "devFee_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeDevFeeReciever(address)",
      "name": "changeDevFeeReciever",
      "description": "Update dev address by the previous dev. Note onlyGovernance functions are meant for the governance contract allowing YZY governance token holders to do this functions.",
      "parameterDecorators": [
        {
          "name": "devAddress_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeMinimumDepositETHAmount(uint256)",
      "name": "changeMinimumDepositETHAmount",
      "description": "Change Minimum Deposit ETH Amount. Call by only Governance.",
      "parameterDecorators": [
        {
          "name": "minDepositETHAmount_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeQuarterlyFee(uint16)",
      "name": "changeQuarterlyFee",
      "description": "Update the Quarterly fee for this contract defaults at 20.00% of taxFee, It can be set on only by YZY governance. Note contract owner is meant to be a governance contract allowing YZY governance consensus.",
      "parameterDecorators": [
        {
          "name": "quarterlyFee_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeQuarterlyRewardPeriod(uint256)",
      "name": "changeQuarterlyRewardPeriod",
      "description": "Change value of quarterly reward period. Call by only Governance.",
      "parameterDecorators": [
        {
          "name": "quarterlyRewardPeriod_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeTreasuryFee(uint16)",
      "name": "changeTreasuryFee",
      "description": "Update the treasury fee for this contract defaults at 76.00% of taxFee, It can be set on only by YZY governance. Note contract owner is meant to be a governance contract allowing YZY governance consensus.",
      "parameterDecorators": [
        {
          "name": "treasuryFee_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeTreasuryRewardPeriod(uint256)",
      "name": "changeTreasuryRewardPeriod",
      "description": "Change value of treasury reward period. Call by only Governance.",
      "parameterDecorators": [
        {
          "name": "treasuryRewardPeriod_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeUniswapV2Pair(address)",
      "name": "changeUniswapV2Pair",
      "description": "Change YZY-ETH Uniswap V2 Pair address. Call by only Governance.",
      "parameterDecorators": [
        {
          "name": "uniswapV2Pair_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeUniswapV2Router(address)",
      "name": "changeUniswapV2Router",
      "description": "Change address of Uniswap V2Router. Call by only Governance.",
      "parameterDecorators": [
        {
          "name": "uniswapV2Router_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeWbtcTokenAddress(address)",
      "name": "changeWbtcTokenAddress",
      "description": "Change WBTC Token address. Call by only Governance.",
      "parameterDecorators": [
        {
          "name": "wbtcAddress_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeWethTokenAddress(address)",
      "name": "changeWethTokenAddress",
      "description": "Change WETH Token address. Call by only Governance.",
      "parameterDecorators": [
        {
          "name": "wethAddress_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeYfiTokenAddress(address)",
      "name": "changeYfiTokenAddress",
      "description": "Change YFI Token contract address. Call by only Governance.",
      "parameterDecorators": [
        {
          "name": "yfiAddress_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changeYzyAddress(address)",
      "name": "changeYzyAddress",
      "description": "Change YZY Token contract address. Call by only Governance.",
      "parameterDecorators": [
        {
          "name": "yzyAddress_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changedMaximumLockPeriod(uint256)",
      "name": "changedMaximumLockPeriod",
      "description": "Change maximun lock period. Call by only Governance.",
      "parameterDecorators": [
        {
          "name": "maxLockPeriod_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "changedMinimumLockPeriod(uint256)",
      "name": "changedMinimumLockPeriod",
      "description": "Change minimum lock period. Call by only Governance.",
      "parameterDecorators": [
        {
          "name": "minLockPeriod_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "contractStartTime()",
      "name": "contractStartTime",
      "description": "Return contract started time.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "devFee()",
      "name": "devFee",
      "description": "Return dev fee.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "devFeeReciever()",
      "name": "devFeeReciever",
      "description": "Return address of dev fee receiver.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "disableLock()",
      "name": "disableLock",
      "description": "Disable lock functionality. Call by only Governance.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "emergencyWithdrawToken()",
      "name": "emergencyWithdrawToken",
      "description": "Withdraw YZY token from vault wallet to owner when only emergency!.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "enableLock()",
      "name": "enableLock",
      "description": "Enable lock functionality. Call by only Governance.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getEstimatedSwapTokenAmount(address,address,uint256)",
      "name": "getEstimatedSwapTokenAmount",
      "description": "",
      "parameterDecorators": [
        {
          "name": "pairIn",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "pairOut",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "inAmount",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getQuarterlyAvailableReward(address)",
      "name": "getQuarterlyAvailableReward",
      "description": "API to get staker's available quarterly reward.",
      "parameterDecorators": [
        {
          "name": "account_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getQuarterlyPendingReward(address)",
      "name": "getQuarterlyPendingReward",
      "description": "API to get staker's pending quarterly reward.",
      "parameterDecorators": [
        {
          "name": "account_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTreasuryAvailableReward(address)",
      "name": "getTreasuryAvailableReward",
      "description": "API to get staker's available treasury reward.",
      "parameterDecorators": [
        {
          "name": "account_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getTreasuryPendingReward(address)",
      "name": "getTreasuryPendingReward",
      "description": "API to get staker's pending treasury reward.",
      "parameterDecorators": [
        {
          "name": "account_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "governance()",
      "name": "governance",
      "description": "Returns the address of the current governance.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isEnabledLock()",
      "name": "isEnabledLock",
      "description": "Disable lock functionality. Call by only Governance.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastQuarterlyRewardedTime()",
      "name": "lastQuarterlyRewardedTime",
      "description": "API to get the last quarterly rewarded time.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "lastTreasuryRewardedTime()",
      "name": "lastTreasuryRewardedTime",
      "description": "API to get the last treasury rewarded time.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "maximumLockPeriod()",
      "name": "maximumLockPeriod",
      "description": "Return maximum lock period.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minimumDepositETHAmount()",
      "name": "minimumDepositETHAmount",
      "description": "Return minium Deposit ETH Amount.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "minimumLockPeriod()",
      "name": "minimumLockPeriod",
      "description": "Return minimum lock period.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "numberOfStakers()",
      "name": "numberOfStakers",
      "description": "Return the number of stakers.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "quarterlyFee()",
      "name": "quarterlyFee",
      "description": "Return Quarterly fee.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "quarterlyRewardPeriod()",
      "name": "quarterlyRewardPeriod",
      "description": "Return value of quarterly reward period.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "stake(uint256)",
      "name": "stake",
      "description": "",
      "parameterDecorators": [
        {
          "name": "lockTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "stakeLPToken(uint256,uint256)",
      "name": "stakeLPToken",
      "description": "Stake LP Token to get YZY-ETH LP tokens.",
      "parameterDecorators": [
        {
          "name": "amount_",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "lockTime",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalStakedAmount()",
      "name": "totalStakedAmount",
      "description": "API to get the total staked amount of all stakers.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferGovernance(address)",
      "name": "transferGovernance",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newGovernance",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "treasuryFee()",
      "name": "treasuryFee",
      "description": "Return Treasury fee.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint16"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "treasuryRewardPeriod()",
      "name": "treasuryRewardPeriod",
      "description": "Return value of treasury reward period.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniswapV2Pair()",
      "name": "uniswapV2Pair",
      "description": "Return address of YZY-ETH Uniswap V2 pair.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "uniswapV2Router()",
      "name": "uniswapV2Router",
      "description": "Return address of Uniswap V2Router.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "unstake()",
      "name": "unstake",
      "description": "Unstake staked YZY-ETH LP tokens.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "userLockedTo(address)",
      "name": "userLockedTo",
      "description": "API to get locked timestamp of the staker.",
      "parameterDecorators": [
        {
          "name": "account_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "userRank(address)",
      "name": "userRank",
      "description": "API to get the staker's rank.",
      "parameterDecorators": [
        {
          "name": "account_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "userTotalStakedAmount(address)",
      "name": "userTotalStakedAmount",
      "description": "API to get the staker's staked amount.",
      "parameterDecorators": [
        {
          "name": "account_",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "wbtcTokenAddress()",
      "name": "wbtcTokenAddress",
      "description": "Return address of WBTC Token contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "wethTokenAddress()",
      "name": "wethTokenAddress",
      "description": "Return address of WETH Token contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdrawQuarterlyReward()",
      "name": "withdrawQuarterlyReward",
      "description": "API to withdraw quarterly rewards to staker's wallet.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawTreasuryReward()",
      "name": "withdrawTreasuryReward",
      "description": "API to withdraw treasury rewards to staker's wallet.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "yfiTokenAddress()",
      "name": "yfiTokenAddress",
      "description": "Return address of YFI Token contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "yzyAddress()",
      "name": "yzyAddress",
      "description": "Return address of YZY Token contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}