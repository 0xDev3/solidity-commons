{"schema":"../schema.json","tags":[],"name":"Faucet","description":"","eventDecorators":[{"signature":"Deposit(address,uint256,uint256)","name":"Deposit","description":"Emitted when the RecoveryManager role is transferred.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"EmergencyWithdraw(address,uint256,uint256)","name":"EmergencyWithdraw","description":"Emitted when the RecoveryManager role is transferred.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Emitted when the RecoveryManager role is transferred.","parameterDecorators":[{"name":"newRecoveryManager","description":"the address of the new RecoveryManager.","recommendedTypes":[],"indexed":true},{"name":"previousRecoveryManager","description":"the address of the previous RecoveryManager.","recommendedTypes":[],"indexed":true}]},{"signature":"Withdraw(address,uint256,uint256)","name":"Withdraw","description":"Emitted when the RecoveryManager role is transferred.","parameterDecorators":[{"name":"user","description":"","recommendedTypes":[],"indexed":true},{"name":"pid","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"TNI()","name":"TNI","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"add(uint256,address,bool)","name":"add","description":"Adds a new lp to the pool. Can only be called by the owner. DO NOT add the same LP token more than once.","parameterDecorators":[{"name":"_allocPoint","description":"How many allocation points to assign to this pool.","recommendedTypes":[]},{"name":"_lpToken","description":"Address of LP token contract.","recommendedTypes":[]},{"name":"_withUpdate","description":"Whether to update all LP token contracts. Should be true if TNI distribution has already begun.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"balance()","name":"balance","description":"Views total number of TNI tokens deposited for rewards.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"TNI token balance of the faucet.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"deposit(uint256,uint256)","name":"deposit","description":"Deposit LP tokens to Faucet for TNI allocation.","parameterDecorators":[{"name":"_pid","description":"ID of a specific LP token pool. See index of PoolInfo[].","recommendedTypes":[]},{"name":"_amount","description":"Amount of LP tokens to deposit.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"emergencyWithdraw(uint256)","name":"emergencyWithdraw","description":"Withdraw without caring about rewards. EMERGENCY ONLY.","parameterDecorators":[{"name":"_pid","description":"ID of a specific LP token pool. See index of PoolInfo[].","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"endBlock()","name":"endBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"massUpdatePools()","name":"massUpdatePools","description":"Update reward vairables for all pools. Be careful of gas spending!.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"pendingTni(uint256,address)","name":"pendingTni","description":"View function to see pending TNI on frontend.","parameterDecorators":[{"name":"_pid","description":"ID of a specific LP token pool. See index of PoolInfo[].","recommendedTypes":[]},{"name":"_user","description":"Address of a specific user.","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Pending TNI.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolInfo(uint256)","name":"poolInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"lpToken","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"allocPoint","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"lastRewardBlock","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"accTniPerShare","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"poolLength()","name":"poolLength","description":"Views total number of LP token pools.","parameterDecorators":[],"returnDecorators":[{"name":"_0","description":"Size of poolInfo array.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"set(uint256,uint256,bool)","name":"set","description":"Update the given pool's TNI allocation point. Can only be called by the owner.","parameterDecorators":[{"name":"_pid","description":"ID of a specific LP token pool. See index of PoolInfo[].","recommendedTypes":[]},{"name":"_allocPoint","description":"How many allocation points to assign to this pool.","recommendedTypes":[]},{"name":"_withUpdate","description":"Whether to update all LP token contracts. Should be true if TNI distribution has already begun.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"setEndBlock(uint256)","name":"setEndBlock","description":"Define last block on which TNI reward distribution occurs.","parameterDecorators":[{"name":"_endBlock","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Last block number.","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":false},{"signature":"startBlock()","name":"startBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"tniPerBlock()","name":"tniPerBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"totalAllocPoint()","name":"totalAllocPoint","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transfer(address,uint256)","name":"transfer","description":"Transfer TNI tokens.","parameterDecorators":[{"name":"to","description":"","recommendedTypes":[]},{"name":"value","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"_0","description":"Success.","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updatePool(uint256)","name":"updatePool","description":"Update reward variables of the given pool to be up-to-date.","parameterDecorators":[{"name":"_pid","description":"ID of a specific LP token pool. See index of PoolInfo[].","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"userInfo(uint256,address)","name":"userInfo","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]},{"name":"param1","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"amount","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"rewardDebt","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"withdraw(uint256,uint256)","name":"withdraw","description":"Withdraw LP tokens from MasterChef.","parameterDecorators":[{"name":"_pid","description":"ID of a specific LP token pool. See index of PoolInfo[].","recommendedTypes":[]},{"name":"_amount","description":"Amount of LP tokens to withdraw.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}