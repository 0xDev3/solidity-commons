{"schema":"../schema.json","tags":["makerdao"],"name":"BancorMarketMaker","description":"","eventDecorators":[{"signature":"UpdateBeneficiary(address)","name":"UpdateBeneficiary","description":"Emitted when an account withdraws funds from RelayHub.","parameterDecorators":[{"name":"beneficiary","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UpdateFormula(address)","name":"UpdateFormula","description":"Emitted when an account withdraws funds from RelayHub.","parameterDecorators":[{"name":"formula","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UpdateFees(uint256,uint256)","name":"UpdateFees","description":"Emitted when an account withdraws funds from RelayHub.","parameterDecorators":[{"name":"buyFeePct","description":"","recommendedTypes":[],"indexed":false},{"name":"sellFeePct","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"AddCollateralToken(address,uint256,uint256,uint32)","name":"AddCollateralToken","description":"Emitted when an account withdraws funds from RelayHub.","parameterDecorators":[{"name":"collateral","description":"","recommendedTypes":[],"indexed":true},{"name":"virtualSupply","description":"","recommendedTypes":[],"indexed":false},{"name":"virtualBalance","description":"","recommendedTypes":[],"indexed":false},{"name":"reserveRatio","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RemoveCollateralToken(address)","name":"RemoveCollateralToken","description":"Emitted when an account withdraws funds from RelayHub.","parameterDecorators":[{"name":"collateral","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UpdateCollateralToken(address,uint256,uint256,uint32)","name":"UpdateCollateralToken","description":"Emitted when an account withdraws funds from RelayHub.","parameterDecorators":[{"name":"collateral","description":"","recommendedTypes":[],"indexed":true},{"name":"virtualSupply","description":"","recommendedTypes":[],"indexed":false},{"name":"virtualBalance","description":"","recommendedTypes":[],"indexed":false},{"name":"reserveRatio","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Open()","name":"Open","description":"Emitted when an account withdraws funds from RelayHub.","parameterDecorators":[]},{"signature":"MakeBuyOrder(address,address,uint256,uint256,uint256,uint256)","name":"MakeBuyOrder","description":"Emitted when an account withdraws funds from RelayHub.","parameterDecorators":[{"name":"buyer","description":"","recommendedTypes":[],"indexed":true},{"name":"collateral","description":"","recommendedTypes":[],"indexed":true},{"name":"fee","description":"","recommendedTypes":[],"indexed":false},{"name":"purchaseAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"returnedAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"feePct","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"MakeSellOrder(address,address,uint256,uint256,uint256,uint256)","name":"MakeSellOrder","description":"Emitted when an account withdraws funds from RelayHub.","parameterDecorators":[{"name":"seller","description":"","recommendedTypes":[],"indexed":true},{"name":"collateral","description":"","recommendedTypes":[],"indexed":true},{"name":"fee","description":"","recommendedTypes":[],"indexed":false},{"name":"sellAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"returnedAmount","description":"","recommendedTypes":[],"indexed":false},{"name":"feePct","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"ScriptResult(address,bytes,bytes,bytes)","name":"ScriptResult","description":"Emitted when an account withdraws funds from RelayHub.","parameterDecorators":[{"name":"executor","description":"","recommendedTypes":[],"indexed":true},{"name":"script","description":"","recommendedTypes":[],"indexed":false},{"name":"input","description":"","recommendedTypes":[],"indexed":false},{"name":"returnData","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"RecoverToVault(address,address,uint256)","name":"RecoverToVault","description":"Emitted when an account withdraws funds from RelayHub.","parameterDecorators":[{"name":"vault","description":"","recommendedTypes":[],"indexed":true},{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"hasInitialized()","name":"hasInitialized","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"CONTROLLER_ROLE()","name":"CONTROLLER_ROLE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"updateBeneficiary(address)","name":"updateBeneficiary","description":"Update beneficiary to `_beneficiary`.","parameterDecorators":[{"name":"_beneficiary","description":"The address of the new beneficiary [to whom fees are to be sent].","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"addCollateralToken(address,uint256,uint256,uint32)","name":"addCollateralToken","description":"Add `_collateral.symbol(): string` as a whitelisted collateral token.","parameterDecorators":[{"name":"_collateral","description":"The address of the collateral token to be whitelisted.","recommendedTypes":[]},{"name":"_virtualSupply","description":"The virtual supply to be used for that collateral token [in wei].","recommendedTypes":[]},{"name":"_virtualBalance","description":"The virtual balance to be used for that collateral token [in wei].","recommendedTypes":[]},{"name":"_reserveRatio","description":"The reserve ratio to be used for that collateral token [in PPM].","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"PPM()","name":"PPM","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"getEVMScriptExecutor(bytes)","name":"getEVMScriptExecutor","description":"","parameterDecorators":[{"name":"_script","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"tokenManager()","name":"tokenManager","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"makeBuyOrder(address,address,uint256,uint256)","name":"makeBuyOrder","description":"Make a buy order worth `@tokenAmount(_collateral, _depositAmount)` for atleast `@tokenAmount(self.token(): address, _minReturnAmountAfterFee)`.","parameterDecorators":[{"name":"_buyer","description":"The address of the buyer.","recommendedTypes":[]},{"name":"_collateral","description":"The address of the collateral token to be deposited.","recommendedTypes":[]},{"name":"_depositAmount","description":"The amount of collateral token to be deposited.","recommendedTypes":[]},{"name":"_minReturnAmountAfterFee","description":"The minimum amount of the returned bonded tokens.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getRecoveryVault()","name":"getRecoveryVault","description":"Get the recovery vault for the app.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"beneficiary()","name":"beneficiary","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"isOpen()","name":"isOpen","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"formula()","name":"formula","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"makeSellOrder(address,address,uint256,uint256)","name":"makeSellOrder","description":"Make a sell order worth `@tokenAmount(self.token(): address, _sellAmount)` for atleast `@tokenAmount(_collateral, _minReturnAmountAfterFee)`.","parameterDecorators":[{"name":"_seller","description":"The address of the seller.","recommendedTypes":[]},{"name":"_collateral","description":"The address of the collateral token to be returned.","recommendedTypes":[]},{"name":"_sellAmount","description":"The amount of bonded token to be spent.","recommendedTypes":[]},{"name":"_minReturnAmountAfterFee","description":"The minimum amount of the returned collateral tokens.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateFees(uint256,uint256)","name":"updateFees","description":"Update fees deducted from buy and sell orders to respectively `@formatPct(_buyFeePct)`% and `@formatPct(_sellFeePct)`%.","parameterDecorators":[{"name":"_buyFeePct","description":"The new fee to be deducted from buy orders [in PCT_BASE].","recommendedTypes":[]},{"name":"_sellFeePct","description":"The new fee to be deducted from sell orders [in PCT_BASE].","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"sellFeePct()","name":"sellFeePct","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getStaticPricePPM(uint256,uint256,uint32)","name":"getStaticPricePPM","description":"","parameterDecorators":[{"name":"_supply","description":"","recommendedTypes":[]},{"name":"_balance","description":"","recommendedTypes":[]},{"name":"_reserveRatio","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"allowRecoverability(address)","name":"allowRecoverability","description":"By default deriving from AragonApp makes it recoverable.","parameterDecorators":[{"name":"token","description":"Token address that would be recovered.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"appId()","name":"appId","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bytes32"}],"emittableEvents":[],"readOnly":true},{"signature":"makeBuyOrderRaw(address,address,uint256,bytes)","name":"makeBuyOrderRaw","description":"Make a buy order using makeBuyOrder() function data. Used for single transaction ERC20 buy orders, ones without a pre-approval transaction, but that have been approved in this transaction.","parameterDecorators":[{"name":"_from","description":"Token sender.","recommendedTypes":[]},{"name":"_token","description":"Token that received approval.","recommendedTypes":[]},{"name":"_amount","description":"Token amount.","recommendedTypes":[]},{"name":"_buyOrderData","description":"Data for the below function call makeBuyOrder(address _buyer, address _collateral, uint256 _depositAmount, uint256 _minReturnAmountAfterFee).","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"getInitializationBlock()","name":"getInitializationBlock","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"removeCollateralToken(address)","name":"removeCollateralToken","description":"Remove `_collateral.symbol(): string` as a whitelisted collateral token.","parameterDecorators":[{"name":"_collateral","description":"The address of the collateral token to be un-whitelisted.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"transferToVault(address)","name":"transferToVault","description":"Send funds to recovery Vault. This contract should never receive funds, but in case it does, this function allows one to recover them.","parameterDecorators":[{"name":"_token","description":"Token balance to be sent to recovery vault.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"canPerform(address,bytes32,uint256[])","name":"canPerform","description":"Check whether an action can be performed by a sender for a particular role on this app.","parameterDecorators":[{"name":"_sender","description":"Sender of the call.","recommendedTypes":[]},{"name":"_role","description":"Role on this app.","recommendedTypes":[]},{"name":"_params","description":"Permission params for the role.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"getEVMScriptRegistry()","name":"getEVMScriptRegistry","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address,address,address,uint256,uint256)","name":"initialize","description":"Initialize market maker.","parameterDecorators":[{"name":"_controller","description":"The address of the controller contract.","recommendedTypes":[]},{"name":"_tokenManager","description":"The address of the [bonded token] token manager contract.","recommendedTypes":[]},{"name":"_formula","description":"The address of the BancorFormula [computation] contract.","recommendedTypes":[]},{"name":"_reserve","description":"The address of the reserve [pool] contract.","recommendedTypes":[]},{"name":"_beneficiary","description":"The address of the beneficiary [to whom fees are to be sent].","recommendedTypes":[]},{"name":"_buyFeePct","description":"The fee to be deducted from buy orders [in PCT_BASE].","recommendedTypes":[]},{"name":"_sellFeePct","description":"The fee to be deducted from sell orders [in PCT_BASE].","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"reserve()","name":"reserve","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"kernel()","name":"kernel","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"updateFormula(address)","name":"updateFormula","description":"Update formula to `_formula`.","parameterDecorators":[{"name":"_formula","description":"The address of the new BancorFormula [computation] contract.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isPetrified()","name":"isPetrified","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"collaterals(address)","name":"collaterals","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"whitelisted","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"virtualSupply","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"virtualBalance","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"reserveRatio","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"getCollateralToken(address)","name":"getCollateralToken","description":"*** public view functions ****.","parameterDecorators":[{"name":"_collateral","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"},{"name":"param1","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param2","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"param3","description":"","recommendedTypes":[],"solidityType":"uint32"}],"emittableEvents":[],"readOnly":true},{"signature":"controller()","name":"controller","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"buyFeePct()","name":"buyFeePct","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"token()","name":"token","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"PCT_BASE()","name":"PCT_BASE","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"open()","name":"open","description":"Open market making [enabling users to open buy and sell orders].","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateCollateralToken(address,uint256,uint256,uint32)","name":"updateCollateralToken","description":"Update `_collateral.symbol(): string` collateralization settings.","parameterDecorators":[{"name":"_collateral","description":"The address of the collateral token whose collateralization settings are to be updated.","recommendedTypes":[]},{"name":"_virtualSupply","description":"The new virtual supply to be used for that collateral token [in wei].","recommendedTypes":[]},{"name":"_virtualBalance","description":"The new virtual balance to be used for that collateral token [in wei].","recommendedTypes":[]},{"name":"_reserveRatio","description":"The new reserve ratio to be used for that collateral token [in PPM].","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}