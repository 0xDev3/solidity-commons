{
  "schema": "../schema.json",
  "tags": [
    "tokens",
    "swaps",
    "uniswap"
  ],
  "name": "TestSwapRouter",
  "description": "Router token swapping functionality. Functions for swapping tokens via Uniswap V3.",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event fired when a item is sold.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addToken(address,uint256)",
      "name": "addToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "rate",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "exactInput(tuple(bytes,address,uint256,uint256,uint256))",
      "name": "exactInput",
      "description": "Swaps `amountIn` of one token for as much as possible of another along the specified path.",
      "parameterDecorators": [
        {
          "name": "params",
          "description": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "path",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "recipient",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "deadline",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amountIn",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "amountOutMinimum",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [
        {
          "name": "amountOut",
          "description": "The amount of the received token.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "rates(address)",
      "name": "rates",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uniswapV3SwapCallback(int256,int256,bytes)",
      "name": "uniswapV3SwapCallback",
      "description": "",
      "parameterDecorators": [
        {
          "name": "amount0Delta",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount1Delta",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "_data",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}