{"schema":"../schema.json","tags":["swaps"],"name":"FairSwap","description":"","eventDecorators":[{"signature":"Cancelled(address)","name":"Cancelled","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"party","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"DepositConfirmed(address)","name":"DepositConfirmed","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"party","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Executed(address)","name":"Executed","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"party","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"SwapComplete()","name":"SwapComplete","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[]},{"signature":"SwapStarted(address,address)","name":"SwapStarted","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"a","description":"","recommendedTypes":[],"indexed":false},{"name":"b","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TermsAccepted(address)","name":"TermsAccepted","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"party","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"TermsSet(address,address,uint256)","name":"TermsSet","description":"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.","parameterDecorators":[{"name":"party","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenContract","description":"","recommendedTypes":[],"indexed":false},{"name":"amount","description":"amount of tokens purchased.","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"cancel()","name":"cancel","description":"if either party cancels the swap, they should both be allowed to claim what they had transferred can't give a penalty because we don't know why the user has cancelled. It could be that user A has completed their deposit, but B hasn't, or a user willingly cancels at the last minute because they do not agree to the terms. The user who cancels must wait at least one hour (or n hours), which would give a legitimate user enough time to transfer and confirm their deposit. Depends on deposits: - If A has deposited, but not B, A can cancel because B bailed. - If A has completed the stage, B cannot cancel. But A can cancel. - If neither A or B have deposited, either can cancel but both were bad for not depositing - If both have deposited (but one or both not confirmed), either can cancel and ???.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"collateralETH()","name":"collateralETH","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"getOtherParty(address)","name":"getOtherParty","description":"","parameterDecorators":[{"name":"w","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"manualOverride()","name":"manualOverride","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"owner()","name":"owner","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"reviewTerms()","name":"reviewTerms","description":"\"view\" allowing each party to review the terms of the swap prior to accepting.","parameterDecorators":[],"returnDecorators":[{"name":"party1","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"contract1","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"party1_Tokens","description":"","recommendedTypes":[],"solidityType":"uint256"},{"name":"party2","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"contract2","description":"","recommendedTypes":[],"solidityType":"address"},{"name":"party2_Tokens","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"stage()","name":"stage","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint8"}],"emittableEvents":[],"readOnly":true},{"signature":"step0_createSwap(address,uint256)","name":"step0_createSwap","description":"a single user sets up a minimal swap by providing the address of the other party.","parameterDecorators":[{"name":"otherParty","description":"","recommendedTypes":[]},{"name":"_collateralETH","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"step1_setSwapTerms(address,uint256)","name":"step1_setSwapTerms","description":"each user should set their own swap terms for gas fairness.","parameterDecorators":[{"name":"sourceContract","description":"","recommendedTypes":[]},{"name":"amount","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"step2_acceptTerms()","name":"step2_acceptTerms","description":"each user should check, and then accept the terms.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"step3_confirmDeposit()","name":"step3_confirmDeposit","description":"\"confirm\" that you have transferred the required tokens to the contract.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"step4_requestFinalTransfer()","name":"step4_requestFinalTransfer","description":"","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"swapStartTime()","name":"swapStartTime","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true}]}