{"schema":"../schema.json","tags":["tokens"],"name":"NebulasToken","description":"","eventDecorators":[{"signature":"NewMappingAccount(address,address,string)","name":"NewMappingAccount","description":"Event for token purchase logging.","parameterDecorators":[{"name":"underlyingToken","description":"","recommendedTypes":[],"indexed":true},{"name":"spender","description":"","recommendedTypes":[],"indexed":true},{"name":"recipient","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"Event for token purchase logging.","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"Paused(address)","name":"Paused","description":"Event for token purchase logging.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Refund(address,uint256,string,uint256)","name":"Refund","description":"Event for token purchase logging.","parameterDecorators":[{"name":"ethereumRecipient","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":true},{"name":"nebulasSpender","description":"","recommendedTypes":[],"indexed":false},{"name":"fee","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Staked(address,uint256,string)","name":"Staked","description":"Event for token purchase logging.","parameterDecorators":[{"name":"ethereumSpender","description":"","recommendedTypes":[],"indexed":true},{"name":"amount","description":"","recommendedTypes":[],"indexed":true},{"name":"nebulasRecipient","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"Unpaused(address)","name":"Unpaused","description":"Event for token purchase logging.","parameterDecorators":[{"name":"account","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"UpdateController(address,address)","name":"UpdateController","description":"Event for token purchase logging.","parameterDecorators":[{"name":"oldController","description":"","recommendedTypes":[],"indexed":true},{"name":"newController","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UpdateFeeRecipient(address,address)","name":"UpdateFeeRecipient","description":"Event for token purchase logging.","parameterDecorators":[{"name":"oldFeeRecipient","description":"","recommendedTypes":[],"indexed":true},{"name":"newFeeRecipient","description":"","recommendedTypes":[],"indexed":true}]},{"signature":"UpdateMappingAccount(address,string,string,address)","name":"UpdateMappingAccount","description":"Event for token purchase logging.","parameterDecorators":[{"name":"spender","description":"","recommendedTypes":[],"indexed":true},{"name":"newRecipient","description":"","recommendedTypes":[],"indexed":false},{"name":"oldRecipient","description":"","recommendedTypes":[],"indexed":false},{"name":"underlyingToken","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"balanceOf(address)","name":"balanceOf","description":"Returns the amount of tokens owned by `_account`.","parameterDecorators":[{"name":"_account","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"convertMappingAccounts(string)","name":"convertMappingAccounts","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"feeRecipient()","name":"feeRecipient","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"getMappingAccount(address)","name":"getMappingAccount","description":"Based on the underlying token and account{_spender} on the ethereum, gets recipient account on the nebulas chain.","parameterDecorators":[{"name":"_spender","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"initialize(address,address,address,address)","name":"initialize","description":"For proxy.","parameterDecorators":[{"name":"_newOwner","description":"","recommendedTypes":[]},{"name":"_underlyingToken","description":"","recommendedTypes":[]},{"name":"_nTokenController","description":"","recommendedTypes":[]},{"name":"_feeRecipient","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"isPaused()","name":"isPaused","description":"Returns true if the contract is paused, and false otherwise.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"mappingAccounts(address)","name":"mappingAccounts","description":"","parameterDecorators":[{"name":"param0","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"nTokenController()","name":"nTokenController","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"paused()","name":"paused","description":"Pause contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"refund(string,address,uint256,uint256)","name":"refund","description":"Returns asset on the ethereum to user.","parameterDecorators":[{"name":"_nebulasAccount","description":"Account on the nebulas chain that requests for a refund.","recommendedTypes":[]},{"name":"_recipient","description":"Account on the ethereum to get assets returned.","recommendedTypes":[]},{"name":"_amount","description":"Amount to return to user.","recommendedTypes":[]},{"name":"_fee","description":"Charge some fee when refunding.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"stake(uint256,string)","name":"stake","description":"User stakes their assets on the ethereum, expects to get corresponding assets on the nebulas chain.","parameterDecorators":[{"name":"_amount","description":"Amount to stake on the ethereum.","recommendedTypes":[]},{"name":"_nebulasAccount","description":"Account address on the nubelas chain to get asset.","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"totalSupply()","name":"totalSupply","description":"Current totally staking.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOut(address,address,uint256)","name":"transferOut","description":"Under some unexpected cases, transfer token out. eg: Someone transfers other token rather than underlying token into this contract, The nebulas community can transfer these token out after consultation and agreement.","parameterDecorators":[{"name":"_token","description":"","recommendedTypes":[]},{"name":"_recipient","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"underlyingToken()","name":"underlyingToken","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"unpaused()","name":"unpaused","description":"Unpause contract.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"updateController(address)","name":"updateController","description":"Update controller contract.","parameterDecorators":[{"name":"_newController","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"updateFeeRecipient(address)","name":"updateFeeRecipient","description":"Reset the charging fee account.","parameterDecorators":[{"name":"_newFeeRecipient","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":false},{"signature":"updateMappingAccount(string)","name":"updateMappingAccount","description":"User who has staked wants to change recipient address on the nebulas chain.","parameterDecorators":[{"name":"_newRecipient","description":"New account that user will get asset on the nebulas chain.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false}]}