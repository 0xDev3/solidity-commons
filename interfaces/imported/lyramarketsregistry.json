{
  "schema": "../schema.json",
  "tags": [],
  "name": "LyraMarketsRegistry",
  "description": "LyraMarketsRegistry. Registry that allow external services to keep track of the deployments Lyra Markets.",
  "eventDecorators": [
    {
      "signature": "MarketAdded(address,address,address,address,address,address,address,address,address,address)",
      "name": "MarketAdded",
      "description": "Emitted when an upgrade path is removed.",
      "parameterDecorators": [
        {
          "name": "optionMarket",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "liquidityPool",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "liquidityCertificate",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "optionGreekCache",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "optionMarketPricer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "poolHedger",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "shortCollateral",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "quoteAsset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "baseAsset",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "optionToken",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "MarketRemoved(address)",
      "name": "MarketRemoved",
      "description": "Emitted when an upgrade path is removed.",
      "parameterDecorators": [
        {
          "name": "optionMarket",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Emitted when an upgrade path is removed.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "addMarket(address,address,address,address,address,address,address,address,address,address)",
      "name": "addMarket",
      "description": "Method to register the addresses of a new deployments market.",
      "parameterDecorators": [
        {
          "name": "optionMarket",
          "description": "Address of the optionMarket contract.",
          "recommendedTypes": []
        },
        {
          "name": "liquidityPool",
          "description": "Address of the liquidityPool contract.",
          "recommendedTypes": []
        },
        {
          "name": "liquidityCertificate",
          "description": "Address of the liquidityCertificate contract.",
          "recommendedTypes": []
        },
        {
          "name": "optionGreekCache",
          "description": "Address of the optionGreekCache contract.",
          "recommendedTypes": []
        },
        {
          "name": "optionMarketPricer",
          "description": "Address of the optionMarketPricer contract.",
          "recommendedTypes": []
        },
        {
          "name": "poolHedger",
          "description": "Address of the poolHedger contract.",
          "recommendedTypes": []
        },
        {
          "name": "shortCollateral",
          "description": "Address of the shortCollateral contract.",
          "recommendedTypes": []
        },
        {
          "name": "quoteAsset",
          "description": "Address of quote asset.",
          "recommendedTypes": []
        },
        {
          "name": "baseAsset",
          "description": "Address of base asset.",
          "recommendedTypes": []
        },
        {
          "name": "optionToken",
          "description": "Address of optionToken contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getOptionMarkets()",
      "name": "getOptionMarkets",
      "description": "Gets the list of addresses of deployments OptionMarket contracts.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Array of OptionMarket addresses.",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOptionMarketsAddresses(address[])",
      "name": "getOptionMarketsAddresses",
      "description": "Gets the addresses of the contracts associated to an OptionMarket contract.",
      "parameterDecorators": [
        {
          "name": "optionMarketList",
          "description": "Array of optionMarket contract addresses.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Array of struct containing the associated contract addresses.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "liquidityPool",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "liquidityCertificate",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "optionGreekCache",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "optionMarketPricer",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "poolHedger",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "shortCollateral",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "quoteAsset",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "baseAsset",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            },
            {
              "name": "optionToken",
              "description": "",
              "recommendedTypes": [],
              "solidityType": "address"
            }
          ],
          "solidityType": "tuple[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "optionMarketsAddresses(address)",
      "name": "optionMarketsAddresses",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "liquidityPool",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "liquidityCertificate",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "optionGreekCache",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "optionMarketPricer",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "poolHedger",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "shortCollateral",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "quoteAsset",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "baseAsset",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "optionToken",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "removeMarket(address)",
      "name": "removeMarket",
      "description": "Method to remove a market.",
      "parameterDecorators": [
        {
          "name": "optionMarket",
          "description": "Address of the optionMarket contract.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}