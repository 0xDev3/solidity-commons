{"schema":"../schema.json","tags":[],"name":"ConnectV2BenqiAvalanche","description":"","eventDecorators":[{"signature":"LogBorrow(address,address,uint256,uint256,uint256)","name":"LogBorrow","description":"Emitted when a new GrantRound contract is created.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"qiToken","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAmt","description":"","recommendedTypes":[],"indexed":false},{"name":"getId","description":"","recommendedTypes":[],"indexed":false},{"name":"setId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogDeposit(address,address,uint256,uint256,uint256)","name":"LogDeposit","description":"Emitted when a new GrantRound contract is created.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"qiToken","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAmt","description":"","recommendedTypes":[],"indexed":false},{"name":"getId","description":"","recommendedTypes":[],"indexed":false},{"name":"setId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogDepositQiToken(address,address,uint256,uint256,uint256,uint256)","name":"LogDepositQiToken","description":"Emitted when a new GrantRound contract is created.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"qiToken","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAmt","description":"","recommendedTypes":[],"indexed":false},{"name":"qiTokenAmt","description":"","recommendedTypes":[],"indexed":false},{"name":"getId","description":"","recommendedTypes":[],"indexed":false},{"name":"setId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogLiquidate(address,address,address,uint256,uint256,uint256)","name":"LogLiquidate","description":"Emitted when a new GrantRound contract is created.","parameterDecorators":[{"name":"borrower","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenToPay","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenInReturn","description":"","recommendedTypes":[],"indexed":true},{"name":"tokenAmt","description":"","recommendedTypes":[],"indexed":false},{"name":"getId","description":"","recommendedTypes":[],"indexed":false},{"name":"setId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogPayback(address,address,uint256,uint256,uint256)","name":"LogPayback","description":"Emitted when a new GrantRound contract is created.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"qiToken","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAmt","description":"","recommendedTypes":[],"indexed":false},{"name":"getId","description":"","recommendedTypes":[],"indexed":false},{"name":"setId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogWithdraw(address,address,uint256,uint256,uint256)","name":"LogWithdraw","description":"Emitted when a new GrantRound contract is created.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"qiToken","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAmt","description":"","recommendedTypes":[],"indexed":false},{"name":"getId","description":"","recommendedTypes":[],"indexed":false},{"name":"setId","description":"","recommendedTypes":[],"indexed":false}]},{"signature":"LogWithdrawQiToken(address,address,uint256,uint256,uint256,uint256)","name":"LogWithdrawQiToken","description":"Emitted when a new GrantRound contract is created.","parameterDecorators":[{"name":"token","description":"","recommendedTypes":[],"indexed":true},{"name":"qiToken","description":"","recommendedTypes":[],"indexed":false},{"name":"tokenAmt","description":"","recommendedTypes":[],"indexed":false},{"name":"qiTokenAmt","description":"","recommendedTypes":[],"indexed":false},{"name":"getId","description":"","recommendedTypes":[],"indexed":false},{"name":"setId","description":"","recommendedTypes":[],"indexed":false}]}],"functionDecorators":[{"signature":"borrow(string,uint256,uint256,uint256)","name":"borrow","description":"Borrow a token using Benqi. Borrow AVAX/ARC20_Token using the Mapping.","parameterDecorators":[{"name":"tokenId","description":"The token id of the token to borrow.(For eg: DAI-A).","recommendedTypes":[]},{"name":"amt","description":"The amount of the token to borrow.","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of tokens borrowed.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"borrowRaw(address,address,uint256,uint256,uint256)","name":"borrowRaw","description":"Borrow a token using Benqi. Borrow AVAX/ARC20_Token.","parameterDecorators":[{"name":"token","description":"The address of the token to borrow. (For AVAX: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).","recommendedTypes":[]},{"name":"qiToken","description":"The address of the corresponding qiToken.","recommendedTypes":[]},{"name":"amt","description":"The amount of the token to borrow.","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of tokens borrowed.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"deposit(string,uint256,uint256,uint256)","name":"deposit","description":"Deposit a token to Benqi for lending / collaterization. Deposit AVAX/ARC20_Token using the Mapping.","parameterDecorators":[{"name":"tokenId","description":"The token id of the token to deposit.(For eg: AVAX-A).","recommendedTypes":[]},{"name":"amt","description":"The amount of the token to deposit. (For max: `uint256(-1)`).","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of tokens deposited.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"depositQiToken(string,uint256,uint256,uint256)","name":"depositQiToken","description":"Same as deposit. The only difference is this method stores qiToken amount in set ID. Deposit AVAX/ARC20_Token using the Mapping.","parameterDecorators":[{"name":"tokenId","description":"The token id of the token to depositQiToken.(For eg: DAI-A).","recommendedTypes":[]},{"name":"amt","description":"The amount of the token to deposit. (For max: `uint256(-1)`).","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of qiTokens received.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"depositQiTokenRaw(address,address,uint256,uint256,uint256)","name":"depositQiTokenRaw","description":"Same as depositRaw. The only difference is this method stores qiToken amount in set ID. Deposit AVAX/ARC20_Token.","parameterDecorators":[{"name":"token","description":"The address of the token to deposit. (For AVAX: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).","recommendedTypes":[]},{"name":"qiToken","description":"The address of the corresponding qiToken.","recommendedTypes":[]},{"name":"amt","description":"The amount of the token to deposit. (For max: `uint256(-1)`).","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of qiTokens received.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"depositRaw(address,address,uint256,uint256,uint256)","name":"depositRaw","description":"Deposit a token to Benqi for lending / collaterization. Deposit AVAX/ARC20_Token.","parameterDecorators":[{"name":"token","description":"The address of the token to deposit. (For AVAX: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).","recommendedTypes":[]},{"name":"qiToken","description":"The address of the corresponding qiToken.","recommendedTypes":[]},{"name":"amt","description":"The amount of the token to deposit. (For max: `uint256(-1)`).","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of tokens deposited.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"liquidate(address,string,string,uint256,uint256,uint256)","name":"liquidate","description":"Liquidate a position using the mapping. Liquidate a position using the mapping.","parameterDecorators":[{"name":"borrower","description":"Borrower's Address.","recommendedTypes":[]},{"name":"tokenIdToPay","description":"token id of the token to pay for liquidation.(For eg: AVAX-A).","recommendedTypes":[]},{"name":"tokenIdInReturn","description":"token id of the token to return for liquidation.(For eg: USDC-A).","recommendedTypes":[]},{"name":"amt","description":"token amount to pay for liquidation.","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of paid for liquidation.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"liquidateRaw(address,address,address,address,address,uint256,uint256,uint256)","name":"liquidateRaw","description":"Liquidate a position. Liquidate a position.","parameterDecorators":[{"name":"borrower","description":"Borrower's Address.","recommendedTypes":[]},{"name":"tokenToPay","description":"The address of the token to pay for liquidation.(For AVAX: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).","recommendedTypes":[]},{"name":"qiTokenPay","description":"Corresponding qiToken address.","recommendedTypes":[]},{"name":"tokenInReturn","description":"The address of the token to return for liquidation.","recommendedTypes":[]},{"name":"qiTokenColl","description":"Corresponding qiToken address.","recommendedTypes":[]},{"name":"amt","description":"The token amount to pay for liquidation.","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of paid for liquidation.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"name()","name":"name","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"payback(string,uint256,uint256,uint256)","name":"payback","description":"Payback debt owed. Payback borrowed AVAX/ARC20_Token using the Mapping.","parameterDecorators":[{"name":"tokenId","description":"The token id of the token to payback.(For eg: BENQI-A).","recommendedTypes":[]},{"name":"amt","description":"The amount of the token to payback. (For max: `uint256(-1)`).","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of tokens paid back.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"paybackRaw(address,address,uint256,uint256,uint256)","name":"paybackRaw","description":"Payback debt owed. Payback borrowed AVAX/ARC20_Token.","parameterDecorators":[{"name":"token","description":"The address of the token to payback. (For AVAX: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).","recommendedTypes":[]},{"name":"qiToken","description":"The address of the corresponding qiToken.","recommendedTypes":[]},{"name":"amt","description":"The amount of the token to payback. (For max: `uint256(-1)`).","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of tokens paid back.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"withdraw(string,uint256,uint256,uint256)","name":"withdraw","description":"Withdraw deposited token from Benqi. Withdraw AVAX/ARC20_Token using the Mapping.","parameterDecorators":[{"name":"tokenId","description":"The token id of the token to withdraw.(For eg: AVAX-A).","recommendedTypes":[]},{"name":"amt","description":"The amount of the token to withdraw. (For max: `uint256(-1)`).","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of tokens withdrawn.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"withdrawQiToken(string,uint256,uint256,uint256)","name":"withdrawQiToken","description":"Same as withdraw. The only difference is this method fetch qiToken amount in get ID. Withdraw QiAVAX/QiARC20_Token using qiToken Amt & the Mapping.","parameterDecorators":[{"name":"tokenId","description":"The token id of the token to withdraw QiToken.(For eg: AVAX-A).","recommendedTypes":[]},{"name":"qiTokenAmt","description":"The amount of qiTokens to withdraw.","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve qiTokenAmt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of tokens withdrawn.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"withdrawQiTokenRaw(address,address,uint256,uint256,uint256)","name":"withdrawQiTokenRaw","description":"Same as withdrawRaw. The only difference is this method fetch qiToken amount in get ID. Withdraw QiAVAX/QiARC20_Token using qiToken Amt.","parameterDecorators":[{"name":"token","description":"The address of the token to withdraw. (For AVAX: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).","recommendedTypes":[]},{"name":"qiToken","description":"The address of the corresponding qiToken.","recommendedTypes":[]},{"name":"qiTokenAmt","description":"The amount of qiTokens to withdraw.","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve qiTokenAmt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of tokens withdrawn.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false},{"signature":"withdrawRaw(address,address,uint256,uint256,uint256)","name":"withdrawRaw","description":"Withdraw deposited token from Benqi. Withdraw AVAX/ARC20_Token.","parameterDecorators":[{"name":"token","description":"The address of the token to withdraw. (For AVAX: 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE).","recommendedTypes":[]},{"name":"qiToken","description":"The address of the corresponding qiToken.","recommendedTypes":[]},{"name":"amt","description":"The amount of the token to withdraw. (For max: `uint256(-1)`).","recommendedTypes":[]},{"name":"getId","description":"ID to retrieve amt.","recommendedTypes":[]},{"name":"setId","description":"ID stores the amount of tokens withdrawn.","recommendedTypes":[]}],"returnDecorators":[{"name":"_eventName","description":"","recommendedTypes":[],"solidityType":"string"},{"name":"_eventParam","description":"","recommendedTypes":[],"solidityType":"bytes"}],"emittableEvents":[],"readOnly":false}]}