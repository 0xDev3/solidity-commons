{
  "schema": "../schema.json",
  "tags": [
    "aave"
  ],
  "name": "AaveIncentivesController",
  "description": "AaveIncentivesController. Distributor contract for rewards to the Aave protocol.",
  "eventDecorators": [
    {
      "signature": "AssetConfigUpdated(address,uint256)",
      "name": "AssetConfigUpdated",
      "description": "Emitted when owner withdraws `relayManager` funds.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "emission",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AssetIndexUpdated(address,uint256)",
      "name": "AssetIndexUpdated",
      "description": "Emitted when owner withdraws `relayManager` funds.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ClaimerSet(address,address)",
      "name": "ClaimerSet",
      "description": "Emitted when owner withdraws `relayManager` funds.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "claimer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "DistributionEndUpdated(uint256)",
      "name": "DistributionEndUpdated",
      "description": "Emitted when owner withdraws `relayManager` funds.",
      "parameterDecorators": [
        {
          "name": "ditributionEnd",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "PendingAdminChanged(address)",
      "name": "PendingAdminChanged",
      "description": "Emitted when owner withdraws `relayManager` funds.",
      "parameterDecorators": [
        {
          "name": "newPendingAdmin",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RewardsAccrued(address,uint256)",
      "name": "RewardsAccrued",
      "description": "Emitted when owner withdraws `relayManager` funds.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardsClaimed(address,address,uint256)",
      "name": "RewardsClaimed",
      "description": "Emitted when owner withdraws `relayManager` funds.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardsClaimed(address,address,address,uint256)",
      "name": "RewardsClaimed",
      "description": "Emitted when owner withdraws `relayManager` funds.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "beneficiary",
          "description": "who got the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "purchaser",
          "description": "who paid for the tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "amount of tokens purchased.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardsVaultUpdated(address)",
      "name": "RewardsVaultUpdated",
      "description": "Emitted when owner withdraws `relayManager` funds.",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RoleClaimed(address,uint256)",
      "name": "RoleClaimed",
      "description": "Emitted when owner withdraws `relayManager` funds.",
      "parameterDecorators": [
        {
          "name": "newAdming",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "role",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "UserIndexUpdated(address,address,uint256)",
      "name": "UserIndexUpdated",
      "description": "Emitted when owner withdraws `relayManager` funds.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "DISTRIBUTION_END()",
      "name": "DISTRIBUTION_END",
      "description": "Keeps interface compatibility. Returns the timestamp of the end of the current distribution.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint256 unix timestamp*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "EMISSION_MANAGER()",
      "name": "EMISSION_MANAGER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PRECISION()",
      "name": "PRECISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "REVISION()",
      "name": "REVISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "REWARD_TOKEN()",
      "name": "REWARD_TOKEN",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assets(address)",
      "name": "assets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "emissionPerSecond",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "lastUpdateTimestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint128"
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "claimRewards(address[],uint256,address)",
      "name": "claimRewards",
      "description": "Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of rewards to claim.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address that will be receiving the rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Rewards claimed*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimRewardsOnBehalf(address[],uint256,address,address)",
      "name": "claimRewardsOnBehalf",
      "description": "Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of rewards to claim.",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "Address to check and claim rewards.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address that will be receiving the rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Rewards claimed*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimRoleAdmin(uint256)",
      "name": "claimRoleAdmin",
      "description": "allows the caller to become a specific role admin.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "the role associated with the admin claiming the new role*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "configureAssets(address[],uint256[])",
      "name": "configureAssets",
      "description": "Configure assets for a certain rewards emission.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "The assets to incentivize.",
          "recommendedTypes": []
        },
        {
          "name": "emissionsPerSecond",
          "description": "The emission for each asset.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAdmin(uint256)",
      "name": "getAdmin",
      "description": "returns the admin associated with the specific role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "the role associated with the admin being returned*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getClaimer(address)",
      "name": "getClaimer",
      "description": "Returns the whitelisted claimer for a certain address (0x0 if not set).",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "The address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The claimer address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDistributionEnd()",
      "name": "getDistributionEnd",
      "description": "Returns the timestamp of the end of the current distribution.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "uint256 unix timestamp*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getPendingAdmin(uint256)",
      "name": "getPendingAdmin",
      "description": "returns the pending admin associated with the specific role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "the role associated with the pending admin being returned*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRewardsBalance(address[],address)",
      "name": "getRewardsBalance",
      "description": "Returns the total of rewards of an user, already accrued + not yet accrued.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "The address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The rewards*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRewardsVault()",
      "name": "getRewardsVault",
      "description": "returns the current rewards vault contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserAssetData(address,address)",
      "name": "getUserAssetData",
      "description": "Returns the data of an user on a distribution.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "Address of the user.",
          "recommendedTypes": []
        },
        {
          "name": "asset",
          "description": "The address of the reference asset of the distribution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The new index*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserUnclaimedRewards(address)",
      "name": "getUserUnclaimedRewards",
      "description": "returns the unclaimed rewards of the user.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "the address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the unclaimed user rewards.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "handleAction(address,uint256,uint256)",
      "name": "handleAction",
      "description": "Called by the corresponding asset on any update that affects the rewards distribution.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the user.",
          "recommendedTypes": []
        },
        {
          "name": "totalSupply",
          "description": "The total supply of the asset in the lending pool*.",
          "recommendedTypes": []
        },
        {
          "name": "userBalance",
          "description": "The balance of the user of the asset in the lending pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "Initialize AaveIncentivesController.",
      "parameterDecorators": [
        {
          "name": "rewardsVault",
          "description": "rewards vault to pull funds*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setClaimer(address,address)",
      "name": "setClaimer",
      "description": "Whitelists an address to claim the rewards on behalf of another address.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "The address of the user.",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "The address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDistributionEnd(uint256)",
      "name": "setDistributionEnd",
      "description": "Extends the end of the distribution in regards of current timestamp.",
      "parameterDecorators": [
        {
          "name": "distributionEnd",
          "description": "The unix timestamp of the next distribution end*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setPendingAdmin(uint256,address)",
      "name": "setPendingAdmin",
      "description": "sets the pending admin for a specific role.",
      "parameterDecorators": [
        {
          "name": "role",
          "description": "the role associated with the new pending admin being set.",
          "recommendedTypes": []
        },
        {
          "name": "newPendingAdmin",
          "description": "the address of the new pending admin*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardsVault(address)",
      "name": "setRewardsVault",
      "description": "update the rewards vault address, only allowed by the Rewards admin.",
      "parameterDecorators": [
        {
          "name": "rewardsVault",
          "description": "The address of the rewards vault*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}