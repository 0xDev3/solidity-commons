{
  "schema": "../schema.json",
  "tags": [],
  "name": "Traits",
  "description": "",
  "eventDecorators": [
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Events ///. Emitted when someone's membership role is being updated.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "compileAttributes(uint256)",
      "name": "compileAttributes",
      "description": "generates an array composed of all the individual traits and values.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "the ID of the token to compose the metadata for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "a JSON array of all of the attributes for given token ID.",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "drawSVG(uint256)",
      "name": "drawSVG",
      "description": "generates an entire SVG by composing multiple <image> elements of PNGs.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "the ID of the token to generate an SVG for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "a valid SVG of the Sheep / Wolf.",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setWoolf(address)",
      "name": "setWoolf",
      "description": "ADMIN.",
      "parameterDecorators": [
        {
          "name": "_woolf",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenURI(uint256)",
      "name": "tokenURI",
      "description": "generates a base64 encoded metadata response without referencing off-chain content.",
      "parameterDecorators": [
        {
          "name": "tokenId",
          "description": "the ID of the token to generate the metadata for.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "a base64 encoded JSON dictionary of the token's metadata and SVG.",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "traitData(uint8,uint8)",
      "name": "traitData",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "name",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        },
        {
          "name": "png",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "uploadTraits(uint8,uint8[],tuple(string,string)[])",
      "name": "uploadTraits",
      "description": "administrative to upload the names and images associated with each trait.",
      "parameterDecorators": [
        {
          "name": "traitType",
          "description": "the trait type to upload the traits for (see traitTypes for a mapping).",
          "recommendedTypes": []
        },
        {
          "name": "traitIds",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "traits",
          "description": "the names and base64 encoded PNGs for each trait.",
          "recommendedTypes": [],
          "parameters": [
            {
              "name": "name",
              "description": "",
              "recommendedTypes": []
            },
            {
              "name": "png",
              "description": "",
              "recommendedTypes": []
            }
          ]
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "woolf()",
      "name": "woolf",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    }
  ]
}