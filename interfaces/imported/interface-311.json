{
  "schema": "../schema.json",
  "tags": [
    "voting"
  ],
  "name": "Gluon",
  "description": "the Gluon-Plasma contract for upgradable side-chain apps (see: https://leverj.io/GluonPlasma.pdf). once an app has been provisioned with me, I enable: - depositing an asset into an app - withdrawing an asset from an app - transferring an asset across apps - submitting (and discarding) an upgrade proposal for an app - voting for/against app proposals - upgrading an approved app proposal.",
  "eventDecorators": [
    {
      "signature": "Activated(uint32,uint8,address)",
      "name": "Activated",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "version",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "logic",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AppOwnerAdded(uint32,address)",
      "name": "AppOwnerAdded",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "appOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AppOwnerRemoved(uint32,address)",
      "name": "AppOwnerRemoved",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "appOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AppProvisioned(uint32,uint8,address)",
      "name": "AppProvisioned",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "version",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "logic",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AppRegistered(uint32)",
      "name": "AppRegistered",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnerAdded(address)",
      "name": "OwnerAdded",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnerRemoved(address)",
      "name": "OwnerRemoved",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "ProposalAdded(uint32,uint8,address,uint256)",
      "name": "ProposalAdded",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "version",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "logic",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "activationBlock",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ProposalRemoved(uint32,uint8,address)",
      "name": "ProposalRemoved",
      "description": "An event emitted when a vault is liquidated.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "version",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "logic",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "activate(uint32)",
      "name": "activate",
      "description": "",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addAppOwners(uint32,address[])",
      "name": "addAppOwners",
      "description": "",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "toBeAdded",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addOwner(address)",
      "name": "addOwner",
      "description": "authorize an `account` with owner access.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addProposal(uint32,address)",
      "name": "addProposal",
      "description": "",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "logic",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "app(uint32)",
      "name": "app",
      "description": "view of current app data.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "index of the provisioned app in question.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "current",
          "description": "address of the app's current contract.",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "proposal",
          "description": "address of the app's pending proposal contract (if any).",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "activationBlock",
          "description": "the block in which the proposal can be activated.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "appOwners(uint32,uint256)",
      "name": "appOwners",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "approve(uint32)",
      "name": "approve",
      "description": "",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "apps(uint32)",
      "name": "apps",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "proposal",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        },
        {
          "name": "activationBlock",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "current(uint32)",
      "name": "current",
      "description": "",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "depositEther(uint32)",
      "name": "depositEther",
      "description": "deposit ETH asset on behalf of the sender into an app's safe.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "index of the target app.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "depositToken(uint32,address,uint256)",
      "name": "depositToken",
      "description": "deposit ERC20 token asset (represented by address 0x0) on behalf of the sender into an app's safe. an account must call token.approve(logic, quantity) beforehand.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "index of the target app.",
          "recommendedTypes": []
        },
        {
          "name": "token",
          "description": "address of ERC20 token contract.",
          "recommendedTypes": []
        },
        {
          "name": "quantity",
          "description": "how much of token.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "disapprove(uint32)",
      "name": "disapprove",
      "description": "",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAppOwners(uint32)",
      "name": "getAppOwners",
      "description": "list all accounts with an app-owner access for `appId`.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "index of the target app.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBalance(uint32,address)",
      "name": "getBalance",
      "description": "what is the current balance of `asset` in the `appId` app's safe?.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOwners()",
      "name": "getOwners",
      "description": "list all accounts with an owner access.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "history(uint32)",
      "name": "history",
      "description": "view of the full chain of (contract addresses) of the app versions, up to and including the current one.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAnyLogic(uint32,address)",
      "name": "isAnyLogic",
      "description": "is the `logic` contract one of the `appId` app?.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "logic",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isAppOwner(uint32,address)",
      "name": "isAppOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "appOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner(address)",
      "name": "isOwner",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owners(uint256)",
      "name": "owners",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "proposals(address)",
      "name": "proposals",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "provisionApp(uint32,address)",
      "name": "provisionApp",
      "description": "on-boarding an app.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "index of the provisioned app in question.",
          "recommendedTypes": []
        },
        {
          "name": "logic",
          "description": "address of the app's contract (the first version).",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "registerApp(uint32,address[])",
      "name": "registerApp",
      "description": "",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "accounts",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeAppOwners(uint32,address[])",
      "name": "removeAppOwners",
      "description": "revokes app-owner access for each of `toBeRemoved` (while ensuring at least one app-owner remains).",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "index of the target app.",
          "recommendedTypes": []
        },
        {
          "name": "toBeRemoved",
          "description": "accounts to have their membership revoked.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeOwner(address)",
      "name": "removeOwner",
      "description": "revoke an `account` owner access (while ensuring at least one owner remains).",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "removeProposal(uint32)",
      "name": "removeProposal",
      "description": "",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "totalAppsCount()",
      "name": "totalAppsCount",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint32"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transfer(uint32,uint32,bytes)",
      "name": "transfer",
      "description": "withdraw a quantity of asset from a source app's safe and transfer it (within Gluon) to a target app's safe. quantity & asset should be derived by the source app.",
      "parameterDecorators": [
        {
          "name": "from",
          "description": "index of the source app.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "index of the target app.",
          "recommendedTypes": []
        },
        {
          "name": "parameters",
          "description": "a bytes-marshalled record containing at the very least quantity & asset.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "version()",
      "name": "version",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "string"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "withdraw(uint32,bytes)",
      "name": "withdraw",
      "description": "withdraw a quantity of asset from an app's safe. quantity & asset should be derived by the app.",
      "parameterDecorators": [
        {
          "name": "appId",
          "description": "index of the target app.",
          "recommendedTypes": []
        },
        {
          "name": "parameters",
          "description": "a bytes-marshalled record containing at the very least quantity & asset.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}