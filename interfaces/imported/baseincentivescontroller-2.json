{
  "schema": "../schema.json",
  "tags": [
    "aave"
  ],
  "name": "BaseIncentivesController",
  "description": "BaseIncentivesController. Distributor contract for ERC20 rewards to the Aave protocol participants.",
  "eventDecorators": [
    {
      "signature": "AssetConfigUpdated(address,uint8,uint256)",
      "name": "AssetConfigUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "decimals",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "emission",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "AssetIndexUpdated(address,uint256)",
      "name": "AssetIndexUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "BulkClaimerUpdated(address)",
      "name": "BulkClaimerUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newBulkClaimer",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "ClaimerSet(address,address)",
      "name": "ClaimerSet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "claimer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "DistributionEndUpdated(uint256)",
      "name": "DistributionEndUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "newDistributionEnd",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardTokenUpdated(address)",
      "name": "RewardTokenUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "token",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "RewardsAccrued(address,uint256)",
      "name": "RewardsAccrued",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardsClaimed(address,address,address,uint256)",
      "name": "RewardsClaimed",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "to",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "claimer",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amount",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "RewardsVaultUpdated(address)",
      "name": "RewardsVaultUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "vault",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "UserIndexUpdated(address,address,uint256)",
      "name": "UserIndexUpdated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "asset",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "BULK_CLAIMER()",
      "name": "BULK_CLAIMER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "DISTRIBUTION_END()",
      "name": "DISTRIBUTION_END",
      "description": "for backwards compatibility with the previous DistributionManager used.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The end of the distribution*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "EMISSION_MANAGER()",
      "name": "EMISSION_MANAGER",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "PRECISION()",
      "name": "PRECISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "REVISION()",
      "name": "REVISION",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "REWARD_TOKEN()",
      "name": "REWARD_TOKEN",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "assets(address)",
      "name": "assets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "emissionPerSecond",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint104"
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint104"
        },
        {
          "name": "lastUpdateTimestamp",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint40"
        },
        {
          "name": "decimals",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "disabled",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bulkClaimRewardsOnBehalf(address[],uint256,address,address)",
      "name": "bulkClaimRewardsOnBehalf",
      "description": "Bulk claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be the BULK_CLAIMER.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of rewards to claim.",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "Address to check and claim rewards.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address that will be receiving the rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Rewards claimed*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimRewards(address[],uint256,address)",
      "name": "claimRewards",
      "description": "Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of rewards to claim.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address that will be receiving the rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Rewards claimed*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "claimRewardsOnBehalf(address[],uint256,address,address)",
      "name": "claimRewardsOnBehalf",
      "description": "Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via \"allowClaimOnBehalf\" function by the RewardsAdmin role manager.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount of rewards to claim.",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "Address to check and claim rewards.",
          "recommendedTypes": []
        },
        {
          "name": "to",
          "description": "Address that will be receiving the rewards.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "Rewards claimed*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "configureAssets(address[],uint256[],uint256[])",
      "name": "configureAssets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "emissionsPerSecond",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "assetDecimals",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "disableAssets(address[])",
      "name": "disableAssets",
      "description": "",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAssetData(address)",
      "name": "getAssetData",
      "description": "Returns the configuration of the distribution for a certain asset.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the reference asset of the distribution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param1",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param2",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint8"
        },
        {
          "name": "param3",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        },
        {
          "name": "param4",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getClaimer(address)",
      "name": "getClaimer",
      "description": "Returns the whitelisted claimer for a certain address (0x0 if not set).",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "The address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The claimer address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDistributionEnd()",
      "name": "getDistributionEnd",
      "description": "Gets the end date for the distribution.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The end of the distribution*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRewardsBalance(address[],address)",
      "name": "getRewardsBalance",
      "description": "Returns the total of rewards of an user, already accrued + not yet accrued.",
      "parameterDecorators": [
        {
          "name": "assets",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "The address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The rewards*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getRewardsVault()",
      "name": "getRewardsVault",
      "description": "returns the current rewards vault contract.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "address.",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserAssetData(address,address)",
      "name": "getUserAssetData",
      "description": "Returns the data of an user on a distribution.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "Address of the user.",
          "recommendedTypes": []
        },
        {
          "name": "asset",
          "description": "The address of the reference asset of the distribution.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "The new index*.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getUserUnclaimedRewards(address)",
      "name": "getUserUnclaimedRewards",
      "description": "returns the unclaimed rewards of the user.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "the address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "the unclaimed user rewards.",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "handleAction(address,uint256,uint256)",
      "name": "handleAction",
      "description": "Called by the corresponding asset on any update that affects the rewards distribution.",
      "parameterDecorators": [
        {
          "name": "asset",
          "description": "The address of the user.",
          "recommendedTypes": []
        },
        {
          "name": "totalSupply",
          "description": "The total supply of the asset in the lending pool*.",
          "recommendedTypes": []
        },
        {
          "name": "userBalance",
          "description": "The balance of the user of the asset in the lending pool.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "initialize(address)",
      "name": "initialize",
      "description": "Initialize AaveIncentivesController.",
      "parameterDecorators": [
        {
          "name": "rewardsVault",
          "description": "rewards vault to pull funds*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setBulkClaimer(address)",
      "name": "setBulkClaimer",
      "description": "Sets the bulk claimer address.",
      "parameterDecorators": [
        {
          "name": "bulkClaimer",
          "description": "The bulkClaimer address*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setClaimer(address,address)",
      "name": "setClaimer",
      "description": "Whitelists an address to claim the rewards on behalf of another address.",
      "parameterDecorators": [
        {
          "name": "user",
          "description": "The address of the user.",
          "recommendedTypes": []
        },
        {
          "name": "user",
          "description": "The address of the user.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setDistributionEnd(uint256)",
      "name": "setDistributionEnd",
      "description": "Sets the end date for the distribution.",
      "parameterDecorators": [
        {
          "name": "distributionEnd",
          "description": "The end date timestamp*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardToken(address)",
      "name": "setRewardToken",
      "description": "update the rewards token address, only allowed by the EmissionManager.",
      "parameterDecorators": [
        {
          "name": "rewardToken",
          "description": "The address of the new rewards token*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "setRewardsVault(address)",
      "name": "setRewardsVault",
      "description": "update the rewards vault address, only allowed by the Rewards admin.",
      "parameterDecorators": [
        {
          "name": "rewardsVault",
          "description": "The address of the rewards vault*.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}