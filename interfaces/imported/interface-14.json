{"schema":"../schema.json","tags":["tokens"],"name":"ORSTGenesisFactory","description":"ORSTGenesisFactory ORSTGenesis - a factory contract for Creature Accessory semi-fungible tokens.","eventDecorators":[{"signature":"OwnershipTransferred(address,address)","name":"OwnershipTransferred","description":"","parameterDecorators":[{"name":"previousOwner","description":"","recommendedTypes":[],"indexed":true},{"name":"newOwner","description":"","recommendedTypes":[],"indexed":true}]}],"functionDecorators":[{"signature":"balanceOf(address,uint256)","name":"balanceOf","description":"Get the factory's ownership of Option. Should be the amount it can still mint. NOTE: Called by `canMint`.","parameterDecorators":[{"name":"_owner","description":"","recommendedTypes":[]},{"name":"_optionId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"canMint(uint256,uint256)","name":"canMint","description":"Returns whether the option ID can be minted. Can return false if the developer wishes to restrict a total supply per option ID (or overall).","parameterDecorators":[{"name":"_optionId","description":"","recommendedTypes":[]},{"name":"_amount","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"factorySchemaName()","name":"factorySchemaName","description":"Indicates the Wyvern schema name for assets in this lootbox, e.g. \"ERC1155\".","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"mint(uint256,address,uint256,bytes)","name":"mint","description":"Mints asset(s) in accordance to a specific address with a particular \"option\". This should be callable only by the contract owner or the owner's Wyvern Proxy (later universal login will solve this). Options should also be delineated 0 - (numOptions() - 1) for convenient indexing.","parameterDecorators":[{"name":"_optionId","description":"the option id.","recommendedTypes":[]},{"name":"_toAddress","description":"address of the future owner of the asset(s).","recommendedTypes":[]},{"name":"_amount","description":"amount of the option to mint.","recommendedTypes":[]},{"name":"_data","description":"Extra data to pass during safeTransferFrom.","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"name()","name":"name","description":"Returns the name of this factory.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"nftAddress()","name":"nftAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"numOptions()","name":"numOptions","description":"Number of options the factory supports.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"uint256"}],"emittableEvents":[],"readOnly":true},{"signature":"owner()","name":"owner","description":"Returns the address of the current owner.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"proxyRegistryAddress()","name":"proxyRegistryAddress","description":"","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"address"}],"emittableEvents":[],"readOnly":true},{"signature":"renounceOwnership()","name":"renounceOwnership","description":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.","parameterDecorators":[],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"supportsFactoryInterface()","name":"supportsFactoryInterface","description":"Indicates that this is a factory contract. Ideally would use EIP 165 supportsInterface().","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"bool"}],"emittableEvents":[],"readOnly":true},{"signature":"symbol()","name":"symbol","description":"Returns the symbol for this factory.","parameterDecorators":[],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true},{"signature":"transferOwnership(address)","name":"transferOwnership","description":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.","parameterDecorators":[{"name":"newOwner","description":"","recommendedTypes":[]}],"returnDecorators":[],"emittableEvents":[],"readOnly":false},{"signature":"uri(uint256)","name":"uri","description":"Returns a URL specifying some metadata about the option. This metadata can be of the same structure as the ERC1155 metadata.","parameterDecorators":[{"name":"_optionId","description":"","recommendedTypes":[]}],"returnDecorators":[{"name":"param0","description":"","recommendedTypes":[],"solidityType":"string"}],"emittableEvents":[],"readOnly":true}]}