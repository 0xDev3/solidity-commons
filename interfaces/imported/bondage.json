{
  "schema": "../schema.json",
  "tags": [],
  "name": "Bondage",
  "description": "",
  "eventDecorators": [
    {
      "signature": "Bound(address,address,bytes32,uint256,uint256)",
      "name": "Bound",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "holder",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "oracle",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "numZap",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "numDots",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Unbound(address,address,bytes32,uint256)",
      "name": "Unbound",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of the withdrawn tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "note",
          "description": "Description of the transaction.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "Address of the token which was withdrawn.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "user",
          "description": "Address of the user which withdrawn the tokens.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Escrowed(address,address,bytes32,uint256)",
      "name": "Escrowed",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of the withdrawn tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "note",
          "description": "Description of the transaction.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "Address of the token which was withdrawn.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "user",
          "description": "Address of the user which withdrawn the tokens.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Released(address,address,bytes32,uint256)",
      "name": "Released",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of the withdrawn tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "note",
          "description": "Description of the transaction.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "Address of the token which was withdrawn.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "user",
          "description": "Address of the user which withdrawn the tokens.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "Returned(address,address,bytes32,uint256)",
      "name": "Returned",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "amount",
          "description": "Amount of the withdrawn tokens.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "note",
          "description": "Description of the transaction.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "token",
          "description": "Address of the token which was withdrawn.",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "user",
          "description": "Address of the user which withdrawn the tokens.",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "Event emited when a user withdraws his tokens from the bank.",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "isProviderInitialized(address,address)",
      "name": "isProviderInitialized",
      "description": "** Get Methods ***.",
      "parameterDecorators": [
        {
          "name": "holderAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "escrowDots(address,address,bytes32,uint256)",
      "name": "escrowDots",
      "description": "Move numDots dots from provider-requester to bondage according to data-provider address, holder address, and endpoint specifier (ala 'smart_contract') Called only by Dispatch or Arbiter Contracts.",
      "parameterDecorators": [
        {
          "name": "holderAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "numDots",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getZapBound(address,bytes32)",
      "name": "getZapBound",
      "description": "",
      "parameterDecorators": [
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getDotsIssued(address,bytes32)",
      "name": "getDotsIssued",
      "description": "",
      "parameterDecorators": [
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "dotLimit(address,bytes32)",
      "name": "dotLimit",
      "description": "Get issuance limit of dots.",
      "parameterDecorators": [
        {
          "name": "oracleAddress",
          "description": "data-provider.",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "specifier.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "limit",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "releaseDots(address,address,bytes32,uint256)",
      "name": "releaseDots",
      "description": "Transfer N dots from fromAddress to destAddress. Called only by Disptach or Arbiter Contracts In smart contract endpoint, occurs per satisfied request. In socket endpoint called on termination of subscription.",
      "parameterDecorators": [
        {
          "name": "holderAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "numDots",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getNumZap(address,bytes32)",
      "name": "getNumZap",
      "description": "",
      "parameterDecorators": [
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "db()",
      "name": "db",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "arbiterAddress()",
      "name": "arbiterAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateDependencies()",
      "name": "updateDependencies",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getNumEscrow(address,address,bytes32)",
      "name": "getNumEscrow",
      "description": "",
      "parameterDecorators": [
        {
          "name": "holderAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getOracleAddress(address,uint256)",
      "name": "getOracleAddress",
      "description": "",
      "parameterDecorators": [
        {
          "name": "holderAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "index",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "bond(address,bytes32,uint256)",
      "name": "bond",
      "description": "will bond to an oracle.",
      "parameterDecorators": [
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "numDots",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "bound",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getEndpointBroker(address,bytes32)",
      "name": "getEndpointBroker",
      "description": "get broker address for endpoint.",
      "parameterDecorators": [
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "selfDestruct()",
      "name": "selfDestruct",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "unbond(address,bytes32,uint256)",
      "name": "unbond",
      "description": "",
      "parameterDecorators": [
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "numDots",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "unbound",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "calcZapForDots(address,bytes32,uint256)",
      "name": "calcZapForDots",
      "description": "Calculate quantity of tokens required for specified amount of dots for endpoint defined by endpoint and data provider defined by oracleAddress.",
      "parameterDecorators": [
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "numDots",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "numZap",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getBoundDots(address,address,bytes32)",
      "name": "getBoundDots",
      "description": "",
      "parameterDecorators": [
        {
          "name": "holderAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "delegateBond(address,address,bytes32,uint256)",
      "name": "delegateBond",
      "description": "will bond to an oracle on behalf of some holder.",
      "parameterDecorators": [
        {
          "name": "holderAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "numDots",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "boundZap",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "currentCostOfDot(address,bytes32,uint256)",
      "name": "currentCostOfDot",
      "description": "Get the current cost of a dot.",
      "parameterDecorators": [
        {
          "name": "oracleAddress",
          "description": "data-provider.",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "specifier.",
          "recommendedTypes": []
        },
        {
          "name": "totalBound",
          "description": "current number of dots.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "cost",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getIndexSize(address)",
      "name": "getIndexSize",
      "description": "",
      "parameterDecorators": [
        {
          "name": "holderAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "transferOwnership(address)",
      "name": "transferOwnership",
      "description": "Allows the current owner to transfer control of the contract to a newOwner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "The address to transfer ownership to.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "dispatchAddress()",
      "name": "dispatchAddress",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "returnDots(address,address,bytes32,uint256)",
      "name": "returnDots",
      "description": "Transfer N dots from destAddress to fromAddress. Called only by Disptach or Arbiter Contracts In smart contract endpoint, occurs per satisfied request. In socket endpoint called on termination of subscription.",
      "parameterDecorators": [
        {
          "name": "holderAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "oracleAddress",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "endpoint",
          "description": "",
          "recommendedTypes": []
        },
        {
          "name": "numDots",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "success",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}