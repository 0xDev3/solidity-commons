{
  "schema": "../schema.json",
  "tags": [],
  "name": "CampaignContract",
  "description": "CampaignContract This contract is for the Attention Seekers only. Attention Seekers can create the Campaign with the help of this Contract.",
  "eventDecorators": [
    {
      "signature": "AdClicks(uint256,uint256,uint256)",
      "name": "AdClicks",
      "description": "Emitted when a user clicks on the Ad.",
      "parameterDecorators": [
        {
          "name": "campaignId",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "totalClick",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "multiwalletBalance",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "AddCampaign(uint256,uint256)",
      "name": "AddCampaign",
      "description": "Emitted when a campaign is created by an Attention Seeker.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "amountPerAd",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "DeleteCampaign(address,uint256)",
      "name": "DeleteCampaign",
      "description": "Emitted when Attention Seeker deletes his campaign.",
      "parameterDecorators": [
        {
          "name": "owner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "EditCampaign(uint256,uint256,string,string,string,string,string)",
      "name": "EditCampaign",
      "description": "Emitted when an Attention Seeker edit his campaign.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "target",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "title",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "content",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "imageUrl",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "destinationUrl",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        },
        {
          "name": "metadata",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "FundCampaign(uint256[],uint256[],uint256[])",
      "name": "FundCampaign",
      "description": "Emitted when Attention Seeker add funds in its campaign.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "campaignFunded",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "replenish",
          "description": "",
          "recommendedTypes": [],
          "indexed": false
        }
      ]
    },
    {
      "signature": "OwnershipNominated(address,address)",
      "name": "OwnershipNominated",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    },
    {
      "signature": "OwnershipTransferred(address,address)",
      "name": "OwnershipTransferred",
      "description": "",
      "parameterDecorators": [
        {
          "name": "previousOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        },
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": [],
          "indexed": true
        }
      ]
    }
  ],
  "functionDecorators": [
    {
      "signature": "acceptOwnership()",
      "name": "acceptOwnership",
      "description": "Nominated Owner can accept the Ownership of the contract. Can only be called by the nominated owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "adClicked(uint256)",
      "name": "adClicked",
      "description": "When the user clicks on the ad then the click count is increased and the remaining campaign fund amount is decreased. Can only be called through the Marketplace Controller.",
      "parameterDecorators": [
        {
          "name": "campaignID",
          "description": "Id of the campaign of the ad.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "addCampaign(uint256,string,string,string,string,string,uint96,uint96)",
      "name": "addCampaign",
      "description": "This function is used to create campaigns. This can only be created by an Attention Seeker.",
      "parameterDecorators": [
        {
          "name": "timestamp",
          "description": "Current time in second/millisecond.",
          "recommendedTypes": []
        },
        {
          "name": "title",
          "description": "Title of the Campaign.",
          "recommendedTypes": []
        },
        {
          "name": "content",
          "description": "Description of the Campaign.",
          "recommendedTypes": []
        },
        {
          "name": "imageUrl",
          "description": "Url of the image of the Campaign.",
          "recommendedTypes": []
        },
        {
          "name": "destinationUrl",
          "description": "DestinatioinUrl of the Campaign.",
          "recommendedTypes": []
        },
        {
          "name": "metadata",
          "description": "Metadata of the Entity.",
          "recommendedTypes": []
        },
        {
          "name": "target",
          "description": "Target of the Campaign.",
          "recommendedTypes": []
        },
        {
          "name": "amountPerAd",
          "description": "Amount given to user per ad click.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "checkPaused(uint256)",
      "name": "checkPaused",
      "description": "Checks if the campaign is paused or not.",
      "parameterDecorators": [
        {
          "name": "campaignID",
          "description": "Check the campaign if it's paused or not.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "return true if the campaign is paused else return false.",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "deleteCampaign(uint256)",
      "name": "deleteCampaign",
      "description": "Only the Campaign Owner who created the campaign can Delete the campaign.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "Id of the campaign that is to be deleted.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "editCampaign(uint256,uint256,string,string,string,string,string)",
      "name": "editCampaign",
      "description": "This function is used to edit the campaigns. This can only be edited by the owner of the campaign.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "Id of the Entity.",
          "recommendedTypes": []
        },
        {
          "name": "target",
          "description": "Target of the Campaign.",
          "recommendedTypes": []
        },
        {
          "name": "title",
          "description": "Title of the Campaign.",
          "recommendedTypes": []
        },
        {
          "name": "content",
          "description": "Description of the Campaign.",
          "recommendedTypes": []
        },
        {
          "name": "imageUrl",
          "description": "Url of the image of the Campaign.",
          "recommendedTypes": []
        },
        {
          "name": "destinationUrl",
          "description": "DestinatioinUrl of the Campaign.",
          "recommendedTypes": []
        },
        {
          "name": "metadata",
          "description": "Metadata of the Entity.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "entityContract()",
      "name": "entityContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "fundCampaign(uint256[],uint256[])",
      "name": "fundCampaign",
      "description": "Attention Seeker can fund multiple contracts in one go.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "Its an array of id. The campaigns are funded with this id's.",
          "recommendedTypes": []
        },
        {
          "name": "replenish",
          "description": "Array of amount. Campaigns will be funded with the corresponding amount. Requirement :- length of `id` must be equal to length of `replenish`.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "getAllCampaigns()",
      "name": "getAllCampaigns",
      "description": "Returns all IDs of Campaigns.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getAttentionSeekerCampaigns(address)",
      "name": "getAttentionSeekerCampaigns",
      "description": "Returns all the ID's of the Campaign created by an Attention Seeker.",
      "parameterDecorators": [
        {
          "name": "attentionSeeker",
          "description": "Address of the AttentionSeeker.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "All the ID's of the Campaign created by an Attention Seeker.",
          "recommendedTypes": [],
          "solidityType": "uint256[]"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "getCampaign(uint256)",
      "name": "getCampaign",
      "description": "Returns an Campaign corresponding to particular CampaignID.",
      "parameterDecorators": [
        {
          "name": "id",
          "description": "Id of the campaign.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [
        {
          "name": "_0",
          "description": "All the details of an Campaign.",
          "recommendedTypes": [],
          "solidityType": "tuple"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "isOwner()",
      "name": "isOwner",
      "description": "Returns true if the caller is the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "bool"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "marketPlaceContract()",
      "name": "marketPlaceContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "multiwalletContract()",
      "name": "multiwalletContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "nominateNewOwner(address)",
      "name": "nominateNewOwner",
      "description": "Nominate new Owner of the contract to a new account (`newOwner`). Can only be called by the current owner.",
      "parameterDecorators": [
        {
          "name": "newOwner",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "owner()",
      "name": "owner",
      "description": "Returns the address of the current owner.",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "renounceOwnership()",
      "name": "renounceOwnership",
      "description": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "parameterDecorators": [],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "seekerTokenContract()",
      "name": "seekerTokenContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "setPaused(uint256,bool)",
      "name": "setPaused",
      "description": "Pauses the campaign so that no ads will be served from that particualr campaign.",
      "parameterDecorators": [
        {
          "name": "campaignID",
          "description": "Id of the campaign that has to be paused.",
          "recommendedTypes": []
        },
        {
          "name": "pause",
          "description": "true or false to pause the campaign.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "tokenContract()",
      "name": "tokenContract",
      "description": "",
      "parameterDecorators": [],
      "returnDecorators": [
        {
          "name": "param0",
          "description": "",
          "recommendedTypes": [],
          "solidityType": "address"
        }
      ],
      "emittableEvents": [],
      "readOnly": true
    },
    {
      "signature": "updateEntity(address)",
      "name": "updateEntity",
      "description": "",
      "parameterDecorators": [
        {
          "name": "entityAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateMarketplaceController(address)",
      "name": "updateMarketplaceController",
      "description": "This function is used to update the MarketplaceController Address This can only be updated by the owner of the Contract.",
      "parameterDecorators": [
        {
          "name": "newMarketplaceControllerAddress",
          "description": "The new contract address of the MarketplaceController.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateMultiwallet(address)",
      "name": "updateMultiwallet",
      "description": "",
      "parameterDecorators": [
        {
          "name": "multiwalletAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateSeekerToken(address)",
      "name": "updateSeekerToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "seekerAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "updateToken(address)",
      "name": "updateToken",
      "description": "",
      "parameterDecorators": [
        {
          "name": "tokenAddress",
          "description": "",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    },
    {
      "signature": "withdrawFunds(uint256,uint256)",
      "name": "withdrawFunds",
      "description": "Only the Campaign Owner who created the campaign can withdraw Funds from the campaign.",
      "parameterDecorators": [
        {
          "name": "campaignID",
          "description": "Id of the campaign from which the funds will be withdrawn.",
          "recommendedTypes": []
        },
        {
          "name": "amount",
          "description": "Amount that is to be withdrawn from the campaign.",
          "recommendedTypes": []
        }
      ],
      "returnDecorators": [],
      "emittableEvents": [],
      "readOnly": false
    }
  ]
}