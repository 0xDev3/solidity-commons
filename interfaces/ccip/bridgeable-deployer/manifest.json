{
    "$schema": "../../schema.json",
    "tags": ["CCIP", "deployer", "erc20 bridgeable", "erc20 bridgeable deployer"],
    "name": "CCIP Bridgeable Deployer",
    "description": "Factory contract for deploying ERC-20 tokens bridgeable over the CCIP infra.",
    "eventDecorators": [],
    "functionDecorators": [
        {
            "signature": "deploy(string,string,uint256,string)",
            "name": "Deploy",
            "description": "Creates new ERC20 token bridgeable over the CCIP",
            "parameterDecorators": [
                {
                    "name": "Name",
                    "description": "Token name.",
                    "recommendedTypes": []
                },
                {
                    "name": "Symbol",
                    "description": "Token symbol.",
                    "recommendedTypes": []
                },
                {
                    "name": "Initial Supply",
                    "description": "Amount of the tokens preminted to the caller's wallet.",
                    "recommendedTypes": []
                },
                {
                    "name": "Salt",
                    "description": "Determines the precomupted address of the token to be deployed. Token address is uniquely determined by (caller_wallet, token_name, token_symbol, salt) quadruple.", 
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [
                {
                    "name": "Token address",
                    "description": "Deployed token address.",
                    "recommendedTypes": [],
                    "solidityType": "address"
                }
            ],
            "emittableEvents": [],
            "readOnly": false
        },
        {
            "signature": "calculateAddress(string,string,string)",
            "name": "Precompute address",
            "description": "Caluculates the precomputed address of the token to be deployed. Token address is uniquely determined by (caller_wallet, token_name, token_symbol, salt) quadruple.",
            "parameterDecorators": [
                {
                    "name": "Name",
                    "description": "Token name.",
                    "recommendedTypes": []
                },
                {
                    "name": "Symbol",
                    "description": "Token symbol.",
                    "recommendedTypes": []
                },
                {
                    "name": "Salt",
                    "description": "Determines the precomupted address of the token to be deployed. Token address is uniquely determined by (caller_wallet, token_name, token_symbol, salt) quadruple.", 
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [
                {
                    "name": "Token address",
                    "description": "Precomputed token address.",
                    "recommendedTypes": [],
                    "solidityType": "address"
                }
            ],
            "emittableEvents": [],
            "readOnly": true
        }
    ]
}
