{
    "$schema": "../../schema.json",
    "tags": ["CCIP", "deployer", "erc20 bridgeable", "erc20 bridgeable deployer"],
    "name": "CCIP Bridgeable Deployer",
    "description": "Factory contract for deploying ERC-20 tokens bridgeable over the CCIP infra.",
    "eventDecorators": [],
    "functionDecorators": [
        {
            "signature": "deploy(string,string,uint256,string)",
            "name": "Deploy",
            "description": "Creates new ERC20 token bridgeable over the CCIP",
            "parameterDecorators": [
                {
                    "name": "Name",
                    "description": "Token name.",
                    "recommendedTypes": []
                },
                {
                    "name": "Symbol",
                    "description": "Token symbol.",
                    "recommendedTypes": []
                },
                {
                    "name": "Initial Supply",
                    "description": "Amount of the tokens preminted to the caller's wallet.",
                    "recommendedTypes": []
                },
                {
                    "name": "Salt",
                    "description": "Determines the precomupted address of the token to be deployed. Token address is uniquely determined by (caller_wallet, token_name, token_symbol, salt) quadruple.", 
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [
                {
                    "name": "Token address",
                    "description": "Deployed token address.",
                    "recommendedTypes": [],
                    "solidityType": "address"
                }
            ],
            "emittableEvents": [],
            "readOnly": false
        },
        {
            "signature": "batchDeploy(string,string,string,uint256[],uint256[])",
            "name": "Multichain Deploy",
            "description": "Creates new ERC20 token on multiple chains in a single transaction using the CCIP messaging infrastructure.",
            "parameterDecorators": [
                {
                    "name": "Name",
                    "description": "Token name.",
                    "recommendedTypes": []
                },
                {
                    "name": "Symbol",
                    "description": "Token symbol.",
                    "recommendedTypes": []
                },
                {
                    "name": "Salt",
                    "description": "Determines the precomupted address of the token to be deployed. Token address is uniquely determined by (caller_wallet, token_name, token_symbol, salt) quadruple.",
                    "recommendedTypes": []
                },
                {
                    "name": "Chain IDs list",
                    "description": "Chains list where token will be deployed at.", 
                    "recommendedTypes": []
                },
                {
                    "name": "Initial suplies list",
                    "description": "Initial supplies minted at every deployed chain instance.",
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [
                {
                    "name": "Token address",
                    "description": "Deployed token address.",
                    "recommendedTypes": [],
                    "solidityType": "address"
                }
            ],
            "emittableEvents": [],
            "readOnly": false
        },
        {
            "signature": "calculateAddress(address,string,string,string)",
            "name": "Precompute address",
            "description": "Caluculates the precomputed address of the token to be deployed. Token address is uniquely determined by (caller_wallet, token_name, token_symbol, salt) quadruple.",
            "parameterDecorators": [
                {
                    "name": "Caller",
                    "description": "Caller wallet address.",
                    "recommendedTypes": []
                },
                {
                    "name": "Name",
                    "description": "Token name.",
                    "recommendedTypes": []
                },
                {
                    "name": "Symbol",
                    "description": "Token symbol.",
                    "recommendedTypes": []
                },
                {
                    "name": "Salt",
                    "description": "Determines the precomupted address of the token to be deployed. Token address is uniquely determined by (caller_wallet, token_name, token_symbol, salt) quadruple.", 
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [
                {
                    "name": "Token address",
                    "description": "Precomputed token address.",
                    "recommendedTypes": [],
                    "solidityType": "address"
                }
            ],
            "emittableEvents": [],
            "readOnly": true
        },
        {
            "signature": "getBatchDeployFee(address,string,string,string,uint256[],uint256[])",
            "name": "Get multichain deployment fee",
            "description": "Caluculates the total fee required to be sent as a message value when executing multichain token deployment.",
            "parameterDecorators": [
                {
                    "name": "Caller",
                    "description": "Caller wallet address executing the multichain deployment.",
                    "recommendedTypes": []
                },
                {
                    "name": "Name",
                    "description": "Token name.",
                    "recommendedTypes": []
                },
                {
                    "name": "Symbol",
                    "description": "Token symbol.",
                    "recommendedTypes": []
                },
                {
                    "name": "Salt",
                    "description": "Determines the precomupted address of the token to be deployed. Token address is uniquely determined by (caller_wallet, token_name, token_symbol, salt) quadruple.",
                    "recommendedTypes": []
                },
                {
                    "name": "Chain IDs list",
                    "description": "Chains list where token will be deployed at.", 
                    "recommendedTypes": []
                },
                {
                    "name": "Initial suplies list",
                    "description": "Initial supplies minted at every deployed chain instance.",
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [
                {
                    "name": "Fee",
                    "description": "Total fee required to execute multichain deployment for the given parameters.",
                    "recommendedTypes": [],
                    "solidityType": "uint256"
                }
            ],
            "emittableEvents": [],
            "readOnly": true
        },
        {
            "signature": "getSupportedChains()",
            "name": "Get supported chains",
            "description": "Returns the list of the supported chains.",
            "parameterDecorators": [],
            "returnDecorators": [
                {
                    "name": "Supported chains list",
                    "description": "List of the supported blockchain networks.",
                    "recommendedTypes": [],
                    "solidityType": "tuple[]",
                    "parameters": [
                        {
                            "name": "Blockchain protocol",
                            "description": "Human readable name of the blockchain protocol.",
                            "recommendedTypes": [],
                            "solidityType": "string"
                        },
                        {
                            "name": "Router address",
                            "description": "CCIP router contract address.",
                            "recommendedTypes": [],
                            "solidityType": "address"
                        },
                        {
                            "name": "Chain selector",
                            "description": "CCIP chain selector.",
                            "recommendedTypes": [],
                            "solidityType": "uint64"
                        }
                    ]
                }
            ],
            "emittableEvents": [],
            "readOnly": true
        },
        {
            "signature": "getTokens(address)",
            "name": "Get tokens list",
            "description": "Returns list of all the deployed tokens with their metadata and balances for a given user wallet.",
            "parameterDecorators": [
                {
                    "name": "User wallet",
                    "description": "User wallet address.",
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [
                {
                    "name": "Tokens list",
                    "description": "Deployed tokens list.",
                    "recommendedTypes": [],
                    "solidityType": "tuple[]",
                    "parameters": [
                        {
                            "name": "Token address",
                            "description": "Deployed token address.",
                            "recommendedTypes": [],
                            "solidityType": "address"
                        },
                        {
                            "name": "Token name",
                            "description": "Deployed token name.",
                            "recommendedTypes": [],
                            "solidityType": "string"
                        },
                        {
                            "name": "Token symbol",
                            "description": "Deployed token symbol.",
                            "recommendedTypes": [],
                            "solidityType": "string"
                        },
                        {
                            "name": "Token decimals",
                            "description": "Deployed token decimals.",
                            "recommendedTypes": [],
                            "solidityType": "uint8"
                        },
                        {
                            "name": "User balance",
                            "description": "Given user's wallet balance.",
                            "recommendedTypes": [],
                            "solidityType": "uint256"
                        }
                    ]
                }
            ],
            "emittableEvents": [],
            "readOnly": true
        }
    ]
}
