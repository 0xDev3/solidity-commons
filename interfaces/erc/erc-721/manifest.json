{
    "$schema": "../../schema.json",
    "tags": ["nft", "erc721", "nft token", "non-fungible token", "digital ownership"],
    "name": "ERC721 NFT token interface",
    "description": "A standard interface for NFT tokens.",
    "eventDecorators": [
        {
            "signature": "Transfer(address,address,uint256)",
            "name": "Token transfer",
            "description": "Indicates that ERC721 transfer has occurred.",
            "parameterDecorators": [
                {
                    "name": "Sender address",
                    "description": "Address from which the ERC721 token was sent.",
                    "recommendedTypes": [],
                    "indexed": true
                },
                {
                    "name": "Recipient address",
                    "description": "Address to which the ERC721 token was sent.",
                    "recommendedTypes": [],
                    "indexed": true
                },
                {
                    "name": "Token Id",
                    "description": "Id of the specific nft within the ERC721 collection which was transferred to another wallet",
                    "recommendedTypes": [],
                    "indexed": true
                }
            ]
        },
        {
            "signature": "Approval(address,address,uint256)",
            "name": "Approval",
            "description": "Emitted when owner enables a third party to manage the token with the given token id.",
            "parameterDecorators": [
                {
                    "name": "Approver address",
                    "description": "Address of the owner who approved someone to manage their ERC721 token.",
                    "recommendedTypes": [],
                    "indexed": true
                },
                {
                    "name": "Manager address",
                    "description": "Address of the third party with the rights to manage ERC721 token.",
                    "recommendedTypes": [],
                    "indexed": true
                },
                {
                    "name": "Token id",
                    "description": "ERC721 token identifier being approved for management.",
                    "recommendedTypes": [],
                    "indexed": true
                }
            ]
        },
        {
            "signature": "ApprovalForAll(address,address,bool)",
            "name": "Approval for all",
            "description": "Emitted when owner enables or disables a third party to manage all of its assets of this ERC721 token.",
            "parameterDecorators": [
                {
                    "name": "Approver address",
                    "description": "Address of the owner who approved someone to manage all of their ERC721 tokens.",
                    "recommendedTypes": [],
                    "indexed": true
                },
                {
                    "name": "Operator address",
                    "description": "Address of the third party with the rights to manage all of the ERC721 tokens owned by the caller.",
                    "recommendedTypes": [],
                    "indexed": true
                },
                {
                    "name": "Management enabled",
                    "description": "Indicates if owner has enabled (value true) or disabled (value false) the rights to the asset management.",
                    "recommendedTypes": [],
                    "indexed": true
                }
            ]
        }
    ],
    "functionDecorators": [
        {
            "signature": "balanceOf(address)",
            "name": "Get balance",
            "description": "Returns the amount of tokens owned by the specified address.",
            "parameterDecorators": [
                {
                    "name": "Account address",
                    "description": "Address of the account for which to check balance.",
                    "recommendedTypes": [
                        "common.contract-caller",
                        "erc.erc-721.receiver"
                    ]
                }
            ],
            "returnDecorators": [
                {
                    "name": "Token amount",
                    "description": "The amount of the items from this ERC721 collection owned by the specified address.",
                    "recommendedTypes": [],
                    "solidityType": "uint256"
                }
            ],
            "emittableEvents": [],
            "readOnly": true
        },
        {
            "signature": "ownerOf(uint256)",
            "name": "Get owner",
            "description": "Returns the owner of the given token with token ID. Token with ID must exist for the query to return a result.",
            "parameterDecorators": [
                {
                    "name": "Token ID",
                    "description": "Token ID",
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [
                {
                    "name": "Owner",
                    "description": "Wallet address of the owner of the given token ID",
                    "recommendedTypes": [],
                    "solidityType": "address"
                }
            ],
            "emittableEvents": [],
            "readOnly": true
        },
        {
            "signature": "safeTransferFrom(address,address,uint256)",
            "name": "Safe transfer",
            "description": "Transfers the specified token with tokenId from the owner's address to any other address. Caller of this function must be approved by the owner of the token with the given ID or else the action will fail. If the receiving address is a smart contract, a check is made to ensure the contract is capable of receiving NFT tokens.",
            "parameterDecorators": [
                {
                    "name": "Sender address",
                    "description": "Owner address from which the token will be transferred.",
                    "recommendedTypes": [
                        "common.contract-caller",
                        "erc.erc-721.receiver"
                    ]
                },
                {
                    "name": "Recipient address",
                    "description": "Address to which the token will be transferred.",
                    "recommendedTypes": [
                        "common.contract-caller",
                        "erc.erc-721.receiver"
                    ]
                },
                {
                    "name": "Token Id",
                    "description": "The ID of the token owned by the sender and transferred to the receiver wallet.",
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [],
            "emittableEvents": [
                "Transfer(address,address,uint256)",
                "Approval(address,address,uint256)"
            ],
            "readOnly": false
        },
        {
            "signature": "safeTransferFrom(address,address,uint256,bytes)",
            "name": "Safe transfer with data",
            "description": "Transfers the specified token with tokenId from the owner's address to any other address, while also attaching the data sent to the receiver if the receiver is a smart contract. Transfer is safe in a way that if the receiving token address is the smart contract address, then the check is being made if the receiving smart contract address has implemented the `onERC721Received()` function proposed by the `IERC721Receiver` interface.",
            "parameterDecorators": [
                {
                    "name": "Sender address",
                    "description": "Owner address from which the token will be transferred.",
                    "recommendedTypes": [
                        "common.contract-caller",
                        "erc.erc-721.receiver"
                    ]
                },
                {
                    "name": "Recipient address",
                    "description": "Address to which the token will be transferred.",
                    "recommendedTypes": [
                        "common.contract-caller",
                        "erc.erc-721.receiver"
                    ]
                },
                {
                    "name": "Token ID",
                    "description": "The ID of the token owned by the sender and transferred to the receiver wallet.",
                    "recommendedTypes": []
                },
                {
                    "name": "Extra data",
                    "description": "Data to send to the receiver if the receiving the address is the contract implementing the `IERC721Receiver` interface.",
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [],
            "emittableEvents": [
                "Transfer(address,address,uint256)",
                "Approval(address,address,uint256)"
            ],
            "readOnly": false
        },
        {
            "signature": "transferFrom(address,address,uint256)",
            "name": "Transfer from",
            "description": "Transfers the specified token from the owner's address to any other address. Caller of this function must be approved by the owner of the token with the given ID or else the action will fail.",
            "parameterDecorators": [
                {
                    "name": "Sender address",
                    "description": "Owner address from which the token will be transferred.",
                    "recommendedTypes": [
                        "common.contract-caller",
                        "erc.erc-721.receiver"
                    ]
                },
                {
                    "name": "Recipient address",
                    "description": "Address to which the token will be transferred.",
                    "recommendedTypes": [
                        "common.contract-caller",
                        "erc.erc-721.receiver"
                    ]
                },
                {
                    "name": "Token ID",
                    "description": "The ID of the token owned by the sender and transferred to the receiver wallet.",
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [],
            "emittableEvents": [
                "Transfer(address,address,uint256)",
                "Approval(address,address,uint256)"
            ],
            "readOnly": false
        },
        {
            "signature": "approve(address,uint256)",
            "name": "Approve token management",
            "description": "This function will grant rights to the third party to manage caller's token specified by its token id.",
            "parameterDecorators": [
                {
                    "name": "Token manager",
                    "description": "Address of the manager with the rights to manage the specified token.",
                    "recommendedTypes": [
                        "common.contract-caller",
                        "erc.erc-721.receiver"
                    ]
                },
                {
                    "name": "Token id",
                    "description": "Id of the token from this ERC721 collection to be unlocked for management to the specified third party.",
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [],
            "emittableEvents": [
                "Approval(address,address,uint256)"
            ],
            "readOnly": false
        },
        {
            "signature": "setApprovalForAll(address,bool)",
            "name": "Set approval for all",
            "description": "Calling this function, caller can choose to give (or remove) rights to operator to manage all of the caller owned tokens of this ERC721 collection.",
            "parameterDecorators": [
                {
                    "name": "Operator",
                    "description": "The account address to get (or loose) rights to manage all of the caller owned tokens.",
                    "recommendedTypes": [
                        "common.contract-caller",
                        "erc.erc-721.receiver"
                    ]
                },
                {
                    "name": "Is approved",
                    "description": "Action type. If the flag is set to `true` the operator is being granted the rights to manage the tokens and if it is set to `false` the operator is revoked of the rights to manage the tokens.",
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [],
            "emittableEvents": [
                "ApprovalForAll(address,address,bool)"
            ],
            "readOnly": false
        },
        {
            "signature": "getApproved(uint256)",
            "name": "Get approved",
            "description": "Returns the address with the rights to manage token from the collection with the given token id. If no address can manage the token then the returned value will be address 0x0.",
            "parameterDecorators": [
                {
                    "name": "Token id",
                    "description": "Id of the token.",
                    "recommendedTypes": []
                }
            ],
            "returnDecorators": [
                {
                    "name": "Token manager",
                    "description": "Address of the manager with the rights to manage the given token from the collection.",
                    "recommendedTypes": [],
                    "solidityType": "address"
                }
            ],
            "emittableEvents": [],
            "readOnly": true
        },
        {
            "signature": "isApprovedForAll(address,address)",
            "name": "Is approved for all",
            "description": "Checks if the given operator wallet (second parameter) is approved to manage all of the tokens owned by the given owner wallet (first parameter).",
            "parameterDecorators": [
                {
                    "name": "Owner wallet",
                    "description": "Token owner wallet address.",
                    "recommendedTypes": [
                        "erc.erc-721.receiver",
                        "common.contract-caller"
                    ]
                },
                {
                    "name": "Operator wallet",
                    "description": "Operator wallet address.",
                    "recommendedTypes": [
                        "erc.erc-721.receiver",
                        "common.contract-caller"
                    ]
                }
            ],
            "returnDecorators": [
                {
                    "name": "Is approved",
                    "description": "If value returned is true, then the given operator wallet approved to manage all of the tokens owned by the given owner wallet.",
                    "recommendedTypes": [],
                    "solidityType": "bool"
                }
            ],
            "emittableEvents": [],
            "readOnly": true
        }
    ]
}
