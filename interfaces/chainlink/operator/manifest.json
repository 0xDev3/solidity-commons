{
    "$schema": "../../schema.json",
    "tags": [
        "Chainlink",
        "operator"
    ],
    "implements": [
        "chainlink.chainlink-request",
        "chainlink.oracle"
    ],
    "name": "Operator interface",
    "description": "The Operator interface is used to interact with the Chainlink Operator contract. The Operator contract is used to fulfill requests made to the Chainlink network.",
    "eventDecorators": [],
    "functionDecorators": [
        {
            "signature": "operatorRequest(address,uint256,bytes32,bytes4,uint256,uint256,bytes)",
            "name": "Operator Request",
            "description": "Makes a request to the Chainlink network.",
            "parameterDecorators": [
                {
                    "name": "Sender",
                    "description": "The address that made the request and will receive the response.",
                    "recommendedTypes": []
                },
                {
                    "name": "Payment",
                    "description": "The amount of payment given in form of LINK tokens.",
                    "recommendedTypes": []
                },
                {
                    "name": "Spec Id",
                    "description": "The ID of the specification to use for the request.",
                    "recommendedTypes": []
                },
                {
                    "name": "Callback Function Id",
                    "description": "The ID of the callback function to use for the request.",
                    "recommendedTypes": []
                },
                {
                    "name": "Nonce",
                    "description": "A unique value to prevent replay attacks.",
                    "recommendedTypes": []
                },
                {
                    "name": "Data Version",
                    "description": "The version of the data to use for the request.",
                    "recommendedTypes": []
                },
                {
                    "name": "Data",
                    "description": "Additional data that may be included with the request, such as the URL of an API endpoint to query or a query string to include in the request.",
                    "recommendedTypes": []
                }
            ],
            "emittableEvents": [],
            "returnDecorators": [],
            "readOnly": false
        },
        {
            "signature": "fulfillOracleRequest2(bytes32,uint256,address,bytes4,uint256,bytes)",
            "name": "Fulfill Oracle Request 2",
            "description": "Fulfills an oracle request.",
            "parameterDecorators": [
                {
                    "name": "Request ID",
                    "description": "The ID of the request to fulfill.",
                    "recommendedTypes": []
                },
                {
                    "name": "Payment",
                    "description": "The amount of payment given in form of LINK tokens.",
                    "recommendedTypes": []
                },
                {
                    "name": "Callback address",
                    "description": "The address that made the request and will receive the response.",
                    "recommendedTypes": []
                },
                {
                    "name": "Expiration",
                    "description": "The expiration of the request.",
                    "recommendedTypes": ["types.unixTimestamp"]
                },
                {
                    "name": "Data",
                    "description": "Additional data that may be included with the request, such as the URL of an API endpoint to query or a query string to include in the request.",
                    "recommendedTypes": []
                }
            ],
            "emittableEvents": [],
            "returnDecorators": [
                {
                    "name": "Is fulfilled",
                    "description": "Whether the request was fulfilled.",
                    "recommendedTypes": [],
                    "solidityType": "bool"
                }
            ],
            "readOnly": false
        },
        {
            "signature": "ownerTransferAndCall(address,uint256,bytes)",
            "name": "Owner Transfer And Call",
            "description": "Transfers LINK from the contract to the given address and calls the given function with the given data.",
            "parameterDecorators": [
                {
                    "name": "To",
                    "description": "The address to send the LINK to.",
                    "recommendedTypes": []
                },
                {
                    "name": "Value",
                    "description": "The amount of LINK to send.",
                    "recommendedTypes": []
                },
                {
                    "name": "Data",
                    "description": "The data to send with the transfer.",
                    "recommendedTypes": []
                }
            ],
            "emittableEvents": [],
            "returnDecorators": [
                {
                    "name": "Success",
                    "description": "Whether the transfer was successful.",
                    "recommendedTypes": [],
                    "solidityType": "bool"
                }
            ],
            "readOnly": false
        },
        {
            "signature": "distributeFunds(address[],uint256[])",
            "name": "Distribute Funds",
            "description": "Distributes funds to the given addresses.",
            "parameterDecorators": [
                {
                    "name": "Receivers",
                    "description": "The addresses to send the LINK to.",
                    "recommendedTypes": ["common.erc20-receiver"]
                },
                {
                    "name": "Amounts",
                    "description": "The amount of LINK to send (specified for each address).",
                    "recommendedTypes": []
                }
            ],
            "emittableEvents": [],
            "returnDecorators": [],
            "readOnly": false
        },
        {
            "signature": "getAuthorizedSenders()",
            "name": "Get Authorized Senders",
            "description": "Returns the list of authorized senders.",
            "parameterDecorators": [],
            "emittableEvents": [],
            "returnDecorators": [
                {
                    "name": "Senders",
                    "description": "The list of authorized senders.",
                    "recommendedTypes": [],
                    "solidityType": "address[]"
                }
            ],
            "readOnly": true
        },
        {
            "signature": "setAuthorizedSenders(address[])",
            "name": "Set Authorized Senders",
            "description": "Sets the list of authorized senders.",
            "parameterDecorators": [
                {
                    "name": "Senders",
                    "description": "The list of authorized senders.",
                    "recommendedTypes": []
                }
            ],
            "emittableEvents": [],
            "returnDecorators": [],
            "readOnly": false
        },
        {
            "signature": "getForwarder()",
            "name": "Get Forwarder",
            "description": "Returns the address of the forwarder contract.",
            "parameterDecorators": [],
            "emittableEvents": [],
            "returnDecorators": [
                {
                    "name": "Forwarder",
                    "description": "The address of the forwarder contract.",
                    "recommendedTypes": [],
                    "solidityType": "address"
                }
            ],
            "readOnly": false
        }
    ]
}
