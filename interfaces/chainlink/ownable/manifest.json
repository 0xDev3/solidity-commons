{
    "$schema": "../../schema.json",
    "tags": [
        "Chainlink",
        "owner"
    ],
    "implements": [
    ],
    "name": "Ownable interface",
    "description": "The Ownable interface is a standard for contracts that have an owner. The owner is the only address that can call a function with this modifier. It is used by the Chainlink node to ensure that only the owner can call certain functions.",
    "eventDecorators": [],
    "functionDecorators": [
        {
            "signature": "owner()",
            "name": "Owner",
            "description": "Returns the address of the current owner.",
            "parameterDecorators": [],
            "emittableEvents": [],
            "returnDecorators": [
                {
                    "name": "Owner",
                    "description": "The address of the current owner.",
                    "recommendedTypes": ["common.contract-caller"],
                    "solidityType": "address"
                }
            ],
            "readOnly": false
        },
        {
            "signature": "transferOwnership(address)",
            "name": "Transfer Ownership",
            "description": "Transfers ownership of the contract to a new account.",
            "parameterDecorators": [
                {
                    "name": "Recipient",
                    "description": "The address of the new owner.",
                    "recommendedTypes": ["common.contract-caller"]
                }
            ],
            "emittableEvents": [],
            "returnDecorators": [],
            "readOnly": false
        },
        {
            "signature": "acceptOwnership()",
            "name": "Accept Ownership",
            "description": "Accepts ownership of the contract to a new account.",
            "parameterDecorators": [],
            "emittableEvents": [],
            "returnDecorators": [],
            "readOnly": false
        }
    ]
}
