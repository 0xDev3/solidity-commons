{
    "$schema": "../../schema.json",
    "tags": [
        "Chainlink",
        "eth balance",
        "balance"
    ],
    "implements": [
        "chainlink.automation.automation-compatible",
        "openzeppelin.security.pausable"
    ],
    "name": "Eth Balance Monitor",
    "description": "A keeper-compatible contract that monitors and funds ETH.",
    "eventDecorators": [
        {
            "signature": "FundsAdded(uint256,uint256,address)",
            "name": "Funds Added",
            "description": "Emitted when funds are added into the contract.",
            "parameterDecorators": [
                {
                    "name": "Amount Added",
                    "description": "Amount of funds deposited.",
                    "recommendedTypes": [],
                    "hints":[
                        {
                            "id":"decimals",
                            "decimals_fetcher":"18"
                        }
                    ],
                    "indexed": false
                },
                {
                    "name": "New Balance",
                    "description": "New balance of the contract.",
                    "recommendedTypes": [],
                    "hints":[
                        {
                            "id":"decimals",
                            "decimals_fetcher":"18"
                        }
                    ],
                    "indexed": false
                },
                {
                    "name": "Sender",
                    "description": "Address of the sender.",
                    "recommendedTypes": ["common.contract-caller"],
                    "indexed": false
                }
            ]
        },
        {
            "signature": "FundsWithdrawn(uint256,address)",
            "name": "Funds Withdrawn",
            "description": "Emitted when funds are withdrawn from the contract.",
            "parameterDecorators": [
                {
                    "name": "Amount Withdrawn",
                    "description": "Amount of funds withdrawn.",
                    "recommendedTypes": [],
                    "hints":[
                        {
                            "id":"decimals",
                            "decimals_fetcher":"18"
                        }
                    ],
                    "indexed": false
                },
                {
                    "name": "Payee",
                    "description": "Address of the payee.",
                    "recommendedTypes": ["common.contract-caller"],
                    "indexed": false
                }
            ]
        },
        {
            "signature": "TopUpSucceded(address)",
            "name": "Top Up Succeded",
            "description": "Emitted when a top up is successful.",
            "parameterDecorators": [
                {
                    "name": "Recipient",
                    "description": "Address of the top up.",
                    "recommendedTypes": ["common.contract-caller"],
                    "indexed": true
                }
            ]
        },
        {
            "signature": "TopUpFailed(address)",
            "name": "Top Up Failed",
            "description": "Emitted when a top up failed.",
            "parameterDecorators": [
                {
                    "name": "Recipient",
                    "description": "Address of the top up.",
                    "recommendedTypes": ["common.contract-caller"],
                    "indexed": true
                }
            ]
        },
        {
            "signature": "KeeperRegistryAddressUpdated(address,address)",
            "name": "Keeper Registry Address Updated",
            "description": "Emitted when the keeper registry address is updated.",
            "parameterDecorators": [
                {
                    "name": "Old Address",
                    "description": "Old keeper registry address.",
                    "recommendedTypes": ["chainlink.keeper.keeper-registry"],
                    "indexed": false
                },
                {
                    "name": "New Address",
                    "description": "New keeper registry address.",
                    "recommendedTypes": ["chainlink.keeper.keeper-registry"],
                    "indexed": false
                }
            ]
        },
        {
            "signature": "MinWaitPeriodUpdated(uint256,uint256)",
            "name": "Min Wait Period Updated",
            "description": "Emitted when the minimum wait period is updated.",
            "parameterDecorators": [
                {
                    "name": "Old Min Wait Period",
                    "description": "Old minimum wait period.",
                    "recommendedTypes": ["types.durationSeconds"],
                    "indexed": false
                },
                {
                    "name": "New Min Wait Period",
                    "description": "New minimum wait period.",
                    "recommendedTypes": ["types.durationSeconds"],
                    "indexed": false
                }
            ]
        }
    ],
    "constructorDecorators": [
        {
            "signature": "constructor(address,uint256)",
            "name": "Constructor",
            "description": "Registers the keeper registry address and the minimum wait period.",
            "parameterDecorators": [
                {
                    "name": "Keeper Registry Address",
                    "description": "Address of the keeper registry.",
                    "recommendedTypes": ["chainlink.keeper.keeper-registry"]
                },
                {
                    "name": "Min Wait Period Seconds",
                    "description": "Minimum wait period in seconds.",
                    "recommendedTypes": ["types.durationSeconds"]
                }
            ],
            "emittableEvents": []
        }
    ],
    "functionDecorators": [
        {
            "signature": "setWatchList(address[],uint96[],uint96[])",
            "name": "Set Watch List",
            "description": "Sets the list of subscriptions to watch and their funding parameters.",
            "parameterDecorators": [
                {
                    "name": "Addresses",
                    "description": "The list of addresses to watch.",
                    "recommendedTypes": []
                },
                {
                    "name": "Minimum Balances Wei",
                    "description": "The minimum balance for each address specified in Wei.",
                    "recommendedTypes": []
                },
                {
                    "name": "Top Up Amounts Wei",
                    "description": "The amount to top up each address specified in Wei.",
                    "recommendedTypes": []
                }
            ],
            "emittableEvents": [],
            "returnDecorators": [],
            "readOnly": false
        },
        {
            "signature": "getUnderfundedAddresses()",
            "name": "Get Underfunded Addresses",
            "description": "Gets a list of subscriptions that are underfunded.",
            "parameterDecorators": [],
            "emittableEvents": [],
            "returnDecorators": [
                {
                    "name": "Addresses",
                    "description": "The list of addresses that are underfunded.",
                    "recommendedTypes": [],
                    "solidityType": "address[]"
                }
            ],
            "readOnly": true
        },
        {
            "signature": "topUp(address[])",
            "name": "Top Up",
            "description": "Send funds to the subscriptions provided.",
            "parameterDecorators": [
                {
                    "name": "Needs Funding",
                    "description": "The list of addresses to fund (addresses must be pre-approved).",
                    "recommendedTypes": []
                }
            ],
            "emittableEvents": [
                "TopUpSucceded(address)",
                "TopUpFailed(address)"
            ],
            "returnDecorators": [],
            "readOnly": false
        },
        {
            "signature": "withdraw(uint256,address)",
            "name": "Withdraw",
            "description": "Withdraws the contract balance.",
            "parameterDecorators": [
                {
                    "name": "Amount",
                    "description": "The amount of eth to withdraw",
                    "recommendedTypes": [],
                    "hints":[
                        {
                            "id":"decimals",
                            "decimals_fetcher":"18"
                        }
                    ]
                },
                {
                    "name": "Payee",
                    "description": "Address to send the funds to.",
                    "recommendedTypes": ["common.erc20-receiver"]
                }
            ],
            "emittableEvents": [
                "FundsWithdrawn(uint256,address)"
            ],
            "returnDecorators": [],
            "readOnly": false
        },
        {
            "signature": "setKeeperRegistryAddress(address)",
            "name": "Set Keeper Registry Address",
            "description": "Sets the keeper registry address.",
            "parameterDecorators": [
                {
                    "name": "Keeper Registry Address",
                    "description": "Address of the keeper registry.",
                    "recommendedTypes": []
                }
            ],
            "emittableEvents": [
                "KeeperRegistryAddressUpdated(address,address)"
            ],
            "returnDecorators": [],
            "readOnly": false
        },
        {
            "signature": "setMinWaitPeriodSeconds(uint256)",
            "name": "Set Min Wait Period Seconds",
            "description": "Sets the minimum wait period (in seconds) for addresses between funding.",
            "parameterDecorators": [
                {
                    "name": "Period",
                    "description": "Minimum wait period in seconds.",
                    "recommendedTypes": ["types.durationSeconds"]
                }
            ],
            "emittableEvents": [
                "MinWaitPeriodUpdated(uint256,uint256)"
            ],
            "returnDecorators": [],
            "readOnly": false
        },
        {
            "signature": "getKeeperRegistryAddress()",
            "name": "Get Keeper Registry Address",
            "description": "Gets the keeper registry address.",
            "parameterDecorators": [],
            "emittableEvents": [],
            "returnDecorators": [
                {
                    "name": "Keeper Registry Address",
                    "description": "Address of the keeper registry.",
                    "recommendedTypes": ["chainlink.keeper.keeper-registry"],
                    "solidityType": "address"
                }
            ],
            "readOnly": true
        },
        {
            "signature": "getMinWaitPeriodSeconds()",
            "name": "Get Min Wait Period Seconds",
            "description": "Gets the minimum wait period.",
            "parameterDecorators": [],
            "emittableEvents": [],
            "returnDecorators": [
                {
                    "name": "Min Wait Period Seconds",
                    "description": "Minimum wait period in seconds.",
                    "recommendedTypes": ["types.durationSeconds"],
                    "solidityType": "uint256"
                }
            ],
            "readOnly": true
        },
        {
            "signature": "getWatchList()",
            "name": "Get Watch List",
            "description": "Gets the watch list.",
            "parameterDecorators": [],
            "emittableEvents": [],
            "returnDecorators": [
                {
                    "name": "Watch List",
                    "description": "Gets the list of addresses being watched.",
                    "recommendedTypes": [],
                    "solidityType": "address[]"
                }
            ],
            "readOnly": true
        },
        {
            "signature": "getAccountInfo(address)",
            "name": "Get Account Info",
            "description": "Gets configuration information for an address on the watchlist.",
            "parameterDecorators": [
                {
                    "name": "Target Address",
                    "description": "Address to get the account info for.",
                    "recommendedTypes": []
                }
            ],
            "emittableEvents": [],
            "returnDecorators": [
                {
                    "name": "Is Active",
                    "description": "Whether the address is active.",
                    "recommendedTypes": [],
                    "solidityType": "bool"
                },
                {
                    "name": "Min Balance Wei",
                    "description": "The minimum balance (in wei) the address must have to be active.",
                    "recommendedTypes": [],
                    "solidityType": "uint256"
                },
                {
                    "name": "Top Up Level",
                    "description": "The amount to top up for the subscription.",
                    "recommendedTypes": [],
                    "solidityType": "uint256"
                },
                {
                    "name": "Last Top Up Timestamp",
                    "description": "The last time the subscription was topped up.",
                    "recommendedTypes": ["types.unixTimestamp"],
                    "solidityType": "uint256"
                }
            ],
            "readOnly": true
        }
    ]
}
